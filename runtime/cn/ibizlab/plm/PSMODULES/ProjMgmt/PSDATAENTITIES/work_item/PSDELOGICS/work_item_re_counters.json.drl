package cn.ibizlab.plm.projmgmt.logic.work_itemlogic.work_item_re_counters;
        import java.util.Map;
        import java.util.HashMap;
        import com.alibaba.fastjson.JSONObject;
        import org.springframework.util.StringUtils;
        import org.springframework.util.ObjectUtils;
        import cn.ibizlab.plm.util.errors.BadRequestAlertException;
                global cn.ibizlab.plm.core.projmgmt.domain.work_item work_itemwork_item_re_countersdefault;
                global cn.ibizlab.plm.core.projmgmt.domain.work_item work_itemwork_item_re_counterswork_item;
                    global cn.ibizlab.plm.core.projmgmt.service.Iwork_itemService work_itemservice;
        global cn.ibizlab.plm.core.projmgmt.service.Iwork_itemService iBzSysWork_itemDefaultService;
        global cn.ibizlab.plm.util.security.AuthenticationUser curuser;


    no-loop

            //逻辑处理节点[开始]
            rule "begin"
            ruleflow-group "work_itemwork_item_re_countersbegin"
            when
            then
            end

            //逻辑处理节点[合并查询计数器]
            rule "rawsqlcall12"
            ruleflow-group "work_itemwork_item_re_countersrawsqlcall12"
            when
            then
    Map param =new HashMap();
        param.put("param0",work_itemwork_item_re_countersdefault.get("id"));
    String strSql="SELECT      COALESCE(SUM(CASE WHEN t11.`TARGET_TYPE` = 'idea' AND t11.`PRINCIPAL_TYPE` = 'work_item' AND t1.IS_DELETED=0  THEN 1 ELSE 0 END),0) AS work_item_re_idea,      COALESCE(SUM(CASE WHEN t11.`TARGET_TYPE` = 'work_item' AND t11.`PRINCIPAL_TYPE` = 'work_item' AND t4.IS_DELETED=0 THEN 1 ELSE 0 END),0)  AS work_item_re_work_item,      COALESCE(SUM(CASE WHEN t11.`TARGET_TYPE` = 'test_case' AND t11.`PRINCIPAL_TYPE` = 'work_item' AND t5.IS_DELETED=0 THEN 1 ELSE 0 END),0)  AS work_item_re_test_case,      COALESCE(SUM(CASE WHEN t11.`TARGET_TYPE` = 'ticket' AND t11.`PRINCIPAL_TYPE` = 'work_item' AND t3.IS_DELETED=0 THEN 1 ELSE 0 END),0)  AS work_item_re_ticket FROM     `RELATION` t11 JOIN     `work_item` t ON t.`ID` = t11.`PRINCIPAL_ID` LEFT JOIN     `idea` t1 ON t1.ID = t11.TARGET_ID  LEFT JOIN     `ticket` t3 ON t3.ID = t11.TARGET_ID  LEFT JOIN     `work_item` t4 ON t4.ID = t11.TARGET_ID LEFT JOIN     `test_case` t5 ON t5.ID = t11.TARGET_ID WHERE     (t11.`PRINCIPAL_ID` = #{et.param0} );";
                        java.util.List<JSONObject> entities=iBzSysWork_itemDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    work_itemwork_item_re_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(work_itemwork_item_re_countersdefault);//更新fact中变量值
                        update(work_itemwork_item_re_counterswork_item);//更新fact中变量值
            end

            //逻辑处理节点[结束]
            rule "end2"
            ruleflow-group "work_itemwork_item_re_countersend2"
            when
            then
                        update(work_itemwork_item_re_countersdefault);//更新fact中变量值
                        update(work_itemwork_item_re_counterswork_item);//更新fact中变量值
            end

            //逻辑处理节点[工作项依赖]
            rule "rawsqlcall13"
            ruleflow-group "work_itemwork_item_re_countersrawsqlcall13"
            when
            then
    Map param =new HashMap();
        param.put("param0",work_itemwork_item_re_counterswork_item.get("id"));
        param.put("param1",work_itemwork_item_re_counterswork_item.get("id"));
    String strSql="SELECT count(t1.id) as `dependency` FROM `RELATION` t1  WHERE  ( ( exists(select 1 from work_item t2 where t1.principal_id = t2.id and t1.principal_id = #{et.param0} and t2.is_deleted = 0)   OR  exists(select 1 from work_item t2 where t1.target_id= t2.id and t1.target_id= #{et.param1} and t2.is_deleted = 0) )   AND  t1.`PRINCIPAL_TYPE` = 'dependency' )";
                        java.util.List<JSONObject> entities=iBzSysWork_itemDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    work_itemwork_item_re_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(work_itemwork_item_re_countersdefault);//更新fact中变量值
                        update(work_itemwork_item_re_counterswork_item);//更新fact中变量值
            end

            //逻辑处理节点[获取工作项当前版本]
            rule "deaction1"
            ruleflow-group "work_itemwork_item_re_countersdeaction1"
            when
            then
                            cn.ibizlab.plm.util.helper.CachedBeanCopier.copy(work_itemservice.get(work_itemwork_item_re_counterswork_item.getId()),work_itemwork_item_re_counterswork_item);
                        update(work_itemwork_item_re_countersdefault);//更新fact中变量值
                        update(work_itemwork_item_re_counterswork_item);//更新fact中变量值
            end

            //逻辑处理节点[准备参数]
            rule "prepareparam1"
            ruleflow-group "work_itemwork_item_re_countersprepareparam1"
            when
            then
                            work_itemwork_item_re_counterswork_item.set("id",work_itemwork_item_re_countersdefault.get("id"));
                        update(work_itemwork_item_re_countersdefault);//更新fact中变量值
                        update(work_itemwork_item_re_counterswork_item);//更新fact中变量值
            end

            //逻辑处理节点[工作项关联子工作项]
            rule "rawsqlcall2"
            ruleflow-group "work_itemwork_item_re_countersrawsqlcall2"
            when
            then
    Map param =new HashMap();
        param.put("param0",work_itemwork_item_re_countersdefault.get("id"));
    String strSql="SELECT 	count( t.id ) AS work_item_re_children FROM 	work_item t  WHERE 	t.pid = #{et.param0} and t.is_deleted = 0";
                        java.util.List<JSONObject> entities=iBzSysWork_itemDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    work_itemwork_item_re_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(work_itemwork_item_re_countersdefault);//更新fact中变量值
                        update(work_itemwork_item_re_counterswork_item);//更新fact中变量值
            end

            //逻辑处理节点[工作项内交付物]
            rule "rawsqlcall6"
            ruleflow-group "work_itemwork_item_re_countersrawsqlcall6"
            when
            then
    Map param =new HashMap();
        param.put("param0",work_itemwork_item_re_countersdefault.get("id"));
    String strSql="	SELECT 	count( t.id ) AS work_item_deliverable FROM 	attachment t  WHERE     t.owner_id = #{et.param0} and t.owner_subtype='DELIVERABLE' and t.owner_type = 'WORK_ITEM'";
                        java.util.List<JSONObject> entities=iBzSysWork_itemDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    work_itemwork_item_re_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(work_itemwork_item_re_countersdefault);//更新fact中变量值
                        update(work_itemwork_item_re_counterswork_item);//更新fact中变量值
            end

            //逻辑处理节点[工作项版本]
            rule "rawsqlcall7"
            ruleflow-group "work_itemwork_item_re_countersrawsqlcall7"
            when
            then
    Map param =new HashMap();
        param.put("param0",work_itemwork_item_re_countersdefault.get("id"));
    String strSql="	SELECT 	count( t.id ) AS work_item_version FROM 	`version` t  WHERE     t.owner_id = #{et.param0} and  t.owner_type = 'WORK_ITEM'";
                        java.util.List<JSONObject> entities=iBzSysWork_itemDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    work_itemwork_item_re_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(work_itemwork_item_re_countersdefault);//更新fact中变量值
                        update(work_itemwork_item_re_counterswork_item);//更新fact中变量值
            end

            //逻辑处理节点[工作项关联产品需求]
            rule "rawsqlcall8"
            ruleflow-group "work_itemwork_item_re_countersrawsqlcall8"
            when
            then
    Map param =new HashMap();
        param.put("param0",work_itemwork_item_re_countersdefault.get("id"));
        param.put("param1",work_itemwork_item_re_countersdefault.get("srfversionid"));
    String strSql="SELECT 	count( t.id ) AS work_item_re_idea  FROM 	idea t  WHERE 	EXISTS ( 	SELECT 			* 	FROM 		version_data t12 	WHERE 		 ( t12.`OWNER_TYPE` = 'RELATION' AND t12.`PARENT_ID` = #{et.param0} )  		AND t12.PARENT_VERSION_ID = #{et.param1} 		AND t.`ID` =  JSON_UNQUOTE(t12.`DATA`-> '$.target_id')  	)  	AND t.`IS_DELETED` = 0";
                        java.util.List<JSONObject> entities=iBzSysWork_itemDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    work_itemwork_item_re_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(work_itemwork_item_re_countersdefault);//更新fact中变量值
                        update(work_itemwork_item_re_counterswork_item);//更新fact中变量值
            end

            //逻辑处理节点[工作项关联工作项]
            rule "rawsqlcall9"
            ruleflow-group "work_itemwork_item_re_countersrawsqlcall9"
            when
            then
    Map param =new HashMap();
        param.put("param0",work_itemwork_item_re_countersdefault.get("id"));
        param.put("param1",work_itemwork_item_re_countersdefault.get("srfversionid"));
    String strSql="SELECT 	count( t.id ) AS work_item_re_work_item  FROM 	work_item t  WHERE 	EXISTS ( 	SELECT 			* 	FROM 		version_data t12 	WHERE 		 ( t12.`OWNER_TYPE` = 'RELATION' AND t12.`PARENT_ID` = #{et.param0} )  		AND t12.PARENT_VERSION_ID = #{et.param1} 		AND t.`ID` =  JSON_UNQUOTE(t12.`DATA`-> '$.target_id')  	)  	AND t.`IS_DELETED` = 0";
                        java.util.List<JSONObject> entities=iBzSysWork_itemDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    work_itemwork_item_re_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(work_itemwork_item_re_countersdefault);//更新fact中变量值
                        update(work_itemwork_item_re_counterswork_item);//更新fact中变量值
            end

            //逻辑处理节点[工作项关联测试用例]
            rule "rawsqlcall10"
            ruleflow-group "work_itemwork_item_re_countersrawsqlcall10"
            when
            then
    Map param =new HashMap();
        param.put("param0",work_itemwork_item_re_countersdefault.get("id"));
        param.put("param1",work_itemwork_item_re_countersdefault.get("srfversionid"));
    String strSql="SELECT 	count( t.id ) AS work_item_re_test_case FROM 	test_case t  WHERE 	EXISTS ( 	SELECT 			* 	FROM 		version_data t12 	WHERE 		 ( t12.`OWNER_TYPE` = 'RELATION' AND t12.`PARENT_ID` = #{et.param0} )  		AND t12.PARENT_VERSION_ID = #{et.param1} 		AND t.`ID` =  JSON_UNQUOTE(t12.`DATA`-> '$.target_id')  	)  	AND t.`IS_DELETED` = 0";
                        java.util.List<JSONObject> entities=iBzSysWork_itemDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    work_itemwork_item_re_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(work_itemwork_item_re_countersdefault);//更新fact中变量值
                        update(work_itemwork_item_re_counterswork_item);//更新fact中变量值
            end

            //逻辑处理节点[工作项关联工单]
            rule "rawsqlcall11"
            ruleflow-group "work_itemwork_item_re_countersrawsqlcall11"
            when
            then
    Map param =new HashMap();
        param.put("param0",work_itemwork_item_re_countersdefault.get("id"));
        param.put("param1",work_itemwork_item_re_countersdefault.get("srfversionid"));
    String strSql="SELECT 	count( t.id ) AS work_item_re_ticket  FROM 	ticket t  WHERE 	EXISTS ( 	SELECT 			* 	FROM 		version_data t12 	WHERE 		 ( t12.`OWNER_TYPE` = 'RELATION' AND t12.`PARENT_ID` = #{et.param0} )  		AND t12.PARENT_VERSION_ID = #{et.param1} 		AND t.`ID` =  JSON_UNQUOTE(t12.`DATA`-> '$.target_id')  	)  	AND t.`IS_DELETED` = 0";
                        java.util.List<JSONObject> entities=iBzSysWork_itemDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    work_itemwork_item_re_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(work_itemwork_item_re_countersdefault);//更新fact中变量值
                        update(work_itemwork_item_re_counterswork_item);//更新fact中变量值
            end