package cn.ibizlab.plm.testmgmt.logic.test_caselogic.copy_test_case;
        import java.util.Map;
        import java.util.HashMap;
        import com.alibaba.fastjson.JSONObject;
        import org.springframework.util.StringUtils;
        import org.springframework.util.ObjectUtils;
        import cn.ibizlab.plm.util.errors.BadRequestAlertException;
                global cn.ibizlab.plm.core.testmgmt.domain.test_case test_casecopy_test_casedefault;
                global cn.ibizlab.plm.core.base.domain.attachment test_casecopy_test_caseattachment;
                global cn.ibizlab.plm.core.base.domain.attachment test_casecopy_test_caseattachments;
                global cn.ibizlab.plm.core.base.domain.attention test_casecopy_test_caseattention;
                global cn.ibizlab.plm.core.base.domain.attention test_casecopy_test_caseattentions;
                global cn.ibizlab.plm.core.testmgmt.domain.test_case test_casecopy_test_casefor_temp_obj;
                global java.util.Map test_casecopy_test_caseid;
                global java.util.Map test_casecopy_test_caseids;
                global cn.ibizlab.plm.core.testmgmt.domain.test_case test_casecopy_test_casesrfactionparam;
                global cn.ibizlab.plm.core.testmgmt.domain.test_case test_casecopy_test_casetemp_obj;
                global cn.ibizlab.plm.core.testmgmt.domain.test_case test_casecopy_test_casetest_case_new;
                    global cn.ibizlab.plm.core.testmgmt.service.Itest_caseService test_caseservice;
                    global cn.ibizlab.plm.core.base.service.IattachmentService attachmentservice;
                    global cn.ibizlab.plm.core.base.service.IattentionService attentionservice;
        global cn.ibizlab.plm.core.testmgmt.service.Itest_caseService iBzSysTest_caseDefaultService;
        global cn.ibizlab.plm.util.security.AuthenticationUser curuser;


    no-loop

            //逻辑处理节点[开始]
            rule "begin"
            ruleflow-group "test_casecopy_test_casebegin"
            when
            then
            end

            //逻辑处理节点[绑定表单数据]
            rule "bindparam1"
            ruleflow-group "test_casecopy_test_casebindparam1"
            when
            then
                        update(test_casecopy_test_casedefault);//更新fact中变量值
                        update(test_casecopy_test_caseattachment);//更新fact中变量值
                        update(test_casecopy_test_caseattachments);//更新fact中变量值
                        update(test_casecopy_test_caseattention);//更新fact中变量值
                        update(test_casecopy_test_caseattentions);//更新fact中变量值
                        update(test_casecopy_test_casefor_temp_obj);//更新fact中变量值
                        update(test_casecopy_test_caseid);//更新fact中变量值
                        update(test_casecopy_test_caseids);//更新fact中变量值
                        update(test_casecopy_test_casesrfactionparam);//更新fact中变量值
                        update(test_casecopy_test_casetemp_obj);//更新fact中变量值
                        update(test_casecopy_test_casetest_case_new);//更新fact中变量值
            end

            //逻辑处理节点[绑定id]
            rule "bindparam2"
            ruleflow-group "test_casecopy_test_casebindparam2"
            when
            then
                        update(test_casecopy_test_casedefault);//更新fact中变量值
                        update(test_casecopy_test_caseattachment);//更新fact中变量值
                        update(test_casecopy_test_caseattachments);//更新fact中变量值
                        update(test_casecopy_test_caseattention);//更新fact中变量值
                        update(test_casecopy_test_caseattentions);//更新fact中变量值
                        update(test_casecopy_test_casefor_temp_obj);//更新fact中变量值
                        update(test_casecopy_test_caseid);//更新fact中变量值
                        update(test_casecopy_test_caseids);//更新fact中变量值
                        update(test_casecopy_test_casesrfactionparam);//更新fact中变量值
                        update(test_casecopy_test_casetemp_obj);//更新fact中变量值
                        update(test_casecopy_test_casetest_case_new);//更新fact中变量值
            end

            //逻辑处理节点[循环子调用]
            rule "loopsubcall1"
            ruleflow-group "test_casecopy_test_caseloopsubcall1"
            when
            then
                        update(test_casecopy_test_casedefault);//更新fact中变量值
                        update(test_casecopy_test_caseattachment);//更新fact中变量值
                        update(test_casecopy_test_caseattachments);//更新fact中变量值
                        update(test_casecopy_test_caseattention);//更新fact中变量值
                        update(test_casecopy_test_caseattentions);//更新fact中变量值
                        update(test_casecopy_test_casefor_temp_obj);//更新fact中变量值
                        update(test_casecopy_test_caseid);//更新fact中变量值
                        update(test_casecopy_test_caseids);//更新fact中变量值
                        update(test_casecopy_test_casesrfactionparam);//更新fact中变量值
                        update(test_casecopy_test_casetemp_obj);//更新fact中变量值
                        update(test_casecopy_test_casetest_case_new);//更新fact中变量值
            end

            //逻辑处理节点[重新建立循环临时参数]
            rule "renewparam1"
            ruleflow-group "test_casecopy_test_caserenewparam1"
            when
            then
                        update(test_casecopy_test_casedefault);//更新fact中变量值
                        update(test_casecopy_test_caseattachment);//更新fact中变量值
                        update(test_casecopy_test_caseattachments);//更新fact中变量值
                        update(test_casecopy_test_caseattention);//更新fact中变量值
                        update(test_casecopy_test_caseattentions);//更新fact中变量值
                        update(test_casecopy_test_casefor_temp_obj);//更新fact中变量值
                        update(test_casecopy_test_caseid);//更新fact中变量值
                        update(test_casecopy_test_caseids);//更新fact中变量值
                        update(test_casecopy_test_casesrfactionparam);//更新fact中变量值
                        update(test_casecopy_test_casetemp_obj);//更新fact中变量值
                        update(test_casecopy_test_casetest_case_new);//更新fact中变量值
            end

            //逻辑处理节点[获取用例]
            rule "deaction2"
            ruleflow-group "test_casecopy_test_casedeaction2"
            when
            then
                            cn.ibizlab.plm.util.helper.CachedBeanCopier.copy(test_caseservice.get(test_casecopy_test_caseid.getId()),test_casecopy_test_caseid);
                        update(test_casecopy_test_casedefault);//更新fact中变量值
                        update(test_casecopy_test_caseattachment);//更新fact中变量值
                        update(test_casecopy_test_caseattachments);//更新fact中变量值
                        update(test_casecopy_test_caseattention);//更新fact中变量值
                        update(test_casecopy_test_caseattentions);//更新fact中变量值
                        update(test_casecopy_test_casefor_temp_obj);//更新fact中变量值
                        update(test_casecopy_test_caseid);//更新fact中变量值
                        update(test_casecopy_test_caseids);//更新fact中变量值
                        update(test_casecopy_test_casesrfactionparam);//更新fact中变量值
                        update(test_casecopy_test_casetemp_obj);//更新fact中变量值
                        update(test_casecopy_test_casetest_case_new);//更新fact中变量值
            end

            //逻辑处理节点[设置用例信息]
            rule "prepareparam1"
            ruleflow-group "test_casecopy_test_caseprepareparam1"
            when
            then
                            test_casecopy_test_casetest_case_new.set("",test_casecopy_test_casetemp_obj.get(""));
                                test_casecopy_test_casetest_case_new.set("attentions",null);
                                test_casecopy_test_casetest_case_new.set("attentions",null);
                            test_casecopy_test_caseattachments.set("",test_casecopy_test_casetemp_obj.get("attachments"));
                            test_casecopy_test_casetest_case_new.set("testlibraryid",test_casecopy_test_casefor_temp_obj.get("targetlibraryid"));
                                test_casecopy_test_casetest_case_new.set("attachments",null);
                            test_casecopy_test_casetest_case_new.set("suiteid",test_casecopy_test_casefor_temp_obj.get("suiteid"));
                                test_casecopy_test_casetest_case_new.set("id",null);
                        update(test_casecopy_test_casedefault);//更新fact中变量值
                        update(test_casecopy_test_caseattachment);//更新fact中变量值
                        update(test_casecopy_test_caseattachments);//更新fact中变量值
                        update(test_casecopy_test_caseattention);//更新fact中变量值
                        update(test_casecopy_test_caseattentions);//更新fact中变量值
                        update(test_casecopy_test_casefor_temp_obj);//更新fact中变量值
                        update(test_casecopy_test_caseid);//更新fact中变量值
                        update(test_casecopy_test_caseids);//更新fact中变量值
                        update(test_casecopy_test_casesrfactionparam);//更新fact中变量值
                        update(test_casecopy_test_casetemp_obj);//更新fact中变量值
                        update(test_casecopy_test_casetest_case_new);//更新fact中变量值
            end

            //逻辑处理节点[创建测试用例]
            rule "deaction1"
            ruleflow-group "test_casecopy_test_casedeaction1"
            when
            then
                        test_caseservice.create(test_casecopy_test_casetest_case_new);
                        update(test_casecopy_test_casedefault);//更新fact中变量值
                        update(test_casecopy_test_caseattachment);//更新fact中变量值
                        update(test_casecopy_test_caseattachments);//更新fact中变量值
                        update(test_casecopy_test_caseattention);//更新fact中变量值
                        update(test_casecopy_test_caseattentions);//更新fact中变量值
                        update(test_casecopy_test_casefor_temp_obj);//更新fact中变量值
                        update(test_casecopy_test_caseid);//更新fact中变量值
                        update(test_casecopy_test_caseids);//更新fact中变量值
                        update(test_casecopy_test_casesrfactionparam);//更新fact中变量值
                        update(test_casecopy_test_casetemp_obj);//更新fact中变量值
                        update(test_casecopy_test_casetest_case_new);//更新fact中变量值
            end

            //逻辑处理节点[循环子调用]
            rule "loopsubcall2"
            ruleflow-group "test_casecopy_test_caseloopsubcall2"
            when
            then
                        update(test_casecopy_test_casedefault);//更新fact中变量值
                        update(test_casecopy_test_caseattachment);//更新fact中变量值
                        update(test_casecopy_test_caseattachments);//更新fact中变量值
                        update(test_casecopy_test_caseattention);//更新fact中变量值
                        update(test_casecopy_test_caseattentions);//更新fact中变量值
                        update(test_casecopy_test_casefor_temp_obj);//更新fact中变量值
                        update(test_casecopy_test_caseid);//更新fact中变量值
                        update(test_casecopy_test_caseids);//更新fact中变量值
                        update(test_casecopy_test_casesrfactionparam);//更新fact中变量值
                        update(test_casecopy_test_casetemp_obj);//更新fact中变量值
                        update(test_casecopy_test_casetest_case_new);//更新fact中变量值
            end

            //逻辑处理节点[置空附件id及owner_id]
            rule "prepareparam2"
            ruleflow-group "test_casecopy_test_caseprepareparam2"
            when
            then
                                test_casecopy_test_caseattachment.set("id",null);
                            test_casecopy_test_caseattachment.set("ownerid",test_casecopy_test_casetest_case_new.get("id"));
                            test_casecopy_test_caseattachment.set("ownertype","TEST_CASE");
                        update(test_casecopy_test_casedefault);//更新fact中变量值
                        update(test_casecopy_test_caseattachment);//更新fact中变量值
                        update(test_casecopy_test_caseattachments);//更新fact中变量值
                        update(test_casecopy_test_caseattention);//更新fact中变量值
                        update(test_casecopy_test_caseattentions);//更新fact中变量值
                        update(test_casecopy_test_casefor_temp_obj);//更新fact中变量值
                        update(test_casecopy_test_caseid);//更新fact中变量值
                        update(test_casecopy_test_caseids);//更新fact中变量值
                        update(test_casecopy_test_casesrfactionparam);//更新fact中变量值
                        update(test_casecopy_test_casetemp_obj);//更新fact中变量值
                        update(test_casecopy_test_casetest_case_new);//更新fact中变量值
            end

            //逻辑处理节点[创建附件并绑定]
            rule "deaction3"
            ruleflow-group "test_casecopy_test_casedeaction3"
            when
            then
                        attachmentservice.create(test_casecopy_test_caseattachment);
                        update(test_casecopy_test_casedefault);//更新fact中变量值
                        update(test_casecopy_test_caseattachment);//更新fact中变量值
                        update(test_casecopy_test_caseattachments);//更新fact中变量值
                        update(test_casecopy_test_caseattention);//更新fact中变量值
                        update(test_casecopy_test_caseattentions);//更新fact中变量值
                        update(test_casecopy_test_casefor_temp_obj);//更新fact中变量值
                        update(test_casecopy_test_caseid);//更新fact中变量值
                        update(test_casecopy_test_caseids);//更新fact中变量值
                        update(test_casecopy_test_casesrfactionparam);//更新fact中变量值
                        update(test_casecopy_test_casetemp_obj);//更新fact中变量值
                        update(test_casecopy_test_casetest_case_new);//更新fact中变量值
            end

            //逻辑处理节点[结束]
            rule "end1"
            ruleflow-group "test_casecopy_test_caseend1"
            when
            then
                        update(test_casecopy_test_casedefault);//更新fact中变量值
                        update(test_casecopy_test_caseattachment);//更新fact中变量值
                        update(test_casecopy_test_caseattachments);//更新fact中变量值
                        update(test_casecopy_test_caseattention);//更新fact中变量值
                        update(test_casecopy_test_caseattentions);//更新fact中变量值
                        update(test_casecopy_test_casefor_temp_obj);//更新fact中变量值
                        update(test_casecopy_test_caseid);//更新fact中变量值
                        update(test_casecopy_test_caseids);//更新fact中变量值
                        update(test_casecopy_test_casesrfactionparam);//更新fact中变量值
                        update(test_casecopy_test_casetemp_obj);//更新fact中变量值
                        update(test_casecopy_test_casetest_case_new);//更新fact中变量值
            end

            //逻辑处理节点[准备附件参数]
            rule "prepareparam3"
            ruleflow-group "test_casecopy_test_caseprepareparam3"
            when
            then
                                test_casecopy_test_caseattention.set("id",null);
                            test_casecopy_test_caseattention.set("ownersubtype","TEST_CASE");
                                test_casecopy_test_caseattention.set("userid",curuser.getSessionParams().get("srfpersonid"));
                            test_casecopy_test_caseattention.set("type","40");
                                test_casecopy_test_caseattention.set("name",curuser.getSessionParams().get("srfpersonname"));
                            test_casecopy_test_caseattention.set("ownerid",test_casecopy_test_casetest_case_new.get("id"));
                            test_casecopy_test_caseattention.set("ownertype","TEST_CASE");
                        update(test_casecopy_test_casedefault);//更新fact中变量值
                        update(test_casecopy_test_caseattachment);//更新fact中变量值
                        update(test_casecopy_test_caseattachments);//更新fact中变量值
                        update(test_casecopy_test_caseattention);//更新fact中变量值
                        update(test_casecopy_test_caseattentions);//更新fact中变量值
                        update(test_casecopy_test_casefor_temp_obj);//更新fact中变量值
                        update(test_casecopy_test_caseid);//更新fact中变量值
                        update(test_casecopy_test_caseids);//更新fact中变量值
                        update(test_casecopy_test_casesrfactionparam);//更新fact中变量值
                        update(test_casecopy_test_casetemp_obj);//更新fact中变量值
                        update(test_casecopy_test_casetest_case_new);//更新fact中变量值
            end

            //逻辑处理节点[创建附件]
            rule "deaction4"
            ruleflow-group "test_casecopy_test_casedeaction4"
            when
            then
                        attentionservice.create(test_casecopy_test_caseattention);
                        update(test_casecopy_test_casedefault);//更新fact中变量值
                        update(test_casecopy_test_caseattachment);//更新fact中变量值
                        update(test_casecopy_test_caseattachments);//更新fact中变量值
                        update(test_casecopy_test_caseattention);//更新fact中变量值
                        update(test_casecopy_test_caseattentions);//更新fact中变量值
                        update(test_casecopy_test_casefor_temp_obj);//更新fact中变量值
                        update(test_casecopy_test_caseid);//更新fact中变量值
                        update(test_casecopy_test_caseids);//更新fact中变量值
                        update(test_casecopy_test_casesrfactionparam);//更新fact中变量值
                        update(test_casecopy_test_casetemp_obj);//更新fact中变量值
                        update(test_casecopy_test_casetest_case_new);//更新fact中变量值
            end

            //逻辑处理节点[结束]
            rule "end2"
            ruleflow-group "test_casecopy_test_caseend2"
            when
            then
                        update(test_casecopy_test_casedefault);//更新fact中变量值
                        update(test_casecopy_test_caseattachment);//更新fact中变量值
                        update(test_casecopy_test_caseattachments);//更新fact中变量值
                        update(test_casecopy_test_caseattention);//更新fact中变量值
                        update(test_casecopy_test_caseattentions);//更新fact中变量值
                        update(test_casecopy_test_casefor_temp_obj);//更新fact中变量值
                        update(test_casecopy_test_caseid);//更新fact中变量值
                        update(test_casecopy_test_caseids);//更新fact中变量值
                        update(test_casecopy_test_casesrfactionparam);//更新fact中变量值
                        update(test_casecopy_test_casetemp_obj);//更新fact中变量值
                        update(test_casecopy_test_casetest_case_new);//更新fact中变量值
            end