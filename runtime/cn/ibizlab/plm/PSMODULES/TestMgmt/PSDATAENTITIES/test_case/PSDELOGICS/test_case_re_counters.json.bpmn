<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
    <definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:activiti="http://activiti.org/bpmn" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:g="http://www.jboss.org/drools/flow/gpd" xmlns:tns="http://www.jboss.org/drools" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" expressionLanguage="http://www.mvel.org/2.0" id="Definition" name="" targetNamespace="http://www.jboss.org/drools" typeLanguage="http://www.java.com/javaTypes">
        <process id="cn.ibizlab.plm.core.testmgmt.service.logic.test_casetest_case_re_counters" isClosed="false" isExecutable="true" name="testmgmt_test_case_test_case_re_counters_ruleFlow" processType="Private" tns:packageName="cn.ibizlab.plm.core.testmgmt.service.logic.test_casetest_case_re_counters">
            <extensionElements>
                <tns:import name="java.util.Map" />
                <tns:import name="org.springframework.util.StringUtils"/>
                <tns:import name="cn.ibizlab.plm.util.helper.RuleUtils"/>
                                <tns:metaData express="" name="test_casetest_case_re_countersdefault" type="entity"/>
                                <tns:metaData express="new cn.ibizlab.plm.core.testmgmt.domain.test_case()" name="test_casetest_case_re_counterstest_case" type="refentity"/>
                                    <tns:metaData express="T(cn.ibizlab.plm.util.security.SpringContextHolder).getBean(T(cn.ibizlab.plm.core.testmgmt.service.Itest_caseService))" name="test_caseservice" type="service"/>
                    <tns:metaData express="T(cn.ibizlab.plm.util.security.SpringContextHolder).getBean(T(cn.ibizlab.plm.core.testmgmt.service.Itest_caseService))" name="iBzSysTest_caseDefaultService" type="service"/>
                    <tns:metaData express="T(cn.ibizlab.plm.util.security.AuthenticationUser).getAuthenticationUser()" name="curuser" type="session"/>
                            <tns:global identifier="test_casetest_case_re_countersdefault" type="cn.ibizlab.plm.core.testmgmt.domain.test_case" />
                            <tns:global identifier="test_casetest_case_re_counterstest_case" type="cn.ibizlab.plm.core.testmgmt.domain.test_case" />
            </extensionElements>
                        <startEvent id="begin" isInterrupting="true"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="test_casetest_case_re_countersrawsqlcall1" id="rawsqlcall1" implementation="http://www.jboss.org/drools/rule" name="测试用例关联产品需求"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="test_casetest_case_re_countersrawsqlcall2" id="rawsqlcall2" implementation="http://www.jboss.org/drools/rule" name="测试用例关联工作项"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="test_casetest_case_re_countersend1" id="end1" implementation="http://www.jboss.org/drools/rule" name="结束"/>
                        <endEvent id="end1_end" name="end"/>
                        <sequenceFlow id="end1_end_line" sourceRef="end1" targetRef="end1_end"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="test_casetest_case_re_countersprepareparam1" id="prepareparam1" implementation="http://www.jboss.org/drools/rule" name="设置测试用例ID"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="test_casetest_case_re_countersdeaction1" id="deaction1" implementation="http://www.jboss.org/drools/rule" name="获取测试用例当前版本"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="test_casetest_case_re_countersrawsqlcall4" id="rawsqlcall4" implementation="http://www.jboss.org/drools/rule" name="测试用例执行历史"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="test_casetest_case_re_countersrawsqlcall5" id="rawsqlcall5" implementation="http://www.jboss.org/drools/rule" name="测试用例版本"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="test_casetest_case_re_countersrawsqlcall9" id="rawsqlcall9" implementation="http://www.jboss.org/drools/rule" name="合并查询计数器"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="test_casetest_case_re_countersrawsqlcall3" id="rawsqlcall3" implementation="http://www.jboss.org/drools/rule" name="测试用例关联缺陷"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="test_casetest_case_re_countersrawsqlcall6" id="rawsqlcall6" implementation="http://www.jboss.org/drools/rule" name="测试用例关联产品需求"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="test_casetest_case_re_countersrawsqlcall7" id="rawsqlcall7" implementation="http://www.jboss.org/drools/rule" name="测试用例关联工作项"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="test_casetest_case_re_countersrawsqlcall8" id="rawsqlcall8" implementation="http://www.jboss.org/drools/rule" name="测试用例关联缺陷"/>
                    <sequenceFlow id="begin_rawsqlcall4" sourceRef="begin" targetRef="rawsqlcall4">
                    </sequenceFlow>
                    <sequenceFlow id="rawsqlcall1_rawsqlcall2" sourceRef="rawsqlcall1" targetRef="rawsqlcall2">
                    </sequenceFlow>
                    <sequenceFlow id="rawsqlcall2_rawsqlcall3" sourceRef="rawsqlcall2" targetRef="rawsqlcall3">
                    </sequenceFlow>
                    <sequenceFlow id="prepareparam1_deaction1" sourceRef="prepareparam1" targetRef="deaction1">
                    </sequenceFlow>
                    <sequenceFlow id="gateway-deaction1_rawsqlcall9" sourceRef="gateway-deaction1" targetRef="rawsqlcall9">
                            <conditionExpression  language="http://www.jboss.org/drools/rule" ><![CDATA[
                                            $test_casetest_case_re_countersdefault:test_case();
                                            $test_casetest_case_re_counterstest_case:test_case();
                                    eval($test_casetest_case_re_countersdefault==test_casetest_case_re_countersdefault && $test_casetest_case_re_counterstest_case==test_casetest_case_re_counterstest_case);
                                eval(((RuleUtils.test($test_casetest_case_re_countersdefault.get("srfversionid"),"ISNULL",""))||((RuleUtils.test($test_casetest_case_re_countersdefault.get("srfversionid"),"ISNOTNULL",""))&&(RuleUtils.test($test_casetest_case_re_countersdefault.get("srfversionid"),"EQ","cur_version_id")))))
                                ]]>
                            </conditionExpression>
                    </sequenceFlow>
                    <sequenceFlow id="gateway-deaction1_rawsqlcall6" sourceRef="gateway-deaction1" targetRef="rawsqlcall6">
                            <conditionExpression  language="http://www.jboss.org/drools/rule" ><![CDATA[
                                            $test_casetest_case_re_countersdefault:test_case();
                                            $test_casetest_case_re_counterstest_case:test_case();
                                    eval($test_casetest_case_re_countersdefault==test_casetest_case_re_countersdefault && $test_casetest_case_re_counterstest_case==test_casetest_case_re_counterstest_case);
                                eval((RuleUtils.test($test_casetest_case_re_countersdefault.get("srfversionid"),"ISNOTNULL",""))&&(RuleUtils.test($test_casetest_case_re_countersdefault.get("srfversionid"),"NOTEQ","cur_version_id")))
                                ]]>
                            </conditionExpression>
                    </sequenceFlow>
                    <sequenceFlow id="rawsqlcall4_rawsqlcall5" sourceRef="rawsqlcall4" targetRef="rawsqlcall5">
                    </sequenceFlow>
                    <sequenceFlow id="rawsqlcall5_prepareparam1" sourceRef="rawsqlcall5" targetRef="prepareparam1">
                    </sequenceFlow>
                    <sequenceFlow id="rawsqlcall9_rawsqlcall3" sourceRef="rawsqlcall9" targetRef="rawsqlcall3">
                    </sequenceFlow>
                    <sequenceFlow id="rawsqlcall3_end1" sourceRef="rawsqlcall3" targetRef="end1">
                    </sequenceFlow>
                    <sequenceFlow id="rawsqlcall6_rawsqlcall7" sourceRef="rawsqlcall6" targetRef="rawsqlcall7">
                    </sequenceFlow>
                    <sequenceFlow id="rawsqlcall7_rawsqlcall8" sourceRef="rawsqlcall7" targetRef="rawsqlcall8">
                    </sequenceFlow>
                    <sequenceFlow id="rawsqlcall8_end1" sourceRef="rawsqlcall8" targetRef="end1">
                    </sequenceFlow>
                            <exclusiveGateway id="gateway-deaction1" name="Gateway" gatewayDirection="Diverging" default="gateway-deaction1_end_line"></exclusiveGateway>
                            <sequenceFlow id="deaction1_gateway-deaction1_gatewayline" sourceRef="deaction1" targetRef="gateway-deaction1"></sequenceFlow>
                            <sequenceFlow id="gateway-deaction1_end_line" sourceRef="gateway-deaction1" targetRef="gateway-deaction1_end"/>
                            <endEvent id="gateway-deaction1_end" name="end"/>
        </process>
    </definitions>