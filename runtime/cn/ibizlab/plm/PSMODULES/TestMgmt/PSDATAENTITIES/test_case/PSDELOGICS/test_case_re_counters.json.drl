package cn.ibizlab.plm.testmgmt.logic.test_caselogic.test_case_re_counters;
        import java.util.Map;
        import java.util.HashMap;
        import com.alibaba.fastjson.JSONObject;
        import org.springframework.util.StringUtils;
        import org.springframework.util.ObjectUtils;
        import cn.ibizlab.plm.util.errors.BadRequestAlertException;
                global cn.ibizlab.plm.core.testmgmt.domain.test_case test_casetest_case_re_countersdefault;
                global cn.ibizlab.plm.core.testmgmt.domain.test_case test_casetest_case_re_counterstest_case;
                    global cn.ibizlab.plm.core.testmgmt.service.Itest_caseService test_caseservice;
        global cn.ibizlab.plm.core.testmgmt.service.Itest_caseService iBzSysTest_caseDefaultService;
        global cn.ibizlab.plm.util.security.AuthenticationUser curuser;


    no-loop

            //逻辑处理节点[开始]
            rule "begin"
            ruleflow-group "test_casetest_case_re_countersbegin"
            when
            then
            end

            //逻辑处理节点[测试用例关联产品需求]
            rule "rawsqlcall1"
            ruleflow-group "test_casetest_case_re_countersrawsqlcall1"
            when
            then
    Map param =new HashMap();
        param.put("param0",test_casetest_case_re_countersdefault.get("id"));
    String strSql="SELECT 	count( t.id ) AS test_case_re_idea  FROM 	idea t  WHERE 	EXISTS ( 	SELECT 		*  	FROM 		`RELATION` t11  	WHERE 		t.`ID` = t11.`TARGET_ID`  		AND ( 			t11.`TARGET_TYPE` = 'idea'  			AND t11.`PRINCIPAL_TYPE` = 'test_case'  			AND t11.`PRINCIPAL_ID` = #{et.param0} ) ) 		    AND t.`IS_DELETED` = 0  			";
                        java.util.List<JSONObject> entities=iBzSysTest_caseDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    test_casetest_case_re_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(test_casetest_case_re_countersdefault);//更新fact中变量值
                        update(test_casetest_case_re_counterstest_case);//更新fact中变量值
            end

            //逻辑处理节点[测试用例关联工作项]
            rule "rawsqlcall2"
            ruleflow-group "test_casetest_case_re_countersrawsqlcall2"
            when
            then
    Map param =new HashMap();
        param.put("param0",test_casetest_case_re_countersdefault.get("id"));
    String strSql="SELECT 	count( t.id ) AS test_case_re_work_item  FROM 	work_item t, work_item_type t1  WHERE t.work_item_type_id = t1.id and t1.`group` <> 'bug'  AND EXISTS ( 	SELECT 		*  	FROM 		`RELATION` t11  	WHERE 		t.`ID` = t11.`TARGET_ID`  		AND ( 			t11.`TARGET_TYPE` = 'work_item'  			AND t11.`PRINCIPAL_TYPE` = 'test_case'  			AND t11.`PRINCIPAL_ID` = #{et.param0} ) ) 			AND  t.`IS_DELETED` = 0 			";
                        java.util.List<JSONObject> entities=iBzSysTest_caseDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    test_casetest_case_re_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(test_casetest_case_re_countersdefault);//更新fact中变量值
                        update(test_casetest_case_re_counterstest_case);//更新fact中变量值
            end

            //逻辑处理节点[结束]
            rule "end1"
            ruleflow-group "test_casetest_case_re_countersend1"
            when
            then
                        update(test_casetest_case_re_countersdefault);//更新fact中变量值
                        update(test_casetest_case_re_counterstest_case);//更新fact中变量值
            end

            //逻辑处理节点[设置测试用例id]
            rule "prepareparam1"
            ruleflow-group "test_casetest_case_re_countersprepareparam1"
            when
            then
                            test_casetest_case_re_counterstest_case.set("id",test_casetest_case_re_countersdefault.get("id"));
                        update(test_casetest_case_re_countersdefault);//更新fact中变量值
                        update(test_casetest_case_re_counterstest_case);//更新fact中变量值
            end

            //逻辑处理节点[获取测试用例当前版本]
            rule "deaction1"
            ruleflow-group "test_casetest_case_re_countersdeaction1"
            when
            then
                            cn.ibizlab.plm.util.helper.CachedBeanCopier.copy(test_caseservice.get(test_casetest_case_re_counterstest_case.getId()),test_casetest_case_re_counterstest_case);
                        update(test_casetest_case_re_countersdefault);//更新fact中变量值
                        update(test_casetest_case_re_counterstest_case);//更新fact中变量值
            end

            //逻辑处理节点[测试用例执行历史]
            rule "rawsqlcall4"
            ruleflow-group "test_casetest_case_re_countersrawsqlcall4"
            when
            then
    Map param =new HashMap();
        param.put("param0",test_casetest_case_re_countersdefault.get("id"));
    String strSql="SELECT 	count( t.id ) AS test_case_re_run_history FROM 	run t  WHERE     t.case_id = #{et.param0} and `STATUS` is not null";
                        java.util.List<JSONObject> entities=iBzSysTest_caseDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    test_casetest_case_re_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(test_casetest_case_re_countersdefault);//更新fact中变量值
                        update(test_casetest_case_re_counterstest_case);//更新fact中变量值
            end

            //逻辑处理节点[测试用例版本]
            rule "rawsqlcall5"
            ruleflow-group "test_casetest_case_re_countersrawsqlcall5"
            when
            then
    Map param =new HashMap();
        param.put("param0",test_casetest_case_re_countersdefault.get("id"));
    String strSql="SELECT 	count( t.id ) AS test_case_version FROM 	`version` t  WHERE     t.owner_id = #{et.param0} and t.owner_type = 'TEST_CASE'";
                        java.util.List<JSONObject> entities=iBzSysTest_caseDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    test_casetest_case_re_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(test_casetest_case_re_countersdefault);//更新fact中变量值
                        update(test_casetest_case_re_counterstest_case);//更新fact中变量值
            end

            //逻辑处理节点[合并查询计数器]
            rule "rawsqlcall9"
            ruleflow-group "test_casetest_case_re_countersrawsqlcall9"
            when
            then
    Map param =new HashMap();
        param.put("param0",test_casetest_case_re_countersdefault.get("id"));
    String strSql="SELECT     COALESCE(SUM(CASE WHEN t11.`TARGET_TYPE` = 'idea' AND t11.`PRINCIPAL_TYPE` = 'test_case' AND t1.IS_DELETED=0 THEN 1 ELSE 0 END),0) AS test_case_re_idea,     COALESCE(SUM(CASE WHEN t11.`TARGET_TYPE` = 'ticket' AND t11.`PRINCIPAL_TYPE` = 'test_case' AND t2.IS_DELETED=0 THEN 1 ELSE 0 END),0) AS test_case_re_test_case,     COALESCE(SUM(CASE WHEN t11.`TARGET_TYPE` = 'work_item' AND t11.`PRINCIPAL_TYPE` = 'test_case' AND t4.IS_DELETED=0 THEN 1 ELSE 0 END),0) AS test_case_re_work_item FROM     `RELATION` t11 JOIN     `test_case` t ON t.`ID` = t11.`PRINCIPAL_ID` LEFT JOIN     `idea` t1 ON t1.ID = t11.TARGET_ID  LEFT JOIN     `test_case` t2 ON t2.`ID` = t11.`TARGET_ID` LEFT JOIN     `work_item` t4 ON t4.ID = t11.TARGET_ID WHERE     (t11.`PRINCIPAL_ID` = #{et.param0});";
                        java.util.List<JSONObject> entities=iBzSysTest_caseDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    test_casetest_case_re_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(test_casetest_case_re_countersdefault);//更新fact中变量值
                        update(test_casetest_case_re_counterstest_case);//更新fact中变量值
            end

            //逻辑处理节点[测试用例关联缺陷]
            rule "rawsqlcall3"
            ruleflow-group "test_casetest_case_re_countersrawsqlcall3"
            when
            then
    Map param =new HashMap();
        param.put("param0",test_casetest_case_re_countersdefault.get("id"));
    String strSql="SELECT 	count( t.id ) AS test_case_re_bug  FROM 	work_item t, work_item_type t1  WHERE t.work_item_type_id = t1.id and t1.`group` = 'bug' and	EXISTS ( 	SELECT 		*  	FROM 		`RELATION` t11  	WHERE 		t.`ID` = t11.`TARGET_ID`  		AND ( 			t11.`TARGET_TYPE` = 'work_item'  			AND t11.`PRINCIPAL_TYPE` = 'test_case' 			AND t11.`PRINCIPAL_ID` = #{et.param0} ) ) 			AND t.`IS_DELETED` = 0 			";
                        java.util.List<JSONObject> entities=iBzSysTest_caseDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    test_casetest_case_re_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(test_casetest_case_re_countersdefault);//更新fact中变量值
                        update(test_casetest_case_re_counterstest_case);//更新fact中变量值
            end

            //逻辑处理节点[测试用例关联产品需求]
            rule "rawsqlcall6"
            ruleflow-group "test_casetest_case_re_countersrawsqlcall6"
            when
            then
    Map param =new HashMap();
        param.put("param0",test_casetest_case_re_countersdefault.get("id"));
        param.put("param1",test_casetest_case_re_countersdefault.get("srfversionid"));
    String strSql="SELECT 	count( t.id ) AS test_case_re_idea FROM 	idea t  WHERE t.is_deleted = 0 AND EXISTS ( 	SELECT 			* 	FROM 		version_data t12 	WHERE 		 ( t12.`OWNER_TYPE` = 'RELATION' AND t12.`PARENT_ID` = #{et.param0} )  		AND t12.PARENT_VERSION_ID = #{et.param1} 		AND t.`ID` =  JSON_UNQUOTE(t12.`DATA`-> '$.target_id')  	)";
                        java.util.List<JSONObject> entities=iBzSysTest_caseDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    test_casetest_case_re_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(test_casetest_case_re_countersdefault);//更新fact中变量值
                        update(test_casetest_case_re_counterstest_case);//更新fact中变量值
            end

            //逻辑处理节点[测试用例关联工作项]
            rule "rawsqlcall7"
            ruleflow-group "test_casetest_case_re_countersrawsqlcall7"
            when
            then
    Map param =new HashMap();
        param.put("param0",test_casetest_case_re_countersdefault.get("id"));
        param.put("param1",test_casetest_case_re_countersdefault.get("srfversionid"));
    String strSql="SELECT 	count( t.id ) AS test_case_re_work_item FROM 	work_item t, work_item_type t1 WHERE t.work_item_type_id = t1.id and t1.`group` <> 'bug' and t.is_deleted = 0 AND EXISTS ( 	SELECT 			* 	FROM 		version_data t12 	WHERE 		 ( t12.`OWNER_TYPE` = 'RELATION' AND t12.`PARENT_ID` = #{et.param0} )  		AND t12.PARENT_VERSION_ID = #{et.param1} 		AND t.`ID` =  JSON_UNQUOTE(t12.`DATA`-> '$.target_id')  	)";
                        java.util.List<JSONObject> entities=iBzSysTest_caseDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    test_casetest_case_re_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(test_casetest_case_re_countersdefault);//更新fact中变量值
                        update(test_casetest_case_re_counterstest_case);//更新fact中变量值
            end

            //逻辑处理节点[测试用例关联缺陷]
            rule "rawsqlcall8"
            ruleflow-group "test_casetest_case_re_countersrawsqlcall8"
            when
            then
    Map param =new HashMap();
        param.put("param0",test_casetest_case_re_countersdefault.get("id"));
        param.put("param1",test_casetest_case_re_countersdefault.get("srfversionid"));
    String strSql="SELECT 	count( t.id ) AS test_case_re_bug FROM 	work_item t, work_item_type t1 WHERE t.work_item_type_id = t1.id and t1.`group` = 'bug' and t.is_deleted = 0 AND EXISTS ( 	SELECT 			* 	FROM 		version_data t12 	WHERE 		 ( t12.`OWNER_TYPE` = 'RELATION' AND t12.`PARENT_ID` = #{et.param0} )  		AND t12.PARENT_VERSION_ID = #{et.param1} 		AND t.`ID` =  JSON_UNQUOTE(t12.`DATA`-> '$.target_id')  	)";
                        java.util.List<JSONObject> entities=iBzSysTest_caseDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    test_casetest_case_re_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(test_casetest_case_re_countersdefault);//更新fact中变量值
                        update(test_casetest_case_re_counterstest_case);//更新fact中变量值
            end