package cn.ibizlab.plm.testmgmt.logic.test_caselogic.test_case_maneuver_context;
        import java.util.Map;
        import java.util.HashMap;
        import com.alibaba.fastjson.JSONObject;
        import org.springframework.util.StringUtils;
        import org.springframework.util.ObjectUtils;
        import cn.ibizlab.plm.util.errors.BadRequestAlertException;
                global cn.ibizlab.plm.core.testmgmt.domain.test_case test_casetest_case_maneuver_contextdefault;
                global java.util.Map test_casetest_case_maneuver_contextresult;
        global cn.ibizlab.plm.core.testmgmt.service.Itest_caseService iBzSysTest_caseDefaultService;
        global cn.ibizlab.plm.util.security.AuthenticationUser curuser;


    no-loop

            //逻辑处理节点[开始]
            rule "begin"
            ruleflow-group "test_casetest_case_maneuver_contextbegin"
            when
            then
            end

            //逻辑处理节点[结束]
            rule "end1"
            ruleflow-group "test_casetest_case_maneuver_contextend1"
            when
            then
                        update(test_casetest_case_maneuver_contextdefault);//更新fact中变量值
                        update(test_casetest_case_maneuver_contextresult);//更新fact中变量值
            end

            //逻辑处理节点[ 测试用例活动情况]
            rule "rawsqlcall1"
            ruleflow-group "test_casetest_case_maneuver_contextrawsqlcall1"
            when
            then
    Map param =new HashMap();
        param.put("param0",test_casetest_case_maneuver_contextdefault.get("n_create_time_gtandeq"));
        param.put("param1",test_casetest_case_maneuver_contextdefault.get("n_create_time_gtandeq"));
        param.put("param2",test_casetest_case_maneuver_contextdefault.get("n_create_time_gtandeq"));
        param.put("param3",test_casetest_case_maneuver_contextdefault.get("n_create_time_ltandeq"));
        param.put("param4",test_casetest_case_maneuver_contextdefault.get("n_test_library_id_eq"));
        param.put("param5",test_casetest_case_maneuver_contextdefault.get("n_create_time_gtandeq"));
        param.put("param6",test_casetest_case_maneuver_contextdefault.get("n_create_time_ltandeq"));
        param.put("param7",test_casetest_case_maneuver_contextdefault.get("n_test_library_id_eq"));
        param.put("param8",test_casetest_case_maneuver_contextdefault.get("n_create_time_gtandeq"));
        param.put("param9",test_casetest_case_maneuver_contextdefault.get("n_create_time_ltandeq"));
        param.put("param10",test_casetest_case_maneuver_contextdefault.get("n_type_eq"));
        param.put("param11",test_casetest_case_maneuver_contextdefault.get("n_type_eq"));
        param.put("param12",test_casetest_case_maneuver_contextdefault.get("n_type_eq"));
        param.put("param13",test_casetest_case_maneuver_contextdefault.get("n_level_eq"));
        param.put("param14",test_casetest_case_maneuver_contextdefault.get("n_level_eq"));
        param.put("param15",test_casetest_case_maneuver_contextdefault.get("n_level_eq"));
        param.put("param16",test_casetest_case_maneuver_contextdefault.get("n_maintenance_id_eq"));
        param.put("param17",test_casetest_case_maneuver_contextdefault.get("n_maintenance_id_eq"));
        param.put("param18",test_casetest_case_maneuver_contextdefault.get("n_maintenance_id_eq"));
        param.put("param19",test_casetest_case_maneuver_contextdefault.get("n_test_type_eq"));
        param.put("param20",test_casetest_case_maneuver_contextdefault.get("n_test_type_eq"));
        param.put("param21",test_casetest_case_maneuver_contextdefault.get("n_test_type_eq"));
        param.put("param22",test_casetest_case_maneuver_contextdefault.get("n_create_man_eq"));
        param.put("param23",test_casetest_case_maneuver_contextdefault.get("n_create_man_eq"));
        param.put("param24",test_casetest_case_maneuver_contextdefault.get("n_create_man_eq"));
        param.put("param25",test_casetest_case_maneuver_contextdefault.get("n_state_eq"));
        param.put("param26",test_casetest_case_maneuver_contextdefault.get("n_state_eq"));
        param.put("param27",test_casetest_case_maneuver_contextdefault.get("n_state_eq"));
    String strSql="SELECT     date_series.date AS filter_type,     COALESCE(new_cases.count, 0) AS new_count, -- 每日新增测试用例数量     COALESCE(updated_cases.count, 0) AS updated_count -- 每日修改测试用例数量 FROM (          SELECT DATE_ADD(#{et.param0}, INTERVAL seq.seq DAY) AS date          FROM (                   SELECT a.i+b.i*10+c.i*100 AS seq                   FROM (SELECT 0 AS i UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) a,                        (SELECT 0 AS i UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) b,                        (SELECT 0 AS i UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) c               ) seq          WHERE DATE_ADD(#{et.param1}, INTERVAL seq.seq DAY) BETWEEN #{et.param2} AND #{et.param3}      ) date_series          LEFT JOIN (     SELECT         DATE(CREATE_TIME) AS date,         COUNT(*) AS count     FROM TEST_CASE     WHERE TEST_LIBRARY_ID = #{et.param4} AND CREATE_TIME BETWEEN #{et.param5} AND #{et.param6}     GROUP BY DATE(CREATE_TIME) ) new_cases ON date_series.date = new_cases.date          LEFT JOIN (     SELECT         DATE(UPDATE_TIME) AS date,         COUNT(*) AS count     FROM TEST_CASE     WHERE TEST_LIBRARY_ID = #{et.param7} AND UPDATE_TIME BETWEEN #{et.param8} AND #{et.param9}       AND ((#{et.param10} IS NULL OR #{et.param11} = '') OR FIND_IN_SET(TYPE, #{et.param12}))       AND ((#{et.param13} IS NULL OR #{et.param14} = '') OR FIND_IN_SET(LEVEL, #{et.param15}))       AND ((#{et.param16} IS NULL OR #{et.param17} = '') OR FIND_IN_SET(MAINTENANCE_ID, #{et.param18}))       AND ((#{et.param19} IS NULL OR #{et.param20} = '') OR FIND_IN_SET(TEST_TYPE, #{et.param21}))       AND ((#{et.param22} IS NULL OR #{et.param23} = '') OR FIND_IN_SET(CREATE_MAN, #{et.param24}))       AND ((#{et.param25} IS NULL OR #{et.param26} = '') OR FIND_IN_SET(STATE, #{et.param27}))     GROUP BY DATE(UPDATE_TIME) ) updated_cases ON date_series.date = updated_cases.date ORDER BY date_series.date;";
                        java.util.List<JSONObject> entities=iBzSysTest_caseDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                test_casetest_case_maneuver_contextresult.putAll(entity);
                            }
                        update(test_casetest_case_maneuver_contextdefault);//更新fact中变量值
                        update(test_casetest_case_maneuver_contextresult);//更新fact中变量值
            end