package cn.ibizlab.plm.testmgmt.logic.runlogic.run_re_counters;
        import java.util.Map;
        import java.util.HashMap;
        import com.alibaba.fastjson.JSONObject;
        import org.springframework.util.StringUtils;
        import org.springframework.util.ObjectUtils;
        import cn.ibizlab.plm.util.errors.BadRequestAlertException;
                global cn.ibizlab.plm.core.testmgmt.domain.run runrun_re_countersdefault;
        global cn.ibizlab.plm.core.testmgmt.service.IrunService iBzSysRunDefaultService;
        global cn.ibizlab.plm.util.security.AuthenticationUser curuser;


    no-loop

            //逻辑处理节点[开始]
            rule "begin"
            ruleflow-group "runrun_re_countersbegin"
            when
            then
            end

            //逻辑处理节点[测试用例关联产品需求]
            rule "rawsqlcall1"
            ruleflow-group "runrun_re_countersrawsqlcall1"
            when
            then
    Map param =new HashMap();
        param.put("param0",runrun_re_countersdefault.get("caseid"));
    String strSql="SELECT 	count( t.id ) AS run_re_idea  FROM 	idea t  WHERE 	EXISTS ( 	SELECT 		*  	FROM 		`RELATION` t11  	WHERE 		t.`ID` = t11.`TARGET_ID`  		AND ( 			t11.`TARGET_TYPE` = 'idea'  			AND t11.`PRINCIPAL_TYPE` = 'test_case'  			AND t11.`PRINCIPAL_ID` = #{et.param0} ) ) 			AND ( 				t.`IS_DELETED` = 0  			)";
                        java.util.List<JSONObject> entities=iBzSysRunDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    runrun_re_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(runrun_re_countersdefault);//更新fact中变量值
            end

            //逻辑处理节点[测试用例关联工作项]
            rule "rawsqlcall2"
            ruleflow-group "runrun_re_countersrawsqlcall2"
            when
            then
    Map param =new HashMap();
        param.put("param0",runrun_re_countersdefault.get("caseid"));
    String strSql="SELECT 	count( t.id ) AS run_re_work_item  FROM 	work_item t, work_item_type t1  WHERE t.work_item_type_id = t1.id and t1.`group` <> 'bug' AND	EXISTS ( 	SELECT 		*  	FROM 		`RELATION` t11  	WHERE 		t.`ID` = t11.`TARGET_ID`  		AND ( 			t11.`TARGET_TYPE` = 'work_item'  			AND t11.`PRINCIPAL_TYPE` = 'test_case'  			AND t11.`PRINCIPAL_ID` = #{et.param0} ) ) 			AND ( 				t.`IS_DELETED` = 0  			)";
                        java.util.List<JSONObject> entities=iBzSysRunDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    runrun_re_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(runrun_re_countersdefault);//更新fact中变量值
            end

            //逻辑处理节点[结束]
            rule "end1"
            ruleflow-group "runrun_re_countersend1"
            when
            then
                        update(runrun_re_countersdefault);//更新fact中变量值
            end

            //逻辑处理节点[调试逻辑参数]
            rule "debugparam1"
            ruleflow-group "runrun_re_countersdebugparam1"
            when
            then
                        update(runrun_re_countersdefault);//更新fact中变量值
            end

            //逻辑处理节点[执行用例关联缺陷]
            rule "rawsqlcall3"
            ruleflow-group "runrun_re_countersrawsqlcall3"
            when
            then
    Map param =new HashMap();
        param.put("param0",runrun_re_countersdefault.get("id"));
    String strSql="select count( t.id ) AS run_re_bug from work_item t, work_item_type t1 where  t.`IS_DELETED` = 0 and t.work_item_type_id = t1.id  and t1.`group` = 'bug' and EXISTS ( select 1 from `RELATION` t2  where t.`ID` = t2.`TARGET_ID`  and  t2.`TARGET_TYPE` = 'work_item' and t2.`PRINCIPAL_TYPE` = 'run' and t2.`PRINCIPAL_ID` = #{et.param0})  			";
                        java.util.List<JSONObject> entities=iBzSysRunDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    runrun_re_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(runrun_re_countersdefault);//更新fact中变量值
            end

            //逻辑处理节点[执行用例结果附件]
            rule "rawsqlcall5"
            ruleflow-group "runrun_re_countersrawsqlcall5"
            when
            then
    Map param =new HashMap();
        param.put("param0",runrun_re_countersdefault.get("id"));
    String strSql="SELECT 	count( t.id ) AS run_re_attachment FROM 	attachment t  WHERE     t.owner_id = #{et.param0} and t.owner_type = 'RUN'";
                        java.util.List<JSONObject> entities=iBzSysRunDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    runrun_re_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(runrun_re_countersdefault);//更新fact中变量值
            end

            //逻辑处理节点[测试用例执行历史]
            rule "rawsqlcall4"
            ruleflow-group "runrun_re_countersrawsqlcall4"
            when
            then
    Map param =new HashMap();
        param.put("param0",runrun_re_countersdefault.get("id"));
    String strSql="SELECT     COUNT(t.id) AS run_re_run_history FROM     run_history t WHERE     t.run_id = #{et.param0}  ";
                        java.util.List<JSONObject> entities=iBzSysRunDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    runrun_re_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(runrun_re_countersdefault);//更新fact中变量值
            end

            //逻辑处理节点[合并查询计数器]
            rule "rawsqlcall6"
            ruleflow-group "runrun_re_countersrawsqlcall6"
            when
            then
    Map param =new HashMap();
        param.put("param0",runrun_re_countersdefault.get("caseid"));
    String strSql="SELECT     COALESCE(SUM(CASE WHEN t11.`TARGET_TYPE` = 'idea' AND t11.`PRINCIPAL_TYPE` = 'test_case' AND t1.IS_DELETED=0 THEN 1 ELSE 0 END),0) AS test_case_re_idea,     COALESCE(SUM(CASE WHEN t11.`TARGET_TYPE` = 'work_item' AND t11.`PRINCIPAL_TYPE` = 'test_case' AND t4.IS_DELETED=0 THEN 1 ELSE 0 END),0) AS test_case_work_item FROM     `RELATION` t11 JOIN     `test_case` t ON t.`ID` = t11.`PRINCIPAL_ID` LEFT JOIN     `idea` t1 ON t1.ID = t11.TARGET_ID  LEFT JOIN     `work_item` t4 ON t4.ID = t11.TARGET_ID WHERE     (t11.`PRINCIPAL_ID` = #{et.param0});";
                        java.util.List<JSONObject> entities=iBzSysRunDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    runrun_re_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(runrun_re_countersdefault);//更新fact中变量值
            end