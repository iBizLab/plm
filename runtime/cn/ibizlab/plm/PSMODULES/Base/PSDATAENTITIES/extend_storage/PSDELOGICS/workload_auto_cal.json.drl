package cn.ibizlab.plm.base.logic.extend_storagelogic.workload_auto_cal;
        import java.util.Map;
        import java.util.HashMap;
        import com.alibaba.fastjson.JSONObject;
        import org.springframework.util.StringUtils;
        import org.springframework.util.ObjectUtils;
        import cn.ibizlab.plm.util.errors.BadRequestAlertException;
                global cn.ibizlab.plm.core.base.domain.extend_storage extend_storageworkload_auto_caldefault;
                global cn.ibizlab.plm.core.projmgmt.domain.work_item extend_storageworkload_auto_calcur_work_item_filter;
                global cn.ibizlab.plm.core.projmgmt.domain.work_item extend_storageworkload_auto_calcur_work_item_page;
                global cn.ibizlab.plm.core.projmgmt.domain.work_item extend_storageworkload_auto_calcur_work_item_temp;
                global cn.ibizlab.plm.core.base.domain.workload extend_storageworkload_auto_calnext_work_load;
                global cn.ibizlab.plm.core.projmgmt.domain.work_item extend_storageworkload_auto_calp_work_item;
                global cn.ibizlab.plm.core.projmgmt.domain.work_item extend_storageworkload_auto_calp_work_item_filter;
                global cn.ibizlab.plm.core.projmgmt.domain.work_item extend_storageworkload_auto_calp_work_item_page;
                global cn.ibizlab.plm.core.projmgmt.domain.work_item extend_storageworkload_auto_caltarget_work_item;
                global cn.ibizlab.plm.core.projmgmt.domain.work_item extend_storageworkload_auto_calworkload_data;
                    global cn.ibizlab.plm.core.projmgmt.service.Iwork_itemService work_itemservice;
                    global cn.ibizlab.plm.core.base.service.IworkloadService workloadservice;
        global cn.ibizlab.plm.core.base.service.Iextend_storageService iBzSysExtend_storageDefaultService;
        global cn.ibizlab.plm.util.security.AuthenticationUser curuser;


    no-loop

            //逻辑处理节点[开始]
            rule "begin"
            ruleflow-group "extend_storageworkload_auto_calbegin"
            when
            then
            end

            //逻辑处理节点[我的逻辑的传入是啥]
            rule "debugparam1"
            ruleflow-group "extend_storageworkload_auto_caldebugparam1"
            when
            then
                        update(extend_storageworkload_auto_caldefault);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_temp);//更新fact中变量值
                        update(extend_storageworkload_auto_calnext_work_load);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_caltarget_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calworkload_data);//更新fact中变量值
            end

            //逻辑处理节点[获取工作项标识]
            rule "prepareparam1"
            ruleflow-group "extend_storageworkload_auto_calprepareparam1"
            when
            then
                            extend_storageworkload_auto_caltarget_work_item.set("id",extend_storageworkload_auto_caldefault.get("ownerid"));
                        update(extend_storageworkload_auto_caldefault);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_temp);//更新fact中变量值
                        update(extend_storageworkload_auto_calnext_work_load);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_caltarget_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calworkload_data);//更新fact中变量值
            end

            //逻辑处理节点[根据标识获取工作项详情]
            rule "deaction1"
            ruleflow-group "extend_storageworkload_auto_caldeaction1"
            when
            then
                            cn.ibizlab.plm.util.helper.CachedBeanCopier.copy(work_itemservice.get(extend_storageworkload_auto_caltarget_work_item.getId()),extend_storageworkload_auto_caltarget_work_item);
                        update(extend_storageworkload_auto_caldefault);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_temp);//更新fact中变量值
                        update(extend_storageworkload_auto_calnext_work_load);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_caltarget_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calworkload_data);//更新fact中变量值
            end

            //逻辑处理节点[设置父工作项过滤器]
            rule "prepareparam2"
            ruleflow-group "extend_storageworkload_auto_calprepareparam2"
            when
            then
                            extend_storageworkload_auto_calp_work_item_filter.set("n_id_eq",extend_storageworkload_auto_caltarget_work_item.get("pid"));
                        update(extend_storageworkload_auto_caldefault);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_temp);//更新fact中变量值
                        update(extend_storageworkload_auto_calnext_work_load);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_caltarget_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calworkload_data);//更新fact中变量值
            end

            //逻辑处理节点[获取同级数据]
            rule "dedataset2"
            ruleflow-group "extend_storageworkload_auto_caldedataset2"
            when
            then
                        update(extend_storageworkload_auto_caldefault);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_temp);//更新fact中变量值
                        update(extend_storageworkload_auto_calnext_work_load);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_caltarget_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calworkload_data);//更新fact中变量值
            end

            //逻辑处理节点[设置当前同级工作项过滤器]
            rule "prepareparam4"
            ruleflow-group "extend_storageworkload_auto_calprepareparam4"
            when
            then
                            extend_storageworkload_auto_calcur_work_item_filter.set("n_pid_eq",extend_storageworkload_auto_calp_work_item.get("id"));
                        update(extend_storageworkload_auto_caldefault);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_temp);//更新fact中变量值
                        update(extend_storageworkload_auto_calnext_work_load);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_caltarget_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calworkload_data);//更新fact中变量值
            end

            //逻辑处理节点[绑定父数据]
            rule "prepareparam3"
            ruleflow-group "extend_storageworkload_auto_calprepareparam3"
            when
            then
                            extend_storageworkload_auto_calp_work_item.set("",extend_storageworkload_auto_calp_work_item_page.get("0"));
                        update(extend_storageworkload_auto_caldefault);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_temp);//更新fact中变量值
                        update(extend_storageworkload_auto_calnext_work_load);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_caltarget_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calworkload_data);//更新fact中变量值
            end

            //逻辑处理节点[获取父工作项]
            rule "dedataset1"
            ruleflow-group "extend_storageworkload_auto_caldedataset1"
            when
            then
                        update(extend_storageworkload_auto_caldefault);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_temp);//更新fact中变量值
                        update(extend_storageworkload_auto_calnext_work_load);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_caltarget_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calworkload_data);//更新fact中变量值
            end

            //逻辑处理节点[循环子调用]
            rule "loopsubcall1"
            ruleflow-group "extend_storageworkload_auto_calloopsubcall1"
            when
            then
                        update(extend_storageworkload_auto_caldefault);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_temp);//更新fact中变量值
                        update(extend_storageworkload_auto_calnext_work_load);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_caltarget_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calworkload_data);//更新fact中变量值
            end

            //逻辑处理节点[执行脚本代码]
            rule "rawsfcode2"
            ruleflow-group "extend_storageworkload_auto_calrawsfcode2"
            when
            then
                        update(extend_storageworkload_auto_caldefault);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_temp);//更新fact中变量值
                        update(extend_storageworkload_auto_calnext_work_load);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_caltarget_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calworkload_data);//更新fact中变量值
            end

            //逻辑处理节点[准备参数]
            rule "prepareparam5"
            ruleflow-group "extend_storageworkload_auto_calprepareparam5"
            when
            then
                            extend_storageworkload_auto_calp_work_item.set("remainingworkload",extend_storageworkload_auto_calworkload_data.get("remainingworkload"));
                            extend_storageworkload_auto_calp_work_item.set("estimatedworkload",extend_storageworkload_auto_calworkload_data.get("estimatedworkload"));
                        update(extend_storageworkload_auto_caldefault);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_temp);//更新fact中变量值
                        update(extend_storageworkload_auto_calnext_work_load);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_caltarget_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calworkload_data);//更新fact中变量值
            end

            //逻辑处理节点[执行脚本代码]
            rule "rawsfcode1"
            ruleflow-group "extend_storageworkload_auto_calrawsfcode1"
            when
            then
                        update(extend_storageworkload_auto_caldefault);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_temp);//更新fact中变量值
                        update(extend_storageworkload_auto_calnext_work_load);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_caltarget_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calworkload_data);//更新fact中变量值
            end

            //逻辑处理节点[调试逻辑参数]
            rule "debugparam2"
            ruleflow-group "extend_storageworkload_auto_caldebugparam2"
            when
            then
                        update(extend_storageworkload_auto_caldefault);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_temp);//更新fact中变量值
                        update(extend_storageworkload_auto_calnext_work_load);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_caltarget_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calworkload_data);//更新fact中变量值
            end

            //逻辑处理节点[调试逻辑参数]
            rule "debugparam3"
            ruleflow-group "extend_storageworkload_auto_caldebugparam3"
            when
            then
                        update(extend_storageworkload_auto_caldefault);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_temp);//更新fact中变量值
                        update(extend_storageworkload_auto_calnext_work_load);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_caltarget_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calworkload_data);//更新fact中变量值
            end

            //逻辑处理节点[更新父工作项]
            rule "deaction2"
            ruleflow-group "extend_storageworkload_auto_caldeaction2"
            when
            then
                        work_itemservice.update(extend_storageworkload_auto_calp_work_item);
                        update(extend_storageworkload_auto_caldefault);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_temp);//更新fact中变量值
                        update(extend_storageworkload_auto_calnext_work_load);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_caltarget_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calworkload_data);//更新fact中变量值
            end

            //逻辑处理节点[结束]
            rule "end2"
            ruleflow-group "extend_storageworkload_auto_calend2"
            when
            then
                        update(extend_storageworkload_auto_caldefault);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_temp);//更新fact中变量值
                        update(extend_storageworkload_auto_calnext_work_load);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_caltarget_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calworkload_data);//更新fact中变量值
            end

            //逻辑处理节点[准备参数]
            rule "prepareparam6"
            ruleflow-group "extend_storageworkload_auto_calprepareparam6"
            when
            then
                            extend_storageworkload_auto_calnext_work_load.set("principalid",extend_storageworkload_auto_calp_work_item.get("id"));
                            extend_storageworkload_auto_calnext_work_load.set("u_workload","false");
                            extend_storageworkload_auto_calnext_work_load.set("u_actual_workload",extend_storageworkload_auto_calworkload_data.get("actualworkload"));
                            extend_storageworkload_auto_calnext_work_load.set("remaining_workload",extend_storageworkload_auto_calp_work_item.get("remainingworkload"));
                            extend_storageworkload_auto_calnext_work_load.set("principaltype","WORK_ITEM");
                            extend_storageworkload_auto_calnext_work_load.set("registerdate",extend_storageworkload_auto_calp_work_item.get("updatetime"));
                            extend_storageworkload_auto_calnext_work_load.set("duration",extend_storageworkload_auto_caldefault.get("decimalvalue"));
                            extend_storageworkload_auto_calnext_work_load.set("workload_kind","工作项");
                        update(extend_storageworkload_auto_caldefault);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_temp);//更新fact中变量值
                        update(extend_storageworkload_auto_calnext_work_load);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_caltarget_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calworkload_data);//更新fact中变量值
            end

            //逻辑处理节点[实体处理逻辑]
            rule "delogic1"
            ruleflow-group "extend_storageworkload_auto_caldelogic1"
            when
            then
                        update(extend_storageworkload_auto_caldefault);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_temp);//更新fact中变量值
                        update(extend_storageworkload_auto_calnext_work_load);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_caltarget_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calworkload_data);//更新fact中变量值
            end

            //逻辑处理节点[结束]
            rule "end1"
            ruleflow-group "extend_storageworkload_auto_calend1"
            when
            then
                        update(extend_storageworkload_auto_caldefault);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_calcur_work_item_temp);//更新fact中变量值
                        update(extend_storageworkload_auto_calnext_work_load);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_filter);//更新fact中变量值
                        update(extend_storageworkload_auto_calp_work_item_page);//更新fact中变量值
                        update(extend_storageworkload_auto_caltarget_work_item);//更新fact中变量值
                        update(extend_storageworkload_auto_calworkload_data);//更新fact中变量值
            end