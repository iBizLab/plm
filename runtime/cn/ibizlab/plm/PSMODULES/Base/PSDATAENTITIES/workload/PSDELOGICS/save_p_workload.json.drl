package cn.ibizlab.plm.base.logic.workloadlogic.save_p_workload;
        import java.util.Map;
        import java.util.HashMap;
        import com.alibaba.fastjson.JSONObject;
        import org.springframework.util.StringUtils;
        import org.springframework.util.ObjectUtils;
        import cn.ibizlab.plm.util.errors.BadRequestAlertException;
                global cn.ibizlab.plm.core.base.domain.workload workloadsave_p_workloaddefault;
                global cn.ibizlab.plm.core.base.domain.extend_storage workloadsave_p_workloadactual;
                global cn.ibizlab.plm.core.prodmgmt.domain.idea workloadsave_p_workloadidea;
                global cn.ibizlab.plm.core.base.domain.extend_storage workloadsave_p_workloadremaining;
                global cn.ibizlab.plm.core.testmgmt.domain.test_case workloadsave_p_workloadtest_case;
                global cn.ibizlab.plm.core.base.domain.workload workloadsave_p_workloadu_workload;
                global cn.ibizlab.plm.core.projmgmt.domain.work_item workloadsave_p_workloadwork_item;
                    global cn.ibizlab.plm.core.projmgmt.service.Iwork_itemService work_itemservice;
                    global cn.ibizlab.plm.core.base.service.Iextend_storageService extend_storageservice;
        global cn.ibizlab.plm.core.base.service.IworkloadService iBzSysWorkloadDefaultService;
        global cn.ibizlab.plm.util.security.AuthenticationUser curuser;


    no-loop

            //逻辑处理节点[开始]
            rule "begin"
            ruleflow-group "workloadsave_p_workloadbegin"
            when
            then
            end

            //逻辑处理节点[更新父工时]
            rule "debugparam1"
            ruleflow-group "workloadsave_p_workloaddebugparam1"
            when
            then
                        update(workloadsave_p_workloaddefault);//更新fact中变量值
                        update(workloadsave_p_workloadactual);//更新fact中变量值
                        update(workloadsave_p_workloadidea);//更新fact中变量值
                        update(workloadsave_p_workloadremaining);//更新fact中变量值
                        update(workloadsave_p_workloadtest_case);//更新fact中变量值
                        update(workloadsave_p_workloadu_workload);//更新fact中变量值
                        update(workloadsave_p_workloadwork_item);//更新fact中变量值
            end

            //逻辑处理节点[绑定所属对象标识]
            rule "prepareparam2"
            ruleflow-group "workloadsave_p_workloadprepareparam2"
            when
            then
                            workloadsave_p_workloadactual.set("decimalvalue",workloadsave_p_workloaddefault.get("u_actual_workload"));
                            workloadsave_p_workloadremaining.set("decimalvalue",workloadsave_p_workloaddefault.get("remaining_workload"));
                            workloadsave_p_workloadactual.set("ownerid",workloadsave_p_workloaddefault.get("principalid"));
                            workloadsave_p_workloadremaining.set("name","REMAINING_WORKLOAD");
                            workloadsave_p_workloadremaining.set("ownerid",workloadsave_p_workloaddefault.get("principalid"));
                            workloadsave_p_workloadremaining.set("decimalvalue",workloadsave_p_workloaddefault.get("remaining_workload"));
                            workloadsave_p_workloadwork_item.set("id",workloadsave_p_workloaddefault.get("principalid"));
                            workloadsave_p_workloadidea.set("id",workloadsave_p_workloaddefault.get("principalid"));
                        update(workloadsave_p_workloaddefault);//更新fact中变量值
                        update(workloadsave_p_workloadactual);//更新fact中变量值
                        update(workloadsave_p_workloadidea);//更新fact中变量值
                        update(workloadsave_p_workloadremaining);//更新fact中变量值
                        update(workloadsave_p_workloadtest_case);//更新fact中变量值
                        update(workloadsave_p_workloadu_workload);//更新fact中变量值
                        update(workloadsave_p_workloadwork_item);//更新fact中变量值
            end

            //逻辑处理节点[获取工作项]
            rule "deaction4"
            ruleflow-group "workloadsave_p_workloaddeaction4"
            when
            then
                            cn.ibizlab.plm.util.helper.CachedBeanCopier.copy(work_itemservice.get(workloadsave_p_workloadwork_item.getId()),workloadsave_p_workloadwork_item);
                        update(workloadsave_p_workloaddefault);//更新fact中变量值
                        update(workloadsave_p_workloadactual);//更新fact中变量值
                        update(workloadsave_p_workloadidea);//更新fact中变量值
                        update(workloadsave_p_workloadremaining);//更新fact中变量值
                        update(workloadsave_p_workloadtest_case);//更新fact中变量值
                        update(workloadsave_p_workloadu_workload);//更新fact中变量值
                        update(workloadsave_p_workloadwork_item);//更新fact中变量值
            end

            //逻辑处理节点[工作项和项目信息属性]
            rule "prepareparam3"
            ruleflow-group "workloadsave_p_workloadprepareparam3"
            when
            then
                            workloadsave_p_workloaddefault.set("identifier",workloadsave_p_workloadwork_item.get("identifier"));
                            workloadsave_p_workloadactual.set("name","ACTUAL_WORKLOAD");
                            workloadsave_p_workloadactual.set("ownertype","WORK_ITEM");
                            workloadsave_p_workloadremaining.set("ownertype","WORK_ITEM");
                            workloadsave_p_workloaddefault.set("principaltype","WORK_ITEM");
                            workloadsave_p_workloaddefault.set("recentparent",workloadsave_p_workloadwork_item.get("projectid"));
                            workloadsave_p_workloaddefault.set("recentparentidentifier",workloadsave_p_workloadwork_item.get("projectidentifier"));
                            workloadsave_p_workloaddefault.set("recentparentname",workloadsave_p_workloadwork_item.get("projectname"));
                            workloadsave_p_workloaddefault.set("name",workloadsave_p_workloadwork_item.get("title"));
                        update(workloadsave_p_workloaddefault);//更新fact中变量值
                        update(workloadsave_p_workloadactual);//更新fact中变量值
                        update(workloadsave_p_workloadidea);//更新fact中变量值
                        update(workloadsave_p_workloadremaining);//更新fact中变量值
                        update(workloadsave_p_workloadtest_case);//更新fact中变量值
                        update(workloadsave_p_workloadu_workload);//更新fact中变量值
                        update(workloadsave_p_workloadwork_item);//更新fact中变量值
            end

            //逻辑处理节点[更新剩余工时]
            rule "deaction6"
            ruleflow-group "workloadsave_p_workloaddeaction6"
            when
            then
                        extend_storageservice.save(workloadsave_p_workloadremaining);
                        update(workloadsave_p_workloaddefault);//更新fact中变量值
                        update(workloadsave_p_workloadactual);//更新fact中变量值
                        update(workloadsave_p_workloadidea);//更新fact中变量值
                        update(workloadsave_p_workloadremaining);//更新fact中变量值
                        update(workloadsave_p_workloadtest_case);//更新fact中变量值
                        update(workloadsave_p_workloadu_workload);//更新fact中变量值
                        update(workloadsave_p_workloadwork_item);//更新fact中变量值
            end

            //逻辑处理节点[更新实际工时]
            rule "deaction7"
            ruleflow-group "workloadsave_p_workloaddeaction7"
            when
            then
                        extend_storageservice.save(workloadsave_p_workloadactual);
                        update(workloadsave_p_workloaddefault);//更新fact中变量值
                        update(workloadsave_p_workloadactual);//更新fact中变量值
                        update(workloadsave_p_workloadidea);//更新fact中变量值
                        update(workloadsave_p_workloadremaining);//更新fact中变量值
                        update(workloadsave_p_workloadtest_case);//更新fact中变量值
                        update(workloadsave_p_workloadu_workload);//更新fact中变量值
                        update(workloadsave_p_workloadwork_item);//更新fact中变量值
            end

            //逻辑处理节点[自动计算父工时]
            rule "delogic1"
            ruleflow-group "workloadsave_p_workloaddelogic1"
            when
            then
                        update(workloadsave_p_workloaddefault);//更新fact中变量值
                        update(workloadsave_p_workloadactual);//更新fact中变量值
                        update(workloadsave_p_workloadidea);//更新fact中变量值
                        update(workloadsave_p_workloadremaining);//更新fact中变量值
                        update(workloadsave_p_workloadtest_case);//更新fact中变量值
                        update(workloadsave_p_workloadu_workload);//更新fact中变量值
                        update(workloadsave_p_workloadwork_item);//更新fact中变量值
            end