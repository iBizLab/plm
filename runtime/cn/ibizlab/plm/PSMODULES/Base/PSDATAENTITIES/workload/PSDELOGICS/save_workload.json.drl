package cn.ibizlab.plm.base.logic.workloadlogic.save_workload;
        import java.util.Map;
        import java.util.HashMap;
        import com.alibaba.fastjson.JSONObject;
        import org.springframework.util.StringUtils;
        import org.springframework.util.ObjectUtils;
        import cn.ibizlab.plm.util.errors.BadRequestAlertException;
                global cn.ibizlab.plm.core.base.domain.workload workloadsave_workloaddefault;
                global cn.ibizlab.plm.core.base.domain.extend_storage workloadsave_workloadactual;
                global cn.ibizlab.plm.core.prodmgmt.domain.idea workloadsave_workloadidea;
                global cn.ibizlab.plm.core.base.domain.extend_storage workloadsave_workloadremaining;
                global cn.ibizlab.plm.core.testmgmt.domain.test_case workloadsave_workloadtest_case;
                global cn.ibizlab.plm.core.projmgmt.domain.work_item workloadsave_workloadwork_item;
                    global cn.ibizlab.plm.core.prodmgmt.service.IideaService ideaservice;
                    global cn.ibizlab.plm.core.projmgmt.service.Iwork_itemService work_itemservice;
                    global cn.ibizlab.plm.core.testmgmt.service.Itest_caseService test_caseservice;
                    global cn.ibizlab.plm.core.base.service.IworkloadService workloadservice;
                    global cn.ibizlab.plm.core.base.service.Iextend_storageService extend_storageservice;
        global cn.ibizlab.plm.core.base.service.IworkloadService iBzSysWorkloadDefaultService;
        global cn.ibizlab.plm.util.security.AuthenticationUser curuser;


    no-loop

            //逻辑处理节点[开始]
            rule "begin"
            ruleflow-group "workloadsave_workloadbegin"
            when
            then
            end

            //逻辑处理节点[绑定所属对象标识]
            rule "prepareparam2"
            ruleflow-group "workloadsave_workloadprepareparam2"
            when
            then
                            workloadsave_workloadtest_case.set("id",workloadsave_workloaddefault.get("principalid"));
                            workloadsave_workloadactual.set("ownerid",workloadsave_workloaddefault.get("principalid"));
                            workloadsave_workloadactual.set("ownerid",workloadsave_workloaddefault.get("principalid"));
                            workloadsave_workloadremaining.set("name","REMAINING_WORKLOAD");
                            workloadsave_workloadremaining.set("ownerid",workloadsave_workloaddefault.get("principalid"));
                            workloadsave_workloadremaining.set("decimalvalue",workloadsave_workloaddefault.get("remaining_workload"));
                            workloadsave_workloadwork_item.set("id",workloadsave_workloaddefault.get("principalid"));
                            workloadsave_workloadidea.set("id",workloadsave_workloaddefault.get("principalid"));
                        update(workloadsave_workloaddefault);//更新fact中变量值
                        update(workloadsave_workloadactual);//更新fact中变量值
                        update(workloadsave_workloadidea);//更新fact中变量值
                        update(workloadsave_workloadremaining);//更新fact中变量值
                        update(workloadsave_workloadtest_case);//更新fact中变量值
                        update(workloadsave_workloadwork_item);//更新fact中变量值
            end

            //逻辑处理节点[获取需求]
            rule "deaction3"
            ruleflow-group "workloadsave_workloaddeaction3"
            when
            then
                            cn.ibizlab.plm.util.helper.CachedBeanCopier.copy(ideaservice.get(workloadsave_workloadidea.getId()),workloadsave_workloadidea);
                        update(workloadsave_workloaddefault);//更新fact中变量值
                        update(workloadsave_workloadactual);//更新fact中变量值
                        update(workloadsave_workloadidea);//更新fact中变量值
                        update(workloadsave_workloadremaining);//更新fact中变量值
                        update(workloadsave_workloadtest_case);//更新fact中变量值
                        update(workloadsave_workloadwork_item);//更新fact中变量值
            end

            //逻辑处理节点[获取工作项]
            rule "deaction4"
            ruleflow-group "workloadsave_workloaddeaction4"
            when
            then
                            cn.ibizlab.plm.util.helper.CachedBeanCopier.copy(work_itemservice.get(workloadsave_workloadwork_item.getId()),workloadsave_workloadwork_item);
                        update(workloadsave_workloaddefault);//更新fact中变量值
                        update(workloadsave_workloadactual);//更新fact中变量值
                        update(workloadsave_workloadidea);//更新fact中变量值
                        update(workloadsave_workloadremaining);//更新fact中变量值
                        update(workloadsave_workloadtest_case);//更新fact中变量值
                        update(workloadsave_workloadwork_item);//更新fact中变量值
            end

            //逻辑处理节点[获取测试用例]
            rule "deaction5"
            ruleflow-group "workloadsave_workloaddeaction5"
            when
            then
                            cn.ibizlab.plm.util.helper.CachedBeanCopier.copy(test_caseservice.get(workloadsave_workloadtest_case.getId()),workloadsave_workloadtest_case);
                        update(workloadsave_workloaddefault);//更新fact中变量值
                        update(workloadsave_workloadactual);//更新fact中变量值
                        update(workloadsave_workloadidea);//更新fact中变量值
                        update(workloadsave_workloadremaining);//更新fact中变量值
                        update(workloadsave_workloadtest_case);//更新fact中变量值
                        update(workloadsave_workloadwork_item);//更新fact中变量值
            end

            //逻辑处理节点[工作项和项目信息属性]
            rule "prepareparam3"
            ruleflow-group "workloadsave_workloadprepareparam3"
            when
            then
                            workloadsave_workloaddefault.set("identifier",workloadsave_workloadwork_item.get("identifier"));
                            workloadsave_workloadactual.set("name","ACTUAL_WORKLOAD");
                            workloadsave_workloadactual.set("ownertype","WORK_ITEM");
                            workloadsave_workloadremaining.set("ownertype","WORK_ITEM");
                            workloadsave_workloaddefault.set("principaltype","WORK_ITEM");
                            workloadsave_workloaddefault.set("recentparent",workloadsave_workloadwork_item.get("projectid"));
                            workloadsave_workloaddefault.set("recentparentidentifier",workloadsave_workloadwork_item.get("projectidentifier"));
                            workloadsave_workloaddefault.set("recentparentname",workloadsave_workloadwork_item.get("projectname"));
                            workloadsave_workloaddefault.set("name",workloadsave_workloadwork_item.get("title"));
                        update(workloadsave_workloaddefault);//更新fact中变量值
                        update(workloadsave_workloadactual);//更新fact中变量值
                        update(workloadsave_workloadidea);//更新fact中变量值
                        update(workloadsave_workloadremaining);//更新fact中变量值
                        update(workloadsave_workloadtest_case);//更新fact中变量值
                        update(workloadsave_workloadwork_item);//更新fact中变量值
            end

            //逻辑处理节点[产品需求和产品信息属性]
            rule "prepareparam4"
            ruleflow-group "workloadsave_workloadprepareparam4"
            when
            then
                            workloadsave_workloaddefault.set("identifier",workloadsave_workloadidea.get("identifier"));
                            workloadsave_workloadactual.set("ownertype","IDEA");
                            workloadsave_workloadactual.set("name","ACTUAL_WORKLOAD");
                            workloadsave_workloadremaining.set("ownertype","IDEA");
                            workloadsave_workloaddefault.set("recentparent",workloadsave_workloadidea.get("productid"));
                            workloadsave_workloaddefault.set("recentparentname",workloadsave_workloadidea.get("productname"));
                            workloadsave_workloaddefault.set("recentparentidentifier",workloadsave_workloadidea.get("productidentifier"));
                            workloadsave_workloaddefault.set("name",workloadsave_workloadidea.get("title"));
                            workloadsave_workloaddefault.set("principaltype","IDEA");
                        update(workloadsave_workloaddefault);//更新fact中变量值
                        update(workloadsave_workloadactual);//更新fact中变量值
                        update(workloadsave_workloadidea);//更新fact中变量值
                        update(workloadsave_workloadremaining);//更新fact中变量值
                        update(workloadsave_workloadtest_case);//更新fact中变量值
                        update(workloadsave_workloadwork_item);//更新fact中变量值
            end

            //逻辑处理节点[测试用例和测试库信息属性]
            rule "prepareparam5"
            ruleflow-group "workloadsave_workloadprepareparam5"
            when
            then
                            workloadsave_workloaddefault.set("identifier",workloadsave_workloadtest_case.get("identifier"));
                            workloadsave_workloadactual.set("ownertype","TEST_CASE");
                            workloadsave_workloadactual.set("name","ACTUAL_WORKLOAD");
                            workloadsave_workloadremaining.set("ownertype","TEST_CASE");
                            workloadsave_workloaddefault.set("recentparentidentifier",workloadsave_workloadtest_case.get("libraryidentifier"));
                            workloadsave_workloaddefault.set("recentparent",workloadsave_workloadtest_case.get("testlibraryid"));
                            workloadsave_workloaddefault.set("name",workloadsave_workloadtest_case.get("testlibraryname"));
                            workloadsave_workloaddefault.set("name",workloadsave_workloadtest_case.get("title"));
                            workloadsave_workloaddefault.set("principaltype","TEST_CASE");
                        update(workloadsave_workloaddefault);//更新fact中变量值
                        update(workloadsave_workloadactual);//更新fact中变量值
                        update(workloadsave_workloadidea);//更新fact中变量值
                        update(workloadsave_workloadremaining);//更新fact中变量值
                        update(workloadsave_workloadtest_case);//更新fact中变量值
                        update(workloadsave_workloadwork_item);//更新fact中变量值
            end

            //逻辑处理节点[保存工时]
            rule "deaction2"
            ruleflow-group "workloadsave_workloaddeaction2"
            when
            then
                        workloadservice.save(workloadsave_workloaddefault);
                        update(workloadsave_workloaddefault);//更新fact中变量值
                        update(workloadsave_workloadactual);//更新fact中变量值
                        update(workloadsave_workloadidea);//更新fact中变量值
                        update(workloadsave_workloadremaining);//更新fact中变量值
                        update(workloadsave_workloadtest_case);//更新fact中变量值
                        update(workloadsave_workloadwork_item);//更新fact中变量值
            end

            //逻辑处理节点[更新剩余工时]
            rule "deaction6"
            ruleflow-group "workloadsave_workloaddeaction6"
            when
            then
                        extend_storageservice.save(workloadsave_workloadremaining);
                        update(workloadsave_workloaddefault);//更新fact中变量值
                        update(workloadsave_workloadactual);//更新fact中变量值
                        update(workloadsave_workloadidea);//更新fact中变量值
                        update(workloadsave_workloadremaining);//更新fact中变量值
                        update(workloadsave_workloadtest_case);//更新fact中变量值
                        update(workloadsave_workloadwork_item);//更新fact中变量值
            end

            //逻辑处理节点[合计已登记工时]
            rule "rawsqlcall1"
            ruleflow-group "workloadsave_workloadrawsqlcall1"
            when
            then
    Map param =new HashMap();
        param.put("param0",workloadsave_workloadactual.get("ownerid"));
        param.put("param1",workloadsave_workloadactual.get("ownertype"));
    String strSql="select sum(DURATION) as `DECIMAL_VALUE` from `workload` where PRINCIPAL_ID = #{et.param0} and PRINCIPAL_TYPE = #{et.param1}";
                        java.util.List<JSONObject> entities=iBzSysWorkloadDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    workloadsave_workloadactual.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(workloadsave_workloaddefault);//更新fact中变量值
                        update(workloadsave_workloadactual);//更新fact中变量值
                        update(workloadsave_workloadidea);//更新fact中变量值
                        update(workloadsave_workloadremaining);//更新fact中变量值
                        update(workloadsave_workloadtest_case);//更新fact中变量值
                        update(workloadsave_workloadwork_item);//更新fact中变量值
            end

            //逻辑处理节点[更新实际工时]
            rule "deaction7"
            ruleflow-group "workloadsave_workloaddeaction7"
            when
            then
                        extend_storageservice.save(workloadsave_workloadactual);
                        update(workloadsave_workloaddefault);//更新fact中变量值
                        update(workloadsave_workloadactual);//更新fact中变量值
                        update(workloadsave_workloadidea);//更新fact中变量值
                        update(workloadsave_workloadremaining);//更新fact中变量值
                        update(workloadsave_workloadtest_case);//更新fact中变量值
                        update(workloadsave_workloadwork_item);//更新fact中变量值
            end

            //逻辑处理节点[工时为0时置为null]
            rule "prepareparam6"
            ruleflow-group "workloadsave_workloadprepareparam6"
            when
            then
                                workloadsave_workloadactual.set("decimalvalue",null);
                        update(workloadsave_workloaddefault);//更新fact中变量值
                        update(workloadsave_workloadactual);//更新fact中变量值
                        update(workloadsave_workloadidea);//更新fact中变量值
                        update(workloadsave_workloadremaining);//更新fact中变量值
                        update(workloadsave_workloadtest_case);//更新fact中变量值
                        update(workloadsave_workloadwork_item);//更新fact中变量值
            end