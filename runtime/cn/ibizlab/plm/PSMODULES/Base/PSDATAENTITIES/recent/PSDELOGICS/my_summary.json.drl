package cn.ibizlab.plm.base.logic.recentlogic.my_summary;
        import java.util.Map;
        import java.util.HashMap;
        import com.alibaba.fastjson.JSONObject;
        import org.springframework.util.StringUtils;
        import org.springframework.util.ObjectUtils;
        import cn.ibizlab.plm.util.errors.BadRequestAlertException;
                global cn.ibizlab.plm.core.base.domain.recent recentmy_summarydefault;
                global java.util.Map recentmy_summaryresult;
        global cn.ibizlab.plm.core.base.service.IrecentService iBzSysRecentDefaultService;
        global cn.ibizlab.plm.util.security.AuthenticationUser curuser;


    no-loop

            //逻辑处理节点[开始]
            rule "begin"
            ruleflow-group "recentmy_summarybegin"
            when
            then
            end

            //逻辑处理节点[结束]
            rule "end1"
            ruleflow-group "recentmy_summaryend1"
            when
            then
                        update(recentmy_summarydefault);//更新fact中变量值
                        update(recentmy_summaryresult);//更新fact中变量值
            end

            //逻辑处理节点[获取工作项数、任务数、bug数]
            rule "rawsqlcall1"
            ruleflow-group "recentmy_summaryrawsqlcall1"
            when
            then
    Map param =new HashMap();
        param.put("param0",curuser.getSessionParams().get("srfpersonid"));
        param.put("param1",curuser.getSessionParams().get("srfpersonid"));
    String strSql="select sum(if(t4.`GROUP` <> 'task' and t4.`GROUP` <> 'bug', 1, 0)) other_item_num,        sum(if(t4.`GROUP` = 'task', 1, 0))                          task_num,        sum(if(t4.`GROUP` = 'bug', 1, 0))                           bug_num from work_item t1          inner join work_item_state t2 on t1.STATE = t2.ID and t2.TYPE = 'in_progress'          inner join project t3 on t1.PROJECT_ID = t3.ID and t3.IS_DELETED = 0 and t3.IS_ARCHIVED = 0          inner join work_item_type t4 on t4.ID = t1.WORK_ITEM_TYPE_ID where (t1.IS_ARCHIVED = 0     and t1.IS_DELETED = 0)   and (t1.ASSIGNEE_ID = #{et.param0}     or exists (select 1                from executor t5                where t1.id = t5.owner_id                  and t5.owner_type = 'WORK_ITEM'                  and t5.owner_subtype = 'WORK_ITEM'                  and t5.user_id = #{et.param1}))";
                        java.util.List<JSONObject> entities=iBzSysRecentDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                recentmy_summaryresult.putAll(entity);
                            }
                        update(recentmy_summarydefault);//更新fact中变量值
                        update(recentmy_summaryresult);//更新fact中变量值
            end

            //逻辑处理节点[获取产品需求数]
            rule "rawsqlcall2"
            ruleflow-group "recentmy_summaryrawsqlcall2"
            when
            then
    Map param =new HashMap();
        param.put("param0",curuser.getSessionParams().get("srfpersonid"));
    String strSql="select count(1) idea_num from idea t1          inner join dictionary t2 on t1.STATE = t2.VAL and t2.CATALOG = 'idea_state' and t2.type = 'in_progress'          inner join product t3 on t1.PRODUCT_ID = t3.ID and t3.IS_ARCHIVED = 0 and t3.IS_DELETED = 0 where t1.ASSIGNEE_ID = #{et.param0}   and t1.IS_DELETED = 0   and t1.IS_ARCHIVED = 0";
                        java.util.List<JSONObject> entities=iBzSysRecentDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                recentmy_summaryresult.putAll(entity);
                            }
                        update(recentmy_summarydefault);//更新fact中变量值
                        update(recentmy_summaryresult);//更新fact中变量值
            end

            //逻辑处理节点[获取产品工单数]
            rule "rawsqlcall4"
            ruleflow-group "recentmy_summaryrawsqlcall4"
            when
            then
    Map param =new HashMap();
        param.put("param0",curuser.getSessionParams().get("srfpersonid"));
    String strSql="select count(1) ticket_num from ticket t1          inner join dictionary t2 on t1.STATE = t2.VAL and t2.CATALOG = 'ticket_state' and t2.type = 'in_progress'          inner join product t3 on t1.PRODUCT_ID = t3.ID and t3.IS_ARCHIVED = 0 and t3.IS_DELETED = 0 where t1.ASSIGNEE_ID = #{et.param0}   and t1.IS_ARCHIVED = 0   and t1.IS_DELETED = 0";
                        java.util.List<JSONObject> entities=iBzSysRecentDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                recentmy_summaryresult.putAll(entity);
                            }
                        update(recentmy_summarydefault);//更新fact中变量值
                        update(recentmy_summaryresult);//更新fact中变量值
            end

            //逻辑处理节点[获取测试用例数]
            rule "rawsqlcall3"
            ruleflow-group "recentmy_summaryrawsqlcall3"
            when
            then
    Map param =new HashMap();
        param.put("param0",curuser.getSessionParams().get("srfpersonid"));
    String strSql="select count(1) case_num from test_case t1          inner join library t2 on t1.TEST_LIBRARY_ID = t2.ID and t2.IS_DELETED = 0 and t2.IS_ARCHIVED = 0 where t1.MAINTENANCE_ID = #{et.param0}   and t1.IS_DELETED = 0   and t1.IS_ARCHIVED = 0   and t1.STATE = '10'";
                        java.util.List<JSONObject> entities=iBzSysRecentDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                recentmy_summaryresult.putAll(entity);
                            }
                        update(recentmy_summarydefault);//更新fact中变量值
                        update(recentmy_summaryresult);//更新fact中变量值
            end