package cn.ibizlab.plm.prodmgmt.logic.idealogic.update_idea_progress;
        import java.util.Map;
        import java.util.HashMap;
        import com.alibaba.fastjson.JSONObject;
        import org.springframework.util.StringUtils;
        import org.springframework.util.ObjectUtils;
        import cn.ibizlab.plm.util.errors.BadRequestAlertException;
                global cn.ibizlab.plm.core.prodmgmt.domain.idea ideaupdate_idea_progressdefault;
                global cn.ibizlab.plm.core.prodmgmt.domain.idea ideaupdate_idea_progressidea;
                    global cn.ibizlab.plm.core.prodmgmt.service.IideaService ideaservice;
        global cn.ibizlab.plm.core.prodmgmt.service.IideaService iBzSysIdeaDefaultService;
        global cn.ibizlab.plm.util.security.AuthenticationUser curuser;


    no-loop

            //逻辑处理节点[开始]
            rule "begin"
            ruleflow-group "ideaupdate_idea_progressbegin"
            when
            then
            end

            //逻辑处理节点[获取进度]
            rule "rawsqlcall1"
            ruleflow-group "ideaupdate_idea_progressrawsqlcall1"
            when
            then
    Map param =new HashMap();
        param.put("param0",ideaupdate_idea_progressdefault.get("id"));
    String strSql="select cast((sum(if(t2.TYPE = 'completed', 1, 0)) * 100) / count(1) as decimal(10, 2)) progress from work_item t1          inner join work_item_state t2 on t1.STATE = t2.ID where t1.id in (select target_id                 from relation                 where PRINCIPAL_ID = #{et.param0}                   and PRINCIPAL_TYPE = 'idea'                   and TARGET_TYPE = 'work_item')";
                        java.util.List<JSONObject> entities=iBzSysIdeaDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    cn.ibizlab.plm.core.prodmgmt.domain.idea targetEntity =new cn.ibizlab.plm.core.prodmgmt.domain.idea();
                                    for (Map.Entry entry : entity.entrySet()) {
                                    targetEntity.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                                    org.springframework.cglib.beans.BeanCopier copier= org.springframework.cglib.beans.BeanCopier.create(targetEntity.getClass(),ideaupdate_idea_progressidea.getClass(), false);
                                    copier.copy(targetEntity,ideaupdate_idea_progressidea,null);
                            }
                        update(ideaupdate_idea_progressdefault);//更新fact中变量值
                        update(ideaupdate_idea_progressidea);//更新fact中变量值
            end

            //逻辑处理节点[设置id]
            rule "prepareparam1"
            ruleflow-group "ideaupdate_idea_progressprepareparam1"
            when
            then
                            ideaupdate_idea_progressidea.set("id",ideaupdate_idea_progressdefault.get("id"));
                        update(ideaupdate_idea_progressdefault);//更新fact中变量值
                        update(ideaupdate_idea_progressidea);//更新fact中变量值
            end

            //逻辑处理节点[更新]
            rule "deaction1"
            ruleflow-group "ideaupdate_idea_progressdeaction1"
            when
            then
                        ideaservice.save(ideaupdate_idea_progressidea);
                        update(ideaupdate_idea_progressdefault);//更新fact中变量值
                        update(ideaupdate_idea_progressidea);//更新fact中变量值
            end