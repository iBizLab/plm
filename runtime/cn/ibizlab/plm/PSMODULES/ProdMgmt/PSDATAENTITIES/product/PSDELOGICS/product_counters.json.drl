package cn.ibizlab.plm.prodmgmt.logic.productlogic.product_counters;
        import java.util.Map;
        import java.util.HashMap;
        import com.alibaba.fastjson.JSONObject;
        import org.springframework.util.StringUtils;
        import org.springframework.util.ObjectUtils;
        import cn.ibizlab.plm.util.errors.BadRequestAlertException;
                global cn.ibizlab.plm.core.prodmgmt.domain.product productproduct_countersdefault;
        global cn.ibizlab.plm.core.prodmgmt.service.IproductService iBzSysProductDefaultService;
        global cn.ibizlab.plm.util.security.AuthenticationUser curuser;


    no-loop

            //逻辑处理节点[开始]
            rule "begin"
            ruleflow-group "productproduct_countersbegin"
            when
            then
            end

            //逻辑处理节点[结束]
            rule "end1"
            ruleflow-group "productproduct_countersend1"
            when
            then
                        update(productproduct_countersdefault);//更新fact中变量值
            end

            //逻辑处理节点[查询产品关联需求数量]
            rule "rawsqlcall1"
            ruleflow-group "productproduct_countersrawsqlcall1"
            when
            then
    Map param =new HashMap();
        param.put("param0",productproduct_countersdefault.get("id"));
    String strSql="-- 产品关联需求 SELECT 	count( t.id ) AS idea_total  FROM 	idea t  WHERE 	t.product_id = #{et.param0}";
                        java.util.List<JSONObject> entities=iBzSysProductDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    productproduct_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(productproduct_countersdefault);//更新fact中变量值
            end

            //逻辑处理节点[排期]
            rule "rawsqlcall2"
            ruleflow-group "productproduct_countersrawsqlcall2"
            when
            then
    Map param =new HashMap();
        param.put("param0",productproduct_countersdefault.get("id"));
    String strSql="-- 需求 SELECT 	count( t.id ) AS product_plan_total  FROM 	product_plan t  WHERE 	t.product_id = #{et.param0}";
                        java.util.List<JSONObject> entities=iBzSysProductDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    productproduct_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(productproduct_countersdefault);//更新fact中变量值
            end

            //逻辑处理节点[工单]
            rule "rawsqlcall3"
            ruleflow-group "productproduct_countersrawsqlcall3"
            when
            then
    Map param =new HashMap();
        param.put("param0",productproduct_countersdefault.get("id"));
    String strSql="-- 工单 SELECT 	count( t.id ) AS ticket_total  FROM 	ticket t  WHERE 	t.product_id = #{et.param0}";
                        java.util.List<JSONObject> entities=iBzSysProductDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    productproduct_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(productproduct_countersdefault);//更新fact中变量值
            end

            //逻辑处理节点[客户]
            rule "rawsqlcall4"
            ruleflow-group "productproduct_countersrawsqlcall4"
            when
            then
    Map param =new HashMap();
        param.put("param0",productproduct_countersdefault.get("id"));
    String strSql="-- 工作项 SELECT 	count( t.id ) AS customer_total  FROM 	customer t  WHERE 	t.product_id = #{et.param0}";
                        java.util.List<JSONObject> entities=iBzSysProductDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    productproduct_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(productproduct_countersdefault);//更新fact中变量值
            end

            //逻辑处理节点[页面]
            rule "rawsqlcall5"
            ruleflow-group "productproduct_countersrawsqlcall5"
            when
            then
    Map param =new HashMap();
        param.put("param0",productproduct_countersdefault.get("id"));
    String strSql="SELECT 	count( t.id ) AS space_total FROM 	`space` t  WHERE 	EXISTS ( 	SELECT 		*  	FROM 		`RELATION` t11  	WHERE 		t.`ID` = t11.`TARGET_ID`  		AND ( t11.`PRINCIPAL_ID` = #{et.param0} AND t11.`TARGET_TYPE` = 'space' AND t11.`PRINCIPAL_TYPE` = 'product' )  	)  	AND  t.`IS_DELETED` = 0";
                        java.util.List<JSONObject> entities=iBzSysProductDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    productproduct_countersdefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(productproduct_countersdefault);//更新fact中变量值
            end