package cn.ibizlab.plm.base.logic.recentlogic.my_created_entry;
        import java.util.Map;
        import java.util.HashMap;
        import com.alibaba.fastjson.JSONObject;
        import org.springframework.util.StringUtils;
        import org.springframework.util.ObjectUtils;
        import cn.ibizlab.plm.util.errors.BadRequestAlertException;
                global cn.ibizlab.plm.core.base.domain.recent recentmy_created_entrydefault;
                global java.util.Map recentmy_created_entryfilter;
                global java.util.Map recentmy_created_entrymy_assignee;
                global java.util.Map recentmy_created_entrytemp_obj;
        global cn.ibizlab.plm.core.base.service.IrecentService iBzSysRecentDefaultService;
        global cn.ibizlab.plm.util.security.AuthenticationUser curuser;


    no-loop

            //逻辑处理节点[开始]
            rule "begin"
            ruleflow-group "recentmy_created_entrybegin"
            when
            then
            end

            //逻辑处理节点[结束]
            rule "end1"
            ruleflow-group "recentmy_created_entryend1"
            when
            then
                        update(recentmy_created_entrydefault);//更新fact中变量值
                        update(recentmy_created_entryfilter);//更新fact中变量值
                        update(recentmy_created_entrymy_assignee);//更新fact中变量值
                        update(recentmy_created_entrytemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[我创建的工作项]
            rule "rawsqlcall1"
            ruleflow-group "recentmy_created_entryrawsqlcall1"
            when
            then
    Map param =new HashMap();
        param.put("param0",curuser.getSessionParams().get("srfpersonid"));
    String strSql="SELECT count(t.id) as my_created_work_item FROM work_item t where  t.CREATE_MAN = #{et.param0}";
                        java.util.List<JSONObject> entities=iBzSysRecentDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    recentmy_created_entrydefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(recentmy_created_entrydefault);//更新fact中变量值
                        update(recentmy_created_entryfilter);//更新fact中变量值
                        update(recentmy_created_entrymy_assignee);//更新fact中变量值
                        update(recentmy_created_entrytemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[我创建的产品需求]
            rule "rawsqlcall2"
            ruleflow-group "recentmy_created_entryrawsqlcall2"
            when
            then
    Map param =new HashMap();
        param.put("param0",curuser.getSessionParams().get("srfpersonid"));
    String strSql="-- 我负责的产品需求 SELECT count(t.id) as my_created_idea FROM idea t where t.CREATE_MAN = #{et.param0}";
                        java.util.List<JSONObject> entities=iBzSysRecentDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    recentmy_created_entrydefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(recentmy_created_entrydefault);//更新fact中变量值
                        update(recentmy_created_entryfilter);//更新fact中变量值
                        update(recentmy_created_entrymy_assignee);//更新fact中变量值
                        update(recentmy_created_entrytemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[我创建的工单]
            rule "rawsqlcall3"
            ruleflow-group "recentmy_created_entryrawsqlcall3"
            when
            then
    Map param =new HashMap();
        param.put("param0",curuser.getSessionParams().get("srfpersonid"));
    String strSql="-- 我负责的工单 SELECT count(t.id) as my_created_ticket FROM ticket t where  t.CREATE_MAN = #{et.param0}";
                        java.util.List<JSONObject> entities=iBzSysRecentDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    recentmy_created_entrydefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(recentmy_created_entrydefault);//更新fact中变量值
                        update(recentmy_created_entryfilter);//更新fact中变量值
                        update(recentmy_created_entrymy_assignee);//更新fact中变量值
                        update(recentmy_created_entrytemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[我创建的测试用例]
            rule "rawsqlcall4"
            ruleflow-group "recentmy_created_entryrawsqlcall4"
            when
            then
    Map param =new HashMap();
        param.put("param0",curuser.getSessionParams().get("srfpersonid"));
    String strSql="-- 我负责的测试用例 SELECT count(t.id) as my_created_test_case FROM test_case t where t.CREATE_MAN = #{et.param0}";
                        java.util.List<JSONObject> entities=iBzSysRecentDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    recentmy_created_entrydefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(recentmy_created_entrydefault);//更新fact中变量值
                        update(recentmy_created_entryfilter);//更新fact中变量值
                        update(recentmy_created_entrymy_assignee);//更新fact中变量值
                        update(recentmy_created_entrytemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[求和]
            rule "rawsqlcall5"
            ruleflow-group "recentmy_created_entryrawsqlcall5"
            when
            then
    Map param =new HashMap();
        param.put("param0",curuser.getSessionParams().get("srfpersonid"));
        param.put("param1",curuser.getSessionParams().get("srfpersonid"));
        param.put("param2",curuser.getSessionParams().get("srfpersonid"));
        param.put("param3",curuser.getSessionParams().get("srfpersonid"));
    String strSql="SELECT (     (SELECT count(id) FROM work_item WHERE CREATE_MAN = #{et.param0}) +     (SELECT count(id) FROM idea WHERE CREATE_MAN = #{et.param1}) +     (SELECT count(id) FROM ticket WHERE CREATE_MAN = #{et.param2}) +     (SELECT count(id) FROM test_case WHERE CREATE_MAN = #{et.param3}) ) AS my_created_total";
                        java.util.List<JSONObject> entities=iBzSysRecentDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    recentmy_created_entrydefault.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(recentmy_created_entrydefault);//更新fact中变量值
                        update(recentmy_created_entryfilter);//更新fact中变量值
                        update(recentmy_created_entrymy_assignee);//更新fact中变量值
                        update(recentmy_created_entrytemp_obj);//更新fact中变量值
            end