package cn.ibizlab.plm.testmgmt.logic.test_planlogic.test_plan_report_survey;
        import java.util.Map;
        import java.util.HashMap;
        import com.alibaba.fastjson.JSONObject;
        import org.springframework.util.StringUtils;
        import org.springframework.util.ObjectUtils;
        import cn.ibizlab.plm.util.errors.BadRequestAlertException;
                global cn.ibizlab.plm.core.testmgmt.domain.test_plan test_plantest_plan_report_surveydefault;
                global java.util.Map test_plantest_plan_report_surveyplan_info;
                global java.util.Map test_plantest_plan_report_surveyresult;
                    global cn.ibizlab.plm.core.testmgmt.service.Itest_planService test_planservice;
        global cn.ibizlab.plm.core.testmgmt.service.Itest_planService iBzSysTest_planDefaultService;
        global cn.ibizlab.plm.util.security.AuthenticationUser curuser;


    no-loop

            //逻辑处理节点[开始]
            rule "begin"
            ruleflow-group "test_plantest_plan_report_surveybegin"
            when
            then
            end

            //逻辑处理节点[结束]
            rule "end1"
            ruleflow-group "test_plantest_plan_report_surveyend1"
            when
            then
                        update(test_plantest_plan_report_surveydefault);//更新fact中变量值
                        update(test_plantest_plan_report_surveyplan_info);//更新fact中变量值
                        update(test_plantest_plan_report_surveyresult);//更新fact中变量值
            end

            //逻辑处理节点[测试计划内用例数]
            rule "rawsqlcall1"
            ruleflow-group "test_plantest_plan_report_surveyrawsqlcall1"
            when
            then
    Map param =new HashMap();
        param.put("param0",test_plantest_plan_report_surveydefault.get("id"));
    String strSql="select count(1) as case_count from test_plan tp left join run r on tp.ID = r.PLAN_ID where tp.ID = #{et.param0};";
                        java.util.List<JSONObject> entities=iBzSysTest_planDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                test_plantest_plan_report_surveyresult.putAll(entity);
                            }
                        update(test_plantest_plan_report_surveydefault);//更新fact中变量值
                        update(test_plantest_plan_report_surveyplan_info);//更新fact中变量值
                        update(test_plantest_plan_report_surveyresult);//更新fact中变量值
            end

            //逻辑处理节点[测试计划用例覆盖率]
            rule "rawsqlcall2"
            ruleflow-group "test_plantest_plan_report_surveyrawsqlcall2"
            when
            then
    Map param =new HashMap();
        param.put("param0",test_plantest_plan_report_surveydefault.get("id"));
    String strSql="SELECT     ROUND((COUNT(DISTINCT r.CASE_ID) * 100.0 / COUNT(DISTINCT tc.ID)), 1) AS Coverage_Percentage FROM     test_plan tp         LEFT JOIN     test_case tc ON tp.LIBRARY_ID = tc.TEST_LIBRARY_ID and tc.IS_DELETED = 0         LEFT JOIN     run r ON tp.ID = r.PLAN_ID AND tc.ID = r.CASE_ID WHERE         tp.ID = #{et.param0};";
                        java.util.List<JSONObject> entities=iBzSysTest_planDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                test_plantest_plan_report_surveyresult.putAll(entity);
                            }
                        update(test_plantest_plan_report_surveydefault);//更新fact中变量值
                        update(test_plantest_plan_report_surveyplan_info);//更新fact中变量值
                        update(test_plantest_plan_report_surveyresult);//更新fact中变量值
            end

            //逻辑处理节点[测试计划用例通过率]
            rule "rawsqlcall3"
            ruleflow-group "test_plantest_plan_report_surveyrawsqlcall3"
            when
            then
    Map param =new HashMap();
        param.put("param0",test_plantest_plan_report_surveydefault.get("id"));
    String strSql="SELECT     CASE         WHEN COUNT(DISTINCT r.CASE_ID) > 0 THEN ROUND((COUNT(DISTINCT CASE WHEN r.STATUS = '10' THEN r.CASE_ID END) * 100.0 / COUNT(DISTINCT r.CASE_ID)), 1)         ELSE 0         END AS Pass_Percentage FROM     test_plan tp         LEFT JOIN     run r ON tp.ID = r.PLAN_ID WHERE         tp.ID = #{et.param0};";
                        java.util.List<JSONObject> entities=iBzSysTest_planDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                test_plantest_plan_report_surveyresult.putAll(entity);
                            }
                        update(test_plantest_plan_report_surveydefault);//更新fact中变量值
                        update(test_plantest_plan_report_surveyplan_info);//更新fact中变量值
                        update(test_plantest_plan_report_surveyresult);//更新fact中变量值
            end

            //逻辑处理节点[测试计划内缺陷数]
            rule "rawsqlcall4"
            ruleflow-group "test_plantest_plan_report_surveyrawsqlcall4"
            when
            then
    Map param =new HashMap();
        param.put("param0",test_plantest_plan_report_surveydefault.get("id"));
        param.put("param1",test_plantest_plan_report_surveydefault.get("id"));
    String strSql="SELECT count(1) as bug_count FROM `WORK_ITEM` t1          LEFT JOIN `WORK_ITEM_TYPE` t21 ON t1.`WORK_ITEM_TYPE_ID` = t21.`ID` WHERE     ( t1.`IS_DELETED` = 0  AND  t21.`GROUP` = 'bug'  AND  (             EXISTS (                 -- 与计划ID关联的RUN的WORK_ITEM                     SELECT 1                     FROM `relation` rel                              INNER JOIN `RUN` ru ON ru.`ID` = rel.`PRINCIPAL_ID`                     WHERE                             rel.`TARGET_ID` = t1.`ID`                       AND ru.`PLAN_ID` = #{et.param0}                       AND rel.`TARGET_TYPE` = 'work_item'                       AND rel.`PRINCIPAL_TYPE` = 'run'                 )             OR EXISTS (                 -- 直接与计划ID关联的WORK_ITEM                     SELECT 1                     FROM `relation` r                     WHERE                             r.`TARGET_ID` = t1.`ID`                       AND r.`PRINCIPAL_ID` = #{et.param1}                       AND r.`TARGET_TYPE` = 'work_item'                       AND r.`PRINCIPAL_TYPE` = 'test_plan'                 )         ) )";
                        java.util.List<JSONObject> entities=iBzSysTest_planDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                test_plantest_plan_report_surveyresult.putAll(entity);
                            }
                        update(test_plantest_plan_report_surveydefault);//更新fact中变量值
                        update(test_plantest_plan_report_surveyplan_info);//更新fact中变量值
                        update(test_plantest_plan_report_surveyresult);//更新fact中变量值
            end

            //逻辑处理节点[获取测试计划详情]
            rule "deaction1"
            ruleflow-group "test_plantest_plan_report_surveydeaction1"
            when
            then
                            cn.ibizlab.plm.util.helper.CachedBeanCopier.copy(test_planservice.get(test_plantest_plan_report_surveydefault.getId()),test_plantest_plan_report_surveydefault);
                        update(test_plantest_plan_report_surveydefault);//更新fact中变量值
                        update(test_plantest_plan_report_surveyplan_info);//更新fact中变量值
                        update(test_plantest_plan_report_surveyresult);//更新fact中变量值
            end

            //逻辑处理节点[测试计划详情加入返回结果]
            rule "prepareparam1"
            ruleflow-group "test_plantest_plan_report_surveyprepareparam1"
            when
            then
                            test_plantest_plan_report_surveyresult.set("plan_info",test_plantest_plan_report_surveyplan_info.get(""));
                        update(test_plantest_plan_report_surveydefault);//更新fact中变量值
                        update(test_plantest_plan_report_surveyplan_info);//更新fact中变量值
                        update(test_plantest_plan_report_surveyresult);//更新fact中变量值
            end