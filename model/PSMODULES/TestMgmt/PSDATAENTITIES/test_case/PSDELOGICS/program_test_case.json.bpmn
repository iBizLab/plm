<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
    <definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:activiti="http://activiti.org/bpmn" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:g="http://www.jboss.org/drools/flow/gpd" xmlns:tns="http://www.jboss.org/drools" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" expressionLanguage="http://www.mvel.org/2.0" id="Definition" name="" targetNamespace="http://www.jboss.org/drools" typeLanguage="http://www.java.com/javaTypes">
        <process id="cn.ibizlab.plm.core.testmgmt.service.logic.test_caseprogram_test_case" isClosed="false" isExecutable="true" name="testmgmt_test_case_program_test_case_ruleFlow" processType="Private" tns:packageName="cn.ibizlab.plm.core.testmgmt.service.logic.test_caseprogram_test_case">
            <extensionElements>
                <tns:import name="java.util.Map" />
                <tns:import name="org.springframework.util.StringUtils"/>
                <tns:import name="cn.ibizlab.plm.util.helper.RuleUtils"/>
                                <tns:metaData express="" name="test_caseprogram_test_casedefault" type="entity"/>
                                <tns:metaData express="new cn.ibizlab.plm.core.testmgmt.domain.test_case()" name="test_caseprogram_test_casefor_temp_obj" type="refentity"/>
                                <tns:metaData express="new cn.ibizlab.plm.core.base.domain.relation()" name="test_caseprogram_test_caseforward_relation_obj" type="refentity"/>
                                <tns:metaData express="new cn.ibizlab.plm.core.base.domain.relation()" name="test_caseprogram_test_casereverse_relation_obj" type="refentity"/>
                                <tns:metaData express="new cn.ibizlab.plm.core.testmgmt.domain.test_case()" name="test_caseprogram_test_caseselectdata" type="refentity"/>
                                    <tns:metaData express="T(cn.ibizlab.plm.util.security.SpringContextHolder).getBean(T(cn.ibizlab.plm.core.base.service.IrelationService))" name="relationservice" type="service"/>
                    <tns:metaData express="T(cn.ibizlab.plm.util.security.SpringContextHolder).getBean(T(cn.ibizlab.plm.core.testmgmt.service.Itest_caseService))" name="iBzSysTest_caseDefaultService" type="service"/>
                    <tns:metaData express="T(cn.ibizlab.plm.util.security.AuthenticationUser).getAuthenticationUser()" name="curuser" type="session"/>
                            <tns:global identifier="test_caseprogram_test_casedefault" type="cn.ibizlab.plm.core.testmgmt.domain.test_case" />
                            <tns:global identifier="test_caseprogram_test_casefor_temp_obj" type="cn.ibizlab.plm.core.testmgmt.domain.test_case" />
                            <tns:global identifier="test_caseprogram_test_caseforward_relation_obj" type="cn.ibizlab.plm.core.base.domain.relation" />
                            <tns:global identifier="test_caseprogram_test_casereverse_relation_obj" type="cn.ibizlab.plm.core.base.domain.relation" />
                            <tns:global identifier="test_caseprogram_test_caseselectdata" type="cn.ibizlab.plm.core.testmgmt.domain.test_case" />
            </extensionElements>
                        <startEvent id="begin" isInterrupting="true"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="test_caseprogram_test_casebindparam1" id="bindparam1" implementation="http://www.jboss.org/drools/rule" name="绑定参数"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="test_caseprogram_test_caseloopsubcall1" id="loopsubcall1" implementation="http://www.jboss.org/drools/rule" name="循环子调用"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="test_caseprogram_test_caserenewparam1" id="renewparam1" implementation="http://www.jboss.org/drools/rule" name="重新建立参数"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="test_caseprogram_test_caserenewparam2" id="renewparam2" implementation="http://www.jboss.org/drools/rule" name="重新建立参数"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="test_caseprogram_test_caseprepareparam1" id="prepareparam1" implementation="http://www.jboss.org/drools/rule" name="填充需要的属性值"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="test_caseprogram_test_caseend1" id="end1" implementation="http://www.jboss.org/drools/rule" name="结束"/>
                        <endEvent id="end1_end" name="end"/>
                        <sequenceFlow id="end1_end_line" sourceRef="end1" targetRef="end1_end"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="test_caseprogram_test_casedeaction1" id="deaction1" implementation="http://www.jboss.org/drools/rule" name="生成正向关联数据"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="test_caseprogram_test_casedeaction2" id="deaction2" implementation="http://www.jboss.org/drools/rule" name="生成反向关联数据"/>
                        <endEvent id="deaction2_end" name="end"/>
                        <sequenceFlow id="deaction2_end_line" sourceRef="deaction2" targetRef="deaction2_end"/>
                    <sequenceFlow id="gateway-begin_bindparam1" sourceRef="gateway-begin" targetRef="bindparam1">
                            <conditionExpression  language="http://www.jboss.org/drools/rule" ><![CDATA[
                                            $test_caseprogram_test_casedefault:test_case();
                                            $test_caseprogram_test_casefor_temp_obj:test_case();
                                            $test_caseprogram_test_caseforward_relation_obj:relation();
                                            $test_caseprogram_test_casereverse_relation_obj:relation();
                                            $test_caseprogram_test_caseselectdata:test_case();
                                    eval($test_caseprogram_test_casedefault==test_caseprogram_test_casedefault && $test_caseprogram_test_casefor_temp_obj==test_caseprogram_test_casefor_temp_obj && $test_caseprogram_test_caseforward_relation_obj==test_caseprogram_test_caseforward_relation_obj && $test_caseprogram_test_casereverse_relation_obj==test_caseprogram_test_casereverse_relation_obj && $test_caseprogram_test_caseselectdata==test_caseprogram_test_caseselectdata);
                                eval((RuleUtils.test($test_caseprogram_test_casedefault.get("principal_id"),"ISNOTNULL","")))
                                ]]>
                            </conditionExpression>
                    </sequenceFlow>
                    <sequenceFlow id="gateway-bindparam1_loopsubcall1" sourceRef="gateway-bindparam1" targetRef="loopsubcall1">
                            <conditionExpression  language="http://www.jboss.org/drools/rule" ><![CDATA[
                                            $test_caseprogram_test_casedefault:test_case();
                                            $test_caseprogram_test_casefor_temp_obj:test_case();
                                            $test_caseprogram_test_caseforward_relation_obj:relation();
                                            $test_caseprogram_test_casereverse_relation_obj:relation();
                                            $test_caseprogram_test_caseselectdata:test_case();
                                    eval($test_caseprogram_test_casedefault==test_caseprogram_test_casedefault && $test_caseprogram_test_casefor_temp_obj==test_caseprogram_test_casefor_temp_obj && $test_caseprogram_test_caseforward_relation_obj==test_caseprogram_test_caseforward_relation_obj && $test_caseprogram_test_casereverse_relation_obj==test_caseprogram_test_casereverse_relation_obj && $test_caseprogram_test_caseselectdata==test_caseprogram_test_caseselectdata);
                                eval((RuleUtils.test($test_caseprogram_test_caseselectdata.get("size"),"GT","0")))
                                ]]>
                            </conditionExpression>
                    </sequenceFlow>
                    <sequenceFlow id="loopsubcall1_renewparam1" sourceRef="loopsubcall1" targetRef="renewparam1">
                    </sequenceFlow>
                    <sequenceFlow id="loopsubcall1_end1" sourceRef="loopsubcall1" targetRef="end1">
                    </sequenceFlow>
                    <sequenceFlow id="renewparam1_renewparam2" sourceRef="renewparam1" targetRef="renewparam2">
                    </sequenceFlow>
                    <sequenceFlow id="renewparam2_prepareparam1" sourceRef="renewparam2" targetRef="prepareparam1">
                    </sequenceFlow>
                    <sequenceFlow id="prepareparam1_deaction1" sourceRef="prepareparam1" targetRef="deaction1">
                    </sequenceFlow>
                    <sequenceFlow id="deaction1_deaction2" sourceRef="deaction1" targetRef="deaction2">
                    </sequenceFlow>
                            <exclusiveGateway id="gateway-begin" name="Gateway" gatewayDirection="Diverging" default="gateway-begin_end_line"></exclusiveGateway>
                            <sequenceFlow id="begin_gateway-begin_gatewayline" sourceRef="begin" targetRef="gateway-begin"></sequenceFlow>
                            <sequenceFlow id="gateway-begin_end_line" sourceRef="gateway-begin" targetRef="gateway-begin_end"/>
                            <endEvent id="gateway-begin_end" name="end"/>
                            <exclusiveGateway id="gateway-bindparam1" name="Gateway" gatewayDirection="Diverging" default="gateway-bindparam1_end_line"></exclusiveGateway>
                            <sequenceFlow id="bindparam1_gateway-bindparam1_gatewayline" sourceRef="bindparam1" targetRef="gateway-bindparam1"></sequenceFlow>
                            <sequenceFlow id="gateway-bindparam1_end_line" sourceRef="gateway-bindparam1" targetRef="gateway-bindparam1_end"/>
                            <endEvent id="gateway-bindparam1_end" name="end"/>
        </process>
    </definitions>