{
  "codeName" : "program_analyze",
  "defaultParamName" : "Default",
  "dynaModelFilePath" : "PSMODULES/TestMgmt/PSDATAENTITIES/test_case/PSDELOGICS/program_analyze.json",
  "logicName" : "测试用例规划分析",
  "memo" : "报表测试用例规划分析数据源",
  "name" : "测试用例规划分析",
  "getPSDELogicNodes" : [ {
    "codeName" : "Begin",
    "leftPos" : 200,
    "logicNodeType" : "BEGIN",
    "name" : "开始",
    "getPSDELogicLinks" : [ {
      "getDstPSDELogicNode" : {
        "modelref" : true,
        "id" : "RAWSQLCALL1"
      },
      "name" : "连接名称",
      "getSrcPSDELogicNode" : {
        "modelref" : true,
        "id" : "Begin"
      }
    } ],
    "topPos" : 200,
    "parallelOutput" : true
  }, {
    "codeName" : "END1",
    "leftPos" : 1050,
    "logicNodeType" : "END",
    "name" : "结束",
    "getReturnParam" : {
      "modelref" : true,
      "id" : "result"
    },
    "returnType" : "LOGICPARAM",
    "topPos" : 200
  }, {
    "codeName" : "RAWSQLCALL1",
    "getDstPSDELogicParam" : {
      "modelref" : true,
      "id" : "result"
    },
    "leftPos" : 498,
    "logicNodeType" : "RAWSQLCALL",
    "name" : "测试用例规划分析",
    "getPSDELogicLinks" : [ {
      "getDstPSDELogicNode" : {
        "modelref" : true,
        "id" : "END1"
      },
      "name" : "连接名称",
      "getSrcPSDELogicNode" : {
        "modelref" : true,
        "id" : "RAWSQLCALL1"
      }
    } ],
    "getPSDELogicNodeParams" : [ {
      "name" : "Default[N_TEST_LIBRARY_ID_EQ]",
      "paramAction" : "SQLPARAM",
      "srcFieldName" : "N_TEST_LIBRARY_ID_EQ",
      "getSrcPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "srcValueType" : "SRCDLPARAM"
    }, {
      "name" : "Default[N_TYPE_EQ]",
      "paramAction" : "SQLPARAM",
      "srcFieldName" : "N_TYPE_EQ",
      "getSrcPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "srcValueType" : "SRCDLPARAM"
    }, {
      "name" : "Default[N_TYPE_EQ]",
      "paramAction" : "SQLPARAM",
      "srcFieldName" : "N_TYPE_EQ",
      "getSrcPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "srcValueType" : "SRCDLPARAM"
    }, {
      "name" : "Default[N_TYPE_EQ]",
      "paramAction" : "SQLPARAM",
      "srcFieldName" : "N_TYPE_EQ",
      "getSrcPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "srcValueType" : "SRCDLPARAM"
    }, {
      "name" : "Default[N_LEVEL_EQ]",
      "paramAction" : "SQLPARAM",
      "srcFieldName" : "N_LEVEL_EQ",
      "getSrcPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "srcValueType" : "SRCDLPARAM"
    }, {
      "name" : "Default[N_LEVEL_EQ]",
      "paramAction" : "SQLPARAM",
      "srcFieldName" : "N_LEVEL_EQ",
      "getSrcPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "srcValueType" : "SRCDLPARAM"
    }, {
      "name" : "Default[N_LEVEL_EQ]",
      "paramAction" : "SQLPARAM",
      "srcFieldName" : "N_LEVEL_EQ",
      "getSrcPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "srcValueType" : "SRCDLPARAM"
    }, {
      "name" : "Default[N_STATE_EQ]",
      "paramAction" : "SQLPARAM",
      "srcFieldName" : "N_STATE_EQ",
      "getSrcPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "srcValueType" : "SRCDLPARAM"
    }, {
      "name" : "Default[N_STATE_EQ]",
      "paramAction" : "SQLPARAM",
      "srcFieldName" : "N_STATE_EQ",
      "getSrcPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "srcValueType" : "SRCDLPARAM"
    }, {
      "name" : "Default[N_STATE_EQ]",
      "paramAction" : "SQLPARAM",
      "srcFieldName" : "N_STATE_EQ",
      "getSrcPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "srcValueType" : "SRCDLPARAM"
    }, {
      "name" : "Default[n_maintenance_id_eq]",
      "paramAction" : "SQLPARAM",
      "srcFieldName" : "n_maintenance_id_eq",
      "getSrcPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "srcValueType" : "SRCDLPARAM"
    }, {
      "name" : "Default[n_maintenance_id_eq]",
      "paramAction" : "SQLPARAM",
      "srcFieldName" : "n_maintenance_id_eq",
      "getSrcPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "srcValueType" : "SRCDLPARAM"
    }, {
      "name" : "Default[n_maintenance_id_eq]",
      "paramAction" : "SQLPARAM",
      "srcFieldName" : "n_maintenance_id_eq",
      "getSrcPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "srcValueType" : "SRCDLPARAM"
    } ],
    "sql" : "SELECT\r\n    times_ranges.times_range as filter_type,\r\n    COALESCE(cases_count, 0) AS count\r\nFROM (\r\n         SELECT '10' AS times_range\r\n         UNION ALL SELECT '20'\r\n         UNION ALL SELECT '30'\r\n         UNION ALL SELECT '40'\r\n         UNION ALL SELECT '50'\r\n         UNION ALL SELECT '60'\r\n     ) times_ranges\r\n         LEFT JOIN (\r\n    SELECT\r\n        CASE\r\n            WHEN plan_count = 0 THEN 10-- '0次'\r\n            WHEN plan_count = 1 THEN 20 -- '1次'\r\n            WHEN plan_count = 2 THEN 30 -- 2次'\r\n            WHEN plan_count BETWEEN 3 AND 5 THEN 40 -- '3~5次'\r\n            WHEN plan_count BETWEEN 6 AND 10 THEN 50 -- '6~10次'\r\n            WHEN plan_count > 10 THEN 60 -- '10次以上'\r\n            END AS times_range,\r\n        COUNT(*) AS cases_count\r\n    FROM (\r\n             SELECT\r\n                 tc.ID AS test_case_id,\r\n                 COUNT(DISTINCT tp.ID) AS plan_count\r\n             FROM\r\n                 test_case tc\r\n                     LEFT JOIN run r ON tc.ID = r.case_id\r\n                     LEFT JOIN test_plan tp ON r.plan_id = tp.ID\r\n             WHERE\r\n                     tc.TEST_LIBRARY_ID = ?\r\n                     AND((? IS NULL OR ? = '') OR FIND_IN_SET(tc.TYPE, ?)) -- 用例类型\r\n                     AND((? IS NULL OR ? = '') OR FIND_IN_SET(tc.LEVEL, ?)) -- 重要程度\r\n                     AND((? IS NULL OR ? = '') OR FIND_IN_SET(tc.STATE, ?)) -- 评审状态\r\n                     AND((? IS NULL OR ? = '') OR FIND_IN_SET(tc.MAINTENANCE_ID, ?)) -- 维护人ID\r\n             GROUP BY\r\n                 tc.ID\r\n         ) AS plan_counts\r\n    GROUP BY\r\n        times_range\r\n) counted_cases ON times_ranges.times_range = counted_cases.times_range\r\nORDER BY\r\n    FIELD(times_ranges.times_range, '10', '20', '30', '40', '50', '60');",
    "topPos" : 208,
    "fillDstLogicParam" : true
  } ],
  "getPSDELogicParams" : [ {
    "codeName" : "Default",
    "logicName" : "传入变量",
    "name" : "传入变量",
    "getParamPSDataEntity" : {
      "modelref" : true,
      "path" : "PSMODULES/TestMgmt/PSDATAENTITIES/test_case.json"
    },
    "default" : true,
    "filterParam" : true
  }, {
    "codeName" : "result",
    "logicName" : "结果",
    "name" : "结果",
    "entityListParam" : true
  } ],
  "getStartPSDELogicNode" : {
    "modelref" : true,
    "id" : "Begin"
  },
  "enableBackend" : true,
  "enableFront" : false
}