package cn.ibizlab.plm.testmgmt.logic.test_caselogic.move_test_case;
        import java.util.Map;
        import java.util.HashMap;
        import com.alibaba.fastjson.JSONObject;
        import org.springframework.util.StringUtils;
        import org.springframework.util.ObjectUtils;
        import cn.ibizlab.plm.util.errors.BadRequestAlertException;
                global cn.ibizlab.plm.core.testmgmt.domain.test_case test_casemove_test_casedefault;
                global cn.ibizlab.plm.core.testmgmt.domain.test_case test_casemove_test_casefor_temp_obj;
                global java.util.Map test_casemove_test_caseid;
                global java.util.Map test_casemove_test_caseids;
                global cn.ibizlab.plm.core.testmgmt.domain.test_case test_casemove_test_casesrfactionparam;
                global cn.ibizlab.plm.core.testmgmt.domain.test_case test_casemove_test_casetemp_obj;
                    global cn.ibizlab.plm.core.testmgmt.service.Itest_caseService test_caseservice;
        global cn.ibizlab.plm.core.testmgmt.service.Itest_caseService iBzSysTest_caseDefaultService;
        global cn.ibizlab.plm.util.security.AuthenticationUser curuser;


    no-loop

            //逻辑处理节点[开始]
            rule "begin"
            ruleflow-group "test_casemove_test_casebegin"
            when
            then
            end

            //逻辑处理节点[获取选中数据]
            rule "bindparam1"
            ruleflow-group "test_casemove_test_casebindparam1"
            when
            then
                        update(test_casemove_test_casedefault);//更新fact中变量值
                        update(test_casemove_test_casefor_temp_obj);//更新fact中变量值
                        update(test_casemove_test_caseid);//更新fact中变量值
                        update(test_casemove_test_caseids);//更新fact中变量值
                        update(test_casemove_test_casesrfactionparam);//更新fact中变量值
                        update(test_casemove_test_casetemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[绑定id]
            rule "bindparam2"
            ruleflow-group "test_casemove_test_casebindparam2"
            when
            then
                        update(test_casemove_test_casedefault);//更新fact中变量值
                        update(test_casemove_test_casefor_temp_obj);//更新fact中变量值
                        update(test_casemove_test_caseid);//更新fact中变量值
                        update(test_casemove_test_caseids);//更新fact中变量值
                        update(test_casemove_test_casesrfactionparam);//更新fact中变量值
                        update(test_casemove_test_casetemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[循环子调用]
            rule "loopsubcall1"
            ruleflow-group "test_casemove_test_caseloopsubcall1"
            when
            then
                        update(test_casemove_test_casedefault);//更新fact中变量值
                        update(test_casemove_test_casefor_temp_obj);//更新fact中变量值
                        update(test_casemove_test_caseid);//更新fact中变量值
                        update(test_casemove_test_caseids);//更新fact中变量值
                        update(test_casemove_test_casesrfactionparam);//更新fact中变量值
                        update(test_casemove_test_casetemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[重新建立测试用例参数]
            rule "renewparam1"
            ruleflow-group "test_casemove_test_caserenewparam1"
            when
            then
                        update(test_casemove_test_casedefault);//更新fact中变量值
                        update(test_casemove_test_casefor_temp_obj);//更新fact中变量值
                        update(test_casemove_test_caseid);//更新fact中变量值
                        update(test_casemove_test_caseids);//更新fact中变量值
                        update(test_casemove_test_casesrfactionparam);//更新fact中变量值
                        update(test_casemove_test_casetemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[获取当前用例详情]
            rule "deaction2"
            ruleflow-group "test_casemove_test_casedeaction2"
            when
            then
                            cn.ibizlab.plm.util.helper.CachedBeanCopier.copy(test_caseservice.get(test_casemove_test_caseid.getId()),test_casemove_test_caseid);
                        update(test_casemove_test_casedefault);//更新fact中变量值
                        update(test_casemove_test_casefor_temp_obj);//更新fact中变量值
                        update(test_casemove_test_caseid);//更新fact中变量值
                        update(test_casemove_test_caseids);//更新fact中变量值
                        update(test_casemove_test_casesrfactionparam);//更新fact中变量值
                        update(test_casemove_test_casetemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[设置当前用例参数]
            rule "prepareparam1"
            ruleflow-group "test_casemove_test_caseprepareparam1"
            when
            then
                            test_casemove_test_casetemp_obj.set("testlibraryid",test_casemove_test_casefor_temp_obj.get("targetlibraryid"));
                            test_casemove_test_casetemp_obj.set("id",test_casemove_test_caseid.get(""));
                        update(test_casemove_test_casedefault);//更新fact中变量值
                        update(test_casemove_test_casefor_temp_obj);//更新fact中变量值
                        update(test_casemove_test_caseid);//更新fact中变量值
                        update(test_casemove_test_caseids);//更新fact中变量值
                        update(test_casemove_test_casesrfactionparam);//更新fact中变量值
                        update(test_casemove_test_casetemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[设置用例模块标识]
            rule "prepareparam2"
            ruleflow-group "test_casemove_test_caseprepareparam2"
            when
            then
                            test_casemove_test_casetemp_obj.set("suiteid",test_casemove_test_casefor_temp_obj.get("suiteid"));
                        update(test_casemove_test_casedefault);//更新fact中变量值
                        update(test_casemove_test_casefor_temp_obj);//更新fact中变量值
                        update(test_casemove_test_caseid);//更新fact中变量值
                        update(test_casemove_test_caseids);//更新fact中变量值
                        update(test_casemove_test_casesrfactionparam);//更新fact中变量值
                        update(test_casemove_test_casetemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[修改用例数据]
            rule "deaction1"
            ruleflow-group "test_casemove_test_casedeaction1"
            when
            then
                        test_caseservice.update(test_casemove_test_casetemp_obj);
                        update(test_casemove_test_casedefault);//更新fact中变量值
                        update(test_casemove_test_casefor_temp_obj);//更新fact中变量值
                        update(test_casemove_test_caseid);//更新fact中变量值
                        update(test_casemove_test_caseids);//更新fact中变量值
                        update(test_casemove_test_casesrfactionparam);//更新fact中变量值
                        update(test_casemove_test_casetemp_obj);//更新fact中变量值
            end

            //逻辑处理节点[结束]
            rule "end1"
            ruleflow-group "test_casemove_test_caseend1"
            when
            then
                        update(test_casemove_test_casedefault);//更新fact中变量值
                        update(test_casemove_test_casefor_temp_obj);//更新fact中变量值
                        update(test_casemove_test_caseid);//更新fact中变量值
                        update(test_casemove_test_caseids);//更新fact中变量值
                        update(test_casemove_test_casesrfactionparam);//更新fact中变量值
                        update(test_casemove_test_casetemp_obj);//更新fact中变量值
            end