<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
    <definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:activiti="http://activiti.org/bpmn" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:g="http://www.jboss.org/drools/flow/gpd" xmlns:tns="http://www.jboss.org/drools" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" expressionLanguage="http://www.mvel.org/2.0" id="Definition" name="" targetNamespace="http://www.jboss.org/drools" typeLanguage="http://www.java.com/javaTypes">
        <process id="cn.ibizlab.plm.core.testmgmt.service.logic.reviewfill_stage_reviewer" isClosed="false" isExecutable="true" name="testmgmt_review_fill_stage_reviewer_ruleFlow" processType="Private" tns:packageName="cn.ibizlab.plm.core.testmgmt.service.logic.reviewfill_stage_reviewer">
            <extensionElements>
                <tns:import name="java.util.Map" />
                <tns:import name="org.springframework.util.StringUtils"/>
                <tns:import name="cn.ibizlab.plm.util.helper.RuleUtils"/>
                                <tns:metaData express="" name="reviewfill_stage_reviewerdefault" type="entity"/>
                                <tns:metaData express="new cn.ibizlab.plm.core.base.domain.member()" name="reviewfill_stage_reviewerfilter" type="refentity"/>
                                <tns:metaData express="new cn.ibizlab.plm.core.base.domain.group()" name="reviewfill_stage_reviewergroup_obj" type="refentity"/>
                                <tns:metaData express="new cn.ibizlab.plm.core.base.domain.member()" name="reviewfill_stage_reviewermember_page" type="refentity"/>
                                <tns:metaData express="new cn.ibizlab.plm.core.base.domain.member()" name="reviewfill_stage_reviewerreviewer" type="refentity"/>
                                    <tns:metaData express="T(cn.ibizlab.plm.util.security.SpringContextHolder).getBean(T(cn.ibizlab.plm.core.base.service.ImemberService))" name="memberservice" type="service"/>
                    <tns:metaData express="T(cn.ibizlab.plm.util.security.SpringContextHolder).getBean(T(cn.ibizlab.plm.core.testmgmt.service.IreviewService))" name="iBzSysReviewDefaultService" type="service"/>
                    <tns:metaData express="T(cn.ibizlab.plm.util.security.AuthenticationUser).getAuthenticationUser()" name="curuser" type="session"/>
                            <tns:global identifier="reviewfill_stage_reviewerdefault" type="cn.ibizlab.plm.core.testmgmt.domain.review" />
                            <tns:global identifier="reviewfill_stage_reviewerfilter" type="cn.ibizlab.plm.core.base.domain.member" />
                            <tns:global identifier="reviewfill_stage_reviewergroup_obj" type="cn.ibizlab.plm.core.base.domain.group" />
                            <tns:global identifier="reviewfill_stage_reviewermember_page" type="cn.ibizlab.plm.core.base.domain.member" />
                            <tns:global identifier="reviewfill_stage_reviewerreviewer" type="cn.ibizlab.plm.core.base.domain.member" />
            </extensionElements>
                        <startEvent id="begin" isInterrupting="true"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="reviewfill_stage_reviewerend1" id="end1" implementation="http://www.jboss.org/drools/rule" name="结束"/>
                        <endEvent id="end1_end" name="end"/>
                        <sequenceFlow id="end1_end_line" sourceRef="end1" targetRef="end1_end"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="reviewfill_stage_reviewerprepareparam1" id="prepareparam1" implementation="http://www.jboss.org/drools/rule" name="设置过滤参数及用户ID"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="reviewfill_stage_reviewerdedataset1" id="dedataset1" implementation="http://www.jboss.org/drools/rule" name="查询成员表"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="reviewfill_stage_reviewerloopsubcall1" id="loopsubcall1" implementation="http://www.jboss.org/drools/rule" name="循环符合条件的成员信息"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="reviewfill_stage_reviewerdebugparam2" id="debugparam2" implementation="http://www.jboss.org/drools/rule" name="调试逻辑参数"/>
                        <businessRuleTask activiti:exclusive="true" g:ruleFlowGroup="reviewfill_stage_reviewerprepareparam2" id="prepareparam2" implementation="http://www.jboss.org/drools/rule" name="准备参数"/>
                        <endEvent id="prepareparam2_end" name="end"/>
                        <sequenceFlow id="prepareparam2_end_line" sourceRef="prepareparam2" targetRef="prepareparam2_end"/>
                    <sequenceFlow id="gateway-begin_prepareparam1" sourceRef="gateway-begin" targetRef="prepareparam1">
                            <conditionExpression  language="http://www.jboss.org/drools/rule" ><![CDATA[
                                            $reviewfill_stage_reviewerdefault:review();
                                            $reviewfill_stage_reviewerfilter:member();
                                            $reviewfill_stage_reviewergroup_obj:group();
                                            $reviewfill_stage_reviewermember_page:member();
                                            $reviewfill_stage_reviewerreviewer:member();
                                    eval($reviewfill_stage_reviewerdefault==reviewfill_stage_reviewerdefault && $reviewfill_stage_reviewerfilter==reviewfill_stage_reviewerfilter && $reviewfill_stage_reviewergroup_obj==reviewfill_stage_reviewergroup_obj && $reviewfill_stage_reviewermember_page==reviewfill_stage_reviewermember_page && $reviewfill_stage_reviewerreviewer==reviewfill_stage_reviewerreviewer);
                                eval((RuleUtils.test($reviewfill_stage_reviewerdefault.get("reviewer_type"),"EQ","30")))
                                ]]>
                            </conditionExpression>
                    </sequenceFlow>
                    <sequenceFlow id="prepareparam1_dedataset1" sourceRef="prepareparam1" targetRef="dedataset1">
                    </sequenceFlow>
                    <sequenceFlow id="dedataset1_loopsubcall1" sourceRef="dedataset1" targetRef="loopsubcall1">
                    </sequenceFlow>
                    <sequenceFlow id="gateway-loopsubcall1_debugparam2" sourceRef="gateway-loopsubcall1" targetRef="debugparam2">
                            <conditionExpression  language="http://www.jboss.org/drools/rule" ><![CDATA[
                                            $reviewfill_stage_reviewerdefault:review();
                                            $reviewfill_stage_reviewerfilter:member();
                                            $reviewfill_stage_reviewergroup_obj:group();
                                            $reviewfill_stage_reviewermember_page:member();
                                            $reviewfill_stage_reviewerreviewer:member();
                                    eval($reviewfill_stage_reviewerdefault==reviewfill_stage_reviewerdefault && $reviewfill_stage_reviewerfilter==reviewfill_stage_reviewerfilter && $reviewfill_stage_reviewergroup_obj==reviewfill_stage_reviewergroup_obj && $reviewfill_stage_reviewermember_page==reviewfill_stage_reviewermember_page && $reviewfill_stage_reviewerreviewer==reviewfill_stage_reviewerreviewer);
                                eval((RuleUtils.test($reviewfill_stage_reviewerreviewer.get("userId"),"EQ","cur_user_id")))
                                ]]>
                            </conditionExpression>
                    </sequenceFlow>
                    <sequenceFlow id="loopsubcall1_end1" sourceRef="loopsubcall1" targetRef="end1">
                    </sequenceFlow>
                    <sequenceFlow id="debugparam2_prepareparam2" sourceRef="debugparam2" targetRef="prepareparam2">
                    </sequenceFlow>
                            <exclusiveGateway id="gateway-begin" name="Gateway" gatewayDirection="Diverging" default="gateway-begin_end_line"></exclusiveGateway>
                            <sequenceFlow id="begin_gateway-begin_gatewayline" sourceRef="begin" targetRef="gateway-begin"></sequenceFlow>
                            <sequenceFlow id="gateway-begin_end_line" sourceRef="gateway-begin" targetRef="gateway-begin_end"/>
                            <endEvent id="gateway-begin_end" name="end"/>
                            <exclusiveGateway id="gateway-loopsubcall1" name="Gateway" gatewayDirection="Diverging" default="gateway-loopsubcall1_end_line"></exclusiveGateway>
                            <sequenceFlow id="loopsubcall1_gateway-loopsubcall1_gatewayline" sourceRef="loopsubcall1" targetRef="gateway-loopsubcall1"></sequenceFlow>
                            <sequenceFlow id="gateway-loopsubcall1_end_line" sourceRef="gateway-loopsubcall1" targetRef="gateway-loopsubcall1_end"/>
                            <endEvent id="gateway-loopsubcall1_end" name="end"/>
        </process>
    </definitions>