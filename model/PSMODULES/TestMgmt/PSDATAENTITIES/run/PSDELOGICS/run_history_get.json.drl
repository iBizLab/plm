package cn.ibizlab.plm.testmgmt.logic.runlogic.run_history_get;
        import java.util.Map;
        import java.util.HashMap;
        import com.alibaba.fastjson.JSONObject;
        import org.springframework.util.StringUtils;
        import org.springframework.util.ObjectUtils;
        import cn.ibizlab.plm.util.errors.BadRequestAlertException;
                global cn.ibizlab.plm.core.testmgmt.domain.run runrun_history_getdefault;
                global cn.ibizlab.plm.core.testmgmt.domain.run_history runrun_history_getrun_history;
                global cn.ibizlab.plm.core.testmgmt.domain.run_history runrun_history_getrun_history_list;
        global cn.ibizlab.plm.core.testmgmt.service.IrunService iBzSysRunDefaultService;
        global cn.ibizlab.plm.util.security.AuthenticationUser curuser;


    no-loop

            //逻辑处理节点[开始]
            rule "begin"
            ruleflow-group "runrun_history_getbegin"
            when
            then
            end

            //逻辑处理节点[获取执行用例关联的执行结果]
            rule "rawsqlcall1"
            ruleflow-group "runrun_history_getrawsqlcall1"
            when
            then
    Map param =new HashMap();
        param.put("param0",runrun_history_getdefault.get("id"));
    String strSql="SELECT * FROM run_history t1 WHERE t1.RUN_ID = #{et.param0} order by t1.create_time desc";
                        java.util.List<JSONObject> entities=iBzSysRunDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    runrun_history_getrun_history_list.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(runrun_history_getdefault);//更新fact中变量值
                        update(runrun_history_getrun_history);//更新fact中变量值
                        update(runrun_history_getrun_history_list);//更新fact中变量值
            end

            //逻辑处理节点[填充执行结果列表]
            rule "prepareparam1"
            ruleflow-group "runrun_history_getprepareparam1"
            when
            then
                            runrun_history_getdefault.set("mdctrl2",runrun_history_getrun_history_list.get(""));
                        update(runrun_history_getdefault);//更新fact中变量值
                        update(runrun_history_getrun_history);//更新fact中变量值
                        update(runrun_history_getrun_history_list);//更新fact中变量值
            end

            //逻辑处理节点[结束]
            rule "end1"
            ruleflow-group "runrun_history_getend1"
            when
            then
                        update(runrun_history_getdefault);//更新fact中变量值
                        update(runrun_history_getrun_history);//更新fact中变量值
                        update(runrun_history_getrun_history_list);//更新fact中变量值
            end