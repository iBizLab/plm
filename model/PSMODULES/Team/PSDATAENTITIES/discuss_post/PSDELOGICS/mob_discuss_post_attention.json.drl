package cn.ibizlab.plm.team.logic.discuss_postlogic.mob_discuss_post_attention;
        import java.util.Map;
        import java.util.HashMap;
        import com.alibaba.fastjson.JSONObject;
        import org.springframework.util.StringUtils;
        import org.springframework.util.ObjectUtils;
        import cn.ibizlab.plm.util.errors.BadRequestAlertException;
                global cn.ibizlab.plm.core.team.domain.discuss_post discuss_postmob_discuss_post_attentiondefault;
                global cn.ibizlab.plm.core.base.domain.attention discuss_postmob_discuss_post_attentionattention;
                global cn.ibizlab.plm.core.team.domain.discuss_post discuss_postmob_discuss_post_attentiondiscuss_post;
                global cn.ibizlab.plm.core.team.domain.discuss_member discuss_postmob_discuss_post_attentionfor_obj;
                global cn.ibizlab.plm.core.team.domain.discuss_member discuss_postmob_discuss_post_attentionsrfactionparam;
                    global cn.ibizlab.plm.core.base.service.IattentionService attentionservice;
        global cn.ibizlab.plm.core.team.service.Idiscuss_postService iBzSysDiscuss_postDefaultService;
        global cn.ibizlab.plm.util.security.AuthenticationUser curuser;


    no-loop

            //逻辑处理节点[开始]
            rule "begin"
            ruleflow-group "discuss_postmob_discuss_post_attentionbegin"
            when
            then
            end

            //逻辑处理节点[获取列表]
            rule "bindparam1"
            ruleflow-group "discuss_postmob_discuss_post_attentionbindparam1"
            when
            then
                        update(discuss_postmob_discuss_post_attentiondefault);//更新fact中变量值
                        update(discuss_postmob_discuss_post_attentionattention);//更新fact中变量值
                        update(discuss_postmob_discuss_post_attentiondiscuss_post);//更新fact中变量值
                        update(discuss_postmob_discuss_post_attentionfor_obj);//更新fact中变量值
                        update(discuss_postmob_discuss_post_attentionsrfactionparam);//更新fact中变量值
            end

            //逻辑处理节点[循环子调用]
            rule "loopsubcall1"
            ruleflow-group "discuss_postmob_discuss_post_attentionloopsubcall1"
            when
            then
                        update(discuss_postmob_discuss_post_attentiondefault);//更新fact中变量值
                        update(discuss_postmob_discuss_post_attentionattention);//更新fact中变量值
                        update(discuss_postmob_discuss_post_attentiondiscuss_post);//更新fact中变量值
                        update(discuss_postmob_discuss_post_attentionfor_obj);//更新fact中变量值
                        update(discuss_postmob_discuss_post_attentionsrfactionparam);//更新fact中变量值
            end

            //逻辑处理节点[结束]
            rule "end1"
            ruleflow-group "discuss_postmob_discuss_post_attentionend1"
            when
            then
                        update(discuss_postmob_discuss_post_attentiondefault);//更新fact中变量值
                        update(discuss_postmob_discuss_post_attentionattention);//更新fact中变量值
                        update(discuss_postmob_discuss_post_attentiondiscuss_post);//更新fact中变量值
                        update(discuss_postmob_discuss_post_attentionfor_obj);//更新fact中变量值
                        update(discuss_postmob_discuss_post_attentionsrfactionparam);//更新fact中变量值
            end

            //逻辑处理节点[设置参数]
            rule "prepareparam1"
            ruleflow-group "discuss_postmob_discuss_post_attentionprepareparam1"
            when
            then
                            discuss_postmob_discuss_post_attentionattention.set("ownerid",discuss_postmob_discuss_post_attentiondefault.get("id"));
                            discuss_postmob_discuss_post_attentionattention.set("ownersubtype","DISCUSS_POST");
                            discuss_postmob_discuss_post_attentionattention.set("ownertype","DISCUSS_POST");
                            discuss_postmob_discuss_post_attentionattention.set("type","40");
                            discuss_postmob_discuss_post_attentionattention.set("userid",discuss_postmob_discuss_post_attentionfor_obj.get("userid"));
                            discuss_postmob_discuss_post_attentionattention.set("name",discuss_postmob_discuss_post_attentionfor_obj.get("name"));
                        update(discuss_postmob_discuss_post_attentiondefault);//更新fact中变量值
                        update(discuss_postmob_discuss_post_attentionattention);//更新fact中变量值
                        update(discuss_postmob_discuss_post_attentiondiscuss_post);//更新fact中变量值
                        update(discuss_postmob_discuss_post_attentionfor_obj);//更新fact中变量值
                        update(discuss_postmob_discuss_post_attentionsrfactionparam);//更新fact中变量值
            end

            //逻辑处理节点[创建关注人]
            rule "deaction1"
            ruleflow-group "discuss_postmob_discuss_post_attentiondeaction1"
            when
            then
                        attentionservice.create(discuss_postmob_discuss_post_attentionattention);
                        update(discuss_postmob_discuss_post_attentiondefault);//更新fact中变量值
                        update(discuss_postmob_discuss_post_attentionattention);//更新fact中变量值
                        update(discuss_postmob_discuss_post_attentiondiscuss_post);//更新fact中变量值
                        update(discuss_postmob_discuss_post_attentionfor_obj);//更新fact中变量值
                        update(discuss_postmob_discuss_post_attentionsrfactionparam);//更新fact中变量值
            end