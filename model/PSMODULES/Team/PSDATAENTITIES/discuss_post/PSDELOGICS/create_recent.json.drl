package cn.ibizlab.plm.team.logic.discuss_postlogic.create_recent;
        import java.util.Map;
        import java.util.HashMap;
        import com.alibaba.fastjson.JSONObject;
        import org.springframework.util.StringUtils;
        import org.springframework.util.ObjectUtils;
        import cn.ibizlab.plm.util.errors.BadRequestAlertException;
                global cn.ibizlab.plm.core.team.domain.discuss_post discuss_postcreate_recentdefault;
                global cn.ibizlab.plm.core.base.domain.recent discuss_postcreate_recentrecent;
                    global cn.ibizlab.plm.core.base.service.IrecentService recentservice;
        global cn.ibizlab.plm.core.team.service.Idiscuss_postService iBzSysDiscuss_postDefaultService;
        global cn.ibizlab.plm.util.security.AuthenticationUser curuser;


    no-loop

            //逻辑处理节点[开始]
            rule "begin"
            ruleflow-group "discuss_postcreate_recentbegin"
            when
            then
            end

            //逻辑处理节点[准备最近访问参数]
            rule "prepareparam1"
            ruleflow-group "discuss_postcreate_recentprepareparam1"
            when
            then
                            discuss_postcreate_recentrecent.set("ownerid",discuss_postcreate_recentdefault.get("id"));
                            discuss_postcreate_recentrecent.set("recentparentidentifier",discuss_postcreate_recentdefault.get("topicidentifier"));
                            discuss_postcreate_recentrecent.set("recentparentname",discuss_postcreate_recentdefault.get("topicname"));
                            discuss_postcreate_recentrecent.set("recentparent",discuss_postcreate_recentdefault.get("topicid"));
                                discuss_postcreate_recentrecent.set("createman",curuser.getSessionParams().get("srfpersonid"));
                            discuss_postcreate_recentrecent.set("type","3");
                            discuss_postcreate_recentrecent.set("name",discuss_postcreate_recentdefault.get("name"));
                            discuss_postcreate_recentrecent.set("ownertype","discuss");
                            discuss_postcreate_recentrecent.set("ownersubtype","post");
                        update(discuss_postcreate_recentdefault);//更新fact中变量值
                        update(discuss_postcreate_recentrecent);//更新fact中变量值
            end

            //逻辑处理节点[保存最近访问]
            rule "deaction1"
            ruleflow-group "discuss_postcreate_recentdeaction1"
            when
            then
                        recentservice.save(discuss_postcreate_recentrecent);
                        update(discuss_postcreate_recentdefault);//更新fact中变量值
                        update(discuss_postcreate_recentrecent);//更新fact中变量值
            end

            //逻辑处理节点[结束]
            rule "end1"
            ruleflow-group "discuss_postcreate_recentend1"
            when
            then
                        update(discuss_postcreate_recentdefault);//更新fact中变量值
                        update(discuss_postcreate_recentrecent);//更新fact中变量值
            end