{
  "codeName" : "fill_details",
  "defaultParamName" : "Default",
  "dynaModelFilePath" : "PSMODULES/ProjMgmt/PSDATAENTITIES/work_item_wizard/PSDELOGICS/fill_details.json",
  "logicName" : "填充操作明细属性",
  "memo" : "变更工作项类型前，填充操作明细属性",
  "name" : "填充操作明细属性",
  "getPSDELogicNodes" : [ {
    "codeName" : "Begin",
    "leftPos" : 200,
    "logicNodeType" : "BEGIN",
    "name" : "开始",
    "getPSDELogicLinks" : [ {
      "getDstPSDELogicNode" : {
        "modelref" : true,
        "id" : "PREPAREPARAM1"
      },
      "name" : "连接名称",
      "getSrcPSDELogicNode" : {
        "modelref" : true,
        "id" : "Begin"
      }
    } ],
    "topPos" : 140,
    "parallelOutput" : true
  }, {
    "codeName" : "PREPAREPARAM1",
    "leftPos" : 160,
    "logicNodeType" : "PREPAREPARAM",
    "name" : "准备查询过滤器参数",
    "getPSDELogicLinks" : [ {
      "getDstPSDELogicNode" : {
        "modelref" : true,
        "id" : "DEDATASET1"
      },
      "name" : "连接名称",
      "getSrcPSDELogicNode" : {
        "modelref" : true,
        "id" : "PREPAREPARAM1"
      }
    } ],
    "getPSDELogicNodeParams" : [ {
      "dstFieldName" : "n_id_in",
      "getDstPSDELogicParam" : {
        "modelref" : true,
        "id" : "work_item_filter"
      },
      "name" : "Default[work_item] ==> work_item_filter[n_id_in]",
      "paramAction" : "SETPARAMVALUE",
      "srcFieldName" : "work_item",
      "getSrcPSDELogicParam" : {
        "modelref" : true,
        "id" : "Default"
      },
      "srcValueType" : "SRCDLPARAM"
    } ],
    "topPos" : 265
  }, {
    "codeName" : "DEDATASET1",
    "getDstPSDEDataSet" : {
      "modelref" : true,
      "id" : "Default"
    },
    "getDstPSDELogicParam" : {
      "modelref" : true,
      "id" : "work_item_filter"
    },
    "getDstPSDataEntity" : {
      "modelref" : true,
      "path" : "PSMODULES/ProjMgmt/PSDATAENTITIES/work_item.json"
    },
    "leftPos" : 160,
    "logicNodeType" : "DEDATASET",
    "name" : "获取工作项集合",
    "getPSDELogicLinks" : [ {
      "getDstPSDELogicNode" : {
        "modelref" : true,
        "id" : "RAWSFCODE1"
      },
      "name" : "连接名称",
      "getSrcPSDELogicNode" : {
        "modelref" : true,
        "id" : "DEDATASET1"
      }
    } ],
    "getRetPSDELogicParam" : {
      "modelref" : true,
      "id" : "work_items"
    },
    "topPos" : 402
  }, {
    "code" : "def _default = logic.param('default').getReal()\r\ndef project_id = _default.get('project_id')\r\ndef project_runtime = sys.dataentity('project')\r\ndef entity_runtime = sys.dataentity('work_item_wizard_detail')\r\ndef work_item_runtime = sys.dataentity('work_item')\r\ndef work_item_type_runtime = sys.dataentity('work_item_type')\r\ndef project = project_runtime.get(project_id);\r\ndef details = entity_runtime.list()\r\ndef work_items = logic.param('work_items').getReal()\r\ndef influence_ids = ''\r\n\r\nwork_items.each { item ->\r\n    if(influence_ids != ''){\r\n        influence_ids = influence_ids + ',' + item.get('id')\r\n    } else {\r\n        influence_ids = item.get('id')\r\n    }\r\n    def work_item_wizard_detail = sys.entity('work_item_wizard_detail')\r\n    work_item_wizard_detail.set('origin_type', item.get('work_item_type_id'))\r\n    def work_item_type_filter = work_item_type_runtime.filter()\r\n    work_item_type_filter.eq('project_type', project.get('type'))\r\n    work_item_type_filter.ne('id', item.get('work_item_type_id'))\r\n    def choose_types = work_item_type_filter.select('')\r\n    if(choose_types.size() > 0){\r\n        work_item_wizard_detail.set('target_type', choose_types.get(0).get('id'))\r\n    }\r\n    work_item_wizard_detail.set('id', item.get('id'))\r\n    work_item_wizard_detail.set('wizard_id', _default.get('id'))\r\n    work_item_wizard_detail.set('origin_state', item.get('state'))\r\n    work_item_wizard_detail.set('target_state', '10')\r\n    work_item_wizard_detail.set('project_id', item.get('project_id'))\r\n    work_item_wizard_detail.set('title', item.get('title'))\r\n    work_item_wizard_detail.set('assignee_name', item.get('assignee_name'))\r\n    work_item_wizard_detail.set('priority', item.get('priority'))\r\n    work_item_wizard_detail.set('influence', 1)\r\n    // 子工作项\r\n    def child_filter = sys.filter('work_item')\r\n    child_filter.eq('pid', item.get('id'))\r\n    def childs = child_filter.select('')\r\n    work_item_wizard_detail.set('influence_childs', 0)\r\n    if(childs.size() > 0){\r\n        work_item_wizard_detail.set('influence_childs', childs.size())\r\n        def child_work_item_types = work_item_runtime.list()\r\n        def childItems = childs.groupBy { it.get('work_item_type_id') }\r\n        childItems.each { work_item_type_id, itemList ->\r\n            def child_work_item = sys.entity('work_item')\r\n            def influence_child_ids = ''\r\n            child_work_item.set('child_work_item_type', work_item_type_id)\r\n            itemList.each { it ->\r\n                if(influence_child_ids != ''){\r\n                    influence_child_ids = influence_child_ids + ',' + it.get('id')\r\n                } else {\r\n                    influence_child_ids = it.get('id')\r\n                }\r\n            }\r\n            child_work_item.set('influence_child_ids', influence_child_ids)\r\n            child_work_item.set('parent_title', work_item_wizard_detail.get('title'))\r\n            child_work_item.set('influence', itemList.size())\r\n            child_work_item.set('id', work_item_type_id)\r\n            child_work_item.set('parent_origin_type', item.get('work_item_type_id'))\r\n            child_work_item_types.add(child_work_item)\r\n        }\r\n        work_item_wizard_detail.set('child_work_item_types', child_work_item_types)\r\n    }\r\n    details.add(work_item_wizard_detail)\r\n}\r\n_default.set('details', details)\r\n_default.set('influence_ids', influence_ids)",
    "codeName" : "RAWSFCODE1",
    "codeType" : "Groovy",
    "leftPos" : 160,
    "logicNodeType" : "RAWSFCODE",
    "name" : "封装属性",
    "getPSDELogicLinks" : [ {
      "getDstPSDELogicNode" : {
        "modelref" : true,
        "id" : "END1"
      },
      "name" : "连接名称",
      "getSrcPSDELogicNode" : {
        "modelref" : true,
        "id" : "RAWSFCODE1"
      }
    } ],
    "topPos" : 520
  }, {
    "codeName" : "END1",
    "leftPos" : 198,
    "logicNodeType" : "END",
    "name" : "结束",
    "getReturnParam" : {
      "modelref" : true,
      "id" : "Default"
    },
    "returnType" : "LOGICPARAM",
    "topPos" : 661
  } ],
  "getPSDELogicParams" : [ {
    "codeName" : "Default",
    "logicName" : "传入变量",
    "name" : "传入变量",
    "getParamPSDataEntity" : {
      "modelref" : true,
      "path" : "PSMODULES/ProjMgmt/PSDATAENTITIES/work_item_wizard.json"
    },
    "default" : true,
    "entityParam" : true
  }, {
    "codeName" : "work_item",
    "logicName" : "工作项",
    "name" : "工作项",
    "getParamPSDataEntity" : {
      "modelref" : true,
      "path" : "PSMODULES/ProjMgmt/PSDATAENTITIES/work_item.json"
    },
    "entityParam" : true
  }, {
    "codeName" : "work_item_filter",
    "logicName" : "工作项查询过滤器",
    "name" : "工作项查询过滤器",
    "getParamPSDataEntity" : {
      "modelref" : true,
      "path" : "PSMODULES/ProjMgmt/PSDATAENTITIES/work_item.json"
    },
    "filterParam" : true
  }, {
    "codeName" : "work_items",
    "logicName" : "分页查询结果变量",
    "name" : "分页查询结果变量",
    "getParamPSDataEntity" : {
      "modelref" : true,
      "path" : "PSMODULES/ProjMgmt/PSDATAENTITIES/work_item.json"
    },
    "entityPageParam" : true
  } ],
  "getStartPSDELogicNode" : {
    "modelref" : true,
    "id" : "Begin"
  },
  "enableBackend" : true,
  "enableFront" : false
}