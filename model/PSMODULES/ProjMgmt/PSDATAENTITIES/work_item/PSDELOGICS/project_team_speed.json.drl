package cn.ibizlab.plm.projmgmt.logic.work_itemlogic.project_team_speed;
        import java.util.Map;
        import java.util.HashMap;
        import com.alibaba.fastjson.JSONObject;
        import org.springframework.util.StringUtils;
        import org.springframework.util.ObjectUtils;
        import cn.ibizlab.plm.util.errors.BadRequestAlertException;
                global cn.ibizlab.plm.core.projmgmt.domain.work_item work_itemproject_team_speeddefault;
                global java.util.Map work_itemproject_team_speedresult;
        global cn.ibizlab.plm.core.projmgmt.service.Iwork_itemService iBzSysWork_itemDefaultService;
        global cn.ibizlab.plm.util.security.AuthenticationUser curuser;


    no-loop

            //逻辑处理节点[开始]
            rule "begin"
            ruleflow-group "work_itemproject_team_speedbegin"
            when
            then
            end

            //逻辑处理节点[结束]
            rule "end1"
            ruleflow-group "work_itemproject_team_speedend1"
            when
            then
                        update(work_itemproject_team_speeddefault);//更新fact中变量值
                        update(work_itemproject_team_speedresult);//更新fact中变量值
            end

            //逻辑处理节点[查询团队速度]
            rule "rawsqlcall1"
            ruleflow-group "work_itemproject_team_speedrawsqlcall1"
            when
            then
    Map param =new HashMap();
        param.put("param0",work_itemproject_team_speeddefault.get("n_project_id_eq"));
        param.put("param1",work_itemproject_team_speeddefault.get("n_create_time_gtandeq"));
        param.put("param2",work_itemproject_team_speeddefault.get("n_create_time_gtandeq"));
        param.put("param3",work_itemproject_team_speeddefault.get("n_create_time_ltandeq"));
        param.put("param4",work_itemproject_team_speeddefault.get("n_create_time_ltandeq"));
        param.put("param5",work_itemproject_team_speeddefault.get("n_create_time_gtandeq"));
        param.put("param6",work_itemproject_team_speeddefault.get("n_create_time_ltandeq"));
    String strSql="SELECT   SUM(CASE WHEN t31.`TYPE` = 'completed' THEN 1 ELSE 0 END) AS count2,   COUNT(*) AS count,   COALESCE(t1.`SPRINT_ID`, '未加入迭代') AS filter_type FROM   `WORK_ITEM` t1   LEFT JOIN `WORK_ITEM_STATE` t31 ON t1.`STATE` = t31.`ID` WHERE   t1.`PROJECT_ID` = #{et.param0} --   AND t1.`WORK_ITEM_TYPE_ID` LIKE '%story%'   AND t1.`IS_DELETED` = 0 	AND ((#{et.param1} IS NULL OR #{et.param2} = '' OR #{et.param3} IS NULL OR #{et.param4} = '') OR t1.CREATE_TIME BETWEEN #{et.param5} and #{et.param6} ) GROUP BY   filter_type; ";
                        java.util.List<JSONObject> entities=iBzSysWork_itemDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                work_itemproject_team_speedresult.putAll(entity);
                            }
                        update(work_itemproject_team_speeddefault);//更新fact中变量值
                        update(work_itemproject_team_speedresult);//更新fact中变量值
            end