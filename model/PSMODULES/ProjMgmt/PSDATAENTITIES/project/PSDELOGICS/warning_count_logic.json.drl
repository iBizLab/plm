package cn.ibizlab.plm.projmgmt.logic.projectlogic.warning_count_logic;
        import java.util.Map;
        import java.util.HashMap;
        import com.alibaba.fastjson.JSONObject;
        import org.springframework.util.StringUtils;
        import org.springframework.util.ObjectUtils;
        import cn.ibizlab.plm.util.errors.BadRequestAlertException;
                global cn.ibizlab.plm.core.projmgmt.domain.project projectwarning_count_logicdefault;
                global cn.ibizlab.plm.core.projmgmt.domain.project projectwarning_count_logicresult;
                global cn.ibizlab.plm.core.projmgmt.domain.work_item projectwarning_count_logicwork_item_filter;
                global cn.ibizlab.plm.core.projmgmt.domain.work_item projectwarning_count_logicwork_item_page;
        global cn.ibizlab.plm.core.projmgmt.service.IprojectService iBzSysProjectDefaultService;
        global cn.ibizlab.plm.util.security.AuthenticationUser curuser;


    no-loop

            //逻辑处理节点[开始]
            rule "begin"
            ruleflow-group "projectwarning_count_logicbegin"
            when
            then
            end

            //逻辑处理节点[统计逾期、预警、当前预警]
            rule "rawsqlcall1"
            ruleflow-group "projectwarning_count_logicrawsqlcall1"
            when
            then
    Map param =new HashMap();
        param.put("param0",projectwarning_count_logicdefault.get("id"));
        param.put("param1",projectwarning_count_logicdefault.get("id"));
        param.put("param2",projectwarning_count_logicdefault.get("id"));
    String strSql="SELECT     COUNT(CASE WHEN t1.IS_DELETED = 0                 AND t1.IS_ARCHIVED = 0                 AND (IFNULL((TIMESTAMPDIFF(DAY, t1.`END_AT`, IFNULL(t1.`ACTUAL_END_AT`, CURDATE()))), NULL) IS NOT NULL)                 AND t1.project_id =#{et.param0}                 AND TIMESTAMPDIFF(DAY, t1.`END_AT`, IFNULL(t1.`ACTUAL_END_AT`, CURDATE())) BETWEEN -3 AND -1                 AND t1.state = w.id                 AND w.type <> 'completed'             THEN 1 END) AS upcoming_warning_count,     COUNT(CASE WHEN t1.IS_DELETED = 0                 AND t1.IS_ARCHIVED = 0                 AND (IFNULL((TIMESTAMPDIFF(DAY, t1.`END_AT`, IFNULL(t1.`ACTUAL_END_AT`, CURDATE()))), NULL) IS NOT NULL)                 AND t1.project_id =#{et.param1}                 AND TIMESTAMPDIFF(DAY, t1.`END_AT`, IFNULL(t1.`ACTUAL_END_AT`, CURDATE())) = 0                 AND t1.state = w.id                 AND w.type <> 'completed'             THEN 1 END) AS daily_warning_count,     COUNT(CASE WHEN t1.IS_DELETED = 0                 AND t1.IS_ARCHIVED = 0                 AND (IFNULL((TIMESTAMPDIFF(DAY, t1.`END_AT`, IFNULL(t1.`ACTUAL_END_AT`, CURDATE()))), NULL) IS NOT NULL)                 AND t1.project_id =#{et.param2}                 AND TIMESTAMPDIFF(DAY, t1.`END_AT`, IFNULL(t1.`ACTUAL_END_AT`, CURDATE())) > 0                 AND t1.state = w.id                 AND w.type <> 'completed'             THEN 1 END) AS overdue_count FROM     `WORK_ITEM` t1 JOIN     `work_item_state` w ON t1.state = w.id;";
                        java.util.List<JSONObject> entities=iBzSysProjectDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    projectwarning_count_logicresult.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(projectwarning_count_logicdefault);//更新fact中变量值
                        update(projectwarning_count_logicresult);//更新fact中变量值
                        update(projectwarning_count_logicwork_item_filter);//更新fact中变量值
                        update(projectwarning_count_logicwork_item_page);//更新fact中变量值
            end

            //逻辑处理节点[总计条数]
            rule "rawsqlcall2"
            ruleflow-group "projectwarning_count_logicrawsqlcall2"
            when
            then
    Map param =new HashMap();
        param.put("param0",projectwarning_count_logicdefault.get("id"));
    String strSql="SELECT     COUNT(1) AS total_work_item_count FROM     work_item w      LEFT JOIN project p on w.PROJECT_ID = p.ID     LEFT JOIN work_item_state s on s.ID = w.state WHERE     W.IS_DELETED = 0     AND W.IS_ARCHIVED = 0     AND s.type <> 'completed'     AND p.ID = #{et.param0};";
                        java.util.List<JSONObject> entities=iBzSysProjectDefaultService.select(strSql,param);//SQL调用
                            if(entities.size()>0){
                            JSONObject entity=entities.get(0);
                                    for (Map.Entry entry : entity.entrySet()) {
                                    projectwarning_count_logicresult.set(String.valueOf(entry.getKey()),entry.getValue());
                                    }
                            }
                        update(projectwarning_count_logicdefault);//更新fact中变量值
                        update(projectwarning_count_logicresult);//更新fact中变量值
                        update(projectwarning_count_logicwork_item_filter);//更新fact中变量值
                        update(projectwarning_count_logicwork_item_page);//更新fact中变量值
            end

            //逻辑处理节点[结束]
            rule "end1"
            ruleflow-group "projectwarning_count_logicend1"
            when
            then
                        update(projectwarning_count_logicdefault);//更新fact中变量值
                        update(projectwarning_count_logicresult);//更新fact中变量值
                        update(projectwarning_count_logicwork_item_filter);//更新fact中变量值
                        update(projectwarning_count_logicwork_item_page);//更新fact中变量值
            end

            //逻辑处理节点[计算逾期比例]
            rule "rawsfcode1"
            ruleflow-group "projectwarning_count_logicrawsfcode1"
            when
            then
                        update(projectwarning_count_logicdefault);//更新fact中变量值
                        update(projectwarning_count_logicresult);//更新fact中变量值
                        update(projectwarning_count_logicwork_item_filter);//更新fact中变量值
                        update(projectwarning_count_logicwork_item_page);//更新fact中变量值
            end