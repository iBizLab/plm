/* stylelint-disable selector-class-pattern */
$follow: (
  'width': 100%,
);

$follow-readonly-text-item: (
  'color': getCssVar(form-item, text-color),
);

@include b(follow) {
  display: flex;
  flex: 1;
  align-items: center;
  justify-content: flex-end;
  min-width: 70px;
  padding-left: getCssVar('spacing', 'tight');

  @include set-component-css-var('follow', $follow);
  @include set-component-css-var('follow-readonly-text-item', $follow-readonly-text-item);

  // 父选项节点样式
  @include e(branch-node){
    >.el-tree-node__content {
      // 父节点禁用时文本还是正常颜色
      #{getCssVarName(color, disabled, text)}: getCssVar(color,text,0);
    }
  }

  // proper弹框
  @include e(showcase) {
    display: flex;
    align-items: center;

    &.is-active,
    &:hover {
      color: getCssVar(color, primary);
      cursor: pointer;

      svg {
        fill: getCssVar(color, primary);
      }
    }
    @include m(icon) {
      display: flex;
      align-items: center;
      font-size: getCssVar('font-size', 'header-6');
    }
    @include m(text) {
      margin-left: getCssVar('spacing', 'extra-tight');
    }
  }

  .el-select {
    width: 100%;
  }
}

@include b(follow-readonly-text-item){
  margin-right: getCssVar(spacing, tight);
  font-size: getCssVar(form-item, font-size);
  line-height: getCssVar(editor, default, line-height);
  color: getCssVar(follow, readonly-text-item-color);

  @include b(icon){
    @include flex(row, center, center);

    width: getCssVar(width-icon, medium);
    height: getCssVar(width-icon, medium);
    margin-right: getCssVar(spacing, extra-tight);
    font-size: getCssVar(font-size, regular);
  }
}

@include b(follow-select-option-content) {
  @include flex(row, flex-start, center);

  @include b(icon){
    @include flex(row, center, center);

    width: getCssVar(width-icon, medium);
    height: getCssVar(width-icon, medium);
    margin-right: getCssVar(spacing, extra-tight);
    font-size: getCssVar(font-size, regular);
  }

  width: 100%;
  height: 100%;
  color: getCssVar(follow, select-option-item-color);
}

// 表单下的下拉框默认显示，悬浮上去显示编辑器
@include b(follow-form-default-content){
  display: none;
}

@include b(form-item){

  @include b(follow) {
    @include when(show-default){
      // 悬浮显示编辑器
      &:hover{
        @include b(follow-form-default-content){
          display: none;
        }
        @include b(follow-select){
          display: block;
        }
      }

      // 不悬浮时显示信息态
      @include b(follow-form-default-content){
        display: flex;
        align-items: center;
        width: 100%;
        padding: getCssVar(form-item, hover-edit-padding);
        font-family: Arial, sans-serif;;
        font-size: getCssVar(form-item, font-size);
        line-height: getCssVar(editor, default, line-height);
        color: getCssVar(form-item, text-color);

        @include when(multiple){
          height: getCssVar(editor, default, line-height);
          @include b(follow-content-item){
            height: 22px;
            padding: 0 9px;
            margin: 2px 6px 2px 0;
            font-size: getCssVar(font-size, small);
            line-height: 22px;
            color: getCssVar(editor, default, text-color);
            background-color: getCssVar(color, fill-0);
            border: 1px solid transparent;
            border-radius: getCssVar(border-radius, small);
          }
        }
      }
      @include b(follow-select){
        display: none;
      }

      // 输入态
      @include when(editable){
        @include b(follow-form-default-content){
          display: none;
        }
        @include b(follow-select){
          display: block;
        }
      }
    }

  }
}

@include b(follow-popover) {
  &.el-popper {
    padding: 0;

    .#{bem(follow__item--text)} {
      color: getCssVar(color, text, 0);
    }

    // 提示字体颜色
    .#{bem(follow__item--tooltip)} {
      padding-right: getCssVar('spacing', 'tight');
      margin-top: getCssVar('spacing', 'extra-tight');
      font-size: getCssVar('font-size', 'small');
      color: getCssVar(color, text, 3);
      white-space: pre-wrap;
    }

    // 下划线
    .#{bem(follow__item--divider)} {
      padding: 0 getCssVar('spacing', 'base-loose');
    }
  }

  &.el-popper.el-popper.el-dropdown__popper .el-scrollbar .el-dropdown__list .el-dropdown-menu__item,
  &.el-popper.el-dropdown__popper .el-dropdown-menu,
  &.el-popper.el-dropdown__popper .el-scrollbar .el-dropdown__list {
    background-color: transparent;
  }
  &.el-popper.el-dropdown__popper .el-scrollbar .el-dropdown__list .#{bem(follow-popper__dropdown-menu)} {
    padding: getCssVar('spacing', 'base-tight') 0;
  }

  &.el-popper.el-popper.el-dropdown__popper .el-scrollbar .el-dropdown__list .el-dropdown-menu__item{
    display: flex;
    flex-direction: column;
    width: 240px;
    padding: 0;

    &>div {
      width: 100%;
      text-align: left;
    }
  }

  .el-divider {
    margin: getCssVar('spacing', 'extra-tight') 0;
  }
}

@include b(follow-content) {
  width: 240px;
  padding: getCssVar('spacing', 'tight') getCssVar('spacing', 'base-loose');

  &:hover {
    background: var(--ibiz-color-bg-0);
  }

  &.is-active {
    background-color: var(--ibiz-color-primary-light-default);
  }
}
