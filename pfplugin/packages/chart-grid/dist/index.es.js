import './style.css';
var kL = Object.defineProperty;
var VL = (r, e, t) => e in r ? kL(r, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : r[e] = t;
var qh = (r, e, t) => (VL(r, typeof e != "symbol" ? e + "" : e, t), t);
import { ChartController as BL, registerControlProvider as zL } from "@ibiz-template/runtime";
import { defineComponent as GL, ref as Da, onMounted as FL, onBeforeUnmount as HL, createVNode as ee, resolveComponent as Ci, createTextVNode as Kh, nextTick as _m } from "vue";
import { useControlController as WL, useNamespace as $L } from "@ibiz-template/vue3-util";
import { createUUID as UL } from "qx-util";
import { clone as jh } from "@ibiz-template/core";
class YL {
  constructor() {
    qh(this, "component", "ChartGrid");
  }
}
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
var bd = function(r, e) {
  return bd = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t, a) {
    t.__proto__ = a;
  } || function(t, a) {
    for (var n in a)
      Object.prototype.hasOwnProperty.call(a, n) && (t[n] = a[n]);
  }, bd(r, e);
};
function N(r, e) {
  if (typeof e != "function" && e !== null)
    throw new TypeError("Class extends value " + String(e) + " is not a constructor or null");
  bd(r, e);
  function t() {
    this.constructor = r;
  }
  r.prototype = e === null ? Object.create(e) : (t.prototype = e.prototype, new t());
}
var ZL = function() {
  function r() {
    this.firefox = !1, this.ie = !1, this.edge = !1, this.newEdge = !1, this.weChat = !1;
  }
  return r;
}(), XL = function() {
  function r() {
    this.browser = new ZL(), this.node = !1, this.wxa = !1, this.worker = !1, this.svgSupported = !1, this.touchEventsSupported = !1, this.pointerEventsSupported = !1, this.domSupported = !1, this.transformSupported = !1, this.transform3dSupported = !1, this.hasGlobalWindow = typeof window < "u";
  }
  return r;
}(), On = new XL();
typeof wx == "object" && typeof wx.getSystemInfoSync == "function" ? (On.wxa = !0, On.touchEventsSupported = !0) : typeof document > "u" && typeof self < "u" ? On.worker = !0 : typeof navigator > "u" ? (On.node = !0, On.svgSupported = !0) : qL(navigator.userAgent, On);
function qL(r, e) {
  var t = e.browser, a = r.match(/Firefox\/([\d.]+)/), n = r.match(/MSIE\s([\d.]+)/) || r.match(/Trident\/.+?rv:(([\d.]+))/), i = r.match(/Edge?\/([\d.]+)/), o = /micromessenger/i.test(r);
  a && (t.firefox = !0, t.version = a[1]), n && (t.ie = !0, t.version = n[1]), i && (t.edge = !0, t.version = i[1], t.newEdge = +i[1].split(".")[0] > 18), o && (t.weChat = !0), e.svgSupported = typeof SVGRect < "u", e.touchEventsSupported = "ontouchstart" in window && !t.ie && !t.edge, e.pointerEventsSupported = "onpointerdown" in window && (t.edge || t.ie && +t.version >= 11), e.domSupported = typeof document < "u";
  var s = document.documentElement.style;
  e.transform3dSupported = (t.ie && "transition" in s || t.edge || "WebKitCSSMatrix" in window && "m11" in new WebKitCSSMatrix() || "MozPerspective" in s) && !("OTransition" in s), e.transformSupported = e.transform3dSupported || t.ie && +t.version >= 9;
}
const bt = On;
var fg = 12, Ib = "sans-serif", ja = fg + "px " + Ib, KL = 20, jL = 100, JL = "007LLmW'55;N0500LLLLLLLLLL00NNNLzWW\\\\WQb\\0FWLg\\bWb\\WQ\\WrWWQ000CL5LLFLL0LL**F*gLLLL5F0LF\\FFF5.5N";
function QL(r) {
  var e = {};
  if (typeof JSON > "u")
    return e;
  for (var t = 0; t < r.length; t++) {
    var a = String.fromCharCode(t + 32), n = (r.charCodeAt(t) - KL) / jL;
    e[a] = n;
  }
  return e;
}
var t2 = QL(JL), Ja = {
  createCanvas: function() {
    return typeof document < "u" && document.createElement("canvas");
  },
  measureText: function() {
    var r, e;
    return function(t, a) {
      if (!r) {
        var n = Ja.createCanvas();
        r = n && n.getContext("2d");
      }
      if (r)
        return e !== a && (e = r.font = a || ja), r.measureText(t);
      t = t || "", a = a || ja;
      var i = /(\d+)px/.exec(a), o = i && +i[1] || fg, s = 0;
      if (a.indexOf("mono") >= 0)
        s = o * t.length;
      else
        for (var l = 0; l < t.length; l++) {
          var u = t2[t[l]];
          s += u == null ? o : u * o;
        }
      return { width: s };
    };
  }(),
  loadImage: function(r, e, t) {
    var a = new Image();
    return a.onload = e, a.onerror = t, a.src = r, a;
  }
}, Lb = Yr([
  "Function",
  "RegExp",
  "Date",
  "Error",
  "CanvasGradient",
  "CanvasPattern",
  "Image",
  "Canvas"
], function(r, e) {
  return r["[object " + e + "]"] = !0, r;
}, {}), Eb = Yr([
  "Int8",
  "Uint8",
  "Uint8Clamped",
  "Int16",
  "Uint16",
  "Int32",
  "Uint32",
  "Float32",
  "Float64"
], function(r, e) {
  return r["[object " + e + "Array]"] = !0, r;
}, {}), wo = Object.prototype.toString, oh = Array.prototype, e2 = oh.forEach, r2 = oh.filter, hg = oh.slice, a2 = oh.map, Sm = (function() {
}).constructor, kl = Sm ? Sm.prototype : null, cg = "__proto__", n2 = 2311;
function Pb() {
  return n2++;
}
function br() {
  for (var r = [], e = 0; e < arguments.length; e++)
    r[e] = arguments[e];
  typeof console < "u" && console.error.apply(console, r);
}
function at(r) {
  if (r == null || typeof r != "object")
    return r;
  var e = r, t = wo.call(r);
  if (t === "[object Array]") {
    if (!Ms(r)) {
      e = [];
      for (var a = 0, n = r.length; a < n; a++)
        e[a] = at(r[a]);
    }
  } else if (Eb[t]) {
    if (!Ms(r)) {
      var i = r.constructor;
      if (i.from)
        e = i.from(r);
      else {
        e = new i(r.length);
        for (var a = 0, n = r.length; a < n; a++)
          e[a] = r[a];
      }
    }
  } else if (!Lb[t] && !Ms(r) && !fo(r)) {
    e = {};
    for (var o in r)
      r.hasOwnProperty(o) && o !== cg && (e[o] = at(r[o]));
  }
  return e;
}
function ht(r, e, t) {
  if (!j(e) || !j(r))
    return t ? at(e) : r;
  for (var a in e)
    if (e.hasOwnProperty(a) && a !== cg) {
      var n = r[a], i = e[a];
      j(i) && j(n) && !z(i) && !z(n) && !fo(i) && !fo(n) && !xm(i) && !xm(n) && !Ms(i) && !Ms(n) ? ht(n, i, t) : (t || !(a in r)) && (r[a] = at(e[a]));
    }
  return r;
}
function vg(r, e) {
  for (var t = r[0], a = 1, n = r.length; a < n; a++)
    t = ht(t, r[a], e);
  return t;
}
function V(r, e) {
  if (Object.assign)
    Object.assign(r, e);
  else
    for (var t in e)
      e.hasOwnProperty(t) && t !== cg && (r[t] = e[t]);
  return r;
}
function et(r, e, t) {
  for (var a = _t(e), n = 0; n < a.length; n++) {
    var i = a[n];
    (t ? e[i] != null : r[i] == null) && (r[i] = e[i]);
  }
  return r;
}
function vt(r, e) {
  if (r) {
    if (r.indexOf)
      return r.indexOf(e);
    for (var t = 0, a = r.length; t < a; t++)
      if (r[t] === e)
        return t;
  }
  return -1;
}
function i2(r, e) {
  var t = r.prototype;
  function a() {
  }
  a.prototype = e.prototype, r.prototype = new a();
  for (var n in t)
    t.hasOwnProperty(n) && (r.prototype[n] = t[n]);
  r.prototype.constructor = r, r.superClass = e;
}
function te(r, e, t) {
  if (r = "prototype" in r ? r.prototype : r, e = "prototype" in e ? e.prototype : e, Object.getOwnPropertyNames)
    for (var a = Object.getOwnPropertyNames(e), n = 0; n < a.length; n++) {
      var i = a[n];
      i !== "constructor" && (t ? e[i] != null : r[i] == null) && (r[i] = e[i]);
    }
  else
    et(r, e, t);
}
function xe(r) {
  return !r || typeof r == "string" ? !1 : typeof r.length == "number";
}
function M(r, e, t) {
  if (r && e)
    if (r.forEach && r.forEach === e2)
      r.forEach(e, t);
    else if (r.length === +r.length)
      for (var a = 0, n = r.length; a < n; a++)
        e.call(t, r[a], a, r);
    else
      for (var i in r)
        r.hasOwnProperty(i) && e.call(t, r[i], i, r);
}
function G(r, e, t) {
  if (!r)
    return [];
  if (!e)
    return dg(r);
  if (r.map && r.map === a2)
    return r.map(e, t);
  for (var a = [], n = 0, i = r.length; n < i; n++)
    a.push(e.call(t, r[n], n, r));
  return a;
}
function Yr(r, e, t, a) {
  if (r && e) {
    for (var n = 0, i = r.length; n < i; n++)
      t = e.call(a, t, r[n], n, r);
    return t;
  }
}
function Et(r, e, t) {
  if (!r)
    return [];
  if (!e)
    return dg(r);
  if (r.filter && r.filter === r2)
    return r.filter(e, t);
  for (var a = [], n = 0, i = r.length; n < i; n++)
    e.call(t, r[n], n, r) && a.push(r[n]);
  return a;
}
function o2(r, e, t) {
  if (r && e) {
    for (var a = 0, n = r.length; a < n; a++)
      if (e.call(t, r[a], a, r))
        return r[a];
  }
}
function _t(r) {
  if (!r)
    return [];
  if (Object.keys)
    return Object.keys(r);
  var e = [];
  for (var t in r)
    r.hasOwnProperty(t) && e.push(t);
  return e;
}
function s2(r, e) {
  for (var t = [], a = 2; a < arguments.length; a++)
    t[a - 2] = arguments[a];
  return function() {
    return r.apply(e, t.concat(hg.call(arguments)));
  };
}
var Y = kl && K(kl.bind) ? kl.call.bind(kl.bind) : s2;
function ot(r) {
  for (var e = [], t = 1; t < arguments.length; t++)
    e[t - 1] = arguments[t];
  return function() {
    return r.apply(this, e.concat(hg.call(arguments)));
  };
}
function z(r) {
  return Array.isArray ? Array.isArray(r) : wo.call(r) === "[object Array]";
}
function K(r) {
  return typeof r == "function";
}
function $(r) {
  return typeof r == "string";
}
function nf(r) {
  return wo.call(r) === "[object String]";
}
function At(r) {
  return typeof r == "number";
}
function j(r) {
  var e = typeof r;
  return e === "function" || !!r && e === "object";
}
function xm(r) {
  return !!Lb[wo.call(r)];
}
function Be(r) {
  return !!Eb[wo.call(r)];
}
function fo(r) {
  return typeof r == "object" && typeof r.nodeType == "number" && typeof r.ownerDocument == "object";
}
function sh(r) {
  return r.colorStops != null;
}
function l2(r) {
  return r.image != null;
}
function Rb(r) {
  return wo.call(r) === "[object RegExp]";
}
function fi(r) {
  return r !== r;
}
function jt() {
  for (var r = [], e = 0; e < arguments.length; e++)
    r[e] = arguments[e];
  for (var t = 0, a = r.length; t < a; t++)
    if (r[t] != null)
      return r[t];
}
function ft(r, e) {
  return r != null ? r : e;
}
function lr(r, e, t) {
  return r != null ? r : e != null ? e : t;
}
function dg(r) {
  for (var e = [], t = 1; t < arguments.length; t++)
    e[t - 1] = arguments[t];
  return hg.apply(r, e);
}
function pg(r) {
  if (typeof r == "number")
    return [r, r, r, r];
  var e = r.length;
  return e === 2 ? [r[0], r[1], r[0], r[1]] : e === 3 ? [r[0], r[1], r[2], r[1]] : r;
}
function J(r, e) {
  if (!r)
    throw new Error(e);
}
function Sr(r) {
  return r == null ? null : typeof r.trim == "function" ? r.trim() : r.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
}
var Nb = "__ec_primitive__";
function of(r) {
  r[Nb] = !0;
}
function Ms(r) {
  return r[Nb];
}
var u2 = function() {
  function r() {
    this.data = {};
  }
  return r.prototype.delete = function(e) {
    var t = this.has(e);
    return t && delete this.data[e], t;
  }, r.prototype.has = function(e) {
    return this.data.hasOwnProperty(e);
  }, r.prototype.get = function(e) {
    return this.data[e];
  }, r.prototype.set = function(e, t) {
    return this.data[e] = t, this;
  }, r.prototype.keys = function() {
    return _t(this.data);
  }, r.prototype.forEach = function(e) {
    var t = this.data;
    for (var a in t)
      t.hasOwnProperty(a) && e(t[a], a);
  }, r;
}(), Ob = typeof Map == "function";
function f2() {
  return Ob ? /* @__PURE__ */ new Map() : new u2();
}
var h2 = function() {
  function r(e) {
    var t = z(e);
    this.data = f2();
    var a = this;
    e instanceof r ? e.each(n) : e && M(e, n);
    function n(i, o) {
      t ? a.set(i, o) : a.set(o, i);
    }
  }
  return r.prototype.hasKey = function(e) {
    return this.data.has(e);
  }, r.prototype.get = function(e) {
    return this.data.get(e);
  }, r.prototype.set = function(e, t) {
    return this.data.set(e, t), t;
  }, r.prototype.each = function(e, t) {
    this.data.forEach(function(a, n) {
      e.call(t, a, n);
    });
  }, r.prototype.keys = function() {
    var e = this.data.keys();
    return Ob ? Array.from(e) : e;
  }, r.prototype.removeKey = function(e) {
    this.data.delete(e);
  }, r;
}();
function X(r) {
  return new h2(r);
}
function sf(r, e) {
  for (var t = new r.constructor(r.length + e.length), a = 0; a < r.length; a++)
    t[a] = r[a];
  for (var n = r.length, a = 0; a < e.length; a++)
    t[a + n] = e[a];
  return t;
}
function lh(r, e) {
  var t;
  if (Object.create)
    t = Object.create(r);
  else {
    var a = function() {
    };
    a.prototype = r, t = new a();
  }
  return e && V(t, e), t;
}
function kb(r) {
  var e = r.style;
  e.webkitUserSelect = "none", e.userSelect = "none", e.webkitTapHighlightColor = "rgba(0,0,0,0)", e["-webkit-touch-callout"] = "none";
}
function U(r, e) {
  return r.hasOwnProperty(e);
}
function Xt() {
}
var Bu = 180 / Math.PI;
function mi(r, e) {
  return r == null && (r = 0), e == null && (e = 0), [r, e];
}
function De(r, e) {
  return r[0] = e[0], r[1] = e[1], r;
}
function la(r) {
  return [r[0], r[1]];
}
function c2(r, e, t) {
  return r[0] = e, r[1] = t, r;
}
function wm(r, e, t) {
  return r[0] = e[0] + t[0], r[1] = e[1] + t[1], r;
}
function Td(r, e, t, a) {
  return r[0] = e[0] + t[0] * a, r[1] = e[1] + t[1] * a, r;
}
function Yn(r, e, t) {
  return r[0] = e[0] - t[0], r[1] = e[1] - t[1], r;
}
function Dd(r) {
  return Math.sqrt(v2(r));
}
function v2(r) {
  return r[0] * r[0] + r[1] * r[1];
}
function zu(r, e, t) {
  return r[0] = e[0] * t, r[1] = e[1] * t, r;
}
function bo(r, e) {
  var t = Dd(e);
  return t === 0 ? (r[0] = 0, r[1] = 0) : (r[0] = e[0] / t, r[1] = e[1] / t), r;
}
function Cd(r, e) {
  return Math.sqrt((r[0] - e[0]) * (r[0] - e[0]) + (r[1] - e[1]) * (r[1] - e[1]));
}
var za = Cd;
function d2(r, e) {
  return (r[0] - e[0]) * (r[0] - e[0]) + (r[1] - e[1]) * (r[1] - e[1]);
}
var ti = d2;
function Gu(r, e, t, a) {
  return r[0] = e[0] + a * (t[0] - e[0]), r[1] = e[1] + a * (t[1] - e[1]), r;
}
function he(r, e, t) {
  var a = e[0], n = e[1];
  return r[0] = t[0] * a + t[2] * n + t[4], r[1] = t[1] * a + t[3] * n + t[5], r;
}
function Ga(r, e, t) {
  return r[0] = Math.min(e[0], t[0]), r[1] = Math.min(e[1], t[1]), r;
}
function Fa(r, e, t) {
  return r[0] = Math.max(e[0], t[0]), r[1] = Math.max(e[1], t[1]), r;
}
var Ai = function() {
  function r(e, t) {
    this.target = e, this.topTarget = t && t.topTarget;
  }
  return r;
}(), p2 = function() {
  function r(e) {
    this.handler = e, e.on("mousedown", this._dragStart, this), e.on("mousemove", this._drag, this), e.on("mouseup", this._dragEnd, this);
  }
  return r.prototype._dragStart = function(e) {
    for (var t = e.target; t && !t.draggable; )
      t = t.parent || t.__hostTarget;
    t && (this._draggingTarget = t, t.dragging = !0, this._x = e.offsetX, this._y = e.offsetY, this.handler.dispatchToElement(new Ai(t, e), "dragstart", e.event));
  }, r.prototype._drag = function(e) {
    var t = this._draggingTarget;
    if (t) {
      var a = e.offsetX, n = e.offsetY, i = a - this._x, o = n - this._y;
      this._x = a, this._y = n, t.drift(i, o, e), this.handler.dispatchToElement(new Ai(t, e), "drag", e.event);
      var s = this.handler.findHover(a, n, t).target, l = this._dropTarget;
      this._dropTarget = s, t !== s && (l && s !== l && this.handler.dispatchToElement(new Ai(l, e), "dragleave", e.event), s && s !== l && this.handler.dispatchToElement(new Ai(s, e), "dragenter", e.event));
    }
  }, r.prototype._dragEnd = function(e) {
    var t = this._draggingTarget;
    t && (t.dragging = !1), this.handler.dispatchToElement(new Ai(t, e), "dragend", e.event), this._dropTarget && this.handler.dispatchToElement(new Ai(this._dropTarget, e), "drop", e.event), this._draggingTarget = null, this._dropTarget = null;
  }, r;
}();
const g2 = p2;
var y2 = function() {
  function r(e) {
    e && (this._$eventProcessor = e);
  }
  return r.prototype.on = function(e, t, a, n) {
    this._$handlers || (this._$handlers = {});
    var i = this._$handlers;
    if (typeof t == "function" && (n = a, a = t, t = null), !a || !e)
      return this;
    var o = this._$eventProcessor;
    t != null && o && o.normalizeQuery && (t = o.normalizeQuery(t)), i[e] || (i[e] = []);
    for (var s = 0; s < i[e].length; s++)
      if (i[e][s].h === a)
        return this;
    var l = {
      h: a,
      query: t,
      ctx: n || this,
      callAtLast: a.zrEventfulCallAtLast
    }, u = i[e].length - 1, f = i[e][u];
    return f && f.callAtLast ? i[e].splice(u, 0, l) : i[e].push(l), this;
  }, r.prototype.isSilent = function(e) {
    var t = this._$handlers;
    return !t || !t[e] || !t[e].length;
  }, r.prototype.off = function(e, t) {
    var a = this._$handlers;
    if (!a)
      return this;
    if (!e)
      return this._$handlers = {}, this;
    if (t) {
      if (a[e]) {
        for (var n = [], i = 0, o = a[e].length; i < o; i++)
          a[e][i].h !== t && n.push(a[e][i]);
        a[e] = n;
      }
      a[e] && a[e].length === 0 && delete a[e];
    } else
      delete a[e];
    return this;
  }, r.prototype.trigger = function(e) {
    for (var t = [], a = 1; a < arguments.length; a++)
      t[a - 1] = arguments[a];
    if (!this._$handlers)
      return this;
    var n = this._$handlers[e], i = this._$eventProcessor;
    if (n)
      for (var o = t.length, s = n.length, l = 0; l < s; l++) {
        var u = n[l];
        if (!(i && i.filter && u.query != null && !i.filter(e, u.query)))
          switch (o) {
            case 0:
              u.h.call(u.ctx);
              break;
            case 1:
              u.h.call(u.ctx, t[0]);
              break;
            case 2:
              u.h.call(u.ctx, t[0], t[1]);
              break;
            default:
              u.h.apply(u.ctx, t);
              break;
          }
      }
    return i && i.afterTrigger && i.afterTrigger(e), this;
  }, r.prototype.triggerWithContext = function(e) {
    for (var t = [], a = 1; a < arguments.length; a++)
      t[a - 1] = arguments[a];
    if (!this._$handlers)
      return this;
    var n = this._$handlers[e], i = this._$eventProcessor;
    if (n)
      for (var o = t.length, s = t[o - 1], l = n.length, u = 0; u < l; u++) {
        var f = n[u];
        if (!(i && i.filter && f.query != null && !i.filter(e, f.query)))
          switch (o) {
            case 0:
              f.h.call(s);
              break;
            case 1:
              f.h.call(s, t[0]);
              break;
            case 2:
              f.h.call(s, t[0], t[1]);
              break;
            default:
              f.h.apply(s, t.slice(1, o - 1));
              break;
          }
      }
    return i && i.afterTrigger && i.afterTrigger(e), this;
  }, r;
}();
const cr = y2;
var m2 = Math.log(2);
function Ad(r, e, t, a, n, i) {
  var o = a + "-" + n, s = r.length;
  if (i.hasOwnProperty(o))
    return i[o];
  if (e === 1) {
    var l = Math.round(Math.log((1 << s) - 1 & ~n) / m2);
    return r[t][l];
  }
  for (var u = a | 1 << t, f = t + 1; a & 1 << f; )
    f++;
  for (var h = 0, c = 0, v = 0; c < s; c++) {
    var d = 1 << c;
    d & n || (h += (v % 2 ? -1 : 1) * r[t][c] * Ad(r, e - 1, f, u, n | d, i), v++);
  }
  return i[o] = h, h;
}
function bm(r, e) {
  var t = [
    [r[0], r[1], 1, 0, 0, 0, -e[0] * r[0], -e[0] * r[1]],
    [0, 0, 0, r[0], r[1], 1, -e[1] * r[0], -e[1] * r[1]],
    [r[2], r[3], 1, 0, 0, 0, -e[2] * r[2], -e[2] * r[3]],
    [0, 0, 0, r[2], r[3], 1, -e[3] * r[2], -e[3] * r[3]],
    [r[4], r[5], 1, 0, 0, 0, -e[4] * r[4], -e[4] * r[5]],
    [0, 0, 0, r[4], r[5], 1, -e[5] * r[4], -e[5] * r[5]],
    [r[6], r[7], 1, 0, 0, 0, -e[6] * r[6], -e[6] * r[7]],
    [0, 0, 0, r[6], r[7], 1, -e[7] * r[6], -e[7] * r[7]]
  ], a = {}, n = Ad(t, 8, 0, 0, 0, a);
  if (n !== 0) {
    for (var i = [], o = 0; o < 8; o++)
      for (var s = 0; s < 8; s++)
        i[s] == null && (i[s] = 0), i[s] += ((o + s) % 2 ? -1 : 1) * Ad(t, 7, o === 0 ? 1 : 0, 1 << o, 1 << s, a) / n * e[o];
    return function(l, u, f) {
      var h = u * i[6] + f * i[7] + 1;
      l[0] = (u * i[0] + f * i[1] + i[2]) / h, l[1] = (u * i[3] + f * i[4] + i[5]) / h;
    };
  }
}
var Tm = "___zrEVENTSAVED", Jh = [];
function _2(r, e, t, a, n) {
  return Md(Jh, e, a, n, !0) && Md(r, t, Jh[0], Jh[1]);
}
function Md(r, e, t, a, n) {
  if (e.getBoundingClientRect && bt.domSupported && !Vb(e)) {
    var i = e[Tm] || (e[Tm] = {}), o = S2(e, i), s = x2(o, i, n);
    if (s)
      return s(r, t, a), !0;
  }
  return !1;
}
function S2(r, e) {
  var t = e.markers;
  if (t)
    return t;
  t = e.markers = [];
  for (var a = ["left", "right"], n = ["top", "bottom"], i = 0; i < 4; i++) {
    var o = document.createElement("div"), s = o.style, l = i % 2, u = (i >> 1) % 2;
    s.cssText = [
      "position: absolute",
      "visibility: hidden",
      "padding: 0",
      "margin: 0",
      "border-width: 0",
      "user-select: none",
      "width:0",
      "height:0",
      a[l] + ":0",
      n[u] + ":0",
      a[1 - l] + ":auto",
      n[1 - u] + ":auto",
      ""
    ].join("!important;"), r.appendChild(o), t.push(o);
  }
  return t;
}
function x2(r, e, t) {
  for (var a = t ? "invTrans" : "trans", n = e[a], i = e.srcCoords, o = [], s = [], l = !0, u = 0; u < 4; u++) {
    var f = r[u].getBoundingClientRect(), h = 2 * u, c = f.left, v = f.top;
    o.push(c, v), l = l && i && c === i[h] && v === i[h + 1], s.push(r[u].offsetLeft, r[u].offsetTop);
  }
  return l && n ? n : (e.srcCoords = o, e[a] = t ? bm(s, o) : bm(o, s));
}
function Vb(r) {
  return r.nodeName.toUpperCase() === "CANVAS";
}
var w2 = /([&<>"'])/g, b2 = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;"
};
function Ne(r) {
  return r == null ? "" : (r + "").replace(w2, function(e, t) {
    return b2[t];
  });
}
var T2 = /^(?:mouse|pointer|contextmenu|drag|drop)|click/, Qh = [], D2 = bt.browser.firefox && +bt.browser.version.split(".")[0] < 39;
function Id(r, e, t, a) {
  return t = t || {}, a ? Dm(r, e, t) : D2 && e.layerX != null && e.layerX !== e.offsetX ? (t.zrX = e.layerX, t.zrY = e.layerY) : e.offsetX != null ? (t.zrX = e.offsetX, t.zrY = e.offsetY) : Dm(r, e, t), t;
}
function Dm(r, e, t) {
  if (bt.domSupported && r.getBoundingClientRect) {
    var a = e.clientX, n = e.clientY;
    if (Vb(r)) {
      var i = r.getBoundingClientRect();
      t.zrX = a - i.left, t.zrY = n - i.top;
      return;
    } else if (Md(Qh, r, a, n)) {
      t.zrX = Qh[0], t.zrY = Qh[1];
      return;
    }
  }
  t.zrX = t.zrY = 0;
}
function gg(r) {
  return r || window.event;
}
function Qe(r, e, t) {
  if (e = gg(e), e.zrX != null)
    return e;
  var a = e.type, n = a && a.indexOf("touch") >= 0;
  if (n) {
    var o = a !== "touchend" ? e.targetTouches[0] : e.changedTouches[0];
    o && Id(r, o, e, t);
  } else {
    Id(r, e, e, t);
    var i = C2(e);
    e.zrDelta = i ? i / 120 : -(e.detail || 0) / 3;
  }
  var s = e.button;
  return e.which == null && s !== void 0 && T2.test(e.type) && (e.which = s & 1 ? 1 : s & 2 ? 3 : s & 4 ? 2 : 0), e;
}
function C2(r) {
  var e = r.wheelDelta;
  if (e)
    return e;
  var t = r.deltaX, a = r.deltaY;
  if (t == null || a == null)
    return e;
  var n = Math.abs(a !== 0 ? a : t), i = a > 0 ? -1 : a < 0 ? 1 : t > 0 ? -1 : 1;
  return 3 * n * i;
}
function Ld(r, e, t, a) {
  r.addEventListener(e, t, a);
}
function A2(r, e, t, a) {
  r.removeEventListener(e, t, a);
}
var da = function(r) {
  r.preventDefault(), r.stopPropagation(), r.cancelBubble = !0;
};
function Cm(r) {
  return r.which === 2 || r.which === 3;
}
var M2 = function() {
  function r() {
    this._track = [];
  }
  return r.prototype.recognize = function(e, t, a) {
    return this._doTrack(e, t, a), this._recognize(e);
  }, r.prototype.clear = function() {
    return this._track.length = 0, this;
  }, r.prototype._doTrack = function(e, t, a) {
    var n = e.touches;
    if (n) {
      for (var i = {
        points: [],
        touches: [],
        target: t,
        event: e
      }, o = 0, s = n.length; o < s; o++) {
        var l = n[o], u = Id(a, l, {});
        i.points.push([u.zrX, u.zrY]), i.touches.push(l);
      }
      this._track.push(i);
    }
  }, r.prototype._recognize = function(e) {
    for (var t in tc)
      if (tc.hasOwnProperty(t)) {
        var a = tc[t](this._track, e);
        if (a)
          return a;
      }
  }, r;
}();
function Am(r) {
  var e = r[1][0] - r[0][0], t = r[1][1] - r[0][1];
  return Math.sqrt(e * e + t * t);
}
function I2(r) {
  return [
    (r[0][0] + r[1][0]) / 2,
    (r[0][1] + r[1][1]) / 2
  ];
}
var tc = {
  pinch: function(r, e) {
    var t = r.length;
    if (t) {
      var a = (r[t - 1] || {}).points, n = (r[t - 2] || {}).points || a;
      if (n && n.length > 1 && a && a.length > 1) {
        var i = Am(a) / Am(n);
        !isFinite(i) && (i = 1), e.pinchScale = i;
        var o = I2(a);
        return e.pinchX = o[0], e.pinchY = o[1], {
          type: "pinch",
          target: r[0].target,
          event: e
        };
      }
    }
  }
};
function fr() {
  return [1, 0, 0, 1, 0, 0];
}
function uh(r) {
  return r[0] = 1, r[1] = 0, r[2] = 0, r[3] = 1, r[4] = 0, r[5] = 0, r;
}
function yg(r, e) {
  return r[0] = e[0], r[1] = e[1], r[2] = e[2], r[3] = e[3], r[4] = e[4], r[5] = e[5], r;
}
function ua(r, e, t) {
  var a = e[0] * t[0] + e[2] * t[1], n = e[1] * t[0] + e[3] * t[1], i = e[0] * t[2] + e[2] * t[3], o = e[1] * t[2] + e[3] * t[3], s = e[0] * t[4] + e[2] * t[5] + e[4], l = e[1] * t[4] + e[3] * t[5] + e[5];
  return r[0] = a, r[1] = n, r[2] = i, r[3] = o, r[4] = s, r[5] = l, r;
}
function Zr(r, e, t) {
  return r[0] = e[0], r[1] = e[1], r[2] = e[2], r[3] = e[3], r[4] = e[4] + t[0], r[5] = e[5] + t[1], r;
}
function _i(r, e, t) {
  var a = e[0], n = e[2], i = e[4], o = e[1], s = e[3], l = e[5], u = Math.sin(t), f = Math.cos(t);
  return r[0] = a * f + o * u, r[1] = -a * u + o * f, r[2] = n * f + s * u, r[3] = -n * u + f * s, r[4] = f * i + u * l, r[5] = f * l - u * i, r;
}
function mg(r, e, t) {
  var a = t[0], n = t[1];
  return r[0] = e[0] * a, r[1] = e[1] * n, r[2] = e[2] * a, r[3] = e[3] * n, r[4] = e[4] * a, r[5] = e[5] * n, r;
}
function To(r, e) {
  var t = e[0], a = e[2], n = e[4], i = e[1], o = e[3], s = e[5], l = t * o - i * a;
  return l ? (l = 1 / l, r[0] = o * l, r[1] = -i * l, r[2] = -a * l, r[3] = t * l, r[4] = (a * s - o * n) * l, r[5] = (i * n - t * s) * l, r) : null;
}
function L2(r) {
  var e = fr();
  return yg(e, r), e;
}
var E2 = function() {
  function r(e, t) {
    this.x = e || 0, this.y = t || 0;
  }
  return r.prototype.copy = function(e) {
    return this.x = e.x, this.y = e.y, this;
  }, r.prototype.clone = function() {
    return new r(this.x, this.y);
  }, r.prototype.set = function(e, t) {
    return this.x = e, this.y = t, this;
  }, r.prototype.equal = function(e) {
    return e.x === this.x && e.y === this.y;
  }, r.prototype.add = function(e) {
    return this.x += e.x, this.y += e.y, this;
  }, r.prototype.scale = function(e) {
    this.x *= e, this.y *= e;
  }, r.prototype.scaleAndAdd = function(e, t) {
    this.x += e.x * t, this.y += e.y * t;
  }, r.prototype.sub = function(e) {
    return this.x -= e.x, this.y -= e.y, this;
  }, r.prototype.dot = function(e) {
    return this.x * e.x + this.y * e.y;
  }, r.prototype.len = function() {
    return Math.sqrt(this.x * this.x + this.y * this.y);
  }, r.prototype.lenSquare = function() {
    return this.x * this.x + this.y * this.y;
  }, r.prototype.normalize = function() {
    var e = this.len();
    return this.x /= e, this.y /= e, this;
  }, r.prototype.distance = function(e) {
    var t = this.x - e.x, a = this.y - e.y;
    return Math.sqrt(t * t + a * a);
  }, r.prototype.distanceSquare = function(e) {
    var t = this.x - e.x, a = this.y - e.y;
    return t * t + a * a;
  }, r.prototype.negate = function() {
    return this.x = -this.x, this.y = -this.y, this;
  }, r.prototype.transform = function(e) {
    if (e) {
      var t = this.x, a = this.y;
      return this.x = e[0] * t + e[2] * a + e[4], this.y = e[1] * t + e[3] * a + e[5], this;
    }
  }, r.prototype.toArray = function(e) {
    return e[0] = this.x, e[1] = this.y, e;
  }, r.prototype.fromArray = function(e) {
    this.x = e[0], this.y = e[1];
  }, r.set = function(e, t, a) {
    e.x = t, e.y = a;
  }, r.copy = function(e, t) {
    e.x = t.x, e.y = t.y;
  }, r.len = function(e) {
    return Math.sqrt(e.x * e.x + e.y * e.y);
  }, r.lenSquare = function(e) {
    return e.x * e.x + e.y * e.y;
  }, r.dot = function(e, t) {
    return e.x * t.x + e.y * t.y;
  }, r.add = function(e, t, a) {
    e.x = t.x + a.x, e.y = t.y + a.y;
  }, r.sub = function(e, t, a) {
    e.x = t.x - a.x, e.y = t.y - a.y;
  }, r.scale = function(e, t, a) {
    e.x = t.x * a, e.y = t.y * a;
  }, r.scaleAndAdd = function(e, t, a, n) {
    e.x = t.x + a.x * n, e.y = t.y + a.y * n;
  }, r.lerp = function(e, t, a, n) {
    var i = 1 - n;
    e.x = i * t.x + n * a.x, e.y = i * t.y + n * a.y;
  }, r;
}();
const ut = E2;
var Vl = Math.min, Bl = Math.max, hn = new ut(), cn = new ut(), vn = new ut(), dn = new ut(), Go = new ut(), Fo = new ut(), P2 = function() {
  function r(e, t, a, n) {
    a < 0 && (e = e + a, a = -a), n < 0 && (t = t + n, n = -n), this.x = e, this.y = t, this.width = a, this.height = n;
  }
  return r.prototype.union = function(e) {
    var t = Vl(e.x, this.x), a = Vl(e.y, this.y);
    isFinite(this.x) && isFinite(this.width) ? this.width = Bl(e.x + e.width, this.x + this.width) - t : this.width = e.width, isFinite(this.y) && isFinite(this.height) ? this.height = Bl(e.y + e.height, this.y + this.height) - a : this.height = e.height, this.x = t, this.y = a;
  }, r.prototype.applyTransform = function(e) {
    r.applyTransform(this, this, e);
  }, r.prototype.calculateTransform = function(e) {
    var t = this, a = e.width / t.width, n = e.height / t.height, i = fr();
    return Zr(i, i, [-t.x, -t.y]), mg(i, i, [a, n]), Zr(i, i, [e.x, e.y]), i;
  }, r.prototype.intersect = function(e, t) {
    if (!e)
      return !1;
    e instanceof r || (e = r.create(e));
    var a = this, n = a.x, i = a.x + a.width, o = a.y, s = a.y + a.height, l = e.x, u = e.x + e.width, f = e.y, h = e.y + e.height, c = !(i < l || u < n || s < f || h < o);
    if (t) {
      var v = 1 / 0, d = 0, p = Math.abs(i - l), g = Math.abs(u - n), y = Math.abs(s - f), m = Math.abs(h - o), _ = Math.min(p, g), S = Math.min(y, m);
      i < l || u < n ? _ > d && (d = _, p < g ? ut.set(Fo, -p, 0) : ut.set(Fo, g, 0)) : _ < v && (v = _, p < g ? ut.set(Go, p, 0) : ut.set(Go, -g, 0)), s < f || h < o ? S > d && (d = S, y < m ? ut.set(Fo, 0, -y) : ut.set(Fo, 0, m)) : _ < v && (v = _, y < m ? ut.set(Go, 0, y) : ut.set(Go, 0, -m));
    }
    return t && ut.copy(t, c ? Go : Fo), c;
  }, r.prototype.contain = function(e, t) {
    var a = this;
    return e >= a.x && e <= a.x + a.width && t >= a.y && t <= a.y + a.height;
  }, r.prototype.clone = function() {
    return new r(this.x, this.y, this.width, this.height);
  }, r.prototype.copy = function(e) {
    r.copy(this, e);
  }, r.prototype.plain = function() {
    return {
      x: this.x,
      y: this.y,
      width: this.width,
      height: this.height
    };
  }, r.prototype.isFinite = function() {
    return isFinite(this.x) && isFinite(this.y) && isFinite(this.width) && isFinite(this.height);
  }, r.prototype.isZero = function() {
    return this.width === 0 || this.height === 0;
  }, r.create = function(e) {
    return new r(e.x, e.y, e.width, e.height);
  }, r.copy = function(e, t) {
    e.x = t.x, e.y = t.y, e.width = t.width, e.height = t.height;
  }, r.applyTransform = function(e, t, a) {
    if (!a) {
      e !== t && r.copy(e, t);
      return;
    }
    if (a[1] < 1e-5 && a[1] > -1e-5 && a[2] < 1e-5 && a[2] > -1e-5) {
      var n = a[0], i = a[3], o = a[4], s = a[5];
      e.x = t.x * n + o, e.y = t.y * i + s, e.width = t.width * n, e.height = t.height * i, e.width < 0 && (e.x += e.width, e.width = -e.width), e.height < 0 && (e.y += e.height, e.height = -e.height);
      return;
    }
    hn.x = vn.x = t.x, hn.y = dn.y = t.y, cn.x = dn.x = t.x + t.width, cn.y = vn.y = t.y + t.height, hn.transform(a), dn.transform(a), cn.transform(a), vn.transform(a), e.x = Vl(hn.x, cn.x, vn.x, dn.x), e.y = Vl(hn.y, cn.y, vn.y, dn.y);
    var l = Bl(hn.x, cn.x, vn.x, dn.x), u = Bl(hn.y, cn.y, vn.y, dn.y);
    e.width = l - e.x, e.height = u - e.y;
  }, r;
}();
const ct = P2;
var Bb = "silent";
function R2(r, e, t) {
  return {
    type: r,
    event: t,
    target: e.target,
    topTarget: e.topTarget,
    cancelBubble: !1,
    offsetX: t.zrX,
    offsetY: t.zrY,
    gestureEvent: t.gestureEvent,
    pinchX: t.pinchX,
    pinchY: t.pinchY,
    pinchScale: t.pinchScale,
    wheelDelta: t.zrDelta,
    zrByTouch: t.zrByTouch,
    which: t.which,
    stop: N2
  };
}
function N2() {
  da(this.event);
}
var O2 = function(r) {
  N(e, r);
  function e() {
    var t = r !== null && r.apply(this, arguments) || this;
    return t.handler = null, t;
  }
  return e.prototype.dispose = function() {
  }, e.prototype.setCursor = function() {
  }, e;
}(cr), Ho = function() {
  function r(e, t) {
    this.x = e, this.y = t;
  }
  return r;
}(), k2 = [
  "click",
  "dblclick",
  "mousewheel",
  "mouseout",
  "mouseup",
  "mousedown",
  "mousemove",
  "contextmenu"
], ec = new ct(0, 0, 0, 0), zb = function(r) {
  N(e, r);
  function e(t, a, n, i, o) {
    var s = r.call(this) || this;
    return s._hovered = new Ho(0, 0), s.storage = t, s.painter = a, s.painterRoot = i, s._pointerSize = o, n = n || new O2(), s.proxy = null, s.setHandlerProxy(n), s._draggingMgr = new g2(s), s;
  }
  return e.prototype.setHandlerProxy = function(t) {
    this.proxy && this.proxy.dispose(), t && (M(k2, function(a) {
      t.on && t.on(a, this[a], this);
    }, this), t.handler = this), this.proxy = t;
  }, e.prototype.mousemove = function(t) {
    var a = t.zrX, n = t.zrY, i = Gb(this, a, n), o = this._hovered, s = o.target;
    s && !s.__zr && (o = this.findHover(o.x, o.y), s = o.target);
    var l = this._hovered = i ? new Ho(a, n) : this.findHover(a, n), u = l.target, f = this.proxy;
    f.setCursor && f.setCursor(u ? u.cursor : "default"), s && u !== s && this.dispatchToElement(o, "mouseout", t), this.dispatchToElement(l, "mousemove", t), u && u !== s && this.dispatchToElement(l, "mouseover", t);
  }, e.prototype.mouseout = function(t) {
    var a = t.zrEventControl;
    a !== "only_globalout" && this.dispatchToElement(this._hovered, "mouseout", t), a !== "no_globalout" && this.trigger("globalout", { type: "globalout", event: t });
  }, e.prototype.resize = function() {
    this._hovered = new Ho(0, 0);
  }, e.prototype.dispatch = function(t, a) {
    var n = this[t];
    n && n.call(this, a);
  }, e.prototype.dispose = function() {
    this.proxy.dispose(), this.storage = null, this.proxy = null, this.painter = null;
  }, e.prototype.setCursorStyle = function(t) {
    var a = this.proxy;
    a.setCursor && a.setCursor(t);
  }, e.prototype.dispatchToElement = function(t, a, n) {
    t = t || {};
    var i = t.target;
    if (!(i && i.silent)) {
      for (var o = "on" + a, s = R2(a, t, n); i && (i[o] && (s.cancelBubble = !!i[o].call(i, s)), i.trigger(a, s), i = i.__hostTarget ? i.__hostTarget : i.parent, !s.cancelBubble); )
        ;
      s.cancelBubble || (this.trigger(a, s), this.painter && this.painter.eachOtherLayer && this.painter.eachOtherLayer(function(l) {
        typeof l[o] == "function" && l[o].call(l, s), l.trigger && l.trigger(a, s);
      }));
    }
  }, e.prototype.findHover = function(t, a, n) {
    var i = this.storage.getDisplayList(), o = new Ho(t, a);
    if (Mm(i, o, t, a, n), this._pointerSize && !o.target) {
      for (var s = [], l = this._pointerSize, u = l / 2, f = new ct(t - u, a - u, l, l), h = i.length - 1; h >= 0; h--) {
        var c = i[h];
        c !== n && !c.ignore && !c.ignoreCoarsePointer && (!c.parent || !c.parent.ignoreCoarsePointer) && (ec.copy(c.getBoundingRect()), c.transform && ec.applyTransform(c.transform), ec.intersect(f) && s.push(c));
      }
      if (s.length)
        for (var v = 4, d = Math.PI / 12, p = Math.PI * 2, g = 0; g < u; g += v)
          for (var y = 0; y < p; y += d) {
            var m = t + g * Math.cos(y), _ = a + g * Math.sin(y);
            if (Mm(s, o, m, _, n), o.target)
              return o;
          }
    }
    return o;
  }, e.prototype.processGesture = function(t, a) {
    this._gestureMgr || (this._gestureMgr = new M2());
    var n = this._gestureMgr;
    a === "start" && n.clear();
    var i = n.recognize(t, this.findHover(t.zrX, t.zrY, null).target, this.proxy.dom);
    if (a === "end" && n.clear(), i) {
      var o = i.type;
      t.gestureEvent = o;
      var s = new Ho();
      s.target = i.target, this.dispatchToElement(s, o, i.event);
    }
  }, e;
}(cr);
M(["click", "mousedown", "mouseup", "mousewheel", "dblclick", "contextmenu"], function(r) {
  zb.prototype[r] = function(e) {
    var t = e.zrX, a = e.zrY, n = Gb(this, t, a), i, o;
    if ((r !== "mouseup" || !n) && (i = this.findHover(t, a), o = i.target), r === "mousedown")
      this._downEl = o, this._downPoint = [e.zrX, e.zrY], this._upEl = o;
    else if (r === "mouseup")
      this._upEl = o;
    else if (r === "click") {
      if (this._downEl !== this._upEl || !this._downPoint || za(this._downPoint, [e.zrX, e.zrY]) > 4)
        return;
      this._downPoint = null;
    }
    this.dispatchToElement(i, r, e);
  };
});
function V2(r, e, t) {
  if (r[r.rectHover ? "rectContain" : "contain"](e, t)) {
    for (var a = r, n = void 0, i = !1; a; ) {
      if (a.ignoreClip && (i = !0), !i) {
        var o = a.getClipPath();
        if (o && !o.contain(e, t))
          return !1;
        a.silent && (n = !0);
      }
      var s = a.__hostTarget;
      a = s || a.parent;
    }
    return n ? Bb : !0;
  }
  return !1;
}
function Mm(r, e, t, a, n) {
  for (var i = r.length - 1; i >= 0; i--) {
    var o = r[i], s = void 0;
    if (o !== n && !o.ignore && (s = V2(o, t, a)) && (!e.topTarget && (e.topTarget = o), s !== Bb)) {
      e.target = o;
      break;
    }
  }
}
function Gb(r, e, t) {
  var a = r.painter;
  return e < 0 || e > a.getWidth() || t < 0 || t > a.getHeight();
}
const B2 = zb;
var Fb = 32, Wo = 7;
function z2(r) {
  for (var e = 0; r >= Fb; )
    e |= r & 1, r >>= 1;
  return r + e;
}
function Im(r, e, t, a) {
  var n = e + 1;
  if (n === t)
    return 1;
  if (a(r[n++], r[e]) < 0) {
    for (; n < t && a(r[n], r[n - 1]) < 0; )
      n++;
    G2(r, e, n);
  } else
    for (; n < t && a(r[n], r[n - 1]) >= 0; )
      n++;
  return n - e;
}
function G2(r, e, t) {
  for (t--; e < t; ) {
    var a = r[e];
    r[e++] = r[t], r[t--] = a;
  }
}
function Lm(r, e, t, a, n) {
  for (a === e && a++; a < t; a++) {
    for (var i = r[a], o = e, s = a, l; o < s; )
      l = o + s >>> 1, n(i, r[l]) < 0 ? s = l : o = l + 1;
    var u = a - o;
    switch (u) {
      case 3:
        r[o + 3] = r[o + 2];
      case 2:
        r[o + 2] = r[o + 1];
      case 1:
        r[o + 1] = r[o];
        break;
      default:
        for (; u > 0; )
          r[o + u] = r[o + u - 1], u--;
    }
    r[o] = i;
  }
}
function rc(r, e, t, a, n, i) {
  var o = 0, s = 0, l = 1;
  if (i(r, e[t + n]) > 0) {
    for (s = a - n; l < s && i(r, e[t + n + l]) > 0; )
      o = l, l = (l << 1) + 1, l <= 0 && (l = s);
    l > s && (l = s), o += n, l += n;
  } else {
    for (s = n + 1; l < s && i(r, e[t + n - l]) <= 0; )
      o = l, l = (l << 1) + 1, l <= 0 && (l = s);
    l > s && (l = s);
    var u = o;
    o = n - l, l = n - u;
  }
  for (o++; o < l; ) {
    var f = o + (l - o >>> 1);
    i(r, e[t + f]) > 0 ? o = f + 1 : l = f;
  }
  return l;
}
function ac(r, e, t, a, n, i) {
  var o = 0, s = 0, l = 1;
  if (i(r, e[t + n]) < 0) {
    for (s = n + 1; l < s && i(r, e[t + n - l]) < 0; )
      o = l, l = (l << 1) + 1, l <= 0 && (l = s);
    l > s && (l = s);
    var u = o;
    o = n - l, l = n - u;
  } else {
    for (s = a - n; l < s && i(r, e[t + n + l]) >= 0; )
      o = l, l = (l << 1) + 1, l <= 0 && (l = s);
    l > s && (l = s), o += n, l += n;
  }
  for (o++; o < l; ) {
    var f = o + (l - o >>> 1);
    i(r, e[t + f]) < 0 ? l = f : o = f + 1;
  }
  return l;
}
function F2(r, e) {
  var t = Wo, a, n, i = 0;
  r.length;
  var o = [];
  a = [], n = [];
  function s(v, d) {
    a[i] = v, n[i] = d, i += 1;
  }
  function l() {
    for (; i > 1; ) {
      var v = i - 2;
      if (v >= 1 && n[v - 1] <= n[v] + n[v + 1] || v >= 2 && n[v - 2] <= n[v] + n[v - 1])
        n[v - 1] < n[v + 1] && v--;
      else if (n[v] > n[v + 1])
        break;
      f(v);
    }
  }
  function u() {
    for (; i > 1; ) {
      var v = i - 2;
      v > 0 && n[v - 1] < n[v + 1] && v--, f(v);
    }
  }
  function f(v) {
    var d = a[v], p = n[v], g = a[v + 1], y = n[v + 1];
    n[v] = p + y, v === i - 3 && (a[v + 1] = a[v + 2], n[v + 1] = n[v + 2]), i--;
    var m = ac(r[g], r, d, p, 0, e);
    d += m, p -= m, p !== 0 && (y = rc(r[d + p - 1], r, g, y, y - 1, e), y !== 0 && (p <= y ? h(d, p, g, y) : c(d, p, g, y)));
  }
  function h(v, d, p, g) {
    var y = 0;
    for (y = 0; y < d; y++)
      o[y] = r[v + y];
    var m = 0, _ = p, S = v;
    if (r[S++] = r[_++], --g === 0) {
      for (y = 0; y < d; y++)
        r[S + y] = o[m + y];
      return;
    }
    if (d === 1) {
      for (y = 0; y < g; y++)
        r[S + y] = r[_ + y];
      r[S + g] = o[m];
      return;
    }
    for (var w = t, x, b, T; ; ) {
      x = 0, b = 0, T = !1;
      do
        if (e(r[_], o[m]) < 0) {
          if (r[S++] = r[_++], b++, x = 0, --g === 0) {
            T = !0;
            break;
          }
        } else if (r[S++] = o[m++], x++, b = 0, --d === 1) {
          T = !0;
          break;
        }
      while ((x | b) < w);
      if (T)
        break;
      do {
        if (x = ac(r[_], o, m, d, 0, e), x !== 0) {
          for (y = 0; y < x; y++)
            r[S + y] = o[m + y];
          if (S += x, m += x, d -= x, d <= 1) {
            T = !0;
            break;
          }
        }
        if (r[S++] = r[_++], --g === 0) {
          T = !0;
          break;
        }
        if (b = rc(o[m], r, _, g, 0, e), b !== 0) {
          for (y = 0; y < b; y++)
            r[S + y] = r[_ + y];
          if (S += b, _ += b, g -= b, g === 0) {
            T = !0;
            break;
          }
        }
        if (r[S++] = o[m++], --d === 1) {
          T = !0;
          break;
        }
        w--;
      } while (x >= Wo || b >= Wo);
      if (T)
        break;
      w < 0 && (w = 0), w += 2;
    }
    if (t = w, t < 1 && (t = 1), d === 1) {
      for (y = 0; y < g; y++)
        r[S + y] = r[_ + y];
      r[S + g] = o[m];
    } else {
      if (d === 0)
        throw new Error();
      for (y = 0; y < d; y++)
        r[S + y] = o[m + y];
    }
  }
  function c(v, d, p, g) {
    var y = 0;
    for (y = 0; y < g; y++)
      o[y] = r[p + y];
    var m = v + d - 1, _ = g - 1, S = p + g - 1, w = 0, x = 0;
    if (r[S--] = r[m--], --d === 0) {
      for (w = S - (g - 1), y = 0; y < g; y++)
        r[w + y] = o[y];
      return;
    }
    if (g === 1) {
      for (S -= d, m -= d, x = S + 1, w = m + 1, y = d - 1; y >= 0; y--)
        r[x + y] = r[w + y];
      r[S] = o[_];
      return;
    }
    for (var b = t; ; ) {
      var T = 0, C = 0, D = !1;
      do
        if (e(o[_], r[m]) < 0) {
          if (r[S--] = r[m--], T++, C = 0, --d === 0) {
            D = !0;
            break;
          }
        } else if (r[S--] = o[_--], C++, T = 0, --g === 1) {
          D = !0;
          break;
        }
      while ((T | C) < b);
      if (D)
        break;
      do {
        if (T = d - ac(o[_], r, v, d, d - 1, e), T !== 0) {
          for (S -= T, m -= T, d -= T, x = S + 1, w = m + 1, y = T - 1; y >= 0; y--)
            r[x + y] = r[w + y];
          if (d === 0) {
            D = !0;
            break;
          }
        }
        if (r[S--] = o[_--], --g === 1) {
          D = !0;
          break;
        }
        if (C = g - rc(r[m], o, 0, g, g - 1, e), C !== 0) {
          for (S -= C, _ -= C, g -= C, x = S + 1, w = _ + 1, y = 0; y < C; y++)
            r[x + y] = o[w + y];
          if (g <= 1) {
            D = !0;
            break;
          }
        }
        if (r[S--] = r[m--], --d === 0) {
          D = !0;
          break;
        }
        b--;
      } while (T >= Wo || C >= Wo);
      if (D)
        break;
      b < 0 && (b = 0), b += 2;
    }
    if (t = b, t < 1 && (t = 1), g === 1) {
      for (S -= d, m -= d, x = S + 1, w = m + 1, y = d - 1; y >= 0; y--)
        r[x + y] = r[w + y];
      r[S] = o[_];
    } else {
      if (g === 0)
        throw new Error();
      for (w = S - (g - 1), y = 0; y < g; y++)
        r[w + y] = o[y];
    }
  }
  return {
    mergeRuns: l,
    forceMergeRuns: u,
    pushRun: s
  };
}
function Fu(r, e, t, a) {
  t || (t = 0), a || (a = r.length);
  var n = a - t;
  if (!(n < 2)) {
    var i = 0;
    if (n < Fb) {
      i = Im(r, t, a, e), Lm(r, t, a, t + i, e);
      return;
    }
    var o = F2(r, e), s = z2(n);
    do {
      if (i = Im(r, t, a, e), i < s) {
        var l = n;
        l > s && (l = s), Lm(r, t, t + l, t + i, e), i = l;
      }
      o.pushRun(t, i), o.mergeRuns(), n -= i, t += i;
    } while (n !== 0);
    o.forceMergeRuns();
  }
}
var $e = 1, ps = 2, Ki = 4, Em = !1;
function nc() {
  Em || (Em = !0, console.warn("z / z2 / zlevel of displayable is invalid, which may cause unexpected errors"));
}
function Pm(r, e) {
  return r.zlevel === e.zlevel ? r.z === e.z ? r.z2 - e.z2 : r.z - e.z : r.zlevel - e.zlevel;
}
var H2 = function() {
  function r() {
    this._roots = [], this._displayList = [], this._displayListLen = 0, this.displayableSortFunc = Pm;
  }
  return r.prototype.traverse = function(e, t) {
    for (var a = 0; a < this._roots.length; a++)
      this._roots[a].traverse(e, t);
  }, r.prototype.getDisplayList = function(e, t) {
    t = t || !1;
    var a = this._displayList;
    return (e || !a.length) && this.updateDisplayList(t), a;
  }, r.prototype.updateDisplayList = function(e) {
    this._displayListLen = 0;
    for (var t = this._roots, a = this._displayList, n = 0, i = t.length; n < i; n++)
      this._updateAndAddDisplayable(t[n], null, e);
    a.length = this._displayListLen, Fu(a, Pm);
  }, r.prototype._updateAndAddDisplayable = function(e, t, a) {
    if (!(e.ignore && !a)) {
      e.beforeUpdate(), e.update(), e.afterUpdate();
      var n = e.getClipPath();
      if (e.ignoreClip)
        t = null;
      else if (n) {
        t ? t = t.slice() : t = [];
        for (var i = n, o = e; i; )
          i.parent = o, i.updateTransform(), t.push(i), o = i, i = i.getClipPath();
      }
      if (e.childrenRef) {
        for (var s = e.childrenRef(), l = 0; l < s.length; l++) {
          var u = s[l];
          e.__dirty && (u.__dirty |= $e), this._updateAndAddDisplayable(u, t, a);
        }
        e.__dirty = 0;
      } else {
        var f = e;
        t && t.length ? f.__clipPaths = t : f.__clipPaths && f.__clipPaths.length > 0 && (f.__clipPaths = []), isNaN(f.z) && (nc(), f.z = 0), isNaN(f.z2) && (nc(), f.z2 = 0), isNaN(f.zlevel) && (nc(), f.zlevel = 0), this._displayList[this._displayListLen++] = f;
      }
      var h = e.getDecalElement && e.getDecalElement();
      h && this._updateAndAddDisplayable(h, t, a);
      var c = e.getTextGuideLine();
      c && this._updateAndAddDisplayable(c, t, a);
      var v = e.getTextContent();
      v && this._updateAndAddDisplayable(v, t, a);
    }
  }, r.prototype.addRoot = function(e) {
    e.__zr && e.__zr.storage === this || this._roots.push(e);
  }, r.prototype.delRoot = function(e) {
    if (e instanceof Array) {
      for (var t = 0, a = e.length; t < a; t++)
        this.delRoot(e[t]);
      return;
    }
    var n = vt(this._roots, e);
    n >= 0 && this._roots.splice(n, 1);
  }, r.prototype.delAllRoots = function() {
    this._roots = [], this._displayList = [], this._displayListLen = 0;
  }, r.prototype.getRoots = function() {
    return this._roots;
  }, r.prototype.dispose = function() {
    this._displayList = null, this._roots = null;
  }, r;
}();
const W2 = H2;
var Hb;
Hb = bt.hasGlobalWindow && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function(r) {
  return setTimeout(r, 16);
};
const Ed = Hb;
var Hu = {
  linear: function(r) {
    return r;
  },
  quadraticIn: function(r) {
    return r * r;
  },
  quadraticOut: function(r) {
    return r * (2 - r);
  },
  quadraticInOut: function(r) {
    return (r *= 2) < 1 ? 0.5 * r * r : -0.5 * (--r * (r - 2) - 1);
  },
  cubicIn: function(r) {
    return r * r * r;
  },
  cubicOut: function(r) {
    return --r * r * r + 1;
  },
  cubicInOut: function(r) {
    return (r *= 2) < 1 ? 0.5 * r * r * r : 0.5 * ((r -= 2) * r * r + 2);
  },
  quarticIn: function(r) {
    return r * r * r * r;
  },
  quarticOut: function(r) {
    return 1 - --r * r * r * r;
  },
  quarticInOut: function(r) {
    return (r *= 2) < 1 ? 0.5 * r * r * r * r : -0.5 * ((r -= 2) * r * r * r - 2);
  },
  quinticIn: function(r) {
    return r * r * r * r * r;
  },
  quinticOut: function(r) {
    return --r * r * r * r * r + 1;
  },
  quinticInOut: function(r) {
    return (r *= 2) < 1 ? 0.5 * r * r * r * r * r : 0.5 * ((r -= 2) * r * r * r * r + 2);
  },
  sinusoidalIn: function(r) {
    return 1 - Math.cos(r * Math.PI / 2);
  },
  sinusoidalOut: function(r) {
    return Math.sin(r * Math.PI / 2);
  },
  sinusoidalInOut: function(r) {
    return 0.5 * (1 - Math.cos(Math.PI * r));
  },
  exponentialIn: function(r) {
    return r === 0 ? 0 : Math.pow(1024, r - 1);
  },
  exponentialOut: function(r) {
    return r === 1 ? 1 : 1 - Math.pow(2, -10 * r);
  },
  exponentialInOut: function(r) {
    return r === 0 ? 0 : r === 1 ? 1 : (r *= 2) < 1 ? 0.5 * Math.pow(1024, r - 1) : 0.5 * (-Math.pow(2, -10 * (r - 1)) + 2);
  },
  circularIn: function(r) {
    return 1 - Math.sqrt(1 - r * r);
  },
  circularOut: function(r) {
    return Math.sqrt(1 - --r * r);
  },
  circularInOut: function(r) {
    return (r *= 2) < 1 ? -0.5 * (Math.sqrt(1 - r * r) - 1) : 0.5 * (Math.sqrt(1 - (r -= 2) * r) + 1);
  },
  elasticIn: function(r) {
    var e, t = 0.1, a = 0.4;
    return r === 0 ? 0 : r === 1 ? 1 : (!t || t < 1 ? (t = 1, e = a / 4) : e = a * Math.asin(1 / t) / (2 * Math.PI), -(t * Math.pow(2, 10 * (r -= 1)) * Math.sin((r - e) * (2 * Math.PI) / a)));
  },
  elasticOut: function(r) {
    var e, t = 0.1, a = 0.4;
    return r === 0 ? 0 : r === 1 ? 1 : (!t || t < 1 ? (t = 1, e = a / 4) : e = a * Math.asin(1 / t) / (2 * Math.PI), t * Math.pow(2, -10 * r) * Math.sin((r - e) * (2 * Math.PI) / a) + 1);
  },
  elasticInOut: function(r) {
    var e, t = 0.1, a = 0.4;
    return r === 0 ? 0 : r === 1 ? 1 : (!t || t < 1 ? (t = 1, e = a / 4) : e = a * Math.asin(1 / t) / (2 * Math.PI), (r *= 2) < 1 ? -0.5 * (t * Math.pow(2, 10 * (r -= 1)) * Math.sin((r - e) * (2 * Math.PI) / a)) : t * Math.pow(2, -10 * (r -= 1)) * Math.sin((r - e) * (2 * Math.PI) / a) * 0.5 + 1);
  },
  backIn: function(r) {
    var e = 1.70158;
    return r * r * ((e + 1) * r - e);
  },
  backOut: function(r) {
    var e = 1.70158;
    return --r * r * ((e + 1) * r + e) + 1;
  },
  backInOut: function(r) {
    var e = 2.5949095;
    return (r *= 2) < 1 ? 0.5 * (r * r * ((e + 1) * r - e)) : 0.5 * ((r -= 2) * r * ((e + 1) * r + e) + 2);
  },
  bounceIn: function(r) {
    return 1 - Hu.bounceOut(1 - r);
  },
  bounceOut: function(r) {
    return r < 1 / 2.75 ? 7.5625 * r * r : r < 2 / 2.75 ? 7.5625 * (r -= 1.5 / 2.75) * r + 0.75 : r < 2.5 / 2.75 ? 7.5625 * (r -= 2.25 / 2.75) * r + 0.9375 : 7.5625 * (r -= 2.625 / 2.75) * r + 0.984375;
  },
  bounceInOut: function(r) {
    return r < 0.5 ? Hu.bounceIn(r * 2) * 0.5 : Hu.bounceOut(r * 2 - 1) * 0.5 + 0.5;
  }
};
const Wb = Hu;
var zl = Math.pow, Xa = Math.sqrt, lf = 1e-8, $b = 1e-4, Rm = Xa(3), Gl = 1 / 3, zr = mi(), ar = mi(), io = mi();
function Ha(r) {
  return r > -lf && r < lf;
}
function Ub(r) {
  return r > lf || r < -lf;
}
function ne(r, e, t, a, n) {
  var i = 1 - n;
  return i * i * (i * r + 3 * n * e) + n * n * (n * a + 3 * i * t);
}
function Nm(r, e, t, a, n) {
  var i = 1 - n;
  return 3 * (((e - r) * i + 2 * (t - e) * n) * i + (a - t) * n * n);
}
function uf(r, e, t, a, n, i) {
  var o = a + 3 * (e - t) - r, s = 3 * (t - e * 2 + r), l = 3 * (e - r), u = r - n, f = s * s - 3 * o * l, h = s * l - 9 * o * u, c = l * l - 3 * s * u, v = 0;
  if (Ha(f) && Ha(h))
    if (Ha(s))
      i[0] = 0;
    else {
      var d = -l / s;
      d >= 0 && d <= 1 && (i[v++] = d);
    }
  else {
    var p = h * h - 4 * f * c;
    if (Ha(p)) {
      var g = h / f, d = -s / o + g, y = -g / 2;
      d >= 0 && d <= 1 && (i[v++] = d), y >= 0 && y <= 1 && (i[v++] = y);
    } else if (p > 0) {
      var m = Xa(p), _ = f * s + 1.5 * o * (-h + m), S = f * s + 1.5 * o * (-h - m);
      _ < 0 ? _ = -zl(-_, Gl) : _ = zl(_, Gl), S < 0 ? S = -zl(-S, Gl) : S = zl(S, Gl);
      var d = (-s - (_ + S)) / (3 * o);
      d >= 0 && d <= 1 && (i[v++] = d);
    } else {
      var w = (2 * f * s - 3 * o * h) / (2 * Xa(f * f * f)), x = Math.acos(w) / 3, b = Xa(f), T = Math.cos(x), d = (-s - 2 * b * T) / (3 * o), y = (-s + b * (T + Rm * Math.sin(x))) / (3 * o), C = (-s + b * (T - Rm * Math.sin(x))) / (3 * o);
      d >= 0 && d <= 1 && (i[v++] = d), y >= 0 && y <= 1 && (i[v++] = y), C >= 0 && C <= 1 && (i[v++] = C);
    }
  }
  return v;
}
function Yb(r, e, t, a, n) {
  var i = 6 * t - 12 * e + 6 * r, o = 9 * e + 3 * a - 3 * r - 9 * t, s = 3 * e - 3 * r, l = 0;
  if (Ha(o)) {
    if (Ub(i)) {
      var u = -s / i;
      u >= 0 && u <= 1 && (n[l++] = u);
    }
  } else {
    var f = i * i - 4 * o * s;
    if (Ha(f))
      n[0] = -i / (2 * o);
    else if (f > 0) {
      var h = Xa(f), u = (-i + h) / (2 * o), c = (-i - h) / (2 * o);
      u >= 0 && u <= 1 && (n[l++] = u), c >= 0 && c <= 1 && (n[l++] = c);
    }
  }
  return l;
}
function Qa(r, e, t, a, n, i) {
  var o = (e - r) * n + r, s = (t - e) * n + e, l = (a - t) * n + t, u = (s - o) * n + o, f = (l - s) * n + s, h = (f - u) * n + u;
  i[0] = r, i[1] = o, i[2] = u, i[3] = h, i[4] = h, i[5] = f, i[6] = l, i[7] = a;
}
function Zb(r, e, t, a, n, i, o, s, l, u, f) {
  var h, c = 5e-3, v = 1 / 0, d, p, g, y;
  zr[0] = l, zr[1] = u;
  for (var m = 0; m < 1; m += 0.05)
    ar[0] = ne(r, t, n, o, m), ar[1] = ne(e, a, i, s, m), g = ti(zr, ar), g < v && (h = m, v = g);
  v = 1 / 0;
  for (var _ = 0; _ < 32 && !(c < $b); _++)
    d = h - c, p = h + c, ar[0] = ne(r, t, n, o, d), ar[1] = ne(e, a, i, s, d), g = ti(ar, zr), d >= 0 && g < v ? (h = d, v = g) : (io[0] = ne(r, t, n, o, p), io[1] = ne(e, a, i, s, p), y = ti(io, zr), p <= 1 && y < v ? (h = p, v = y) : c *= 0.5);
  return f && (f[0] = ne(r, t, n, o, h), f[1] = ne(e, a, i, s, h)), Xa(v);
}
function $2(r, e, t, a, n, i, o, s, l) {
  for (var u = r, f = e, h = 0, c = 1 / l, v = 1; v <= l; v++) {
    var d = v * c, p = ne(r, t, n, o, d), g = ne(e, a, i, s, d), y = p - u, m = g - f;
    h += Math.sqrt(y * y + m * m), u = p, f = g;
  }
  return h;
}
function le(r, e, t, a) {
  var n = 1 - a;
  return n * (n * r + 2 * a * e) + a * a * t;
}
function Pd(r, e, t, a) {
  return 2 * ((1 - a) * (e - r) + a * (t - e));
}
function U2(r, e, t, a, n) {
  var i = r - 2 * e + t, o = 2 * (e - r), s = r - a, l = 0;
  if (Ha(i)) {
    if (Ub(o)) {
      var u = -s / o;
      u >= 0 && u <= 1 && (n[l++] = u);
    }
  } else {
    var f = o * o - 4 * i * s;
    if (Ha(f)) {
      var u = -o / (2 * i);
      u >= 0 && u <= 1 && (n[l++] = u);
    } else if (f > 0) {
      var h = Xa(f), u = (-o + h) / (2 * i), c = (-o - h) / (2 * i);
      u >= 0 && u <= 1 && (n[l++] = u), c >= 0 && c <= 1 && (n[l++] = c);
    }
  }
  return l;
}
function Xb(r, e, t) {
  var a = r + t - 2 * e;
  return a === 0 ? 0.5 : (r - e) / a;
}
function $s(r, e, t, a, n) {
  var i = (e - r) * a + r, o = (t - e) * a + e, s = (o - i) * a + i;
  n[0] = r, n[1] = i, n[2] = s, n[3] = s, n[4] = o, n[5] = t;
}
function qb(r, e, t, a, n, i, o, s, l) {
  var u, f = 5e-3, h = 1 / 0;
  zr[0] = o, zr[1] = s;
  for (var c = 0; c < 1; c += 0.05) {
    ar[0] = le(r, t, n, c), ar[1] = le(e, a, i, c);
    var v = ti(zr, ar);
    v < h && (u = c, h = v);
  }
  h = 1 / 0;
  for (var d = 0; d < 32 && !(f < $b); d++) {
    var p = u - f, g = u + f;
    ar[0] = le(r, t, n, p), ar[1] = le(e, a, i, p);
    var v = ti(ar, zr);
    if (p >= 0 && v < h)
      u = p, h = v;
    else {
      io[0] = le(r, t, n, g), io[1] = le(e, a, i, g);
      var y = ti(io, zr);
      g <= 1 && y < h ? (u = g, h = y) : f *= 0.5;
    }
  }
  return l && (l[0] = le(r, t, n, u), l[1] = le(e, a, i, u)), Xa(h);
}
function Y2(r, e, t, a, n, i, o) {
  for (var s = r, l = e, u = 0, f = 1 / o, h = 1; h <= o; h++) {
    var c = h * f, v = le(r, t, n, c), d = le(e, a, i, c), p = v - s, g = d - l;
    u += Math.sqrt(p * p + g * g), s = v, l = d;
  }
  return u;
}
var Z2 = /cubic-bezier\(([0-9,\.e ]+)\)/;
function _g(r) {
  var e = r && Z2.exec(r);
  if (e) {
    var t = e[1].split(","), a = +Sr(t[0]), n = +Sr(t[1]), i = +Sr(t[2]), o = +Sr(t[3]);
    if (isNaN(a + n + i + o))
      return;
    var s = [];
    return function(l) {
      return l <= 0 ? 0 : l >= 1 ? 1 : uf(0, a, i, 1, l, s) && ne(0, n, o, 1, s[0]);
    };
  }
}
var X2 = function() {
  function r(e) {
    this._inited = !1, this._startTime = 0, this._pausedTime = 0, this._paused = !1, this._life = e.life || 1e3, this._delay = e.delay || 0, this.loop = e.loop || !1, this.onframe = e.onframe || Xt, this.ondestroy = e.ondestroy || Xt, this.onrestart = e.onrestart || Xt, e.easing && this.setEasing(e.easing);
  }
  return r.prototype.step = function(e, t) {
    if (this._inited || (this._startTime = e + this._delay, this._inited = !0), this._paused) {
      this._pausedTime += t;
      return;
    }
    var a = this._life, n = e - this._startTime - this._pausedTime, i = n / a;
    i < 0 && (i = 0), i = Math.min(i, 1);
    var o = this.easingFunc, s = o ? o(i) : i;
    if (this.onframe(s), i === 1)
      if (this.loop) {
        var l = n % a;
        this._startTime = e - l, this._pausedTime = 0, this.onrestart();
      } else
        return !0;
    return !1;
  }, r.prototype.pause = function() {
    this._paused = !0;
  }, r.prototype.resume = function() {
    this._paused = !1;
  }, r.prototype.setEasing = function(e) {
    this.easing = e, this.easingFunc = K(e) ? e : Wb[e] || _g(e);
  }, r;
}();
const q2 = X2;
var Kb = function() {
  function r(e) {
    this.value = e;
  }
  return r;
}(), K2 = function() {
  function r() {
    this._len = 0;
  }
  return r.prototype.insert = function(e) {
    var t = new Kb(e);
    return this.insertEntry(t), t;
  }, r.prototype.insertEntry = function(e) {
    this.head ? (this.tail.next = e, e.prev = this.tail, e.next = null, this.tail = e) : this.head = this.tail = e, this._len++;
  }, r.prototype.remove = function(e) {
    var t = e.prev, a = e.next;
    t ? t.next = a : this.head = a, a ? a.prev = t : this.tail = t, e.next = e.prev = null, this._len--;
  }, r.prototype.len = function() {
    return this._len;
  }, r.prototype.clear = function() {
    this.head = this.tail = null, this._len = 0;
  }, r;
}(), j2 = function() {
  function r(e) {
    this._list = new K2(), this._maxSize = 10, this._map = {}, this._maxSize = e;
  }
  return r.prototype.put = function(e, t) {
    var a = this._list, n = this._map, i = null;
    if (n[e] == null) {
      var o = a.len(), s = this._lastRemovedEntry;
      if (o >= this._maxSize && o > 0) {
        var l = a.head;
        a.remove(l), delete n[l.key], i = l.value, this._lastRemovedEntry = l;
      }
      s ? s.value = t : s = new Kb(t), s.key = e, a.insertEntry(s), n[e] = s;
    }
    return i;
  }, r.prototype.get = function(e) {
    var t = this._map[e], a = this._list;
    if (t != null)
      return t !== a.tail && (a.remove(t), a.insertEntry(t)), t.value;
  }, r.prototype.clear = function() {
    this._list.clear(), this._map = {};
  }, r.prototype.len = function() {
    return this._list.len();
  }, r;
}();
const pl = j2;
var Om = {
  transparent: [0, 0, 0, 0],
  aliceblue: [240, 248, 255, 1],
  antiquewhite: [250, 235, 215, 1],
  aqua: [0, 255, 255, 1],
  aquamarine: [127, 255, 212, 1],
  azure: [240, 255, 255, 1],
  beige: [245, 245, 220, 1],
  bisque: [255, 228, 196, 1],
  black: [0, 0, 0, 1],
  blanchedalmond: [255, 235, 205, 1],
  blue: [0, 0, 255, 1],
  blueviolet: [138, 43, 226, 1],
  brown: [165, 42, 42, 1],
  burlywood: [222, 184, 135, 1],
  cadetblue: [95, 158, 160, 1],
  chartreuse: [127, 255, 0, 1],
  chocolate: [210, 105, 30, 1],
  coral: [255, 127, 80, 1],
  cornflowerblue: [100, 149, 237, 1],
  cornsilk: [255, 248, 220, 1],
  crimson: [220, 20, 60, 1],
  cyan: [0, 255, 255, 1],
  darkblue: [0, 0, 139, 1],
  darkcyan: [0, 139, 139, 1],
  darkgoldenrod: [184, 134, 11, 1],
  darkgray: [169, 169, 169, 1],
  darkgreen: [0, 100, 0, 1],
  darkgrey: [169, 169, 169, 1],
  darkkhaki: [189, 183, 107, 1],
  darkmagenta: [139, 0, 139, 1],
  darkolivegreen: [85, 107, 47, 1],
  darkorange: [255, 140, 0, 1],
  darkorchid: [153, 50, 204, 1],
  darkred: [139, 0, 0, 1],
  darksalmon: [233, 150, 122, 1],
  darkseagreen: [143, 188, 143, 1],
  darkslateblue: [72, 61, 139, 1],
  darkslategray: [47, 79, 79, 1],
  darkslategrey: [47, 79, 79, 1],
  darkturquoise: [0, 206, 209, 1],
  darkviolet: [148, 0, 211, 1],
  deeppink: [255, 20, 147, 1],
  deepskyblue: [0, 191, 255, 1],
  dimgray: [105, 105, 105, 1],
  dimgrey: [105, 105, 105, 1],
  dodgerblue: [30, 144, 255, 1],
  firebrick: [178, 34, 34, 1],
  floralwhite: [255, 250, 240, 1],
  forestgreen: [34, 139, 34, 1],
  fuchsia: [255, 0, 255, 1],
  gainsboro: [220, 220, 220, 1],
  ghostwhite: [248, 248, 255, 1],
  gold: [255, 215, 0, 1],
  goldenrod: [218, 165, 32, 1],
  gray: [128, 128, 128, 1],
  green: [0, 128, 0, 1],
  greenyellow: [173, 255, 47, 1],
  grey: [128, 128, 128, 1],
  honeydew: [240, 255, 240, 1],
  hotpink: [255, 105, 180, 1],
  indianred: [205, 92, 92, 1],
  indigo: [75, 0, 130, 1],
  ivory: [255, 255, 240, 1],
  khaki: [240, 230, 140, 1],
  lavender: [230, 230, 250, 1],
  lavenderblush: [255, 240, 245, 1],
  lawngreen: [124, 252, 0, 1],
  lemonchiffon: [255, 250, 205, 1],
  lightblue: [173, 216, 230, 1],
  lightcoral: [240, 128, 128, 1],
  lightcyan: [224, 255, 255, 1],
  lightgoldenrodyellow: [250, 250, 210, 1],
  lightgray: [211, 211, 211, 1],
  lightgreen: [144, 238, 144, 1],
  lightgrey: [211, 211, 211, 1],
  lightpink: [255, 182, 193, 1],
  lightsalmon: [255, 160, 122, 1],
  lightseagreen: [32, 178, 170, 1],
  lightskyblue: [135, 206, 250, 1],
  lightslategray: [119, 136, 153, 1],
  lightslategrey: [119, 136, 153, 1],
  lightsteelblue: [176, 196, 222, 1],
  lightyellow: [255, 255, 224, 1],
  lime: [0, 255, 0, 1],
  limegreen: [50, 205, 50, 1],
  linen: [250, 240, 230, 1],
  magenta: [255, 0, 255, 1],
  maroon: [128, 0, 0, 1],
  mediumaquamarine: [102, 205, 170, 1],
  mediumblue: [0, 0, 205, 1],
  mediumorchid: [186, 85, 211, 1],
  mediumpurple: [147, 112, 219, 1],
  mediumseagreen: [60, 179, 113, 1],
  mediumslateblue: [123, 104, 238, 1],
  mediumspringgreen: [0, 250, 154, 1],
  mediumturquoise: [72, 209, 204, 1],
  mediumvioletred: [199, 21, 133, 1],
  midnightblue: [25, 25, 112, 1],
  mintcream: [245, 255, 250, 1],
  mistyrose: [255, 228, 225, 1],
  moccasin: [255, 228, 181, 1],
  navajowhite: [255, 222, 173, 1],
  navy: [0, 0, 128, 1],
  oldlace: [253, 245, 230, 1],
  olive: [128, 128, 0, 1],
  olivedrab: [107, 142, 35, 1],
  orange: [255, 165, 0, 1],
  orangered: [255, 69, 0, 1],
  orchid: [218, 112, 214, 1],
  palegoldenrod: [238, 232, 170, 1],
  palegreen: [152, 251, 152, 1],
  paleturquoise: [175, 238, 238, 1],
  palevioletred: [219, 112, 147, 1],
  papayawhip: [255, 239, 213, 1],
  peachpuff: [255, 218, 185, 1],
  peru: [205, 133, 63, 1],
  pink: [255, 192, 203, 1],
  plum: [221, 160, 221, 1],
  powderblue: [176, 224, 230, 1],
  purple: [128, 0, 128, 1],
  red: [255, 0, 0, 1],
  rosybrown: [188, 143, 143, 1],
  royalblue: [65, 105, 225, 1],
  saddlebrown: [139, 69, 19, 1],
  salmon: [250, 128, 114, 1],
  sandybrown: [244, 164, 96, 1],
  seagreen: [46, 139, 87, 1],
  seashell: [255, 245, 238, 1],
  sienna: [160, 82, 45, 1],
  silver: [192, 192, 192, 1],
  skyblue: [135, 206, 235, 1],
  slateblue: [106, 90, 205, 1],
  slategray: [112, 128, 144, 1],
  slategrey: [112, 128, 144, 1],
  snow: [255, 250, 250, 1],
  springgreen: [0, 255, 127, 1],
  steelblue: [70, 130, 180, 1],
  tan: [210, 180, 140, 1],
  teal: [0, 128, 128, 1],
  thistle: [216, 191, 216, 1],
  tomato: [255, 99, 71, 1],
  turquoise: [64, 224, 208, 1],
  violet: [238, 130, 238, 1],
  wheat: [245, 222, 179, 1],
  white: [255, 255, 255, 1],
  whitesmoke: [245, 245, 245, 1],
  yellow: [255, 255, 0, 1],
  yellowgreen: [154, 205, 50, 1]
};
function Tr(r) {
  return r = Math.round(r), r < 0 ? 0 : r > 255 ? 255 : r;
}
function J2(r) {
  return r = Math.round(r), r < 0 ? 0 : r > 360 ? 360 : r;
}
function Us(r) {
  return r < 0 ? 0 : r > 1 ? 1 : r;
}
function ic(r) {
  var e = r;
  return e.length && e.charAt(e.length - 1) === "%" ? Tr(parseFloat(e) / 100 * 255) : Tr(parseInt(e, 10));
}
function ei(r) {
  var e = r;
  return e.length && e.charAt(e.length - 1) === "%" ? Us(parseFloat(e) / 100) : Us(parseFloat(e));
}
function oc(r, e, t) {
  return t < 0 ? t += 1 : t > 1 && (t -= 1), t * 6 < 1 ? r + (e - r) * t * 6 : t * 2 < 1 ? e : t * 3 < 2 ? r + (e - r) * (2 / 3 - t) * 6 : r;
}
function Wa(r, e, t) {
  return r + (e - r) * t;
}
function Je(r, e, t, a, n) {
  return r[0] = e, r[1] = t, r[2] = a, r[3] = n, r;
}
function Rd(r, e) {
  return r[0] = e[0], r[1] = e[1], r[2] = e[2], r[3] = e[3], r;
}
var jb = new pl(20), Fl = null;
function Mi(r, e) {
  Fl && Rd(Fl, e), Fl = jb.put(r, Fl || e.slice());
}
function Ue(r, e) {
  if (r) {
    e = e || [];
    var t = jb.get(r);
    if (t)
      return Rd(e, t);
    r = r + "";
    var a = r.replace(/ /g, "").toLowerCase();
    if (a in Om)
      return Rd(e, Om[a]), Mi(r, e), e;
    var n = a.length;
    if (a.charAt(0) === "#") {
      if (n === 4 || n === 5) {
        var i = parseInt(a.slice(1, 4), 16);
        if (!(i >= 0 && i <= 4095)) {
          Je(e, 0, 0, 0, 1);
          return;
        }
        return Je(e, (i & 3840) >> 4 | (i & 3840) >> 8, i & 240 | (i & 240) >> 4, i & 15 | (i & 15) << 4, n === 5 ? parseInt(a.slice(4), 16) / 15 : 1), Mi(r, e), e;
      } else if (n === 7 || n === 9) {
        var i = parseInt(a.slice(1, 7), 16);
        if (!(i >= 0 && i <= 16777215)) {
          Je(e, 0, 0, 0, 1);
          return;
        }
        return Je(e, (i & 16711680) >> 16, (i & 65280) >> 8, i & 255, n === 9 ? parseInt(a.slice(7), 16) / 255 : 1), Mi(r, e), e;
      }
      return;
    }
    var o = a.indexOf("("), s = a.indexOf(")");
    if (o !== -1 && s + 1 === n) {
      var l = a.substr(0, o), u = a.substr(o + 1, s - (o + 1)).split(","), f = 1;
      switch (l) {
        case "rgba":
          if (u.length !== 4)
            return u.length === 3 ? Je(e, +u[0], +u[1], +u[2], 1) : Je(e, 0, 0, 0, 1);
          f = ei(u.pop());
        case "rgb":
          if (u.length >= 3)
            return Je(e, ic(u[0]), ic(u[1]), ic(u[2]), u.length === 3 ? f : ei(u[3])), Mi(r, e), e;
          Je(e, 0, 0, 0, 1);
          return;
        case "hsla":
          if (u.length !== 4) {
            Je(e, 0, 0, 0, 1);
            return;
          }
          return u[3] = ei(u[3]), Nd(u, e), Mi(r, e), e;
        case "hsl":
          if (u.length !== 3) {
            Je(e, 0, 0, 0, 1);
            return;
          }
          return Nd(u, e), Mi(r, e), e;
        default:
          return;
      }
    }
    Je(e, 0, 0, 0, 1);
  }
}
function Nd(r, e) {
  var t = (parseFloat(r[0]) % 360 + 360) % 360 / 360, a = ei(r[1]), n = ei(r[2]), i = n <= 0.5 ? n * (a + 1) : n + a - n * a, o = n * 2 - i;
  return e = e || [], Je(e, Tr(oc(o, i, t + 1 / 3) * 255), Tr(oc(o, i, t) * 255), Tr(oc(o, i, t - 1 / 3) * 255), 1), r.length === 4 && (e[3] = r[3]), e;
}
function Q2(r) {
  if (r) {
    var e = r[0] / 255, t = r[1] / 255, a = r[2] / 255, n = Math.min(e, t, a), i = Math.max(e, t, a), o = i - n, s = (i + n) / 2, l, u;
    if (o === 0)
      l = 0, u = 0;
    else {
      s < 0.5 ? u = o / (i + n) : u = o / (2 - i - n);
      var f = ((i - e) / 6 + o / 2) / o, h = ((i - t) / 6 + o / 2) / o, c = ((i - a) / 6 + o / 2) / o;
      e === i ? l = c - h : t === i ? l = 1 / 3 + f - c : a === i && (l = 2 / 3 + h - f), l < 0 && (l += 1), l > 1 && (l -= 1);
    }
    var v = [l * 360, u, s];
    return r[3] != null && v.push(r[3]), v;
  }
}
function Od(r, e) {
  var t = Ue(r);
  if (t) {
    for (var a = 0; a < 3; a++)
      e < 0 ? t[a] = t[a] * (1 - e) | 0 : t[a] = (255 - t[a]) * e + t[a] | 0, t[a] > 255 ? t[a] = 255 : t[a] < 0 && (t[a] = 0);
    return fa(t, t.length === 4 ? "rgba" : "rgb");
  }
}
function sc(r, e, t) {
  if (!(!(e && e.length) || !(r >= 0 && r <= 1))) {
    t = t || [];
    var a = r * (e.length - 1), n = Math.floor(a), i = Math.ceil(a), o = e[n], s = e[i], l = a - n;
    return t[0] = Tr(Wa(o[0], s[0], l)), t[1] = Tr(Wa(o[1], s[1], l)), t[2] = Tr(Wa(o[2], s[2], l)), t[3] = Us(Wa(o[3], s[3], l)), t;
  }
}
function tE(r, e, t) {
  if (!(!(e && e.length) || !(r >= 0 && r <= 1))) {
    var a = r * (e.length - 1), n = Math.floor(a), i = Math.ceil(a), o = Ue(e[n]), s = Ue(e[i]), l = a - n, u = fa([
      Tr(Wa(o[0], s[0], l)),
      Tr(Wa(o[1], s[1], l)),
      Tr(Wa(o[2], s[2], l)),
      Us(Wa(o[3], s[3], l))
    ], "rgba");
    return t ? {
      color: u,
      leftIndex: n,
      rightIndex: i,
      value: a
    } : u;
  }
}
function Is(r, e, t, a) {
  var n = Ue(r);
  if (r)
    return n = Q2(n), e != null && (n[0] = J2(e)), t != null && (n[1] = ei(t)), a != null && (n[2] = ei(a)), fa(Nd(n), "rgba");
}
function ff(r, e) {
  var t = Ue(r);
  if (t && e != null)
    return t[3] = Us(e), fa(t, "rgba");
}
function fa(r, e) {
  if (!(!r || !r.length)) {
    var t = r[0] + "," + r[1] + "," + r[2];
    return (e === "rgba" || e === "hsva" || e === "hsla") && (t += "," + r[3]), e + "(" + t + ")";
  }
}
function hf(r, e) {
  var t = Ue(r);
  return t ? (0.299 * t[0] + 0.587 * t[1] + 0.114 * t[2]) * t[3] / 255 + (1 - t[3]) * e : 0;
}
var cf = Math.round;
function Ys(r) {
  var e;
  if (!r || r === "transparent")
    r = "none";
  else if (typeof r == "string" && r.indexOf("rgba") > -1) {
    var t = Ue(r);
    t && (r = "rgb(" + t[0] + "," + t[1] + "," + t[2] + ")", e = t[3]);
  }
  return {
    color: r,
    opacity: e == null ? 1 : e
  };
}
var km = 1e-4;
function $a(r) {
  return r < km && r > -km;
}
function Hl(r) {
  return cf(r * 1e3) / 1e3;
}
function kd(r) {
  return cf(r * 1e4) / 1e4;
}
function eE(r) {
  return "matrix(" + Hl(r[0]) + "," + Hl(r[1]) + "," + Hl(r[2]) + "," + Hl(r[3]) + "," + kd(r[4]) + "," + kd(r[5]) + ")";
}
var rE = {
  left: "start",
  right: "end",
  center: "middle",
  middle: "middle"
};
function aE(r, e, t) {
  return t === "top" ? r += e / 2 : t === "bottom" && (r -= e / 2), r;
}
function nE(r) {
  return r && (r.shadowBlur || r.shadowOffsetX || r.shadowOffsetY);
}
function iE(r) {
  var e = r.style, t = r.getGlobalScale();
  return [
    e.shadowColor,
    (e.shadowBlur || 0).toFixed(2),
    (e.shadowOffsetX || 0).toFixed(2),
    (e.shadowOffsetY || 0).toFixed(2),
    t[0],
    t[1]
  ].join(",");
}
function Jb(r) {
  return r && !!r.image;
}
function oE(r) {
  return r && !!r.svgElement;
}
function Sg(r) {
  return Jb(r) || oE(r);
}
function Qb(r) {
  return r.type === "linear";
}
function tT(r) {
  return r.type === "radial";
}
function eT(r) {
  return r && (r.type === "linear" || r.type === "radial");
}
function fh(r) {
  return "url(#" + r + ")";
}
function rT(r) {
  var e = r.getGlobalScale(), t = Math.max(e[0], e[1]);
  return Math.max(Math.ceil(Math.log(t) / Math.log(10)), 1);
}
function aT(r) {
  var e = r.x || 0, t = r.y || 0, a = (r.rotation || 0) * Bu, n = ft(r.scaleX, 1), i = ft(r.scaleY, 1), o = r.skewX || 0, s = r.skewY || 0, l = [];
  return (e || t) && l.push("translate(" + e + "px," + t + "px)"), a && l.push("rotate(" + a + ")"), (n !== 1 || i !== 1) && l.push("scale(" + n + "," + i + ")"), (o || s) && l.push("skew(" + cf(o * Bu) + "deg, " + cf(s * Bu) + "deg)"), l.join(" ");
}
var sE = function() {
  return bt.hasGlobalWindow && K(window.btoa) ? function(r) {
    return window.btoa(unescape(encodeURIComponent(r)));
  } : typeof Buffer < "u" ? function(r) {
    return Buffer.from(r).toString("base64");
  } : function(r) {
    return {}.NODE_ENV !== "production" && br("Base64 isn't natively supported in the current environment."), null;
  };
}(), Vd = Array.prototype.slice;
function na(r, e, t) {
  return (e - r) * t + r;
}
function lc(r, e, t, a) {
  for (var n = e.length, i = 0; i < n; i++)
    r[i] = na(e[i], t[i], a);
  return r;
}
function lE(r, e, t, a) {
  for (var n = e.length, i = n && e[0].length, o = 0; o < n; o++) {
    r[o] || (r[o] = []);
    for (var s = 0; s < i; s++)
      r[o][s] = na(e[o][s], t[o][s], a);
  }
  return r;
}
function Wl(r, e, t, a) {
  for (var n = e.length, i = 0; i < n; i++)
    r[i] = e[i] + t[i] * a;
  return r;
}
function Vm(r, e, t, a) {
  for (var n = e.length, i = n && e[0].length, o = 0; o < n; o++) {
    r[o] || (r[o] = []);
    for (var s = 0; s < i; s++)
      r[o][s] = e[o][s] + t[o][s] * a;
  }
  return r;
}
function uE(r, e) {
  for (var t = r.length, a = e.length, n = t > a ? e : r, i = Math.min(t, a), o = n[i - 1] || { color: [0, 0, 0, 0], offset: 0 }, s = i; s < Math.max(t, a); s++)
    n.push({
      offset: o.offset,
      color: o.color.slice()
    });
}
function fE(r, e, t) {
  var a = r, n = e;
  if (!(!a.push || !n.push)) {
    var i = a.length, o = n.length;
    if (i !== o) {
      var s = i > o;
      if (s)
        a.length = o;
      else
        for (var l = i; l < o; l++)
          a.push(t === 1 ? n[l] : Vd.call(n[l]));
    }
    for (var u = a[0] && a[0].length, l = 0; l < a.length; l++)
      if (t === 1)
        isNaN(a[l]) && (a[l] = n[l]);
      else
        for (var f = 0; f < u; f++)
          isNaN(a[l][f]) && (a[l][f] = n[l][f]);
  }
}
function Ls(r) {
  if (xe(r)) {
    var e = r.length;
    if (xe(r[0])) {
      for (var t = [], a = 0; a < e; a++)
        t.push(Vd.call(r[a]));
      return t;
    }
    return Vd.call(r);
  }
  return r;
}
function Wu(r) {
  return r[0] = Math.floor(r[0]) || 0, r[1] = Math.floor(r[1]) || 0, r[2] = Math.floor(r[2]) || 0, r[3] = r[3] == null ? 1 : r[3], "rgba(" + r.join(",") + ")";
}
function hE(r) {
  return xe(r && r[0]) ? 2 : 1;
}
var $l = 0, $u = 1, nT = 2, gs = 3, Bd = 4, zd = 5, Bm = 6;
function zm(r) {
  return r === Bd || r === zd;
}
function Ul(r) {
  return r === $u || r === nT;
}
var $o = [0, 0, 0, 0], cE = function() {
  function r(e) {
    this.keyframes = [], this.discrete = !1, this._invalid = !1, this._needsSort = !1, this._lastFr = 0, this._lastFrP = 0, this.propName = e;
  }
  return r.prototype.isFinished = function() {
    return this._finished;
  }, r.prototype.setFinished = function() {
    this._finished = !0, this._additiveTrack && this._additiveTrack.setFinished();
  }, r.prototype.needsAnimate = function() {
    return this.keyframes.length >= 1;
  }, r.prototype.getAdditiveTrack = function() {
    return this._additiveTrack;
  }, r.prototype.addKeyframe = function(e, t, a) {
    this._needsSort = !0;
    var n = this.keyframes, i = n.length, o = !1, s = Bm, l = t;
    if (xe(t)) {
      var u = hE(t);
      s = u, (u === 1 && !At(t[0]) || u === 2 && !At(t[0][0])) && (o = !0);
    } else if (At(t) && !fi(t))
      s = $l;
    else if ($(t))
      if (!isNaN(+t))
        s = $l;
      else {
        var f = Ue(t);
        f && (l = f, s = gs);
      }
    else if (sh(t)) {
      var h = V({}, l);
      h.colorStops = G(t.colorStops, function(v) {
        return {
          offset: v.offset,
          color: Ue(v.color)
        };
      }), Qb(t) ? s = Bd : tT(t) && (s = zd), l = h;
    }
    i === 0 ? this.valType = s : (s !== this.valType || s === Bm) && (o = !0), this.discrete = this.discrete || o;
    var c = {
      time: e,
      value: l,
      rawValue: t,
      percent: 0
    };
    return a && (c.easing = a, c.easingFunc = K(a) ? a : Wb[a] || _g(a)), n.push(c), c;
  }, r.prototype.prepare = function(e, t) {
    var a = this.keyframes;
    this._needsSort && a.sort(function(p, g) {
      return p.time - g.time;
    });
    for (var n = this.valType, i = a.length, o = a[i - 1], s = this.discrete, l = Ul(n), u = zm(n), f = 0; f < i; f++) {
      var h = a[f], c = h.value, v = o.value;
      h.percent = h.time / e, s || (l && f !== i - 1 ? fE(c, v, n) : u && uE(c.colorStops, v.colorStops));
    }
    if (!s && n !== zd && t && this.needsAnimate() && t.needsAnimate() && n === t.valType && !t._finished) {
      this._additiveTrack = t;
      for (var d = a[0].value, f = 0; f < i; f++)
        n === $l ? a[f].additiveValue = a[f].value - d : n === gs ? a[f].additiveValue = Wl([], a[f].value, d, -1) : Ul(n) && (a[f].additiveValue = n === $u ? Wl([], a[f].value, d, -1) : Vm([], a[f].value, d, -1));
    }
  }, r.prototype.step = function(e, t) {
    if (!this._finished) {
      this._additiveTrack && this._additiveTrack._finished && (this._additiveTrack = null);
      var a = this._additiveTrack != null, n = a ? "additiveValue" : "value", i = this.valType, o = this.keyframes, s = o.length, l = this.propName, u = i === gs, f, h = this._lastFr, c = Math.min, v, d;
      if (s === 1)
        v = d = o[0];
      else {
        if (t < 0)
          f = 0;
        else if (t < this._lastFrP) {
          var p = c(h + 1, s - 1);
          for (f = p; f >= 0 && !(o[f].percent <= t); f--)
            ;
          f = c(f, s - 2);
        } else {
          for (f = h; f < s && !(o[f].percent > t); f++)
            ;
          f = c(f - 1, s - 2);
        }
        d = o[f + 1], v = o[f];
      }
      if (v && d) {
        this._lastFr = f, this._lastFrP = t;
        var g = d.percent - v.percent, y = g === 0 ? 1 : c((t - v.percent) / g, 1);
        d.easingFunc && (y = d.easingFunc(y));
        var m = a ? this._additiveValue : u ? $o : e[l];
        if ((Ul(i) || u) && !m && (m = this._additiveValue = []), this.discrete)
          e[l] = y < 1 ? v.rawValue : d.rawValue;
        else if (Ul(i))
          i === $u ? lc(m, v[n], d[n], y) : lE(m, v[n], d[n], y);
        else if (zm(i)) {
          var _ = v[n], S = d[n], w = i === Bd;
          e[l] = {
            type: w ? "linear" : "radial",
            x: na(_.x, S.x, y),
            y: na(_.y, S.y, y),
            colorStops: G(_.colorStops, function(b, T) {
              var C = S.colorStops[T];
              return {
                offset: na(b.offset, C.offset, y),
                color: Wu(lc([], b.color, C.color, y))
              };
            }),
            global: S.global
          }, w ? (e[l].x2 = na(_.x2, S.x2, y), e[l].y2 = na(_.y2, S.y2, y)) : e[l].r = na(_.r, S.r, y);
        } else if (u)
          lc(m, v[n], d[n], y), a || (e[l] = Wu(m));
        else {
          var x = na(v[n], d[n], y);
          a ? this._additiveValue = x : e[l] = x;
        }
        a && this._addToTarget(e);
      }
    }
  }, r.prototype._addToTarget = function(e) {
    var t = this.valType, a = this.propName, n = this._additiveValue;
    t === $l ? e[a] = e[a] + n : t === gs ? (Ue(e[a], $o), Wl($o, $o, n, 1), e[a] = Wu($o)) : t === $u ? Wl(e[a], e[a], n, 1) : t === nT && Vm(e[a], e[a], n, 1);
  }, r;
}(), xg = function() {
  function r(e, t, a, n) {
    if (this._tracks = {}, this._trackKeys = [], this._maxTime = 0, this._started = 0, this._clip = null, this._target = e, this._loop = t, t && n) {
      br("Can' use additive animation on looped animation.");
      return;
    }
    this._additiveAnimators = n, this._allowDiscrete = a;
  }
  return r.prototype.getMaxTime = function() {
    return this._maxTime;
  }, r.prototype.getDelay = function() {
    return this._delay;
  }, r.prototype.getLoop = function() {
    return this._loop;
  }, r.prototype.getTarget = function() {
    return this._target;
  }, r.prototype.changeTarget = function(e) {
    this._target = e;
  }, r.prototype.when = function(e, t, a) {
    return this.whenWithKeys(e, t, _t(t), a);
  }, r.prototype.whenWithKeys = function(e, t, a, n) {
    for (var i = this._tracks, o = 0; o < a.length; o++) {
      var s = a[o], l = i[s];
      if (!l) {
        l = i[s] = new cE(s);
        var u = void 0, f = this._getAdditiveTrack(s);
        if (f) {
          var h = f.keyframes, c = h[h.length - 1];
          u = c && c.value, f.valType === gs && u && (u = Wu(u));
        } else
          u = this._target[s];
        if (u == null)
          continue;
        e > 0 && l.addKeyframe(0, Ls(u), n), this._trackKeys.push(s);
      }
      l.addKeyframe(e, Ls(t[s]), n);
    }
    return this._maxTime = Math.max(this._maxTime, e), this;
  }, r.prototype.pause = function() {
    this._clip.pause(), this._paused = !0;
  }, r.prototype.resume = function() {
    this._clip.resume(), this._paused = !1;
  }, r.prototype.isPaused = function() {
    return !!this._paused;
  }, r.prototype.duration = function(e) {
    return this._maxTime = e, this._force = !0, this;
  }, r.prototype._doneCallback = function() {
    this._setTracksFinished(), this._clip = null;
    var e = this._doneCbs;
    if (e)
      for (var t = e.length, a = 0; a < t; a++)
        e[a].call(this);
  }, r.prototype._abortedCallback = function() {
    this._setTracksFinished();
    var e = this.animation, t = this._abortedCbs;
    if (e && e.removeClip(this._clip), this._clip = null, t)
      for (var a = 0; a < t.length; a++)
        t[a].call(this);
  }, r.prototype._setTracksFinished = function() {
    for (var e = this._tracks, t = this._trackKeys, a = 0; a < t.length; a++)
      e[t[a]].setFinished();
  }, r.prototype._getAdditiveTrack = function(e) {
    var t, a = this._additiveAnimators;
    if (a)
      for (var n = 0; n < a.length; n++) {
        var i = a[n].getTrack(e);
        i && (t = i);
      }
    return t;
  }, r.prototype.start = function(e) {
    if (!(this._started > 0)) {
      this._started = 1;
      for (var t = this, a = [], n = this._maxTime || 0, i = 0; i < this._trackKeys.length; i++) {
        var o = this._trackKeys[i], s = this._tracks[o], l = this._getAdditiveTrack(o), u = s.keyframes, f = u.length;
        if (s.prepare(n, l), s.needsAnimate())
          if (!this._allowDiscrete && s.discrete) {
            var h = u[f - 1];
            h && (t._target[s.propName] = h.rawValue), s.setFinished();
          } else
            a.push(s);
      }
      if (a.length || this._force) {
        var c = new q2({
          life: n,
          loop: this._loop,
          delay: this._delay || 0,
          onframe: function(v) {
            t._started = 2;
            var d = t._additiveAnimators;
            if (d) {
              for (var p = !1, g = 0; g < d.length; g++)
                if (d[g]._clip) {
                  p = !0;
                  break;
                }
              p || (t._additiveAnimators = null);
            }
            for (var g = 0; g < a.length; g++)
              a[g].step(t._target, v);
            var y = t._onframeCbs;
            if (y)
              for (var g = 0; g < y.length; g++)
                y[g](t._target, v);
          },
          ondestroy: function() {
            t._doneCallback();
          }
        });
        this._clip = c, this.animation && this.animation.addClip(c), e && c.setEasing(e);
      } else
        this._doneCallback();
      return this;
    }
  }, r.prototype.stop = function(e) {
    if (this._clip) {
      var t = this._clip;
      e && t.onframe(1), this._abortedCallback();
    }
  }, r.prototype.delay = function(e) {
    return this._delay = e, this;
  }, r.prototype.during = function(e) {
    return e && (this._onframeCbs || (this._onframeCbs = []), this._onframeCbs.push(e)), this;
  }, r.prototype.done = function(e) {
    return e && (this._doneCbs || (this._doneCbs = []), this._doneCbs.push(e)), this;
  }, r.prototype.aborted = function(e) {
    return e && (this._abortedCbs || (this._abortedCbs = []), this._abortedCbs.push(e)), this;
  }, r.prototype.getClip = function() {
    return this._clip;
  }, r.prototype.getTrack = function(e) {
    return this._tracks[e];
  }, r.prototype.getTracks = function() {
    var e = this;
    return G(this._trackKeys, function(t) {
      return e._tracks[t];
    });
  }, r.prototype.stopTracks = function(e, t) {
    if (!e.length || !this._clip)
      return !0;
    for (var a = this._tracks, n = this._trackKeys, i = 0; i < e.length; i++) {
      var o = a[e[i]];
      o && !o.isFinished() && (t ? o.step(this._target, 1) : this._started === 1 && o.step(this._target, 0), o.setFinished());
    }
    for (var s = !0, i = 0; i < n.length; i++)
      if (!a[n[i]].isFinished()) {
        s = !1;
        break;
      }
    return s && this._abortedCallback(), s;
  }, r.prototype.saveTo = function(e, t, a) {
    if (e) {
      t = t || this._trackKeys;
      for (var n = 0; n < t.length; n++) {
        var i = t[n], o = this._tracks[i];
        if (!(!o || o.isFinished())) {
          var s = o.keyframes, l = s[a ? 0 : s.length - 1];
          l && (e[i] = Ls(l.rawValue));
        }
      }
    }
  }, r.prototype.__changeFinalValue = function(e, t) {
    t = t || _t(e);
    for (var a = 0; a < t.length; a++) {
      var n = t[a], i = this._tracks[n];
      if (i) {
        var o = i.keyframes;
        if (o.length > 1) {
          var s = o.pop();
          i.addKeyframe(s.time, e[n]), i.prepare(this._maxTime, i.getAdditiveTrack());
        }
      }
    }
  }, r;
}();
function eo() {
  return (/* @__PURE__ */ new Date()).getTime();
}
var vE = function(r) {
  N(e, r);
  function e(t) {
    var a = r.call(this) || this;
    return a._running = !1, a._time = 0, a._pausedTime = 0, a._pauseStart = 0, a._paused = !1, t = t || {}, a.stage = t.stage || {}, a;
  }
  return e.prototype.addClip = function(t) {
    t.animation && this.removeClip(t), this._head ? (this._tail.next = t, t.prev = this._tail, t.next = null, this._tail = t) : this._head = this._tail = t, t.animation = this;
  }, e.prototype.addAnimator = function(t) {
    t.animation = this;
    var a = t.getClip();
    a && this.addClip(a);
  }, e.prototype.removeClip = function(t) {
    if (t.animation) {
      var a = t.prev, n = t.next;
      a ? a.next = n : this._head = n, n ? n.prev = a : this._tail = a, t.next = t.prev = t.animation = null;
    }
  }, e.prototype.removeAnimator = function(t) {
    var a = t.getClip();
    a && this.removeClip(a), t.animation = null;
  }, e.prototype.update = function(t) {
    for (var a = eo() - this._pausedTime, n = a - this._time, i = this._head; i; ) {
      var o = i.next, s = i.step(a, n);
      s && (i.ondestroy(), this.removeClip(i)), i = o;
    }
    this._time = a, t || (this.trigger("frame", n), this.stage.update && this.stage.update());
  }, e.prototype._startLoop = function() {
    var t = this;
    this._running = !0;
    function a() {
      t._running && (Ed(a), !t._paused && t.update());
    }
    Ed(a);
  }, e.prototype.start = function() {
    this._running || (this._time = eo(), this._pausedTime = 0, this._startLoop());
  }, e.prototype.stop = function() {
    this._running = !1;
  }, e.prototype.pause = function() {
    this._paused || (this._pauseStart = eo(), this._paused = !0);
  }, e.prototype.resume = function() {
    this._paused && (this._pausedTime += eo() - this._pauseStart, this._paused = !1);
  }, e.prototype.clear = function() {
    for (var t = this._head; t; ) {
      var a = t.next;
      t.prev = t.next = t.animation = null, t = a;
    }
    this._head = this._tail = null;
  }, e.prototype.isFinished = function() {
    return this._head == null;
  }, e.prototype.animate = function(t, a) {
    a = a || {}, this.start();
    var n = new xg(t, a.loop);
    return this.addAnimator(n), n;
  }, e;
}(cr);
const dE = vE;
var pE = 300, uc = bt.domSupported, fc = function() {
  var r = [
    "click",
    "dblclick",
    "mousewheel",
    "wheel",
    "mouseout",
    "mouseup",
    "mousedown",
    "mousemove",
    "contextmenu"
  ], e = [
    "touchstart",
    "touchend",
    "touchmove"
  ], t = {
    pointerdown: 1,
    pointerup: 1,
    pointermove: 1,
    pointerout: 1
  }, a = G(r, function(n) {
    var i = n.replace("mouse", "pointer");
    return t.hasOwnProperty(i) ? i : n;
  });
  return {
    mouse: r,
    touch: e,
    pointer: a
  };
}(), Gm = {
  mouse: ["mousemove", "mouseup"],
  pointer: ["pointermove", "pointerup"]
}, Fm = !1;
function Gd(r) {
  var e = r.pointerType;
  return e === "pen" || e === "touch";
}
function gE(r) {
  r.touching = !0, r.touchTimer != null && (clearTimeout(r.touchTimer), r.touchTimer = null), r.touchTimer = setTimeout(function() {
    r.touching = !1, r.touchTimer = null;
  }, 700);
}
function hc(r) {
  r && (r.zrByTouch = !0);
}
function yE(r, e) {
  return Qe(r.dom, new mE(r, e), !0);
}
function iT(r, e) {
  for (var t = e, a = !1; t && t.nodeType !== 9 && !(a = t.domBelongToZr || t !== e && t === r.painterRoot); )
    t = t.parentNode;
  return a;
}
var mE = function() {
  function r(e, t) {
    this.stopPropagation = Xt, this.stopImmediatePropagation = Xt, this.preventDefault = Xt, this.type = t.type, this.target = this.currentTarget = e.dom, this.pointerType = t.pointerType, this.clientX = t.clientX, this.clientY = t.clientY;
  }
  return r;
}(), yr = {
  mousedown: function(r) {
    r = Qe(this.dom, r), this.__mayPointerCapture = [r.zrX, r.zrY], this.trigger("mousedown", r);
  },
  mousemove: function(r) {
    r = Qe(this.dom, r);
    var e = this.__mayPointerCapture;
    e && (r.zrX !== e[0] || r.zrY !== e[1]) && this.__togglePointerCapture(!0), this.trigger("mousemove", r);
  },
  mouseup: function(r) {
    r = Qe(this.dom, r), this.__togglePointerCapture(!1), this.trigger("mouseup", r);
  },
  mouseout: function(r) {
    r = Qe(this.dom, r);
    var e = r.toElement || r.relatedTarget;
    iT(this, e) || (this.__pointerCapturing && (r.zrEventControl = "no_globalout"), this.trigger("mouseout", r));
  },
  wheel: function(r) {
    Fm = !0, r = Qe(this.dom, r), this.trigger("mousewheel", r);
  },
  mousewheel: function(r) {
    Fm || (r = Qe(this.dom, r), this.trigger("mousewheel", r));
  },
  touchstart: function(r) {
    r = Qe(this.dom, r), hc(r), this.__lastTouchMoment = /* @__PURE__ */ new Date(), this.handler.processGesture(r, "start"), yr.mousemove.call(this, r), yr.mousedown.call(this, r);
  },
  touchmove: function(r) {
    r = Qe(this.dom, r), hc(r), this.handler.processGesture(r, "change"), yr.mousemove.call(this, r);
  },
  touchend: function(r) {
    r = Qe(this.dom, r), hc(r), this.handler.processGesture(r, "end"), yr.mouseup.call(this, r), +/* @__PURE__ */ new Date() - +this.__lastTouchMoment < pE && yr.click.call(this, r);
  },
  pointerdown: function(r) {
    yr.mousedown.call(this, r);
  },
  pointermove: function(r) {
    Gd(r) || yr.mousemove.call(this, r);
  },
  pointerup: function(r) {
    yr.mouseup.call(this, r);
  },
  pointerout: function(r) {
    Gd(r) || yr.mouseout.call(this, r);
  }
};
M(["click", "dblclick", "contextmenu"], function(r) {
  yr[r] = function(e) {
    e = Qe(this.dom, e), this.trigger(r, e);
  };
});
var Fd = {
  pointermove: function(r) {
    Gd(r) || Fd.mousemove.call(this, r);
  },
  pointerup: function(r) {
    Fd.mouseup.call(this, r);
  },
  mousemove: function(r) {
    this.trigger("mousemove", r);
  },
  mouseup: function(r) {
    var e = this.__pointerCapturing;
    this.__togglePointerCapture(!1), this.trigger("mouseup", r), e && (r.zrEventControl = "only_globalout", this.trigger("mouseout", r));
  }
};
function _E(r, e) {
  var t = e.domHandlers;
  bt.pointerEventsSupported ? M(fc.pointer, function(a) {
    Uu(e, a, function(n) {
      t[a].call(r, n);
    });
  }) : (bt.touchEventsSupported && M(fc.touch, function(a) {
    Uu(e, a, function(n) {
      t[a].call(r, n), gE(e);
    });
  }), M(fc.mouse, function(a) {
    Uu(e, a, function(n) {
      n = gg(n), e.touching || t[a].call(r, n);
    });
  }));
}
function SE(r, e) {
  bt.pointerEventsSupported ? M(Gm.pointer, t) : bt.touchEventsSupported || M(Gm.mouse, t);
  function t(a) {
    function n(i) {
      i = gg(i), iT(r, i.target) || (i = yE(r, i), e.domHandlers[a].call(r, i));
    }
    Uu(e, a, n, { capture: !0 });
  }
}
function Uu(r, e, t, a) {
  r.mounted[e] = t, r.listenerOpts[e] = a, Ld(r.domTarget, e, t, a);
}
function cc(r) {
  var e = r.mounted;
  for (var t in e)
    e.hasOwnProperty(t) && A2(r.domTarget, t, e[t], r.listenerOpts[t]);
  r.mounted = {};
}
var Hm = function() {
  function r(e, t) {
    this.mounted = {}, this.listenerOpts = {}, this.touching = !1, this.domTarget = e, this.domHandlers = t;
  }
  return r;
}(), xE = function(r) {
  N(e, r);
  function e(t, a) {
    var n = r.call(this) || this;
    return n.__pointerCapturing = !1, n.dom = t, n.painterRoot = a, n._localHandlerScope = new Hm(t, yr), uc && (n._globalHandlerScope = new Hm(document, Fd)), _E(n, n._localHandlerScope), n;
  }
  return e.prototype.dispose = function() {
    cc(this._localHandlerScope), uc && cc(this._globalHandlerScope);
  }, e.prototype.setCursor = function(t) {
    this.dom.style && (this.dom.style.cursor = t || "default");
  }, e.prototype.__togglePointerCapture = function(t) {
    if (this.__mayPointerCapture = null, uc && +this.__pointerCapturing ^ +t) {
      this.__pointerCapturing = t;
      var a = this._globalHandlerScope;
      t ? SE(this, a) : cc(a);
    }
  }, e;
}(cr);
const wE = xE;
var oT = 1;
bt.hasGlobalWindow && (oT = Math.max(window.devicePixelRatio || window.screen && window.screen.deviceXDPI / window.screen.logicalXDPI || 1, 1));
var vf = oT, Hd = 0.4, Wd = "#333", $d = "#ccc", bE = "#eee", Wm = uh, $m = 5e-5;
function pn(r) {
  return r > $m || r < -$m;
}
var gn = [], Ii = [], vc = fr(), dc = Math.abs, TE = function() {
  function r() {
  }
  return r.prototype.getLocalTransform = function(e) {
    return r.getLocalTransform(this, e);
  }, r.prototype.setPosition = function(e) {
    this.x = e[0], this.y = e[1];
  }, r.prototype.setScale = function(e) {
    this.scaleX = e[0], this.scaleY = e[1];
  }, r.prototype.setSkew = function(e) {
    this.skewX = e[0], this.skewY = e[1];
  }, r.prototype.setOrigin = function(e) {
    this.originX = e[0], this.originY = e[1];
  }, r.prototype.needLocalTransform = function() {
    return pn(this.rotation) || pn(this.x) || pn(this.y) || pn(this.scaleX - 1) || pn(this.scaleY - 1) || pn(this.skewX) || pn(this.skewY);
  }, r.prototype.updateTransform = function() {
    var e = this.parent && this.parent.transform, t = this.needLocalTransform(), a = this.transform;
    if (!(t || e)) {
      a && (Wm(a), this.invTransform = null);
      return;
    }
    a = a || fr(), t ? this.getLocalTransform(a) : Wm(a), e && (t ? ua(a, e, a) : yg(a, e)), this.transform = a, this._resolveGlobalScaleRatio(a);
  }, r.prototype._resolveGlobalScaleRatio = function(e) {
    var t = this.globalScaleRatio;
    if (t != null && t !== 1) {
      this.getGlobalScale(gn);
      var a = gn[0] < 0 ? -1 : 1, n = gn[1] < 0 ? -1 : 1, i = ((gn[0] - a) * t + a) / gn[0] || 0, o = ((gn[1] - n) * t + n) / gn[1] || 0;
      e[0] *= i, e[1] *= i, e[2] *= o, e[3] *= o;
    }
    this.invTransform = this.invTransform || fr(), To(this.invTransform, e);
  }, r.prototype.getComputedTransform = function() {
    for (var e = this, t = []; e; )
      t.push(e), e = e.parent;
    for (; e = t.pop(); )
      e.updateTransform();
    return this.transform;
  }, r.prototype.setLocalTransform = function(e) {
    if (e) {
      var t = e[0] * e[0] + e[1] * e[1], a = e[2] * e[2] + e[3] * e[3], n = Math.atan2(e[1], e[0]), i = Math.PI / 2 + n - Math.atan2(e[3], e[2]);
      a = Math.sqrt(a) * Math.cos(i), t = Math.sqrt(t), this.skewX = i, this.skewY = 0, this.rotation = -n, this.x = +e[4], this.y = +e[5], this.scaleX = t, this.scaleY = a, this.originX = 0, this.originY = 0;
    }
  }, r.prototype.decomposeTransform = function() {
    if (this.transform) {
      var e = this.parent, t = this.transform;
      e && e.transform && (ua(Ii, e.invTransform, t), t = Ii);
      var a = this.originX, n = this.originY;
      (a || n) && (vc[4] = a, vc[5] = n, ua(Ii, t, vc), Ii[4] -= a, Ii[5] -= n, t = Ii), this.setLocalTransform(t);
    }
  }, r.prototype.getGlobalScale = function(e) {
    var t = this.transform;
    return e = e || [], t ? (e[0] = Math.sqrt(t[0] * t[0] + t[1] * t[1]), e[1] = Math.sqrt(t[2] * t[2] + t[3] * t[3]), t[0] < 0 && (e[0] = -e[0]), t[3] < 0 && (e[1] = -e[1]), e) : (e[0] = 1, e[1] = 1, e);
  }, r.prototype.transformCoordToLocal = function(e, t) {
    var a = [e, t], n = this.invTransform;
    return n && he(a, a, n), a;
  }, r.prototype.transformCoordToGlobal = function(e, t) {
    var a = [e, t], n = this.transform;
    return n && he(a, a, n), a;
  }, r.prototype.getLineScale = function() {
    var e = this.transform;
    return e && dc(e[0] - 1) > 1e-10 && dc(e[3] - 1) > 1e-10 ? Math.sqrt(dc(e[0] * e[3] - e[2] * e[1])) : 1;
  }, r.prototype.copyTransform = function(e) {
    sT(this, e);
  }, r.getLocalTransform = function(e, t) {
    t = t || [];
    var a = e.originX || 0, n = e.originY || 0, i = e.scaleX, o = e.scaleY, s = e.anchorX, l = e.anchorY, u = e.rotation || 0, f = e.x, h = e.y, c = e.skewX ? Math.tan(e.skewX) : 0, v = e.skewY ? Math.tan(-e.skewY) : 0;
    if (a || n || s || l) {
      var d = a + s, p = n + l;
      t[4] = -d * i - c * p * o, t[5] = -p * o - v * d * i;
    } else
      t[4] = t[5] = 0;
    return t[0] = i, t[3] = o, t[1] = v * i, t[2] = c * o, u && _i(t, t, u), t[4] += a + f, t[5] += n + h, t;
  }, r.initDefaultProps = function() {
    var e = r.prototype;
    e.scaleX = e.scaleY = e.globalScaleRatio = 1, e.x = e.y = e.originX = e.originY = e.skewX = e.skewY = e.rotation = e.anchorX = e.anchorY = 0;
  }(), r;
}(), Xr = [
  "x",
  "y",
  "originX",
  "originY",
  "anchorX",
  "anchorY",
  "rotation",
  "scaleX",
  "scaleY",
  "skewX",
  "skewY"
];
function sT(r, e) {
  for (var t = 0; t < Xr.length; t++) {
    var a = Xr[t];
    r[a] = e[a];
  }
}
const oa = TE;
var Um = {};
function Ye(r, e) {
  e = e || ja;
  var t = Um[e];
  t || (t = Um[e] = new pl(500));
  var a = t.get(r);
  return a == null && (a = Ja.measureText(r, e).width, t.put(r, a)), a;
}
function Ym(r, e, t, a) {
  var n = Ye(r, e), i = hh(e), o = ys(0, n, t), s = ji(0, i, a), l = new ct(o, s, n, i);
  return l;
}
function gl(r, e, t, a) {
  var n = ((r || "") + "").split("\n"), i = n.length;
  if (i === 1)
    return Ym(n[0], e, t, a);
  for (var o = new ct(0, 0, 0, 0), s = 0; s < n.length; s++) {
    var l = Ym(n[s], e, t, a);
    s === 0 ? o.copy(l) : o.union(l);
  }
  return o;
}
function ys(r, e, t) {
  return t === "right" ? r -= e : t === "center" && (r -= e / 2), r;
}
function ji(r, e, t) {
  return t === "middle" ? r -= e / 2 : t === "bottom" && (r -= e), r;
}
function hh(r) {
  return Ye("国", r);
}
function Cr(r, e) {
  return typeof r == "string" ? r.lastIndexOf("%") >= 0 ? parseFloat(r) / 100 * e : parseFloat(r) : r;
}
function df(r, e, t) {
  var a = e.position || "inside", n = e.distance != null ? e.distance : 5, i = t.height, o = t.width, s = i / 2, l = t.x, u = t.y, f = "left", h = "top";
  if (a instanceof Array)
    l += Cr(a[0], t.width), u += Cr(a[1], t.height), f = null, h = null;
  else
    switch (a) {
      case "left":
        l -= n, u += s, f = "right", h = "middle";
        break;
      case "right":
        l += n + o, u += s, h = "middle";
        break;
      case "top":
        l += o / 2, u -= n, f = "center", h = "bottom";
        break;
      case "bottom":
        l += o / 2, u += i + n, f = "center";
        break;
      case "inside":
        l += o / 2, u += s, f = "center", h = "middle";
        break;
      case "insideLeft":
        l += n, u += s, h = "middle";
        break;
      case "insideRight":
        l += o - n, u += s, f = "right", h = "middle";
        break;
      case "insideTop":
        l += o / 2, u += n, f = "center";
        break;
      case "insideBottom":
        l += o / 2, u += i - n, f = "center", h = "bottom";
        break;
      case "insideTopLeft":
        l += n, u += n;
        break;
      case "insideTopRight":
        l += o - n, u += n, f = "right";
        break;
      case "insideBottomLeft":
        l += n, u += i - n, h = "bottom";
        break;
      case "insideBottomRight":
        l += o - n, u += i - n, f = "right", h = "bottom";
        break;
    }
  return r = r || {}, r.x = l, r.y = u, r.align = f, r.verticalAlign = h, r;
}
var pc = "__zr_normal__", gc = Xr.concat(["ignore"]), DE = Yr(Xr, function(r, e) {
  return r[e] = !0, r;
}, { ignore: !1 }), Li = {}, CE = new ct(0, 0, 0, 0), wg = function() {
  function r(e) {
    this.id = Pb(), this.animators = [], this.currentStates = [], this.states = {}, this._init(e);
  }
  return r.prototype._init = function(e) {
    this.attr(e);
  }, r.prototype.drift = function(e, t, a) {
    switch (this.draggable) {
      case "horizontal":
        t = 0;
        break;
      case "vertical":
        e = 0;
        break;
    }
    var n = this.transform;
    n || (n = this.transform = [1, 0, 0, 1, 0, 0]), n[4] += e, n[5] += t, this.decomposeTransform(), this.markRedraw();
  }, r.prototype.beforeUpdate = function() {
  }, r.prototype.afterUpdate = function() {
  }, r.prototype.update = function() {
    this.updateTransform(), this.__dirty && this.updateInnerText();
  }, r.prototype.updateInnerText = function(e) {
    var t = this._textContent;
    if (t && (!t.ignore || e)) {
      this.textConfig || (this.textConfig = {});
      var a = this.textConfig, n = a.local, i = t.innerTransformable, o = void 0, s = void 0, l = !1;
      i.parent = n ? this : null;
      var u = !1;
      if (i.copyTransform(t), a.position != null) {
        var f = CE;
        a.layoutRect ? f.copy(a.layoutRect) : f.copy(this.getBoundingRect()), n || f.applyTransform(this.transform), this.calculateTextPosition ? this.calculateTextPosition(Li, a, f) : df(Li, a, f), i.x = Li.x, i.y = Li.y, o = Li.align, s = Li.verticalAlign;
        var h = a.origin;
        if (h && a.rotation != null) {
          var c = void 0, v = void 0;
          h === "center" ? (c = f.width * 0.5, v = f.height * 0.5) : (c = Cr(h[0], f.width), v = Cr(h[1], f.height)), u = !0, i.originX = -i.x + c + (n ? 0 : f.x), i.originY = -i.y + v + (n ? 0 : f.y);
        }
      }
      a.rotation != null && (i.rotation = a.rotation);
      var d = a.offset;
      d && (i.x += d[0], i.y += d[1], u || (i.originX = -d[0], i.originY = -d[1]));
      var p = a.inside == null ? typeof a.position == "string" && a.position.indexOf("inside") >= 0 : a.inside, g = this._innerTextDefaultStyle || (this._innerTextDefaultStyle = {}), y = void 0, m = void 0, _ = void 0;
      p && this.canBeInsideText() ? (y = a.insideFill, m = a.insideStroke, (y == null || y === "auto") && (y = this.getInsideTextFill()), (m == null || m === "auto") && (m = this.getInsideTextStroke(y), _ = !0)) : (y = a.outsideFill, m = a.outsideStroke, (y == null || y === "auto") && (y = this.getOutsideFill()), (m == null || m === "auto") && (m = this.getOutsideStroke(y), _ = !0)), y = y || "#000", (y !== g.fill || m !== g.stroke || _ !== g.autoStroke || o !== g.align || s !== g.verticalAlign) && (l = !0, g.fill = y, g.stroke = m, g.autoStroke = _, g.align = o, g.verticalAlign = s, t.setDefaultTextStyle(g)), t.__dirty |= $e, l && t.dirtyStyle(!0);
    }
  }, r.prototype.canBeInsideText = function() {
    return !0;
  }, r.prototype.getInsideTextFill = function() {
    return "#fff";
  }, r.prototype.getInsideTextStroke = function(e) {
    return "#000";
  }, r.prototype.getOutsideFill = function() {
    return this.__zr && this.__zr.isDarkMode() ? $d : Wd;
  }, r.prototype.getOutsideStroke = function(e) {
    var t = this.__zr && this.__zr.getBackgroundColor(), a = typeof t == "string" && Ue(t);
    a || (a = [255, 255, 255, 1]);
    for (var n = a[3], i = this.__zr.isDarkMode(), o = 0; o < 3; o++)
      a[o] = a[o] * n + (i ? 0 : 255) * (1 - n);
    return a[3] = 1, fa(a, "rgba");
  }, r.prototype.traverse = function(e, t) {
  }, r.prototype.attrKV = function(e, t) {
    e === "textConfig" ? this.setTextConfig(t) : e === "textContent" ? this.setTextContent(t) : e === "clipPath" ? this.setClipPath(t) : e === "extra" ? (this.extra = this.extra || {}, V(this.extra, t)) : this[e] = t;
  }, r.prototype.hide = function() {
    this.ignore = !0, this.markRedraw();
  }, r.prototype.show = function() {
    this.ignore = !1, this.markRedraw();
  }, r.prototype.attr = function(e, t) {
    if (typeof e == "string")
      this.attrKV(e, t);
    else if (j(e))
      for (var a = e, n = _t(a), i = 0; i < n.length; i++) {
        var o = n[i];
        this.attrKV(o, e[o]);
      }
    return this.markRedraw(), this;
  }, r.prototype.saveCurrentToNormalState = function(e) {
    this._innerSaveToNormal(e);
    for (var t = this._normalState, a = 0; a < this.animators.length; a++) {
      var n = this.animators[a], i = n.__fromStateTransition;
      if (!(n.getLoop() || i && i !== pc)) {
        var o = n.targetName, s = o ? t[o] : t;
        n.saveTo(s);
      }
    }
  }, r.prototype._innerSaveToNormal = function(e) {
    var t = this._normalState;
    t || (t = this._normalState = {}), e.textConfig && !t.textConfig && (t.textConfig = this.textConfig), this._savePrimaryToNormal(e, t, gc);
  }, r.prototype._savePrimaryToNormal = function(e, t, a) {
    for (var n = 0; n < a.length; n++) {
      var i = a[n];
      e[i] != null && !(i in t) && (t[i] = this[i]);
    }
  }, r.prototype.hasState = function() {
    return this.currentStates.length > 0;
  }, r.prototype.getState = function(e) {
    return this.states[e];
  }, r.prototype.ensureState = function(e) {
    var t = this.states;
    return t[e] || (t[e] = {}), t[e];
  }, r.prototype.clearStates = function(e) {
    this.useState(pc, !1, e);
  }, r.prototype.useState = function(e, t, a, n) {
    var i = e === pc, o = this.hasState();
    if (!(!o && i)) {
      var s = this.currentStates, l = this.stateTransition;
      if (!(vt(s, e) >= 0 && (t || s.length === 1))) {
        var u;
        if (this.stateProxy && !i && (u = this.stateProxy(e)), u || (u = this.states && this.states[e]), !u && !i) {
          br("State " + e + " not exists.");
          return;
        }
        i || this.saveCurrentToNormalState(u);
        var f = !!(u && u.hoverLayer || n);
        f && this._toggleHoverLayerFlag(!0), this._applyStateObj(e, u, this._normalState, t, !a && !this.__inHover && l && l.duration > 0, l);
        var h = this._textContent, c = this._textGuide;
        return h && h.useState(e, t, a, f), c && c.useState(e, t, a, f), i ? (this.currentStates = [], this._normalState = {}) : t ? this.currentStates.push(e) : this.currentStates = [e], this._updateAnimationTargets(), this.markRedraw(), !f && this.__inHover && (this._toggleHoverLayerFlag(!1), this.__dirty &= ~$e), u;
      }
    }
  }, r.prototype.useStates = function(e, t, a) {
    if (!e.length)
      this.clearStates();
    else {
      var n = [], i = this.currentStates, o = e.length, s = o === i.length;
      if (s) {
        for (var l = 0; l < o; l++)
          if (e[l] !== i[l]) {
            s = !1;
            break;
          }
      }
      if (s)
        return;
      for (var l = 0; l < o; l++) {
        var u = e[l], f = void 0;
        this.stateProxy && (f = this.stateProxy(u, e)), f || (f = this.states[u]), f && n.push(f);
      }
      var h = n[o - 1], c = !!(h && h.hoverLayer || a);
      c && this._toggleHoverLayerFlag(!0);
      var v = this._mergeStates(n), d = this.stateTransition;
      this.saveCurrentToNormalState(v), this._applyStateObj(e.join(","), v, this._normalState, !1, !t && !this.__inHover && d && d.duration > 0, d);
      var p = this._textContent, g = this._textGuide;
      p && p.useStates(e, t, c), g && g.useStates(e, t, c), this._updateAnimationTargets(), this.currentStates = e.slice(), this.markRedraw(), !c && this.__inHover && (this._toggleHoverLayerFlag(!1), this.__dirty &= ~$e);
    }
  }, r.prototype._updateAnimationTargets = function() {
    for (var e = 0; e < this.animators.length; e++) {
      var t = this.animators[e];
      t.targetName && t.changeTarget(this[t.targetName]);
    }
  }, r.prototype.removeState = function(e) {
    var t = vt(this.currentStates, e);
    if (t >= 0) {
      var a = this.currentStates.slice();
      a.splice(t, 1), this.useStates(a);
    }
  }, r.prototype.replaceState = function(e, t, a) {
    var n = this.currentStates.slice(), i = vt(n, e), o = vt(n, t) >= 0;
    i >= 0 ? o ? n.splice(i, 1) : n[i] = t : a && !o && n.push(t), this.useStates(n);
  }, r.prototype.toggleState = function(e, t) {
    t ? this.useState(e, !0) : this.removeState(e);
  }, r.prototype._mergeStates = function(e) {
    for (var t = {}, a, n = 0; n < e.length; n++) {
      var i = e[n];
      V(t, i), i.textConfig && (a = a || {}, V(a, i.textConfig));
    }
    return a && (t.textConfig = a), t;
  }, r.prototype._applyStateObj = function(e, t, a, n, i, o) {
    var s = !(t && n);
    t && t.textConfig ? (this.textConfig = V({}, n ? this.textConfig : a.textConfig), V(this.textConfig, t.textConfig)) : s && a.textConfig && (this.textConfig = a.textConfig);
    for (var l = {}, u = !1, f = 0; f < gc.length; f++) {
      var h = gc[f], c = i && DE[h];
      t && t[h] != null ? c ? (u = !0, l[h] = t[h]) : this[h] = t[h] : s && a[h] != null && (c ? (u = !0, l[h] = a[h]) : this[h] = a[h]);
    }
    if (!i)
      for (var f = 0; f < this.animators.length; f++) {
        var v = this.animators[f], d = v.targetName;
        v.getLoop() || v.__changeFinalValue(d ? (t || a)[d] : t || a);
      }
    u && this._transitionState(e, l, o);
  }, r.prototype._attachComponent = function(e) {
    if (e.__zr && !e.__hostTarget) {
      if ({}.NODE_ENV !== "production")
        throw new Error("Text element has been added to zrender.");
      return;
    }
    if (e === this) {
      if ({}.NODE_ENV !== "production")
        throw new Error("Recursive component attachment.");
      return;
    }
    var t = this.__zr;
    t && e.addSelfToZr(t), e.__zr = t, e.__hostTarget = this;
  }, r.prototype._detachComponent = function(e) {
    e.__zr && e.removeSelfFromZr(e.__zr), e.__zr = null, e.__hostTarget = null;
  }, r.prototype.getClipPath = function() {
    return this._clipPath;
  }, r.prototype.setClipPath = function(e) {
    this._clipPath && this._clipPath !== e && this.removeClipPath(), this._attachComponent(e), this._clipPath = e, this.markRedraw();
  }, r.prototype.removeClipPath = function() {
    var e = this._clipPath;
    e && (this._detachComponent(e), this._clipPath = null, this.markRedraw());
  }, r.prototype.getTextContent = function() {
    return this._textContent;
  }, r.prototype.setTextContent = function(e) {
    var t = this._textContent;
    if (t !== e) {
      if (t && t !== e && this.removeTextContent(), {}.NODE_ENV !== "production" && e.__zr && !e.__hostTarget)
        throw new Error("Text element has been added to zrender.");
      e.innerTransformable = new oa(), this._attachComponent(e), this._textContent = e, this.markRedraw();
    }
  }, r.prototype.setTextConfig = function(e) {
    this.textConfig || (this.textConfig = {}), V(this.textConfig, e), this.markRedraw();
  }, r.prototype.removeTextConfig = function() {
    this.textConfig = null, this.markRedraw();
  }, r.prototype.removeTextContent = function() {
    var e = this._textContent;
    e && (e.innerTransformable = null, this._detachComponent(e), this._textContent = null, this._innerTextDefaultStyle = null, this.markRedraw());
  }, r.prototype.getTextGuideLine = function() {
    return this._textGuide;
  }, r.prototype.setTextGuideLine = function(e) {
    this._textGuide && this._textGuide !== e && this.removeTextGuideLine(), this._attachComponent(e), this._textGuide = e, this.markRedraw();
  }, r.prototype.removeTextGuideLine = function() {
    var e = this._textGuide;
    e && (this._detachComponent(e), this._textGuide = null, this.markRedraw());
  }, r.prototype.markRedraw = function() {
    this.__dirty |= $e;
    var e = this.__zr;
    e && (this.__inHover ? e.refreshHover() : e.refresh()), this.__hostTarget && this.__hostTarget.markRedraw();
  }, r.prototype.dirty = function() {
    this.markRedraw();
  }, r.prototype._toggleHoverLayerFlag = function(e) {
    this.__inHover = e;
    var t = this._textContent, a = this._textGuide;
    t && (t.__inHover = e), a && (a.__inHover = e);
  }, r.prototype.addSelfToZr = function(e) {
    if (this.__zr !== e) {
      this.__zr = e;
      var t = this.animators;
      if (t)
        for (var a = 0; a < t.length; a++)
          e.animation.addAnimator(t[a]);
      this._clipPath && this._clipPath.addSelfToZr(e), this._textContent && this._textContent.addSelfToZr(e), this._textGuide && this._textGuide.addSelfToZr(e);
    }
  }, r.prototype.removeSelfFromZr = function(e) {
    if (this.__zr) {
      this.__zr = null;
      var t = this.animators;
      if (t)
        for (var a = 0; a < t.length; a++)
          e.animation.removeAnimator(t[a]);
      this._clipPath && this._clipPath.removeSelfFromZr(e), this._textContent && this._textContent.removeSelfFromZr(e), this._textGuide && this._textGuide.removeSelfFromZr(e);
    }
  }, r.prototype.animate = function(e, t, a) {
    var n = e ? this[e] : this;
    if ({}.NODE_ENV !== "production" && !n) {
      br('Property "' + e + '" is not existed in element ' + this.id);
      return;
    }
    var i = new xg(n, t, a);
    return e && (i.targetName = e), this.addAnimator(i, e), i;
  }, r.prototype.addAnimator = function(e, t) {
    var a = this.__zr, n = this;
    e.during(function() {
      n.updateDuringAnimation(t);
    }).done(function() {
      var i = n.animators, o = vt(i, e);
      o >= 0 && i.splice(o, 1);
    }), this.animators.push(e), a && a.animation.addAnimator(e), a && a.wakeUp();
  }, r.prototype.updateDuringAnimation = function(e) {
    this.markRedraw();
  }, r.prototype.stopAnimation = function(e, t) {
    for (var a = this.animators, n = a.length, i = [], o = 0; o < n; o++) {
      var s = a[o];
      !e || e === s.scope ? s.stop(t) : i.push(s);
    }
    return this.animators = i, this;
  }, r.prototype.animateTo = function(e, t, a) {
    yc(this, e, t, a);
  }, r.prototype.animateFrom = function(e, t, a) {
    yc(this, e, t, a, !0);
  }, r.prototype._transitionState = function(e, t, a, n) {
    for (var i = yc(this, t, a, n), o = 0; o < i.length; o++)
      i[o].__fromStateTransition = e;
  }, r.prototype.getBoundingRect = function() {
    return null;
  }, r.prototype.getPaintRect = function() {
    return null;
  }, r.initDefaultProps = function() {
    var e = r.prototype;
    e.type = "element", e.name = "", e.ignore = e.silent = e.isGroup = e.draggable = e.dragging = e.ignoreClip = e.__inHover = !1, e.__dirty = $e;
    var t = {};
    function a(i, o, s) {
      t[i + o + s] || (console.warn("DEPRECATED: '" + i + "' has been deprecated. use '" + o + "', '" + s + "' instead"), t[i + o + s] = !0);
    }
    function n(i, o, s, l) {
      Object.defineProperty(e, i, {
        get: function() {
          if ({}.NODE_ENV !== "production" && a(i, s, l), !this[o]) {
            var f = this[o] = [];
            u(this, f);
          }
          return this[o];
        },
        set: function(f) {
          ({}).NODE_ENV !== "production" && a(i, s, l), this[s] = f[0], this[l] = f[1], this[o] = f, u(this, f);
        }
      });
      function u(f, h) {
        Object.defineProperty(h, 0, {
          get: function() {
            return f[s];
          },
          set: function(c) {
            f[s] = c;
          }
        }), Object.defineProperty(h, 1, {
          get: function() {
            return f[l];
          },
          set: function(c) {
            f[l] = c;
          }
        });
      }
    }
    Object.defineProperty && (n("position", "_legacyPos", "x", "y"), n("scale", "_legacyScale", "scaleX", "scaleY"), n("origin", "_legacyOrigin", "originX", "originY"));
  }(), r;
}();
te(wg, cr);
te(wg, oa);
function yc(r, e, t, a, n) {
  t = t || {};
  var i = [];
  lT(r, "", r, e, t, a, i, n);
  var o = i.length, s = !1, l = t.done, u = t.aborted, f = function() {
    s = !0, o--, o <= 0 && (s ? l && l() : u && u());
  }, h = function() {
    o--, o <= 0 && (s ? l && l() : u && u());
  };
  o || l && l(), i.length > 0 && t.during && i[0].during(function(d, p) {
    t.during(p);
  });
  for (var c = 0; c < i.length; c++) {
    var v = i[c];
    f && v.done(f), h && v.aborted(h), t.force && v.duration(t.duration), v.start(t.easing);
  }
  return i;
}
function mc(r, e, t) {
  for (var a = 0; a < t; a++)
    r[a] = e[a];
}
function AE(r) {
  return xe(r[0]);
}
function ME(r, e, t) {
  if (xe(e[t]))
    if (xe(r[t]) || (r[t] = []), Be(e[t])) {
      var a = e[t].length;
      r[t].length !== a && (r[t] = new e[t].constructor(a), mc(r[t], e[t], a));
    } else {
      var n = e[t], i = r[t], o = n.length;
      if (AE(n))
        for (var s = n[0].length, l = 0; l < o; l++)
          i[l] ? mc(i[l], n[l], s) : i[l] = Array.prototype.slice.call(n[l]);
      else
        mc(i, n, o);
      i.length = n.length;
    }
  else
    r[t] = e[t];
}
function IE(r, e) {
  return r === e || xe(r) && xe(e) && LE(r, e);
}
function LE(r, e) {
  var t = r.length;
  if (t !== e.length)
    return !1;
  for (var a = 0; a < t; a++)
    if (r[a] !== e[a])
      return !1;
  return !0;
}
function lT(r, e, t, a, n, i, o, s) {
  for (var l = _t(a), u = n.duration, f = n.delay, h = n.additive, c = n.setToFinal, v = !j(i), d = r.animators, p = [], g = 0; g < l.length; g++) {
    var y = l[g], m = a[y];
    if (m != null && t[y] != null && (v || i[y]))
      if (j(m) && !xe(m) && !sh(m)) {
        if (e) {
          s || (t[y] = m, r.updateDuringAnimation(e));
          continue;
        }
        lT(r, y, t[y], m, n, i && i[y], o, s);
      } else
        p.push(y);
    else
      s || (t[y] = m, r.updateDuringAnimation(e), p.push(y));
  }
  var _ = p.length;
  if (!h && _)
    for (var S = 0; S < d.length; S++) {
      var w = d[S];
      if (w.targetName === e) {
        var x = w.stopTracks(p);
        if (x) {
          var b = vt(d, w);
          d.splice(b, 1);
        }
      }
    }
  if (n.force || (p = Et(p, function(A) {
    return !IE(a[A], t[A]);
  }), _ = p.length), _ > 0 || n.force && !o.length) {
    var T = void 0, C = void 0, D = void 0;
    if (s) {
      C = {}, c && (T = {});
      for (var S = 0; S < _; S++) {
        var y = p[S];
        C[y] = t[y], c ? T[y] = a[y] : t[y] = a[y];
      }
    } else if (c) {
      D = {};
      for (var S = 0; S < _; S++) {
        var y = p[S];
        D[y] = Ls(t[y]), ME(t, a, y);
      }
    }
    var w = new xg(t, !1, !1, h ? Et(d, function(I) {
      return I.targetName === e;
    }) : null);
    w.targetName = e, n.scope && (w.scope = n.scope), c && T && w.whenWithKeys(0, T, p), D && w.whenWithKeys(0, D, p), w.whenWithKeys(u == null ? 500 : u, s ? C : a, p).delay(f || 0), r.addAnimator(w, e), o.push(w);
  }
}
const uT = wg;
var fT = function(r) {
  N(e, r);
  function e(t) {
    var a = r.call(this) || this;
    return a.isGroup = !0, a._children = [], a.attr(t), a;
  }
  return e.prototype.childrenRef = function() {
    return this._children;
  }, e.prototype.children = function() {
    return this._children.slice();
  }, e.prototype.childAt = function(t) {
    return this._children[t];
  }, e.prototype.childOfName = function(t) {
    for (var a = this._children, n = 0; n < a.length; n++)
      if (a[n].name === t)
        return a[n];
  }, e.prototype.childCount = function() {
    return this._children.length;
  }, e.prototype.add = function(t) {
    if (t && (t !== this && t.parent !== this && (this._children.push(t), this._doAdd(t)), {}.NODE_ENV !== "production" && t.__hostTarget))
      throw "This elemenet has been used as an attachment";
    return this;
  }, e.prototype.addBefore = function(t, a) {
    if (t && t !== this && t.parent !== this && a && a.parent === this) {
      var n = this._children, i = n.indexOf(a);
      i >= 0 && (n.splice(i, 0, t), this._doAdd(t));
    }
    return this;
  }, e.prototype.replace = function(t, a) {
    var n = vt(this._children, t);
    return n >= 0 && this.replaceAt(a, n), this;
  }, e.prototype.replaceAt = function(t, a) {
    var n = this._children, i = n[a];
    if (t && t !== this && t.parent !== this && t !== i) {
      n[a] = t, i.parent = null;
      var o = this.__zr;
      o && i.removeSelfFromZr(o), this._doAdd(t);
    }
    return this;
  }, e.prototype._doAdd = function(t) {
    t.parent && t.parent.remove(t), t.parent = this;
    var a = this.__zr;
    a && a !== t.__zr && t.addSelfToZr(a), a && a.refresh();
  }, e.prototype.remove = function(t) {
    var a = this.__zr, n = this._children, i = vt(n, t);
    return i < 0 ? this : (n.splice(i, 1), t.parent = null, a && t.removeSelfFromZr(a), a && a.refresh(), this);
  }, e.prototype.removeAll = function() {
    for (var t = this._children, a = this.__zr, n = 0; n < t.length; n++) {
      var i = t[n];
      a && i.removeSelfFromZr(a), i.parent = null;
    }
    return t.length = 0, this;
  }, e.prototype.eachChild = function(t, a) {
    for (var n = this._children, i = 0; i < n.length; i++) {
      var o = n[i];
      t.call(a, o, i);
    }
    return this;
  }, e.prototype.traverse = function(t, a) {
    for (var n = 0; n < this._children.length; n++) {
      var i = this._children[n], o = t.call(a, i);
      i.isGroup && !o && i.traverse(t, a);
    }
    return this;
  }, e.prototype.addSelfToZr = function(t) {
    r.prototype.addSelfToZr.call(this, t);
    for (var a = 0; a < this._children.length; a++) {
      var n = this._children[a];
      n.addSelfToZr(t);
    }
  }, e.prototype.removeSelfFromZr = function(t) {
    r.prototype.removeSelfFromZr.call(this, t);
    for (var a = 0; a < this._children.length; a++) {
      var n = this._children[a];
      n.removeSelfFromZr(t);
    }
  }, e.prototype.getBoundingRect = function(t) {
    for (var a = new ct(0, 0, 0, 0), n = t || this._children, i = [], o = null, s = 0; s < n.length; s++) {
      var l = n[s];
      if (!(l.ignore || l.invisible)) {
        var u = l.getBoundingRect(), f = l.getLocalTransform(i);
        f ? (ct.applyTransform(a, u, f), o = o || a.clone(), o.union(a)) : (o = o || u.clone(), o.union(u));
      }
    }
    return o || a;
  }, e;
}(uT);
fT.prototype.type = "group";
const nt = fT;
/*!
* ZRender, a high performance 2d drawing library.
*
* Copyright (c) 2013, Baidu Inc.
* All rights reserved.
*
* LICENSE
* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt
*/
var ms = {}, hT = {};
function EE(r) {
  delete hT[r];
}
function PE(r) {
  if (!r)
    return !1;
  if (typeof r == "string")
    return hf(r, 1) < Hd;
  if (r.colorStops) {
    for (var e = r.colorStops, t = 0, a = e.length, n = 0; n < a; n++)
      t += hf(e[n].color, 1);
    return t /= a, t < Hd;
  }
  return !1;
}
var RE = function() {
  function r(e, t, a) {
    var n = this;
    this._sleepAfterStill = 10, this._stillFrameAccum = 0, this._needsRefresh = !0, this._needsRefreshHover = !0, this._darkMode = !1, a = a || {}, this.dom = t, this.id = e;
    var i = new W2(), o = a.renderer || "canvas";
    if (ms[o] || (o = _t(ms)[0]), {}.NODE_ENV !== "production" && !ms[o])
      throw new Error("Renderer '" + o + "' is not imported. Please import it first.");
    a.useDirtyRect = a.useDirtyRect == null ? !1 : a.useDirtyRect;
    var s = new ms[o](t, i, a, e), l = a.ssr || s.ssrOnly;
    this.storage = i, this.painter = s;
    var u = !bt.node && !bt.worker && !l ? new wE(s.getViewportRoot(), s.root) : null, f = a.useCoarsePointer, h = f == null || f === "auto" ? bt.touchEventsSupported : !!f, c = 44, v;
    h && (v = ft(a.pointerSize, c)), this.handler = new B2(i, s, u, s.root, v), this.animation = new dE({
      stage: {
        update: l ? null : function() {
          return n._flush(!0);
        }
      }
    }), l || this.animation.start();
  }
  return r.prototype.add = function(e) {
    e && (this.storage.addRoot(e), e.addSelfToZr(this), this.refresh());
  }, r.prototype.remove = function(e) {
    e && (this.storage.delRoot(e), e.removeSelfFromZr(this), this.refresh());
  }, r.prototype.configLayer = function(e, t) {
    this.painter.configLayer && this.painter.configLayer(e, t), this.refresh();
  }, r.prototype.setBackgroundColor = function(e) {
    this.painter.setBackgroundColor && this.painter.setBackgroundColor(e), this.refresh(), this._backgroundColor = e, this._darkMode = PE(e);
  }, r.prototype.getBackgroundColor = function() {
    return this._backgroundColor;
  }, r.prototype.setDarkMode = function(e) {
    this._darkMode = e;
  }, r.prototype.isDarkMode = function() {
    return this._darkMode;
  }, r.prototype.refreshImmediately = function(e) {
    e || this.animation.update(!0), this._needsRefresh = !1, this.painter.refresh(), this._needsRefresh = !1;
  }, r.prototype.refresh = function() {
    this._needsRefresh = !0, this.animation.start();
  }, r.prototype.flush = function() {
    this._flush(!1);
  }, r.prototype._flush = function(e) {
    var t, a = eo();
    this._needsRefresh && (t = !0, this.refreshImmediately(e)), this._needsRefreshHover && (t = !0, this.refreshHoverImmediately());
    var n = eo();
    t ? (this._stillFrameAccum = 0, this.trigger("rendered", {
      elapsedTime: n - a
    })) : this._sleepAfterStill > 0 && (this._stillFrameAccum++, this._stillFrameAccum > this._sleepAfterStill && this.animation.stop());
  }, r.prototype.setSleepAfterStill = function(e) {
    this._sleepAfterStill = e;
  }, r.prototype.wakeUp = function() {
    this.animation.start(), this._stillFrameAccum = 0;
  }, r.prototype.refreshHover = function() {
    this._needsRefreshHover = !0;
  }, r.prototype.refreshHoverImmediately = function() {
    this._needsRefreshHover = !1, this.painter.refreshHover && this.painter.getType() === "canvas" && this.painter.refreshHover();
  }, r.prototype.resize = function(e) {
    e = e || {}, this.painter.resize(e.width, e.height), this.handler.resize();
  }, r.prototype.clearAnimation = function() {
    this.animation.clear();
  }, r.prototype.getWidth = function() {
    return this.painter.getWidth();
  }, r.prototype.getHeight = function() {
    return this.painter.getHeight();
  }, r.prototype.setCursorStyle = function(e) {
    this.handler.setCursorStyle(e);
  }, r.prototype.findHover = function(e, t) {
    return this.handler.findHover(e, t);
  }, r.prototype.on = function(e, t, a) {
    return this.handler.on(e, t, a), this;
  }, r.prototype.off = function(e, t) {
    this.handler.off(e, t);
  }, r.prototype.trigger = function(e, t) {
    this.handler.trigger(e, t);
  }, r.prototype.clear = function() {
    for (var e = this.storage.getRoots(), t = 0; t < e.length; t++)
      e[t] instanceof nt && e[t].removeSelfFromZr(this);
    this.storage.delAllRoots(), this.painter.clear();
  }, r.prototype.dispose = function() {
    this.animation.stop(), this.clear(), this.storage.dispose(), this.painter.dispose(), this.handler.dispose(), this.animation = this.storage = this.painter = this.handler = null, EE(this.id);
  }, r;
}();
function Zm(r, e) {
  var t = new RE(Pb(), r, e);
  return hT[t.id] = t, t;
}
function NE(r, e) {
  ms[r] = e;
}
var Xm = 1e-4, cT = 20;
function OE(r) {
  return r.replace(/^\s+|\s+$/g, "");
}
function Lt(r, e, t, a) {
  var n = e[0], i = e[1], o = t[0], s = t[1], l = i - n, u = s - o;
  if (l === 0)
    return u === 0 ? o : (o + s) / 2;
  if (a)
    if (l > 0) {
      if (r <= n)
        return o;
      if (r >= i)
        return s;
    } else {
      if (r >= n)
        return o;
      if (r <= i)
        return s;
    }
  else {
    if (r === n)
      return o;
    if (r === i)
      return s;
  }
  return (r - n) / l * u + o;
}
function H(r, e) {
  switch (r) {
    case "center":
    case "middle":
      r = "50%";
      break;
    case "left":
    case "top":
      r = "0%";
      break;
    case "right":
    case "bottom":
      r = "100%";
      break;
  }
  return $(r) ? OE(r).match(/%$/) ? parseFloat(r) / 100 * e : parseFloat(r) : r == null ? NaN : +r;
}
function Yt(r, e, t) {
  return e == null && (e = 10), e = Math.min(Math.max(0, e), cT), r = (+r).toFixed(e), t ? r : +r;
}
function sr(r) {
  return r.sort(function(e, t) {
    return e - t;
  }), r;
}
function Fr(r) {
  if (r = +r, isNaN(r))
    return 0;
  if (r > 1e-14) {
    for (var e = 1, t = 0; t < 15; t++, e *= 10)
      if (Math.round(r * e) / e === r)
        return t;
  }
  return Ud(r);
}
function Ud(r) {
  var e = r.toString().toLowerCase(), t = e.indexOf("e"), a = t > 0 ? +e.slice(t + 1) : 0, n = t > 0 ? t : e.length, i = e.indexOf("."), o = i < 0 ? 0 : n - 1 - i;
  return Math.max(0, o - a);
}
function vT(r, e) {
  var t = Math.log, a = Math.LN10, n = Math.floor(t(r[1] - r[0]) / a), i = Math.round(t(Math.abs(e[1] - e[0])) / a), o = Math.min(Math.max(-n + i, 0), 20);
  return isFinite(o) ? o : 20;
}
function kE(r, e) {
  var t = Yr(r, function(v, d) {
    return v + (isNaN(d) ? 0 : d);
  }, 0);
  if (t === 0)
    return [];
  for (var a = Math.pow(10, e), n = G(r, function(v) {
    return (isNaN(v) ? 0 : v) / t * a * 100;
  }), i = a * 100, o = G(n, function(v) {
    return Math.floor(v);
  }), s = Yr(o, function(v, d) {
    return v + d;
  }, 0), l = G(n, function(v, d) {
    return v - o[d];
  }); s < i; ) {
    for (var u = Number.NEGATIVE_INFINITY, f = null, h = 0, c = l.length; h < c; ++h)
      l[h] > u && (u = l[h], f = h);
    ++o[f], l[f] = 0, ++s;
  }
  return G(o, function(v) {
    return v / a;
  });
}
function VE(r, e) {
  var t = Math.max(Fr(r), Fr(e)), a = r + e;
  return t > cT ? a : Yt(a, t);
}
var qm = 9007199254740991;
function dT(r) {
  var e = Math.PI * 2;
  return (r % e + e) % e;
}
function pf(r) {
  return r > -Xm && r < Xm;
}
var BE = /^(?:(\d{4})(?:[-\/](\d{1,2})(?:[-\/](\d{1,2})(?:[T ](\d{1,2})(?::(\d{1,2})(?::(\d{1,2})(?:[.,](\d+))?)?)?(Z|[\+\-]\d\d:?\d\d)?)?)?)?)?$/;
function qr(r) {
  if (r instanceof Date)
    return r;
  if ($(r)) {
    var e = BE.exec(r);
    if (!e)
      return /* @__PURE__ */ new Date(NaN);
    if (e[8]) {
      var t = +e[4] || 0;
      return e[8].toUpperCase() !== "Z" && (t -= +e[8].slice(0, 3)), new Date(Date.UTC(+e[1], +(e[2] || 1) - 1, +e[3] || 1, t, +(e[5] || 0), +e[6] || 0, e[7] ? +e[7].substring(0, 3) : 0));
    } else
      return new Date(+e[1], +(e[2] || 1) - 1, +e[3] || 1, +e[4] || 0, +(e[5] || 0), +e[6] || 0, e[7] ? +e[7].substring(0, 3) : 0);
  } else if (r == null)
    return /* @__PURE__ */ new Date(NaN);
  return new Date(Math.round(r));
}
function zE(r) {
  return Math.pow(10, ch(r));
}
function ch(r) {
  if (r === 0)
    return 0;
  var e = Math.floor(Math.log(r) / Math.LN10);
  return r / Math.pow(10, e) >= 10 && e++, e;
}
function pT(r, e) {
  var t = ch(r), a = Math.pow(10, t), n = r / a, i;
  return e ? n < 1.5 ? i = 1 : n < 2.5 ? i = 2 : n < 4 ? i = 3 : n < 7 ? i = 5 : i = 10 : n < 1 ? i = 1 : n < 2 ? i = 2 : n < 3 ? i = 3 : n < 5 ? i = 5 : i = 10, r = i * a, t >= -20 ? +r.toFixed(t < 0 ? -t : 0) : r;
}
function _c(r, e) {
  var t = (r.length - 1) * e + 1, a = Math.floor(t), n = +r[a - 1], i = t - a;
  return i ? n + i * (r[a] - n) : n;
}
function Km(r) {
  r.sort(function(l, u) {
    return s(l, u, 0) ? -1 : 1;
  });
  for (var e = -1 / 0, t = 1, a = 0; a < r.length; ) {
    for (var n = r[a].interval, i = r[a].close, o = 0; o < 2; o++)
      n[o] <= e && (n[o] = e, i[o] = o ? 1 : 1 - t), e = n[o], t = i[o];
    n[0] === n[1] && i[0] * i[1] !== 1 ? r.splice(a, 1) : a++;
  }
  return r;
  function s(l, u, f) {
    return l.interval[f] < u.interval[f] || l.interval[f] === u.interval[f] && (l.close[f] - u.close[f] === (f ? -1 : 1) || !f && s(l, u, 1));
  }
}
function pa(r) {
  var e = parseFloat(r);
  return e == r && (e !== 0 || !$(r) || r.indexOf("x") <= 0) ? e : NaN;
}
function bg(r) {
  return !isNaN(pa(r));
}
function gT() {
  return Math.round(Math.random() * 9);
}
function yT(r, e) {
  return e === 0 ? r : yT(e, r % e);
}
function jm(r, e) {
  return r == null ? e : e == null ? r : r * e / yT(r, e);
}
var GE = "[ECharts] ", Jm = {}, FE = typeof console < "u" && console.warn && console.log;
function vh(r, e, t) {
  if (FE) {
    if (t) {
      if (Jm[e])
        return;
      Jm[e] = !0;
    }
    console[r](GE + e);
  }
}
function HE(r, e) {
  vh("log", r, e);
}
function Ft(r, e) {
  vh("warn", r, e);
}
function ve(r, e) {
  vh("error", r, e);
}
function Ar(r) {
  ({}).NODE_ENV !== "production" && vh("warn", "DEPRECATED: " + r, !0);
}
function Kt(r, e, t) {
  ({}).NODE_ENV !== "production" && Ar((t ? "[" + t + "]" : "") + (r + " is deprecated, use " + e + " instead."));
}
function Ie() {
  for (var r = [], e = 0; e < arguments.length; e++)
    r[e] = arguments[e];
  var t = "";
  if ({}.NODE_ENV !== "production") {
    var a = function(n) {
      return n === void 0 ? "undefined" : n === 1 / 0 ? "Infinity" : n === -1 / 0 ? "-Infinity" : fi(n) ? "NaN" : n instanceof Date ? "Date(" + n.toISOString() + ")" : K(n) ? "function () { ... }" : Rb(n) ? n + "" : null;
    };
    t = G(r, function(n) {
      if ($(n))
        return n;
      var i = a(n);
      if (i != null)
        return i;
      if (typeof JSON < "u" && JSON.stringify)
        try {
          return JSON.stringify(n, function(o, s) {
            var l = a(s);
            return l == null ? s : l;
          });
        } catch (o) {
          return "?";
        }
      else
        return "?";
    }).join(" ");
  }
  return t;
}
function It(r) {
  throw new Error(r);
}
function Qm(r, e, t) {
  return (e - r) * t + r;
}
var mT = "series\0", _T = "\0_ec_\0";
function Pt(r) {
  return r instanceof Array ? r : r == null ? [] : [r];
}
function hi(r, e, t) {
  if (r) {
    r[e] = r[e] || {}, r.emphasis = r.emphasis || {}, r.emphasis[e] = r.emphasis[e] || {};
    for (var a = 0, n = t.length; a < n; a++) {
      var i = t[a];
      !r.emphasis[e].hasOwnProperty(i) && r[e].hasOwnProperty(i) && (r.emphasis[e][i] = r[e][i]);
    }
  }
}
var t0 = ["fontStyle", "fontWeight", "fontSize", "fontFamily", "rich", "tag", "color", "textBorderColor", "textBorderWidth", "width", "height", "lineHeight", "align", "verticalAlign", "baseline", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY", "textShadowColor", "textShadowBlur", "textShadowOffsetX", "textShadowOffsetY", "backgroundColor", "borderColor", "borderWidth", "borderRadius", "padding"];
function Do(r) {
  return j(r) && !z(r) && !(r instanceof Date) ? r.value : r;
}
function WE(r) {
  return j(r) && !(r instanceof Array);
}
function ST(r, e, t) {
  var a = t === "normalMerge", n = t === "replaceMerge", i = t === "replaceAll";
  r = r || [], e = (e || []).slice();
  var o = X();
  M(e, function(l, u) {
    if (!j(l)) {
      e[u] = null;
      return;
    }
    ({}).NODE_ENV !== "production" && (l.id != null && !r0(l.id) && e0(l.id), l.name != null && !r0(l.name) && e0(l.name));
  });
  var s = $E(r, o, t);
  return (a || n) && UE(s, r, o, e), a && YE(s, e), a || n ? ZE(s, e, n) : i && XE(s, e), qE(s), s;
}
function $E(r, e, t) {
  var a = [];
  if (t === "replaceAll")
    return a;
  for (var n = 0; n < r.length; n++) {
    var i = r[n];
    i && i.id != null && e.set(i.id, n), a.push({
      existing: t === "replaceMerge" || ho(i) ? null : i,
      newOption: null,
      keyInfo: null,
      brandNew: null
    });
  }
  return a;
}
function UE(r, e, t, a) {
  M(a, function(n, i) {
    if (!(!n || n.id == null)) {
      var o = Es(n.id), s = t.get(o);
      if (s != null) {
        var l = r[s];
        J(!l.newOption, 'Duplicated option on id "' + o + '".'), l.newOption = n, l.existing = e[s], a[i] = null;
      }
    }
  });
}
function YE(r, e) {
  M(e, function(t, a) {
    if (!(!t || t.name == null))
      for (var n = 0; n < r.length; n++) {
        var i = r[n].existing;
        if (!r[n].newOption && i && (i.id == null || t.id == null) && !ho(t) && !ho(i) && xT("name", i, t)) {
          r[n].newOption = t, e[a] = null;
          return;
        }
      }
  });
}
function ZE(r, e, t) {
  M(e, function(a) {
    if (a) {
      for (
        var n, i = 0;
        // Be `!resultItem` only when `nextIdx >= result.length`.
        (n = r[i]) && // (1) Existing models that already have id should be able to mapped to. Because
        // after mapping performed, model will always be assigned with an id if user not given.
        // After that all models have id.
        // (2) If new option has id, it can only set to a hole or append to the last. It should
        // not be merged to the existings with different id. Because id should not be overwritten.
        // (3) Name can be overwritten, because axis use name as 'show label text'.
        (n.newOption || ho(n.existing) || // In mode "replaceMerge", here no not-mapped-non-internal-existing.
        n.existing && a.id != null && !xT("id", a, n.existing));
      )
        i++;
      n ? (n.newOption = a, n.brandNew = t) : r.push({
        newOption: a,
        brandNew: t,
        existing: null,
        keyInfo: null
      }), i++;
    }
  });
}
function XE(r, e) {
  M(e, function(t) {
    r.push({
      newOption: t,
      brandNew: !0,
      existing: null,
      keyInfo: null
    });
  });
}
function qE(r) {
  var e = X();
  M(r, function(t) {
    var a = t.existing;
    a && e.set(a.id, t);
  }), M(r, function(t) {
    var a = t.newOption;
    J(!a || a.id == null || !e.get(a.id) || e.get(a.id) === t, "id duplicates: " + (a && a.id)), a && a.id != null && e.set(a.id, t), !t.keyInfo && (t.keyInfo = {});
  }), M(r, function(t, a) {
    var n = t.existing, i = t.newOption, o = t.keyInfo;
    if (j(i)) {
      if (o.name = i.name != null ? Es(i.name) : n ? n.name : mT + a, n)
        o.id = Es(n.id);
      else if (i.id != null)
        o.id = Es(i.id);
      else {
        var s = 0;
        do
          o.id = "\0" + o.name + "\0" + s++;
        while (e.get(o.id));
      }
      e.set(o.id, t);
    }
  });
}
function xT(r, e, t) {
  var a = re(e[r], null), n = re(t[r], null);
  return a != null && n != null && a === n;
}
function Es(r) {
  if ({}.NODE_ENV !== "production" && r == null)
    throw new Error();
  return re(r, "");
}
function re(r, e) {
  return r == null ? e : $(r) ? r : At(r) || nf(r) ? r + "" : e;
}
function e0(r) {
  ({}).NODE_ENV !== "production" && Ft("`" + r + "` is invalid id or name. Must be a string or number.");
}
function r0(r) {
  return nf(r) || bg(r);
}
function Tg(r) {
  var e = r.name;
  return !!(e && e.indexOf(mT));
}
function ho(r) {
  return r && r.id != null && Es(r.id).indexOf(_T) === 0;
}
function KE(r) {
  return _T + r;
}
function jE(r, e, t) {
  M(r, function(a) {
    var n = a.newOption;
    j(n) && (a.keyInfo.mainType = e, a.keyInfo.subType = JE(e, n, a.existing, t));
  });
}
function JE(r, e, t, a) {
  var n = e.type ? e.type : t ? t.subType : a.determineSubType(r, e);
  return n;
}
function QE(r, e) {
  var t = {}, a = {};
  return n(r || [], t), n(e || [], a, t), [i(t), i(a)];
  function n(o, s, l) {
    for (var u = 0, f = o.length; u < f; u++) {
      var h = re(o[u].seriesId, null);
      if (h == null)
        return;
      for (var c = Pt(o[u].dataIndex), v = l && l[h], d = 0, p = c.length; d < p; d++) {
        var g = c[d];
        v && v[g] ? v[g] = null : (s[h] || (s[h] = {}))[g] = 1;
      }
    }
  }
  function i(o, s) {
    var l = [];
    for (var u in o)
      if (o.hasOwnProperty(u) && o[u] != null)
        if (s)
          l.push(+u);
        else {
          var f = i(o[u], !0);
          f.length && l.push({
            seriesId: u,
            dataIndex: f
          });
        }
    return l;
  }
}
function ci(r, e) {
  if (e.dataIndexInside != null)
    return e.dataIndexInside;
  if (e.dataIndex != null)
    return z(e.dataIndex) ? G(e.dataIndex, function(t) {
      return r.indexOfRawIndex(t);
    }) : r.indexOfRawIndex(e.dataIndex);
  if (e.name != null)
    return z(e.name) ? G(e.name, function(t) {
      return r.indexOfName(t);
    }) : r.indexOfName(e.name);
}
function Dt() {
  var r = "__ec_inner_" + tP++;
  return function(e) {
    return e[r] || (e[r] = {});
  };
}
var tP = gT();
function Ps(r, e, t) {
  var a = Dg(e, t), n = a.mainTypeSpecified, i = a.queryOptionMap, o = a.others, s = o, l = t ? t.defaultMainType : null;
  return !n && l && i.set(l, {}), i.each(function(u, f) {
    var h = yl(r, f, u, {
      useDefault: l === f,
      enableAll: t && t.enableAll != null ? t.enableAll : !0,
      enableNone: t && t.enableNone != null ? t.enableNone : !0
    });
    s[f + "Models"] = h.models, s[f + "Model"] = h.models[0];
  }), s;
}
function Dg(r, e) {
  var t;
  if ($(r)) {
    var a = {};
    a[r + "Index"] = 0, t = a;
  } else
    t = r;
  var n = X(), i = {}, o = !1;
  return M(t, function(s, l) {
    if (l === "dataIndex" || l === "dataIndexInside") {
      i[l] = s;
      return;
    }
    var u = l.match(/^(\w+)(Index|Id|Name)$/) || [], f = u[1], h = (u[2] || "").toLowerCase();
    if (!(!f || !h || e && e.includeMainTypes && vt(e.includeMainTypes, f) < 0)) {
      o = o || !!f;
      var c = n.get(f) || n.set(f, {});
      c[h] = s;
    }
  }), {
    mainTypeSpecified: o,
    queryOptionMap: n,
    others: i
  };
}
var Jt = {
  useDefault: !0,
  enableAll: !1,
  enableNone: !1
}, eP = {
  useDefault: !1,
  enableAll: !0,
  enableNone: !0
};
function yl(r, e, t, a) {
  a = a || Jt;
  var n = t.index, i = t.id, o = t.name, s = {
    models: null,
    specified: n != null || i != null || o != null
  };
  if (!s.specified) {
    var l = void 0;
    return s.models = a.useDefault && (l = r.getComponent(e)) ? [l] : [], s;
  }
  return n === "none" || n === !1 ? (J(a.enableNone, '`"none"` or `false` is not a valid value on index option.'), s.models = [], s) : (n === "all" && (J(a.enableAll, '`"all"` is not a valid value on index option.'), n = i = o = null), s.models = r.queryComponents({
    mainType: e,
    index: n,
    id: i,
    name: o
  }), s);
}
function wT(r, e, t) {
  r.setAttribute ? r.setAttribute(e, t) : r[e] = t;
}
function rP(r, e) {
  return r.getAttribute ? r.getAttribute(e) : r[e];
}
function aP(r) {
  return r === "auto" ? bt.domSupported ? "html" : "richText" : r || "html";
}
function Yd(r, e) {
  var t = X(), a = [];
  return M(r, function(n) {
    var i = e(n);
    (t.get(i) || (a.push(i), t.set(i, []))).push(n);
  }), {
    keys: a,
    buckets: t
  };
}
function bT(r, e, t, a, n) {
  var i = e == null || e === "auto";
  if (a == null)
    return a;
  if (At(a)) {
    var o = Qm(t || 0, a, n);
    return Yt(o, i ? Math.max(Fr(t || 0), Fr(a)) : e);
  } else {
    if ($(a))
      return n < 1 ? t : a;
    for (var s = [], l = t, u = a, f = Math.max(l ? l.length : 0, u.length), h = 0; h < f; ++h) {
      var c = r.getDimensionInfo(h);
      if (c && c.type === "ordinal")
        s[h] = (n < 1 && l ? l : u)[h];
      else {
        var v = l && l[h] ? l[h] : 0, d = u[h], o = Qm(v, d, n);
        s[h] = Yt(o, i ? Math.max(Fr(v), Fr(d)) : e);
      }
    }
    return s;
  }
}
var nP = ".", yn = "___EC__COMPONENT__CONTAINER___", TT = "___EC__EXTENDED_CLASS___";
function Hr(r) {
  var e = {
    main: "",
    sub: ""
  };
  if (r) {
    var t = r.split(nP);
    e.main = t[0] || "", e.sub = t[1] || "";
  }
  return e;
}
function iP(r) {
  J(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(r), 'componentType "' + r + '" illegal');
}
function oP(r) {
  return !!(r && r[TT]);
}
function Cg(r, e) {
  r.$constructor = r, r.extend = function(t) {
    ({}).NODE_ENV !== "production" && M(e, function(i) {
      t[i] || console.warn("Method `" + i + "` should be implemented" + (t.type ? " in " + t.type : "") + ".");
    });
    var a = this, n;
    return sP(a) ? n = /** @class */
    function(i) {
      N(o, i);
      function o() {
        return i.apply(this, arguments) || this;
      }
      return o;
    }(a) : (n = function() {
      (t.$constructor || a).apply(this, arguments);
    }, i2(n, this)), V(n.prototype, t), n[TT] = !0, n.extend = this.extend, n.superCall = fP, n.superApply = hP, n.superClass = a, n;
  };
}
function sP(r) {
  return K(r) && /^class\s/.test(Function.prototype.toString.call(r));
}
function DT(r, e) {
  r.extend = e.extend;
}
var lP = Math.round(Math.random() * 10);
function uP(r) {
  var e = ["__\0is_clz", lP++].join("_");
  r.prototype[e] = !0, {}.NODE_ENV !== "production" && J(!r.isInstance, 'The method "is" can not be defined.'), r.isInstance = function(t) {
    return !!(t && t[e]);
  };
}
function fP(r, e) {
  for (var t = [], a = 2; a < arguments.length; a++)
    t[a - 2] = arguments[a];
  return this.superClass.prototype[e].apply(r, t);
}
function hP(r, e, t) {
  return this.superClass.prototype[e].apply(r, t);
}
function dh(r) {
  var e = {};
  r.registerClass = function(a) {
    var n = a.type || a.prototype.type;
    if (n) {
      iP(n), a.prototype.type = n;
      var i = Hr(n);
      if (!i.sub)
        ({}).NODE_ENV !== "production" && e[i.main] && console.warn(i.main + " exists."), e[i.main] = a;
      else if (i.sub !== yn) {
        var o = t(i);
        o[i.sub] = a;
      }
    }
    return a;
  }, r.getClass = function(a, n, i) {
    var o = e[a];
    if (o && o[yn] && (o = n ? o[n] : null), i && !o)
      throw new Error(n ? "Component " + a + "." + (n || "") + " is used but not imported." : a + ".type should be specified.");
    return o;
  }, r.getClassesByMainType = function(a) {
    var n = Hr(a), i = [], o = e[n.main];
    return o && o[yn] ? M(o, function(s, l) {
      l !== yn && i.push(s);
    }) : i.push(o), i;
  }, r.hasClass = function(a) {
    var n = Hr(a);
    return !!e[n.main];
  }, r.getAllClassMainTypes = function() {
    var a = [];
    return M(e, function(n, i) {
      a.push(i);
    }), a;
  }, r.hasSubTypes = function(a) {
    var n = Hr(a), i = e[n.main];
    return i && i[yn];
  };
  function t(a) {
    var n = e[a.main];
    return (!n || !n[yn]) && (n = e[a.main] = {}, n[yn] = !0), n;
  }
}
function vi(r, e) {
  for (var t = 0; t < r.length; t++)
    r[t][1] || (r[t][1] = r[t][0]);
  return e = e || !1, function(a, n, i) {
    for (var o = {}, s = 0; s < r.length; s++) {
      var l = r[s][1];
      if (!(n && vt(n, l) >= 0 || i && vt(i, l) < 0)) {
        var u = a.getShallow(l, e);
        u != null && (o[r[s][0]] = u);
      }
    }
    return o;
  };
}
var cP = [
  ["fill", "color"],
  ["shadowBlur"],
  ["shadowOffsetX"],
  ["shadowOffsetY"],
  ["opacity"],
  ["shadowColor"]
  // Option decal is in `DecalObject` but style.decal is in `PatternObject`.
  // So do not transfer decal directly.
], vP = vi(cP), dP = (
  /** @class */
  function() {
    function r() {
    }
    return r.prototype.getAreaStyle = function(e, t) {
      return vP(this, e, t);
    }, r;
  }()
), Zd = new pl(50);
function pP(r) {
  if (typeof r == "string") {
    var e = Zd.get(r);
    return e && e.image;
  } else
    return r;
}
function Ag(r, e, t, a, n) {
  if (r)
    if (typeof r == "string") {
      if (e && e.__zrImageSrc === r || !t)
        return e;
      var i = Zd.get(r), o = { hostEl: t, cb: a, cbPayload: n };
      return i ? (e = i.image, !ph(e) && i.pending.push(o)) : (e = Ja.loadImage(r, a0, a0), e.__zrImageSrc = r, Zd.put(r, e.__cachedImgObj = {
        image: e,
        pending: [o]
      })), e;
    } else
      return r;
  else
    return e;
}
function a0() {
  var r = this.__cachedImgObj;
  this.onload = this.onerror = this.__cachedImgObj = null;
  for (var e = 0; e < r.pending.length; e++) {
    var t = r.pending[e], a = t.cb;
    a && a(this, t.cbPayload), t.hostEl.dirty();
  }
  r.pending.length = 0;
}
function ph(r) {
  return r && r.width && r.height;
}
var Sc = /\{([a-zA-Z0-9_]+)\|([^}]*)\}/g;
function gP(r, e, t, a, n) {
  if (!e)
    return "";
  var i = (r + "").split("\n");
  n = CT(e, t, a, n);
  for (var o = 0, s = i.length; o < s; o++)
    i[o] = AT(i[o], n);
  return i.join("\n");
}
function CT(r, e, t, a) {
  a = a || {};
  var n = V({}, a);
  n.font = e, t = ft(t, "..."), n.maxIterations = ft(a.maxIterations, 2);
  var i = n.minChar = ft(a.minChar, 0);
  n.cnCharWidth = Ye("国", e);
  var o = n.ascCharWidth = Ye("a", e);
  n.placeholder = ft(a.placeholder, "");
  for (var s = r = Math.max(0, r - 1), l = 0; l < i && s >= o; l++)
    s -= o;
  var u = Ye(t, e);
  return u > s && (t = "", u = 0), s = r - u, n.ellipsis = t, n.ellipsisWidth = u, n.contentWidth = s, n.containerWidth = r, n;
}
function AT(r, e) {
  var t = e.containerWidth, a = e.font, n = e.contentWidth;
  if (!t)
    return "";
  var i = Ye(r, a);
  if (i <= t)
    return r;
  for (var o = 0; ; o++) {
    if (i <= n || o >= e.maxIterations) {
      r += e.ellipsis;
      break;
    }
    var s = o === 0 ? yP(r, n, e.ascCharWidth, e.cnCharWidth) : i > 0 ? Math.floor(r.length * n / i) : 0;
    r = r.substr(0, s), i = Ye(r, a);
  }
  return r === "" && (r = e.placeholder), r;
}
function yP(r, e, t, a) {
  for (var n = 0, i = 0, o = r.length; i < o && n < e; i++) {
    var s = r.charCodeAt(i);
    n += 0 <= s && s <= 127 ? t : a;
  }
  return i;
}
function mP(r, e) {
  r != null && (r += "");
  var t = e.overflow, a = e.padding, n = e.font, i = t === "truncate", o = hh(n), s = ft(e.lineHeight, o), l = !!e.backgroundColor, u = e.lineOverflow === "truncate", f = e.width, h;
  f != null && (t === "break" || t === "breakAll") ? h = r ? MT(r, e.font, f, t === "breakAll", 0).lines : [] : h = r ? r.split("\n") : [];
  var c = h.length * s, v = ft(e.height, c);
  if (c > v && u) {
    var d = Math.floor(v / s);
    h = h.slice(0, d);
  }
  if (r && i && f != null)
    for (var p = CT(f, n, e.ellipsis, {
      minChar: e.truncateMinChar,
      placeholder: e.placeholder
    }), g = 0; g < h.length; g++)
      h[g] = AT(h[g], p);
  for (var y = v, m = 0, g = 0; g < h.length; g++)
    m = Math.max(Ye(h[g], n), m);
  f == null && (f = m);
  var _ = m;
  return a && (y += a[0] + a[2], _ += a[1] + a[3], f += a[1] + a[3]), l && (_ = f), {
    lines: h,
    height: v,
    outerWidth: _,
    outerHeight: y,
    lineHeight: s,
    calculatedLineHeight: o,
    contentWidth: m,
    contentHeight: c,
    width: f
  };
}
var _P = function() {
  function r() {
  }
  return r;
}(), n0 = function() {
  function r(e) {
    this.tokens = [], e && (this.tokens = e);
  }
  return r;
}(), SP = function() {
  function r() {
    this.width = 0, this.height = 0, this.contentWidth = 0, this.contentHeight = 0, this.outerWidth = 0, this.outerHeight = 0, this.lines = [];
  }
  return r;
}();
function xP(r, e) {
  var t = new SP();
  if (r != null && (r += ""), !r)
    return t;
  for (var a = e.width, n = e.height, i = e.overflow, o = (i === "break" || i === "breakAll") && a != null ? { width: a, accumWidth: 0, breakAll: i === "breakAll" } : null, s = Sc.lastIndex = 0, l; (l = Sc.exec(r)) != null; ) {
    var u = l.index;
    u > s && xc(t, r.substring(s, u), e, o), xc(t, l[2], e, o, l[1]), s = Sc.lastIndex;
  }
  s < r.length && xc(t, r.substring(s, r.length), e, o);
  var f = [], h = 0, c = 0, v = e.padding, d = i === "truncate", p = e.lineOverflow === "truncate";
  function g(O, B, F) {
    O.width = B, O.lineHeight = F, h += F, c = Math.max(c, B);
  }
  t:
    for (var y = 0; y < t.lines.length; y++) {
      for (var m = t.lines[y], _ = 0, S = 0, w = 0; w < m.tokens.length; w++) {
        var x = m.tokens[w], b = x.styleName && e.rich[x.styleName] || {}, T = x.textPadding = b.padding, C = T ? T[1] + T[3] : 0, D = x.font = b.font || e.font;
        x.contentHeight = hh(D);
        var A = ft(b.height, x.contentHeight);
        if (x.innerHeight = A, T && (A += T[0] + T[2]), x.height = A, x.lineHeight = lr(b.lineHeight, e.lineHeight, A), x.align = b && b.align || e.align, x.verticalAlign = b && b.verticalAlign || "middle", p && n != null && h + x.lineHeight > n) {
          w > 0 ? (m.tokens = m.tokens.slice(0, w), g(m, S, _), t.lines = t.lines.slice(0, y + 1)) : t.lines = t.lines.slice(0, y);
          break t;
        }
        var I = b.width, L = I == null || I === "auto";
        if (typeof I == "string" && I.charAt(I.length - 1) === "%")
          x.percentWidth = I, f.push(x), x.contentWidth = Ye(x.text, D);
        else {
          if (L) {
            var E = b.backgroundColor, P = E && E.image;
            P && (P = pP(P), ph(P) && (x.width = Math.max(x.width, P.width * A / P.height)));
          }
          var R = d && a != null ? a - S : null;
          R != null && R < x.width ? !L || R < C ? (x.text = "", x.width = x.contentWidth = 0) : (x.text = gP(x.text, R - C, D, e.ellipsis, { minChar: e.truncateMinChar }), x.width = x.contentWidth = Ye(x.text, D)) : x.contentWidth = Ye(x.text, D);
        }
        x.width += C, S += x.width, b && (_ = Math.max(_, x.lineHeight));
      }
      g(m, S, _);
    }
  t.outerWidth = t.width = ft(a, c), t.outerHeight = t.height = ft(n, h), t.contentHeight = h, t.contentWidth = c, v && (t.outerWidth += v[1] + v[3], t.outerHeight += v[0] + v[2]);
  for (var y = 0; y < f.length; y++) {
    var x = f[y], k = x.percentWidth;
    x.width = parseInt(k, 10) / 100 * t.width;
  }
  return t;
}
function xc(r, e, t, a, n) {
  var i = e === "", o = n && t.rich[n] || {}, s = r.lines, l = o.font || t.font, u = !1, f, h;
  if (a) {
    var c = o.padding, v = c ? c[1] + c[3] : 0;
    if (o.width != null && o.width !== "auto") {
      var d = Cr(o.width, a.width) + v;
      s.length > 0 && d + a.accumWidth > a.width && (f = e.split("\n"), u = !0), a.accumWidth = d;
    } else {
      var p = MT(e, l, a.width, a.breakAll, a.accumWidth);
      a.accumWidth = p.accumWidth + v, h = p.linesWidths, f = p.lines;
    }
  } else
    f = e.split("\n");
  for (var g = 0; g < f.length; g++) {
    var y = f[g], m = new _P();
    if (m.styleName = n, m.text = y, m.isLineHolder = !y && !i, typeof o.width == "number" ? m.width = o.width : m.width = h ? h[g] : Ye(y, l), !g && !u) {
      var _ = (s[s.length - 1] || (s[0] = new n0())).tokens, S = _.length;
      S === 1 && _[0].isLineHolder ? _[0] = m : (y || !S || i) && _.push(m);
    } else
      s.push(new n0([m]));
  }
}
function wP(r) {
  var e = r.charCodeAt(0);
  return e >= 32 && e <= 591 || e >= 880 && e <= 4351 || e >= 4608 && e <= 5119 || e >= 7680 && e <= 8303;
}
var bP = Yr(",&?/;] ".split(""), function(r, e) {
  return r[e] = !0, r;
}, {});
function TP(r) {
  return wP(r) ? !!bP[r] : !0;
}
function MT(r, e, t, a, n) {
  for (var i = [], o = [], s = "", l = "", u = 0, f = 0, h = 0; h < r.length; h++) {
    var c = r.charAt(h);
    if (c === "\n") {
      l && (s += l, f += u), i.push(s), o.push(f), s = "", l = "", u = 0, f = 0;
      continue;
    }
    var v = Ye(c, e), d = a ? !1 : !TP(c);
    if (i.length ? f + v > t : n + f + v > t) {
      f ? (s || l) && (d ? (s || (s = l, l = "", u = 0, f = u), i.push(s), o.push(f - u), l += c, u += v, s = "", f = u) : (l && (s += l, l = "", u = 0), i.push(s), o.push(f), s = c, f = v)) : d ? (i.push(l), o.push(u), l = c, u = v) : (i.push(c), o.push(v));
      continue;
    }
    f += v, d ? (l += c, u += v) : (l && (s += l, l = "", u = 0), s += c);
  }
  return !i.length && !s && (s = r, l = "", u = 0), l && (s += l), s && (i.push(s), o.push(f)), i.length === 1 && (f += n), {
    accumWidth: f,
    lines: i,
    linesWidths: o
  };
}
var Xd = "__zr_style_" + Math.round(Math.random() * 10), ri = {
  shadowBlur: 0,
  shadowOffsetX: 0,
  shadowOffsetY: 0,
  shadowColor: "#000",
  opacity: 1,
  blend: "source-over"
}, gh = {
  style: {
    shadowBlur: !0,
    shadowOffsetX: !0,
    shadowOffsetY: !0,
    shadowColor: !0,
    opacity: !0
  }
};
ri[Xd] = !0;
var i0 = ["z", "z2", "invisible"], DP = ["invisible"], CP = function(r) {
  N(e, r);
  function e(t) {
    return r.call(this, t) || this;
  }
  return e.prototype._init = function(t) {
    for (var a = _t(t), n = 0; n < a.length; n++) {
      var i = a[n];
      i === "style" ? this.useStyle(t[i]) : r.prototype.attrKV.call(this, i, t[i]);
    }
    this.style || this.useStyle({});
  }, e.prototype.beforeBrush = function() {
  }, e.prototype.afterBrush = function() {
  }, e.prototype.innerBeforeBrush = function() {
  }, e.prototype.innerAfterBrush = function() {
  }, e.prototype.shouldBePainted = function(t, a, n, i) {
    var o = this.transform;
    if (this.ignore || this.invisible || this.style.opacity === 0 || this.culling && AP(this, t, a) || o && !o[0] && !o[3])
      return !1;
    if (n && this.__clipPaths) {
      for (var s = 0; s < this.__clipPaths.length; ++s)
        if (this.__clipPaths[s].isZeroArea())
          return !1;
    }
    if (i && this.parent)
      for (var l = this.parent; l; ) {
        if (l.ignore)
          return !1;
        l = l.parent;
      }
    return !0;
  }, e.prototype.contain = function(t, a) {
    return this.rectContain(t, a);
  }, e.prototype.traverse = function(t, a) {
    t.call(a, this);
  }, e.prototype.rectContain = function(t, a) {
    var n = this.transformCoordToLocal(t, a), i = this.getBoundingRect();
    return i.contain(n[0], n[1]);
  }, e.prototype.getPaintRect = function() {
    var t = this._paintRect;
    if (!this._paintRect || this.__dirty) {
      var a = this.transform, n = this.getBoundingRect(), i = this.style, o = i.shadowBlur || 0, s = i.shadowOffsetX || 0, l = i.shadowOffsetY || 0;
      t = this._paintRect || (this._paintRect = new ct(0, 0, 0, 0)), a ? ct.applyTransform(t, n, a) : t.copy(n), (o || s || l) && (t.width += o * 2 + Math.abs(s), t.height += o * 2 + Math.abs(l), t.x = Math.min(t.x, t.x + s - o), t.y = Math.min(t.y, t.y + l - o));
      var u = this.dirtyRectTolerance;
      t.isZero() || (t.x = Math.floor(t.x - u), t.y = Math.floor(t.y - u), t.width = Math.ceil(t.width + 1 + u * 2), t.height = Math.ceil(t.height + 1 + u * 2));
    }
    return t;
  }, e.prototype.setPrevPaintRect = function(t) {
    t ? (this._prevPaintRect = this._prevPaintRect || new ct(0, 0, 0, 0), this._prevPaintRect.copy(t)) : this._prevPaintRect = null;
  }, e.prototype.getPrevPaintRect = function() {
    return this._prevPaintRect;
  }, e.prototype.animateStyle = function(t) {
    return this.animate("style", t);
  }, e.prototype.updateDuringAnimation = function(t) {
    t === "style" ? this.dirtyStyle() : this.markRedraw();
  }, e.prototype.attrKV = function(t, a) {
    t !== "style" ? r.prototype.attrKV.call(this, t, a) : this.style ? this.setStyle(a) : this.useStyle(a);
  }, e.prototype.setStyle = function(t, a) {
    return typeof t == "string" ? this.style[t] = a : V(this.style, t), this.dirtyStyle(), this;
  }, e.prototype.dirtyStyle = function(t) {
    t || this.markRedraw(), this.__dirty |= ps, this._rect && (this._rect = null);
  }, e.prototype.dirty = function() {
    this.dirtyStyle();
  }, e.prototype.styleChanged = function() {
    return !!(this.__dirty & ps);
  }, e.prototype.styleUpdated = function() {
    this.__dirty &= ~ps;
  }, e.prototype.createStyle = function(t) {
    return lh(ri, t);
  }, e.prototype.useStyle = function(t) {
    t[Xd] || (t = this.createStyle(t)), this.__inHover ? this.__hoverStyle = t : this.style = t, this.dirtyStyle();
  }, e.prototype.isStyleObject = function(t) {
    return t[Xd];
  }, e.prototype._innerSaveToNormal = function(t) {
    r.prototype._innerSaveToNormal.call(this, t);
    var a = this._normalState;
    t.style && !a.style && (a.style = this._mergeStyle(this.createStyle(), this.style)), this._savePrimaryToNormal(t, a, i0);
  }, e.prototype._applyStateObj = function(t, a, n, i, o, s) {
    r.prototype._applyStateObj.call(this, t, a, n, i, o, s);
    var l = !(a && i), u;
    if (a && a.style ? o ? i ? u = a.style : (u = this._mergeStyle(this.createStyle(), n.style), this._mergeStyle(u, a.style)) : (u = this._mergeStyle(this.createStyle(), i ? this.style : n.style), this._mergeStyle(u, a.style)) : l && (u = n.style), u)
      if (o) {
        var f = this.style;
        if (this.style = this.createStyle(l ? {} : f), l)
          for (var h = _t(f), c = 0; c < h.length; c++) {
            var v = h[c];
            v in u && (u[v] = u[v], this.style[v] = f[v]);
          }
        for (var d = _t(u), c = 0; c < d.length; c++) {
          var v = d[c];
          this.style[v] = this.style[v];
        }
        this._transitionState(t, {
          style: u
        }, s, this.getAnimationStyleProps());
      } else
        this.useStyle(u);
    for (var p = this.__inHover ? DP : i0, c = 0; c < p.length; c++) {
      var v = p[c];
      a && a[v] != null ? this[v] = a[v] : l && n[v] != null && (this[v] = n[v]);
    }
  }, e.prototype._mergeStates = function(t) {
    for (var a = r.prototype._mergeStates.call(this, t), n, i = 0; i < t.length; i++) {
      var o = t[i];
      o.style && (n = n || {}, this._mergeStyle(n, o.style));
    }
    return n && (a.style = n), a;
  }, e.prototype._mergeStyle = function(t, a) {
    return V(t, a), t;
  }, e.prototype.getAnimationStyleProps = function() {
    return gh;
  }, e.initDefaultProps = function() {
    var t = e.prototype;
    t.type = "displayable", t.invisible = !1, t.z = 0, t.z2 = 0, t.zlevel = 0, t.culling = !1, t.cursor = "pointer", t.rectHover = !1, t.incremental = !1, t._rect = null, t.dirtyRectTolerance = 0, t.__dirty = $e | ps;
  }(), e;
}(uT), wc = new ct(0, 0, 0, 0), bc = new ct(0, 0, 0, 0);
function AP(r, e, t) {
  return wc.copy(r.getBoundingRect()), r.transform && wc.applyTransform(r.transform), bc.width = e, bc.height = t, !wc.intersect(bc);
}
const hr = CP;
var Oe = Math.min, ke = Math.max, Tc = Math.sin, Dc = Math.cos, mn = Math.PI * 2, Yl = mi(), Zl = mi(), Xl = mi();
function yh(r, e, t) {
  if (r.length !== 0) {
    for (var a = r[0], n = a[0], i = a[0], o = a[1], s = a[1], l = 1; l < r.length; l++)
      a = r[l], n = Oe(n, a[0]), i = ke(i, a[0]), o = Oe(o, a[1]), s = ke(s, a[1]);
    e[0] = n, e[1] = o, t[0] = i, t[1] = s;
  }
}
function o0(r, e, t, a, n, i) {
  n[0] = Oe(r, t), n[1] = Oe(e, a), i[0] = ke(r, t), i[1] = ke(e, a);
}
var s0 = [], l0 = [];
function MP(r, e, t, a, n, i, o, s, l, u) {
  var f = Yb, h = ne, c = f(r, t, n, o, s0);
  l[0] = 1 / 0, l[1] = 1 / 0, u[0] = -1 / 0, u[1] = -1 / 0;
  for (var v = 0; v < c; v++) {
    var d = h(r, t, n, o, s0[v]);
    l[0] = Oe(d, l[0]), u[0] = ke(d, u[0]);
  }
  c = f(e, a, i, s, l0);
  for (var v = 0; v < c; v++) {
    var p = h(e, a, i, s, l0[v]);
    l[1] = Oe(p, l[1]), u[1] = ke(p, u[1]);
  }
  l[0] = Oe(r, l[0]), u[0] = ke(r, u[0]), l[0] = Oe(o, l[0]), u[0] = ke(o, u[0]), l[1] = Oe(e, l[1]), u[1] = ke(e, u[1]), l[1] = Oe(s, l[1]), u[1] = ke(s, u[1]);
}
function IP(r, e, t, a, n, i, o, s) {
  var l = Xb, u = le, f = ke(Oe(l(r, t, n), 1), 0), h = ke(Oe(l(e, a, i), 1), 0), c = u(r, t, n, f), v = u(e, a, i, h);
  o[0] = Oe(r, n, c), o[1] = Oe(e, i, v), s[0] = ke(r, n, c), s[1] = ke(e, i, v);
}
function LP(r, e, t, a, n, i, o, s, l) {
  var u = Ga, f = Fa, h = Math.abs(n - i);
  if (h % mn < 1e-4 && h > 1e-4) {
    s[0] = r - t, s[1] = e - a, l[0] = r + t, l[1] = e + a;
    return;
  }
  if (Yl[0] = Dc(n) * t + r, Yl[1] = Tc(n) * a + e, Zl[0] = Dc(i) * t + r, Zl[1] = Tc(i) * a + e, u(s, Yl, Zl), f(l, Yl, Zl), n = n % mn, n < 0 && (n = n + mn), i = i % mn, i < 0 && (i = i + mn), n > i && !o ? i += mn : n < i && o && (n += mn), o) {
    var c = i;
    i = n, n = c;
  }
  for (var v = 0; v < i; v += Math.PI / 2)
    v > n && (Xl[0] = Dc(v) * t + r, Xl[1] = Tc(v) * a + e, u(s, Xl, s), f(l, Xl, l));
}
var Rt = {
  M: 1,
  L: 2,
  C: 3,
  Q: 4,
  A: 5,
  Z: 6,
  R: 7
}, _n = [], Sn = [], Er = [], Ca = [], Pr = [], Rr = [], Cc = Math.min, Ac = Math.max, xn = Math.cos, wn = Math.sin, ea = Math.abs, qd = Math.PI, Oa = qd * 2, Mc = typeof Float32Array < "u", Uo = [];
function Ic(r) {
  var e = Math.round(r / qd * 1e8) / 1e8;
  return e % 2 * qd;
}
function IT(r, e) {
  var t = Ic(r[0]);
  t < 0 && (t += Oa);
  var a = t - r[0], n = r[1];
  n += a, !e && n - t >= Oa ? n = t + Oa : e && t - n >= Oa ? n = t - Oa : !e && t > n ? n = t + (Oa - Ic(t - n)) : e && t < n && (n = t - (Oa - Ic(n - t))), r[0] = t, r[1] = n;
}
var Kr = function() {
  function r(e) {
    this.dpr = 1, this._xi = 0, this._yi = 0, this._x0 = 0, this._y0 = 0, this._len = 0, e && (this._saveData = !1), this._saveData && (this.data = []);
  }
  return r.prototype.increaseVersion = function() {
    this._version++;
  }, r.prototype.getVersion = function() {
    return this._version;
  }, r.prototype.setScale = function(e, t, a) {
    a = a || 0, a > 0 && (this._ux = ea(a / vf / e) || 0, this._uy = ea(a / vf / t) || 0);
  }, r.prototype.setDPR = function(e) {
    this.dpr = e;
  }, r.prototype.setContext = function(e) {
    this._ctx = e;
  }, r.prototype.getContext = function() {
    return this._ctx;
  }, r.prototype.beginPath = function() {
    return this._ctx && this._ctx.beginPath(), this.reset(), this;
  }, r.prototype.reset = function() {
    this._saveData && (this._len = 0), this._pathSegLen && (this._pathSegLen = null, this._pathLen = 0), this._version++;
  }, r.prototype.moveTo = function(e, t) {
    return this._drawPendingPt(), this.addData(Rt.M, e, t), this._ctx && this._ctx.moveTo(e, t), this._x0 = e, this._y0 = t, this._xi = e, this._yi = t, this;
  }, r.prototype.lineTo = function(e, t) {
    var a = ea(e - this._xi), n = ea(t - this._yi), i = a > this._ux || n > this._uy;
    if (this.addData(Rt.L, e, t), this._ctx && i && this._ctx.lineTo(e, t), i)
      this._xi = e, this._yi = t, this._pendingPtDist = 0;
    else {
      var o = a * a + n * n;
      o > this._pendingPtDist && (this._pendingPtX = e, this._pendingPtY = t, this._pendingPtDist = o);
    }
    return this;
  }, r.prototype.bezierCurveTo = function(e, t, a, n, i, o) {
    return this._drawPendingPt(), this.addData(Rt.C, e, t, a, n, i, o), this._ctx && this._ctx.bezierCurveTo(e, t, a, n, i, o), this._xi = i, this._yi = o, this;
  }, r.prototype.quadraticCurveTo = function(e, t, a, n) {
    return this._drawPendingPt(), this.addData(Rt.Q, e, t, a, n), this._ctx && this._ctx.quadraticCurveTo(e, t, a, n), this._xi = a, this._yi = n, this;
  }, r.prototype.arc = function(e, t, a, n, i, o) {
    this._drawPendingPt(), Uo[0] = n, Uo[1] = i, IT(Uo, o), n = Uo[0], i = Uo[1];
    var s = i - n;
    return this.addData(Rt.A, e, t, a, a, n, s, 0, o ? 0 : 1), this._ctx && this._ctx.arc(e, t, a, n, i, o), this._xi = xn(i) * a + e, this._yi = wn(i) * a + t, this;
  }, r.prototype.arcTo = function(e, t, a, n, i) {
    return this._drawPendingPt(), this._ctx && this._ctx.arcTo(e, t, a, n, i), this;
  }, r.prototype.rect = function(e, t, a, n) {
    return this._drawPendingPt(), this._ctx && this._ctx.rect(e, t, a, n), this.addData(Rt.R, e, t, a, n), this;
  }, r.prototype.closePath = function() {
    this._drawPendingPt(), this.addData(Rt.Z);
    var e = this._ctx, t = this._x0, a = this._y0;
    return e && e.closePath(), this._xi = t, this._yi = a, this;
  }, r.prototype.fill = function(e) {
    e && e.fill(), this.toStatic();
  }, r.prototype.stroke = function(e) {
    e && e.stroke(), this.toStatic();
  }, r.prototype.len = function() {
    return this._len;
  }, r.prototype.setData = function(e) {
    var t = e.length;
    !(this.data && this.data.length === t) && Mc && (this.data = new Float32Array(t));
    for (var a = 0; a < t; a++)
      this.data[a] = e[a];
    this._len = t;
  }, r.prototype.appendPath = function(e) {
    e instanceof Array || (e = [e]);
    for (var t = e.length, a = 0, n = this._len, i = 0; i < t; i++)
      a += e[i].len();
    Mc && this.data instanceof Float32Array && (this.data = new Float32Array(n + a));
    for (var i = 0; i < t; i++)
      for (var o = e[i].data, s = 0; s < o.length; s++)
        this.data[n++] = o[s];
    this._len = n;
  }, r.prototype.addData = function(e, t, a, n, i, o, s, l, u) {
    if (this._saveData) {
      var f = this.data;
      this._len + arguments.length > f.length && (this._expandData(), f = this.data);
      for (var h = 0; h < arguments.length; h++)
        f[this._len++] = arguments[h];
    }
  }, r.prototype._drawPendingPt = function() {
    this._pendingPtDist > 0 && (this._ctx && this._ctx.lineTo(this._pendingPtX, this._pendingPtY), this._pendingPtDist = 0);
  }, r.prototype._expandData = function() {
    if (!(this.data instanceof Array)) {
      for (var e = [], t = 0; t < this._len; t++)
        e[t] = this.data[t];
      this.data = e;
    }
  }, r.prototype.toStatic = function() {
    if (this._saveData) {
      this._drawPendingPt();
      var e = this.data;
      e instanceof Array && (e.length = this._len, Mc && this._len > 11 && (this.data = new Float32Array(e)));
    }
  }, r.prototype.getBoundingRect = function() {
    Er[0] = Er[1] = Pr[0] = Pr[1] = Number.MAX_VALUE, Ca[0] = Ca[1] = Rr[0] = Rr[1] = -Number.MAX_VALUE;
    var e = this.data, t = 0, a = 0, n = 0, i = 0, o;
    for (o = 0; o < this._len; ) {
      var s = e[o++], l = o === 1;
      switch (l && (t = e[o], a = e[o + 1], n = t, i = a), s) {
        case Rt.M:
          t = n = e[o++], a = i = e[o++], Pr[0] = n, Pr[1] = i, Rr[0] = n, Rr[1] = i;
          break;
        case Rt.L:
          o0(t, a, e[o], e[o + 1], Pr, Rr), t = e[o++], a = e[o++];
          break;
        case Rt.C:
          MP(t, a, e[o++], e[o++], e[o++], e[o++], e[o], e[o + 1], Pr, Rr), t = e[o++], a = e[o++];
          break;
        case Rt.Q:
          IP(t, a, e[o++], e[o++], e[o], e[o + 1], Pr, Rr), t = e[o++], a = e[o++];
          break;
        case Rt.A:
          var u = e[o++], f = e[o++], h = e[o++], c = e[o++], v = e[o++], d = e[o++] + v;
          o += 1;
          var p = !e[o++];
          l && (n = xn(v) * h + u, i = wn(v) * c + f), LP(u, f, h, c, v, d, p, Pr, Rr), t = xn(d) * h + u, a = wn(d) * c + f;
          break;
        case Rt.R:
          n = t = e[o++], i = a = e[o++];
          var g = e[o++], y = e[o++];
          o0(n, i, n + g, i + y, Pr, Rr);
          break;
        case Rt.Z:
          t = n, a = i;
          break;
      }
      Ga(Er, Er, Pr), Fa(Ca, Ca, Rr);
    }
    return o === 0 && (Er[0] = Er[1] = Ca[0] = Ca[1] = 0), new ct(Er[0], Er[1], Ca[0] - Er[0], Ca[1] - Er[1]);
  }, r.prototype._calculateLength = function() {
    var e = this.data, t = this._len, a = this._ux, n = this._uy, i = 0, o = 0, s = 0, l = 0;
    this._pathSegLen || (this._pathSegLen = []);
    for (var u = this._pathSegLen, f = 0, h = 0, c = 0; c < t; ) {
      var v = e[c++], d = c === 1;
      d && (i = e[c], o = e[c + 1], s = i, l = o);
      var p = -1;
      switch (v) {
        case Rt.M:
          i = s = e[c++], o = l = e[c++];
          break;
        case Rt.L: {
          var g = e[c++], y = e[c++], m = g - i, _ = y - o;
          (ea(m) > a || ea(_) > n || c === t - 1) && (p = Math.sqrt(m * m + _ * _), i = g, o = y);
          break;
        }
        case Rt.C: {
          var S = e[c++], w = e[c++], g = e[c++], y = e[c++], x = e[c++], b = e[c++];
          p = $2(i, o, S, w, g, y, x, b, 10), i = x, o = b;
          break;
        }
        case Rt.Q: {
          var S = e[c++], w = e[c++], g = e[c++], y = e[c++];
          p = Y2(i, o, S, w, g, y, 10), i = g, o = y;
          break;
        }
        case Rt.A:
          var T = e[c++], C = e[c++], D = e[c++], A = e[c++], I = e[c++], L = e[c++], E = L + I;
          c += 1, e[c++], d && (s = xn(I) * D + T, l = wn(I) * A + C), p = Ac(D, A) * Cc(Oa, Math.abs(L)), i = xn(E) * D + T, o = wn(E) * A + C;
          break;
        case Rt.R: {
          s = i = e[c++], l = o = e[c++];
          var P = e[c++], R = e[c++];
          p = P * 2 + R * 2;
          break;
        }
        case Rt.Z: {
          var m = s - i, _ = l - o;
          p = Math.sqrt(m * m + _ * _), i = s, o = l;
          break;
        }
      }
      p >= 0 && (u[h++] = p, f += p);
    }
    return this._pathLen = f, f;
  }, r.prototype.rebuildPath = function(e, t) {
    var a = this.data, n = this._ux, i = this._uy, o = this._len, s, l, u, f, h, c, v = t < 1, d, p, g = 0, y = 0, m, _ = 0, S, w;
    if (!(v && (this._pathSegLen || this._calculateLength(), d = this._pathSegLen, p = this._pathLen, m = t * p, !m)))
      t:
        for (var x = 0; x < o; ) {
          var b = a[x++], T = x === 1;
          switch (T && (u = a[x], f = a[x + 1], s = u, l = f), b !== Rt.L && _ > 0 && (e.lineTo(S, w), _ = 0), b) {
            case Rt.M:
              s = u = a[x++], l = f = a[x++], e.moveTo(u, f);
              break;
            case Rt.L: {
              h = a[x++], c = a[x++];
              var C = ea(h - u), D = ea(c - f);
              if (C > n || D > i) {
                if (v) {
                  var A = d[y++];
                  if (g + A > m) {
                    var I = (m - g) / A;
                    e.lineTo(u * (1 - I) + h * I, f * (1 - I) + c * I);
                    break t;
                  }
                  g += A;
                }
                e.lineTo(h, c), u = h, f = c, _ = 0;
              } else {
                var L = C * C + D * D;
                L > _ && (S = h, w = c, _ = L);
              }
              break;
            }
            case Rt.C: {
              var E = a[x++], P = a[x++], R = a[x++], k = a[x++], O = a[x++], B = a[x++];
              if (v) {
                var A = d[y++];
                if (g + A > m) {
                  var I = (m - g) / A;
                  Qa(u, E, R, O, I, _n), Qa(f, P, k, B, I, Sn), e.bezierCurveTo(_n[1], Sn[1], _n[2], Sn[2], _n[3], Sn[3]);
                  break t;
                }
                g += A;
              }
              e.bezierCurveTo(E, P, R, k, O, B), u = O, f = B;
              break;
            }
            case Rt.Q: {
              var E = a[x++], P = a[x++], R = a[x++], k = a[x++];
              if (v) {
                var A = d[y++];
                if (g + A > m) {
                  var I = (m - g) / A;
                  $s(u, E, R, I, _n), $s(f, P, k, I, Sn), e.quadraticCurveTo(_n[1], Sn[1], _n[2], Sn[2]);
                  break t;
                }
                g += A;
              }
              e.quadraticCurveTo(E, P, R, k), u = R, f = k;
              break;
            }
            case Rt.A:
              var F = a[x++], W = a[x++], Z = a[x++], Q = a[x++], tt = a[x++], dt = a[x++], St = a[x++], pt = !a[x++], rt = Z > Q ? Z : Q, gt = ea(Z - Q) > 1e-3, st = tt + dt, q = !1;
              if (v) {
                var A = d[y++];
                g + A > m && (st = tt + dt * (m - g) / A, q = !0), g += A;
              }
              if (gt && e.ellipse ? e.ellipse(F, W, Z, Q, St, tt, st, pt) : e.arc(F, W, rt, tt, st, pt), q)
                break t;
              T && (s = xn(tt) * Z + F, l = wn(tt) * Q + W), u = xn(st) * Z + F, f = wn(st) * Q + W;
              break;
            case Rt.R:
              s = u = a[x], l = f = a[x + 1], h = a[x++], c = a[x++];
              var lt = a[x++], zt = a[x++];
              if (v) {
                var A = d[y++];
                if (g + A > m) {
                  var wt = m - g;
                  e.moveTo(h, c), e.lineTo(h + Cc(wt, lt), c), wt -= lt, wt > 0 && e.lineTo(h + lt, c + Cc(wt, zt)), wt -= zt, wt > 0 && e.lineTo(h + Ac(lt - wt, 0), c + zt), wt -= lt, wt > 0 && e.lineTo(h, c + Ac(zt - wt, 0));
                  break t;
                }
                g += A;
              }
              e.rect(h, c, lt, zt);
              break;
            case Rt.Z:
              if (v) {
                var A = d[y++];
                if (g + A > m) {
                  var I = (m - g) / A;
                  e.lineTo(u * (1 - I) + s * I, f * (1 - I) + l * I);
                  break t;
                }
                g += A;
              }
              e.closePath(), u = s, f = l;
          }
        }
  }, r.prototype.clone = function() {
    var e = new r(), t = this.data;
    return e.data = t.slice ? t.slice() : Array.prototype.slice.call(t), e._len = this._len, e;
  }, r.CMD = Rt, r.initDefaultProps = function() {
    var e = r.prototype;
    e._saveData = !0, e._ux = 0, e._uy = 0, e._pendingPtDist = 0, e._version = 0;
  }(), r;
}();
function Va(r, e, t, a, n, i, o) {
  if (n === 0)
    return !1;
  var s = n, l = 0, u = r;
  if (o > e + s && o > a + s || o < e - s && o < a - s || i > r + s && i > t + s || i < r - s && i < t - s)
    return !1;
  if (r !== t)
    l = (e - a) / (r - t), u = (r * a - t * e) / (r - t);
  else
    return Math.abs(i - r) <= s / 2;
  var f = l * i - o + u, h = f * f / (l * l + 1);
  return h <= s / 2 * s / 2;
}
function EP(r, e, t, a, n, i, o, s, l, u, f) {
  if (l === 0)
    return !1;
  var h = l;
  if (f > e + h && f > a + h && f > i + h && f > s + h || f < e - h && f < a - h && f < i - h && f < s - h || u > r + h && u > t + h && u > n + h && u > o + h || u < r - h && u < t - h && u < n - h && u < o - h)
    return !1;
  var c = Zb(r, e, t, a, n, i, o, s, u, f, null);
  return c <= h / 2;
}
function LT(r, e, t, a, n, i, o, s, l) {
  if (o === 0)
    return !1;
  var u = o;
  if (l > e + u && l > a + u && l > i + u || l < e - u && l < a - u && l < i - u || s > r + u && s > t + u && s > n + u || s < r - u && s < t - u && s < n - u)
    return !1;
  var f = qb(r, e, t, a, n, i, s, l, null);
  return f <= u / 2;
}
var u0 = Math.PI * 2;
function xr(r) {
  return r %= u0, r < 0 && (r += u0), r;
}
var Yo = Math.PI * 2;
function PP(r, e, t, a, n, i, o, s, l) {
  if (o === 0)
    return !1;
  var u = o;
  s -= r, l -= e;
  var f = Math.sqrt(s * s + l * l);
  if (f - u > t || f + u < t)
    return !1;
  if (Math.abs(a - n) % Yo < 1e-4)
    return !0;
  if (i) {
    var h = a;
    a = xr(n), n = xr(h);
  } else
    a = xr(a), n = xr(n);
  a > n && (n += Yo);
  var c = Math.atan2(l, s);
  return c < 0 && (c += Yo), c >= a && c <= n || c + Yo >= a && c + Yo <= n;
}
function ia(r, e, t, a, n, i) {
  if (i > e && i > a || i < e && i < a || a === e)
    return 0;
  var o = (i - e) / (a - e), s = a < e ? 1 : -1;
  (o === 1 || o === 0) && (s = a < e ? 0.5 : -0.5);
  var l = o * (t - r) + r;
  return l === n ? 1 / 0 : l > n ? s : 0;
}
var Aa = Kr.CMD, bn = Math.PI * 2, RP = 1e-4;
function NP(r, e) {
  return Math.abs(r - e) < RP;
}
var Ce = [-1, -1, -1], er = [-1, -1];
function OP() {
  var r = er[0];
  er[0] = er[1], er[1] = r;
}
function kP(r, e, t, a, n, i, o, s, l, u) {
  if (u > e && u > a && u > i && u > s || u < e && u < a && u < i && u < s)
    return 0;
  var f = uf(e, a, i, s, u, Ce);
  if (f === 0)
    return 0;
  for (var h = 0, c = -1, v = void 0, d = void 0, p = 0; p < f; p++) {
    var g = Ce[p], y = g === 0 || g === 1 ? 0.5 : 1, m = ne(r, t, n, o, g);
    m < l || (c < 0 && (c = Yb(e, a, i, s, er), er[1] < er[0] && c > 1 && OP(), v = ne(e, a, i, s, er[0]), c > 1 && (d = ne(e, a, i, s, er[1]))), c === 2 ? g < er[0] ? h += v < e ? y : -y : g < er[1] ? h += d < v ? y : -y : h += s < d ? y : -y : g < er[0] ? h += v < e ? y : -y : h += s < v ? y : -y);
  }
  return h;
}
function VP(r, e, t, a, n, i, o, s) {
  if (s > e && s > a && s > i || s < e && s < a && s < i)
    return 0;
  var l = U2(e, a, i, s, Ce);
  if (l === 0)
    return 0;
  var u = Xb(e, a, i);
  if (u >= 0 && u <= 1) {
    for (var f = 0, h = le(e, a, i, u), c = 0; c < l; c++) {
      var v = Ce[c] === 0 || Ce[c] === 1 ? 0.5 : 1, d = le(r, t, n, Ce[c]);
      d < o || (Ce[c] < u ? f += h < e ? v : -v : f += i < h ? v : -v);
    }
    return f;
  } else {
    var v = Ce[0] === 0 || Ce[0] === 1 ? 0.5 : 1, d = le(r, t, n, Ce[0]);
    return d < o ? 0 : i < e ? v : -v;
  }
}
function BP(r, e, t, a, n, i, o, s) {
  if (s -= e, s > t || s < -t)
    return 0;
  var l = Math.sqrt(t * t - s * s);
  Ce[0] = -l, Ce[1] = l;
  var u = Math.abs(a - n);
  if (u < 1e-4)
    return 0;
  if (u >= bn - 1e-4) {
    a = 0, n = bn;
    var f = i ? 1 : -1;
    return o >= Ce[0] + r && o <= Ce[1] + r ? f : 0;
  }
  if (a > n) {
    var h = a;
    a = n, n = h;
  }
  a < 0 && (a += bn, n += bn);
  for (var c = 0, v = 0; v < 2; v++) {
    var d = Ce[v];
    if (d + r > o) {
      var p = Math.atan2(s, d), f = i ? 1 : -1;
      p < 0 && (p = bn + p), (p >= a && p <= n || p + bn >= a && p + bn <= n) && (p > Math.PI / 2 && p < Math.PI * 1.5 && (f = -f), c += f);
    }
  }
  return c;
}
function ET(r, e, t, a, n) {
  for (var i = r.data, o = r.len(), s = 0, l = 0, u = 0, f = 0, h = 0, c, v, d = 0; d < o; ) {
    var p = i[d++], g = d === 1;
    switch (p === Aa.M && d > 1 && (t || (s += ia(l, u, f, h, a, n))), g && (l = i[d], u = i[d + 1], f = l, h = u), p) {
      case Aa.M:
        f = i[d++], h = i[d++], l = f, u = h;
        break;
      case Aa.L:
        if (t) {
          if (Va(l, u, i[d], i[d + 1], e, a, n))
            return !0;
        } else
          s += ia(l, u, i[d], i[d + 1], a, n) || 0;
        l = i[d++], u = i[d++];
        break;
      case Aa.C:
        if (t) {
          if (EP(l, u, i[d++], i[d++], i[d++], i[d++], i[d], i[d + 1], e, a, n))
            return !0;
        } else
          s += kP(l, u, i[d++], i[d++], i[d++], i[d++], i[d], i[d + 1], a, n) || 0;
        l = i[d++], u = i[d++];
        break;
      case Aa.Q:
        if (t) {
          if (LT(l, u, i[d++], i[d++], i[d], i[d + 1], e, a, n))
            return !0;
        } else
          s += VP(l, u, i[d++], i[d++], i[d], i[d + 1], a, n) || 0;
        l = i[d++], u = i[d++];
        break;
      case Aa.A:
        var y = i[d++], m = i[d++], _ = i[d++], S = i[d++], w = i[d++], x = i[d++];
        d += 1;
        var b = !!(1 - i[d++]);
        c = Math.cos(w) * _ + y, v = Math.sin(w) * S + m, g ? (f = c, h = v) : s += ia(l, u, c, v, a, n);
        var T = (a - y) * S / _ + y;
        if (t) {
          if (PP(y, m, S, w, w + x, b, e, T, n))
            return !0;
        } else
          s += BP(y, m, S, w, w + x, b, T, n);
        l = Math.cos(w + x) * _ + y, u = Math.sin(w + x) * S + m;
        break;
      case Aa.R:
        f = l = i[d++], h = u = i[d++];
        var C = i[d++], D = i[d++];
        if (c = f + C, v = h + D, t) {
          if (Va(f, h, c, h, e, a, n) || Va(c, h, c, v, e, a, n) || Va(c, v, f, v, e, a, n) || Va(f, v, f, h, e, a, n))
            return !0;
        } else
          s += ia(c, h, c, v, a, n), s += ia(f, v, f, h, a, n);
        break;
      case Aa.Z:
        if (t) {
          if (Va(l, u, f, h, e, a, n))
            return !0;
        } else
          s += ia(l, u, f, h, a, n);
        l = f, u = h;
        break;
    }
  }
  return !t && !NP(u, h) && (s += ia(l, u, f, h, a, n) || 0), s !== 0;
}
function zP(r, e, t) {
  return ET(r, 0, !1, e, t);
}
function GP(r, e, t, a) {
  return ET(r, e, !0, t, a);
}
var gf = et({
  fill: "#000",
  stroke: null,
  strokePercent: 1,
  fillOpacity: 1,
  strokeOpacity: 1,
  lineDashOffset: 0,
  lineWidth: 1,
  lineCap: "butt",
  miterLimit: 10,
  strokeNoScale: !1,
  strokeFirst: !1
}, ri), FP = {
  style: et({
    fill: !0,
    stroke: !0,
    strokePercent: !0,
    fillOpacity: !0,
    strokeOpacity: !0,
    lineDashOffset: !0,
    lineWidth: !0,
    miterLimit: !0
  }, gh.style)
}, Lc = Xr.concat([
  "invisible",
  "culling",
  "z",
  "z2",
  "zlevel",
  "parent"
]), HP = function(r) {
  N(e, r);
  function e(t) {
    return r.call(this, t) || this;
  }
  return e.prototype.update = function() {
    var t = this;
    r.prototype.update.call(this);
    var a = this.style;
    if (a.decal) {
      var n = this._decalEl = this._decalEl || new e();
      n.buildPath === e.prototype.buildPath && (n.buildPath = function(l) {
        t.buildPath(l, t.shape);
      }), n.silent = !0;
      var i = n.style;
      for (var o in a)
        i[o] !== a[o] && (i[o] = a[o]);
      i.fill = a.fill ? a.decal : null, i.decal = null, i.shadowColor = null, a.strokeFirst && (i.stroke = null);
      for (var s = 0; s < Lc.length; ++s)
        n[Lc[s]] = this[Lc[s]];
      n.__dirty |= $e;
    } else
      this._decalEl && (this._decalEl = null);
  }, e.prototype.getDecalElement = function() {
    return this._decalEl;
  }, e.prototype._init = function(t) {
    var a = _t(t);
    this.shape = this.getDefaultShape();
    var n = this.getDefaultStyle();
    n && this.useStyle(n);
    for (var i = 0; i < a.length; i++) {
      var o = a[i], s = t[o];
      o === "style" ? this.style ? V(this.style, s) : this.useStyle(s) : o === "shape" ? V(this.shape, s) : r.prototype.attrKV.call(this, o, s);
    }
    this.style || this.useStyle({});
  }, e.prototype.getDefaultStyle = function() {
    return null;
  }, e.prototype.getDefaultShape = function() {
    return {};
  }, e.prototype.canBeInsideText = function() {
    return this.hasFill();
  }, e.prototype.getInsideTextFill = function() {
    var t = this.style.fill;
    if (t !== "none") {
      if ($(t)) {
        var a = hf(t, 0);
        return a > 0.5 ? Wd : a > 0.2 ? bE : $d;
      } else if (t)
        return $d;
    }
    return Wd;
  }, e.prototype.getInsideTextStroke = function(t) {
    var a = this.style.fill;
    if ($(a)) {
      var n = this.__zr, i = !!(n && n.isDarkMode()), o = hf(t, 0) < Hd;
      if (i === o)
        return a;
    }
  }, e.prototype.buildPath = function(t, a, n) {
  }, e.prototype.pathUpdated = function() {
    this.__dirty &= ~Ki;
  }, e.prototype.getUpdatedPathProxy = function(t) {
    return !this.path && this.createPathProxy(), this.path.beginPath(), this.buildPath(this.path, this.shape, t), this.path;
  }, e.prototype.createPathProxy = function() {
    this.path = new Kr(!1);
  }, e.prototype.hasStroke = function() {
    var t = this.style, a = t.stroke;
    return !(a == null || a === "none" || !(t.lineWidth > 0));
  }, e.prototype.hasFill = function() {
    var t = this.style, a = t.fill;
    return a != null && a !== "none";
  }, e.prototype.getBoundingRect = function() {
    var t = this._rect, a = this.style, n = !t;
    if (n) {
      var i = !1;
      this.path || (i = !0, this.createPathProxy());
      var o = this.path;
      (i || this.__dirty & Ki) && (o.beginPath(), this.buildPath(o, this.shape, !1), this.pathUpdated()), t = o.getBoundingRect();
    }
    if (this._rect = t, this.hasStroke() && this.path && this.path.len() > 0) {
      var s = this._rectStroke || (this._rectStroke = t.clone());
      if (this.__dirty || n) {
        s.copy(t);
        var l = a.strokeNoScale ? this.getLineScale() : 1, u = a.lineWidth;
        if (!this.hasFill()) {
          var f = this.strokeContainThreshold;
          u = Math.max(u, f == null ? 4 : f);
        }
        l > 1e-10 && (s.width += u / l, s.height += u / l, s.x -= u / l / 2, s.y -= u / l / 2);
      }
      return s;
    }
    return t;
  }, e.prototype.contain = function(t, a) {
    var n = this.transformCoordToLocal(t, a), i = this.getBoundingRect(), o = this.style;
    if (t = n[0], a = n[1], i.contain(t, a)) {
      var s = this.path;
      if (this.hasStroke()) {
        var l = o.lineWidth, u = o.strokeNoScale ? this.getLineScale() : 1;
        if (u > 1e-10 && (this.hasFill() || (l = Math.max(l, this.strokeContainThreshold)), GP(s, l / u, t, a)))
          return !0;
      }
      if (this.hasFill())
        return zP(s, t, a);
    }
    return !1;
  }, e.prototype.dirtyShape = function() {
    this.__dirty |= Ki, this._rect && (this._rect = null), this._decalEl && this._decalEl.dirtyShape(), this.markRedraw();
  }, e.prototype.dirty = function() {
    this.dirtyStyle(), this.dirtyShape();
  }, e.prototype.animateShape = function(t) {
    return this.animate("shape", t);
  }, e.prototype.updateDuringAnimation = function(t) {
    t === "style" ? this.dirtyStyle() : t === "shape" ? this.dirtyShape() : this.markRedraw();
  }, e.prototype.attrKV = function(t, a) {
    t === "shape" ? this.setShape(a) : r.prototype.attrKV.call(this, t, a);
  }, e.prototype.setShape = function(t, a) {
    var n = this.shape;
    return n || (n = this.shape = {}), typeof t == "string" ? n[t] = a : V(n, t), this.dirtyShape(), this;
  }, e.prototype.shapeChanged = function() {
    return !!(this.__dirty & Ki);
  }, e.prototype.createStyle = function(t) {
    return lh(gf, t);
  }, e.prototype._innerSaveToNormal = function(t) {
    r.prototype._innerSaveToNormal.call(this, t);
    var a = this._normalState;
    t.shape && !a.shape && (a.shape = V({}, this.shape));
  }, e.prototype._applyStateObj = function(t, a, n, i, o, s) {
    r.prototype._applyStateObj.call(this, t, a, n, i, o, s);
    var l = !(a && i), u;
    if (a && a.shape ? o ? i ? u = a.shape : (u = V({}, n.shape), V(u, a.shape)) : (u = V({}, i ? this.shape : n.shape), V(u, a.shape)) : l && (u = n.shape), u)
      if (o) {
        this.shape = V({}, this.shape);
        for (var f = {}, h = _t(u), c = 0; c < h.length; c++) {
          var v = h[c];
          typeof u[v] == "object" ? this.shape[v] = u[v] : f[v] = u[v];
        }
        this._transitionState(t, {
          shape: f
        }, s);
      } else
        this.shape = u, this.dirtyShape();
  }, e.prototype._mergeStates = function(t) {
    for (var a = r.prototype._mergeStates.call(this, t), n, i = 0; i < t.length; i++) {
      var o = t[i];
      o.shape && (n = n || {}, this._mergeStyle(n, o.shape));
    }
    return n && (a.shape = n), a;
  }, e.prototype.getAnimationStyleProps = function() {
    return FP;
  }, e.prototype.isZeroArea = function() {
    return !1;
  }, e.extend = function(t) {
    var a = function(i) {
      N(o, i);
      function o(s) {
        var l = i.call(this, s) || this;
        return t.init && t.init.call(l, s), l;
      }
      return o.prototype.getDefaultStyle = function() {
        return at(t.style);
      }, o.prototype.getDefaultShape = function() {
        return at(t.shape);
      }, o;
    }(e);
    for (var n in t)
      typeof t[n] == "function" && (a.prototype[n] = t[n]);
    return a;
  }, e.initDefaultProps = function() {
    var t = e.prototype;
    t.type = "path", t.strokeContainThreshold = 5, t.segmentIgnoreThreshold = 0, t.subPixelOptimize = !1, t.autoBatch = !1, t.__dirty = $e | ps | Ki;
  }(), e;
}(hr);
const mt = HP;
var WP = et({
  strokeFirst: !0,
  font: ja,
  x: 0,
  y: 0,
  textAlign: "left",
  textBaseline: "top",
  miterLimit: 2
}, gf), PT = function(r) {
  N(e, r);
  function e() {
    return r !== null && r.apply(this, arguments) || this;
  }
  return e.prototype.hasStroke = function() {
    var t = this.style, a = t.stroke;
    return a != null && a !== "none" && t.lineWidth > 0;
  }, e.prototype.hasFill = function() {
    var t = this.style, a = t.fill;
    return a != null && a !== "none";
  }, e.prototype.createStyle = function(t) {
    return lh(WP, t);
  }, e.prototype.setBoundingRect = function(t) {
    this._rect = t;
  }, e.prototype.getBoundingRect = function() {
    var t = this.style;
    if (!this._rect) {
      var a = t.text;
      a != null ? a += "" : a = "";
      var n = gl(a, t.font, t.textAlign, t.textBaseline);
      if (n.x += t.x || 0, n.y += t.y || 0, this.hasStroke()) {
        var i = t.lineWidth;
        n.x -= i / 2, n.y -= i / 2, n.width += i, n.height += i;
      }
      this._rect = n;
    }
    return this._rect;
  }, e.initDefaultProps = function() {
    var t = e.prototype;
    t.dirtyRectTolerance = 10;
  }(), e;
}(hr);
PT.prototype.type = "tspan";
const Zs = PT;
var $P = et({
  x: 0,
  y: 0
}, ri), UP = {
  style: et({
    x: !0,
    y: !0,
    width: !0,
    height: !0,
    sx: !0,
    sy: !0,
    sWidth: !0,
    sHeight: !0
  }, gh.style)
};
function YP(r) {
  return !!(r && typeof r != "string" && r.width && r.height);
}
var RT = function(r) {
  N(e, r);
  function e() {
    return r !== null && r.apply(this, arguments) || this;
  }
  return e.prototype.createStyle = function(t) {
    return lh($P, t);
  }, e.prototype._getSize = function(t) {
    var a = this.style, n = a[t];
    if (n != null)
      return n;
    var i = YP(a.image) ? a.image : this.__image;
    if (!i)
      return 0;
    var o = t === "width" ? "height" : "width", s = a[o];
    return s == null ? i[t] : i[t] / i[o] * s;
  }, e.prototype.getWidth = function() {
    return this._getSize("width");
  }, e.prototype.getHeight = function() {
    return this._getSize("height");
  }, e.prototype.getAnimationStyleProps = function() {
    return UP;
  }, e.prototype.getBoundingRect = function() {
    var t = this.style;
    return this._rect || (this._rect = new ct(t.x || 0, t.y || 0, this.getWidth(), this.getHeight())), this._rect;
  }, e;
}(hr);
RT.prototype.type = "image";
const ge = RT;
function ZP(r, e) {
  var t = e.x, a = e.y, n = e.width, i = e.height, o = e.r, s, l, u, f;
  n < 0 && (t = t + n, n = -n), i < 0 && (a = a + i, i = -i), typeof o == "number" ? s = l = u = f = o : o instanceof Array ? o.length === 1 ? s = l = u = f = o[0] : o.length === 2 ? (s = u = o[0], l = f = o[1]) : o.length === 3 ? (s = o[0], l = f = o[1], u = o[2]) : (s = o[0], l = o[1], u = o[2], f = o[3]) : s = l = u = f = 0;
  var h;
  s + l > n && (h = s + l, s *= n / h, l *= n / h), u + f > n && (h = u + f, u *= n / h, f *= n / h), l + u > i && (h = l + u, l *= i / h, u *= i / h), s + f > i && (h = s + f, s *= i / h, f *= i / h), r.moveTo(t + s, a), r.lineTo(t + n - l, a), l !== 0 && r.arc(t + n - l, a + l, l, -Math.PI / 2, 0), r.lineTo(t + n, a + i - u), u !== 0 && r.arc(t + n - u, a + i - u, u, 0, Math.PI / 2), r.lineTo(t + f, a + i), f !== 0 && r.arc(t + f, a + i - f, f, Math.PI / 2, Math.PI), r.lineTo(t, a + s), s !== 0 && r.arc(t + s, a + s, s, Math.PI, Math.PI * 1.5);
}
var ro = Math.round;
function NT(r, e, t) {
  if (e) {
    var a = e.x1, n = e.x2, i = e.y1, o = e.y2;
    r.x1 = a, r.x2 = n, r.y1 = i, r.y2 = o;
    var s = t && t.lineWidth;
    return s && (ro(a * 2) === ro(n * 2) && (r.x1 = r.x2 = Zn(a, s, !0)), ro(i * 2) === ro(o * 2) && (r.y1 = r.y2 = Zn(i, s, !0))), r;
  }
}
function OT(r, e, t) {
  if (e) {
    var a = e.x, n = e.y, i = e.width, o = e.height;
    r.x = a, r.y = n, r.width = i, r.height = o;
    var s = t && t.lineWidth;
    return s && (r.x = Zn(a, s, !0), r.y = Zn(n, s, !0), r.width = Math.max(Zn(a + i, s, !1) - r.x, i === 0 ? 0 : 1), r.height = Math.max(Zn(n + o, s, !1) - r.y, o === 0 ? 0 : 1)), r;
  }
}
function Zn(r, e, t) {
  if (!e)
    return r;
  var a = ro(r * 2);
  return (a + ro(e)) % 2 === 0 ? a / 2 : (a + (t ? 1 : -1)) / 2;
}
var XP = function() {
  function r() {
    this.x = 0, this.y = 0, this.width = 0, this.height = 0;
  }
  return r;
}(), qP = {}, kT = function(r) {
  N(e, r);
  function e(t) {
    return r.call(this, t) || this;
  }
  return e.prototype.getDefaultShape = function() {
    return new XP();
  }, e.prototype.buildPath = function(t, a) {
    var n, i, o, s;
    if (this.subPixelOptimize) {
      var l = OT(qP, a, this.style);
      n = l.x, i = l.y, o = l.width, s = l.height, l.r = a.r, a = l;
    } else
      n = a.x, i = a.y, o = a.width, s = a.height;
    a.r ? ZP(t, a) : t.rect(n, i, o, s);
  }, e.prototype.isZeroArea = function() {
    return !this.shape.width || !this.shape.height;
  }, e;
}(mt);
kT.prototype.type = "rect";
const Tt = kT;
var f0 = {
  fill: "#000"
}, h0 = 2, KP = {
  style: et({
    fill: !0,
    stroke: !0,
    fillOpacity: !0,
    strokeOpacity: !0,
    lineWidth: !0,
    fontSize: !0,
    lineHeight: !0,
    width: !0,
    height: !0,
    textShadowColor: !0,
    textShadowBlur: !0,
    textShadowOffsetX: !0,
    textShadowOffsetY: !0,
    backgroundColor: !0,
    padding: !0,
    borderColor: !0,
    borderWidth: !0,
    borderRadius: !0
  }, gh.style)
}, VT = function(r) {
  N(e, r);
  function e(t) {
    var a = r.call(this) || this;
    return a.type = "text", a._children = [], a._defaultStyle = f0, a.attr(t), a;
  }
  return e.prototype.childrenRef = function() {
    return this._children;
  }, e.prototype.update = function() {
    r.prototype.update.call(this), this.styleChanged() && this._updateSubTexts();
    for (var t = 0; t < this._children.length; t++) {
      var a = this._children[t];
      a.zlevel = this.zlevel, a.z = this.z, a.z2 = this.z2, a.culling = this.culling, a.cursor = this.cursor, a.invisible = this.invisible;
    }
  }, e.prototype.updateTransform = function() {
    var t = this.innerTransformable;
    t ? (t.updateTransform(), t.transform && (this.transform = t.transform)) : r.prototype.updateTransform.call(this);
  }, e.prototype.getLocalTransform = function(t) {
    var a = this.innerTransformable;
    return a ? a.getLocalTransform(t) : r.prototype.getLocalTransform.call(this, t);
  }, e.prototype.getComputedTransform = function() {
    return this.__hostTarget && (this.__hostTarget.getComputedTransform(), this.__hostTarget.updateInnerText(!0)), r.prototype.getComputedTransform.call(this);
  }, e.prototype._updateSubTexts = function() {
    this._childCursor = 0, QP(this.style), this.style.rich ? this._updateRichTexts() : this._updatePlainTexts(), this._children.length = this._childCursor, this.styleUpdated();
  }, e.prototype.addSelfToZr = function(t) {
    r.prototype.addSelfToZr.call(this, t);
    for (var a = 0; a < this._children.length; a++)
      this._children[a].__zr = t;
  }, e.prototype.removeSelfFromZr = function(t) {
    r.prototype.removeSelfFromZr.call(this, t);
    for (var a = 0; a < this._children.length; a++)
      this._children[a].__zr = null;
  }, e.prototype.getBoundingRect = function() {
    if (this.styleChanged() && this._updateSubTexts(), !this._rect) {
      for (var t = new ct(0, 0, 0, 0), a = this._children, n = [], i = null, o = 0; o < a.length; o++) {
        var s = a[o], l = s.getBoundingRect(), u = s.getLocalTransform(n);
        u ? (t.copy(l), t.applyTransform(u), i = i || t.clone(), i.union(t)) : (i = i || l.clone(), i.union(l));
      }
      this._rect = i || t;
    }
    return this._rect;
  }, e.prototype.setDefaultTextStyle = function(t) {
    this._defaultStyle = t || f0;
  }, e.prototype.setTextContent = function(t) {
    if ({}.NODE_ENV !== "production")
      throw new Error("Can't attach text on another text");
  }, e.prototype._mergeStyle = function(t, a) {
    if (!a)
      return t;
    var n = a.rich, i = t.rich || n && {};
    return V(t, a), n && i ? (this._mergeRich(i, n), t.rich = i) : i && (t.rich = i), t;
  }, e.prototype._mergeRich = function(t, a) {
    for (var n = _t(a), i = 0; i < n.length; i++) {
      var o = n[i];
      t[o] = t[o] || {}, V(t[o], a[o]);
    }
  }, e.prototype.getAnimationStyleProps = function() {
    return KP;
  }, e.prototype._getOrCreateChild = function(t) {
    var a = this._children[this._childCursor];
    return (!a || !(a instanceof t)) && (a = new t()), this._children[this._childCursor++] = a, a.__zr = this.__zr, a.parent = this, a;
  }, e.prototype._updatePlainTexts = function() {
    var t = this.style, a = t.font || ja, n = t.padding, i = m0(t), o = mP(i, t), s = Ec(t), l = !!t.backgroundColor, u = o.outerHeight, f = o.outerWidth, h = o.contentWidth, c = o.lines, v = o.lineHeight, d = this._defaultStyle, p = t.x || 0, g = t.y || 0, y = t.align || d.align || "left", m = t.verticalAlign || d.verticalAlign || "top", _ = p, S = ji(g, o.contentHeight, m);
    if (s || n) {
      var w = ys(p, f, y), x = ji(g, u, m);
      s && this._renderBackground(t, t, w, x, f, u);
    }
    S += v / 2, n && (_ = y0(p, y, n), m === "top" ? S += n[0] : m === "bottom" && (S -= n[2]));
    for (var b = 0, T = !1, C = g0("fill" in t ? t.fill : (T = !0, d.fill)), D = p0("stroke" in t ? t.stroke : !l && (!d.autoStroke || T) ? (b = h0, d.stroke) : null), A = t.textShadowBlur > 0, I = t.width != null && (t.overflow === "truncate" || t.overflow === "break" || t.overflow === "breakAll"), L = o.calculatedLineHeight, E = 0; E < c.length; E++) {
      var P = this._getOrCreateChild(Zs), R = P.createStyle();
      P.useStyle(R), R.text = c[E], R.x = _, R.y = S, y && (R.textAlign = y), R.textBaseline = "middle", R.opacity = t.opacity, R.strokeFirst = !0, A && (R.shadowBlur = t.textShadowBlur || 0, R.shadowColor = t.textShadowColor || "transparent", R.shadowOffsetX = t.textShadowOffsetX || 0, R.shadowOffsetY = t.textShadowOffsetY || 0), R.stroke = D, R.fill = C, D && (R.lineWidth = t.lineWidth || b, R.lineDash = t.lineDash, R.lineDashOffset = t.lineDashOffset || 0), R.font = a, v0(R, t), S += v, I && P.setBoundingRect(new ct(ys(R.x, t.width, R.textAlign), ji(R.y, L, R.textBaseline), h, L));
    }
  }, e.prototype._updateRichTexts = function() {
    var t = this.style, a = m0(t), n = xP(a, t), i = n.width, o = n.outerWidth, s = n.outerHeight, l = t.padding, u = t.x || 0, f = t.y || 0, h = this._defaultStyle, c = t.align || h.align, v = t.verticalAlign || h.verticalAlign, d = ys(u, o, c), p = ji(f, s, v), g = d, y = p;
    l && (g += l[3], y += l[0]);
    var m = g + i;
    Ec(t) && this._renderBackground(t, t, d, p, o, s);
    for (var _ = !!t.backgroundColor, S = 0; S < n.lines.length; S++) {
      for (var w = n.lines[S], x = w.tokens, b = x.length, T = w.lineHeight, C = w.width, D = 0, A = g, I = m, L = b - 1, E = void 0; D < b && (E = x[D], !E.align || E.align === "left"); )
        this._placeToken(E, t, T, y, A, "left", _), C -= E.width, A += E.width, D++;
      for (; L >= 0 && (E = x[L], E.align === "right"); )
        this._placeToken(E, t, T, y, I, "right", _), C -= E.width, I -= E.width, L--;
      for (A += (i - (A - g) - (m - I) - C) / 2; D <= L; )
        E = x[D], this._placeToken(E, t, T, y, A + E.width / 2, "center", _), A += E.width, D++;
      y += T;
    }
  }, e.prototype._placeToken = function(t, a, n, i, o, s, l) {
    var u = a.rich[t.styleName] || {};
    u.text = t.text;
    var f = t.verticalAlign, h = i + n / 2;
    f === "top" ? h = i + t.height / 2 : f === "bottom" && (h = i + n - t.height / 2);
    var c = !t.isLineHolder && Ec(u);
    c && this._renderBackground(u, a, s === "right" ? o - t.width : s === "center" ? o - t.width / 2 : o, h - t.height / 2, t.width, t.height);
    var v = !!u.backgroundColor, d = t.textPadding;
    d && (o = y0(o, s, d), h -= t.height / 2 - d[0] - t.innerHeight / 2);
    var p = this._getOrCreateChild(Zs), g = p.createStyle();
    p.useStyle(g);
    var y = this._defaultStyle, m = !1, _ = 0, S = g0("fill" in u ? u.fill : "fill" in a ? a.fill : (m = !0, y.fill)), w = p0("stroke" in u ? u.stroke : "stroke" in a ? a.stroke : !v && !l && (!y.autoStroke || m) ? (_ = h0, y.stroke) : null), x = u.textShadowBlur > 0 || a.textShadowBlur > 0;
    g.text = t.text, g.x = o, g.y = h, x && (g.shadowBlur = u.textShadowBlur || a.textShadowBlur || 0, g.shadowColor = u.textShadowColor || a.textShadowColor || "transparent", g.shadowOffsetX = u.textShadowOffsetX || a.textShadowOffsetX || 0, g.shadowOffsetY = u.textShadowOffsetY || a.textShadowOffsetY || 0), g.textAlign = s, g.textBaseline = "middle", g.font = t.font || ja, g.opacity = lr(u.opacity, a.opacity, 1), v0(g, u), w && (g.lineWidth = lr(u.lineWidth, a.lineWidth, _), g.lineDash = ft(u.lineDash, a.lineDash), g.lineDashOffset = a.lineDashOffset || 0, g.stroke = w), S && (g.fill = S);
    var b = t.contentWidth, T = t.contentHeight;
    p.setBoundingRect(new ct(ys(g.x, b, g.textAlign), ji(g.y, T, g.textBaseline), b, T));
  }, e.prototype._renderBackground = function(t, a, n, i, o, s) {
    var l = t.backgroundColor, u = t.borderWidth, f = t.borderColor, h = l && l.image, c = l && !h, v = t.borderRadius, d = this, p, g;
    if (c || t.lineHeight || u && f) {
      p = this._getOrCreateChild(Tt), p.useStyle(p.createStyle()), p.style.fill = null;
      var y = p.shape;
      y.x = n, y.y = i, y.width = o, y.height = s, y.r = v, p.dirtyShape();
    }
    if (c) {
      var m = p.style;
      m.fill = l || null, m.fillOpacity = ft(t.fillOpacity, 1);
    } else if (h) {
      g = this._getOrCreateChild(ge), g.onload = function() {
        d.dirtyStyle();
      };
      var _ = g.style;
      _.image = l.image, _.x = n, _.y = i, _.width = o, _.height = s;
    }
    if (u && f) {
      var m = p.style;
      m.lineWidth = u, m.stroke = f, m.strokeOpacity = ft(t.strokeOpacity, 1), m.lineDash = t.borderDash, m.lineDashOffset = t.borderDashOffset || 0, p.strokeContainThreshold = 0, p.hasFill() && p.hasStroke() && (m.strokeFirst = !0, m.lineWidth *= 2);
    }
    var S = (p || g).style;
    S.shadowBlur = t.shadowBlur || 0, S.shadowColor = t.shadowColor || "transparent", S.shadowOffsetX = t.shadowOffsetX || 0, S.shadowOffsetY = t.shadowOffsetY || 0, S.opacity = lr(t.opacity, a.opacity, 1);
  }, e.makeFont = function(t) {
    var a = "";
    return zT(t) && (a = [
      t.fontStyle,
      t.fontWeight,
      BT(t.fontSize),
      t.fontFamily || "sans-serif"
    ].join(" ")), a && Sr(a) || t.textFont || t.font;
  }, e;
}(hr), jP = { left: !0, right: 1, center: 1 }, JP = { top: 1, bottom: 1, middle: 1 }, c0 = ["fontStyle", "fontWeight", "fontSize", "fontFamily"];
function BT(r) {
  return typeof r == "string" && (r.indexOf("px") !== -1 || r.indexOf("rem") !== -1 || r.indexOf("em") !== -1) ? r : isNaN(+r) ? fg + "px" : r + "px";
}
function v0(r, e) {
  for (var t = 0; t < c0.length; t++) {
    var a = c0[t], n = e[a];
    n != null && (r[a] = n);
  }
}
function zT(r) {
  return r.fontSize != null || r.fontFamily || r.fontWeight;
}
function QP(r) {
  return d0(r), M(r.rich, d0), r;
}
function d0(r) {
  if (r) {
    r.font = VT.makeFont(r);
    var e = r.align;
    e === "middle" && (e = "center"), r.align = e == null || jP[e] ? e : "left";
    var t = r.verticalAlign;
    t === "center" && (t = "middle"), r.verticalAlign = t == null || JP[t] ? t : "top";
    var a = r.padding;
    a && (r.padding = pg(r.padding));
  }
}
function p0(r, e) {
  return r == null || e <= 0 || r === "transparent" || r === "none" ? null : r.image || r.colorStops ? "#000" : r;
}
function g0(r) {
  return r == null || r === "none" ? null : r.image || r.colorStops ? "#000" : r;
}
function y0(r, e, t) {
  return e === "right" ? r - t[1] : e === "center" ? r + t[3] / 2 - t[1] / 2 : r + t[3];
}
function m0(r) {
  var e = r.text;
  return e != null && (e += ""), e;
}
function Ec(r) {
  return !!(r.backgroundColor || r.lineHeight || r.borderWidth && r.borderColor);
}
const Ct = VT;
var it = Dt(), Kd = function(r, e, t, a) {
  if (a) {
    var n = it(a);
    n.dataIndex = t, n.dataType = e, n.seriesIndex = r, a.type === "group" && a.traverse(function(i) {
      var o = it(i);
      o.seriesIndex = r, o.dataIndex = t, o.dataType = e;
    });
  }
}, _0 = 1, S0 = {}, GT = Dt(), Mg = Dt(), Ig = 0, ml = 1, mh = 2, Le = ["emphasis", "blur", "select"], Xs = ["normal", "emphasis", "blur", "select"], Co = 10, tR = 9, ai = "highlight", Yu = "downplay", Rs = "select", Zu = "unselect", Ns = "toggleSelect";
function Ei(r) {
  return r != null && r !== "none";
}
var x0 = new pl(100);
function w0(r) {
  if ($(r)) {
    var e = x0.get(r);
    return e || (e = Od(r, -0.1), x0.put(r, e)), e;
  } else if (sh(r)) {
    var t = V({}, r);
    return t.colorStops = G(r.colorStops, function(a) {
      return {
        offset: a.offset,
        color: Od(a.color, -0.1)
      };
    }), t;
  }
  return r;
}
function _h(r, e, t) {
  r.onHoverStateChange && (r.hoverState || 0) !== t && r.onHoverStateChange(e), r.hoverState = t;
}
function FT(r) {
  _h(r, "emphasis", mh);
}
function HT(r) {
  r.hoverState === mh && _h(r, "normal", Ig);
}
function Lg(r) {
  _h(r, "blur", ml);
}
function WT(r) {
  r.hoverState === ml && _h(r, "normal", Ig);
}
function eR(r) {
  r.selected = !0;
}
function rR(r) {
  r.selected = !1;
}
function b0(r, e, t) {
  e(r, t);
}
function xa(r, e, t) {
  b0(r, e, t), r.isGroup && r.traverse(function(a) {
    b0(a, e, t);
  });
}
function yf(r, e) {
  switch (e) {
    case "emphasis":
      r.hoverState = mh;
      break;
    case "normal":
      r.hoverState = Ig;
      break;
    case "blur":
      r.hoverState = ml;
      break;
    case "select":
      r.selected = !0;
  }
}
function aR(r, e, t, a) {
  for (var n = r.style, i = {}, o = 0; o < e.length; o++) {
    var s = e[o], l = n[s];
    i[s] = l == null ? a && a[s] : l;
  }
  for (var o = 0; o < r.animators.length; o++) {
    var u = r.animators[o];
    u.__fromStateTransition && u.__fromStateTransition.indexOf(t) < 0 && u.targetName === "style" && u.saveTo(i, e);
  }
  return i;
}
function nR(r, e, t, a) {
  var n = t && vt(t, "select") >= 0, i = !1;
  if (r instanceof mt) {
    var o = GT(r), s = n && o.selectFill || o.normalFill, l = n && o.selectStroke || o.normalStroke;
    if (Ei(s) || Ei(l)) {
      a = a || {};
      var u = a.style || {};
      u.fill === "inherit" ? (i = !0, a = V({}, a), u = V({}, u), u.fill = s) : !Ei(u.fill) && Ei(s) ? (i = !0, a = V({}, a), u = V({}, u), u.fill = w0(s)) : !Ei(u.stroke) && Ei(l) && (i || (a = V({}, a), u = V({}, u)), u.stroke = w0(l)), a.style = u;
    }
  }
  if (a && a.z2 == null) {
    i || (a = V({}, a));
    var f = r.z2EmphasisLift;
    a.z2 = r.z2 + (f != null ? f : Co);
  }
  return a;
}
function iR(r, e, t) {
  if (t && t.z2 == null) {
    t = V({}, t);
    var a = r.z2SelectLift;
    t.z2 = r.z2 + (a != null ? a : tR);
  }
  return t;
}
function oR(r, e, t) {
  var a = vt(r.currentStates, e) >= 0, n = r.style.opacity, i = a ? null : aR(r, ["opacity"], e, {
    opacity: 1
  });
  t = t || {};
  var o = t.style || {};
  return o.opacity == null && (t = V({}, t), o = V({
    // Already being applied 'emphasis'. DON'T mul opacity multiple times.
    opacity: a ? n : i.opacity * 0.1
  }, o), t.style = o), t;
}
function Pc(r, e) {
  var t = this.states[r];
  if (this.style) {
    if (r === "emphasis")
      return nR(this, r, e, t);
    if (r === "blur")
      return oR(this, r, t);
    if (r === "select")
      return iR(this, r, t);
  }
  return t;
}
function di(r) {
  r.stateProxy = Pc;
  var e = r.getTextContent(), t = r.getTextGuideLine();
  e && (e.stateProxy = Pc), t && (t.stateProxy = Pc);
}
function T0(r, e) {
  !ZT(r, e) && !r.__highByOuter && xa(r, FT);
}
function D0(r, e) {
  !ZT(r, e) && !r.__highByOuter && xa(r, HT);
}
function ga(r, e) {
  r.__highByOuter |= 1 << (e || 0), xa(r, FT);
}
function ya(r, e) {
  !(r.__highByOuter &= ~(1 << (e || 0))) && xa(r, HT);
}
function $T(r) {
  xa(r, Lg);
}
function Eg(r) {
  xa(r, WT);
}
function UT(r) {
  xa(r, eR);
}
function YT(r) {
  xa(r, rR);
}
function ZT(r, e) {
  return r.__highDownSilentOnTouch && e.zrByTouch;
}
function XT(r) {
  var e = r.getModel(), t = [], a = [];
  e.eachComponent(function(n, i) {
    var o = Mg(i), s = n === "series", l = s ? r.getViewOfSeriesModel(i) : r.getViewOfComponentModel(i);
    !s && a.push(l), o.isBlured && (l.group.traverse(function(u) {
      WT(u);
    }), s && t.push(i)), o.isBlured = !1;
  }), M(a, function(n) {
    n && n.toggleBlurSeries && n.toggleBlurSeries(t, !1, e);
  });
}
function jd(r, e, t, a) {
  var n = a.getModel();
  t = t || "coordinateSystem";
  function i(u, f) {
    for (var h = 0; h < f.length; h++) {
      var c = u.getItemGraphicEl(f[h]);
      c && Eg(c);
    }
  }
  if (r != null && !(!e || e === "none")) {
    var o = n.getSeriesByIndex(r), s = o.coordinateSystem;
    s && s.master && (s = s.master);
    var l = [];
    n.eachSeries(function(u) {
      var f = o === u, h = u.coordinateSystem;
      h && h.master && (h = h.master);
      var c = h && s ? h === s : f;
      if (!// Not blur other series if blurScope series
      (t === "series" && !f || t === "coordinateSystem" && !c || e === "series" && f)) {
        var v = a.getViewOfSeriesModel(u);
        if (v.group.traverse(function(g) {
          g.__highByOuter && f && e === "self" || Lg(g);
        }), xe(e))
          i(u.getData(), e);
        else if (j(e))
          for (var d = _t(e), p = 0; p < d.length; p++)
            i(u.getData(d[p]), e[d[p]]);
        l.push(u), Mg(u).isBlured = !0;
      }
    }), n.eachComponent(function(u, f) {
      if (u !== "series") {
        var h = a.getViewOfComponentModel(f);
        h && h.toggleBlurSeries && h.toggleBlurSeries(l, !0, n);
      }
    });
  }
}
function Jd(r, e, t) {
  if (!(r == null || e == null)) {
    var a = t.getModel().getComponent(r, e);
    if (a) {
      Mg(a).isBlured = !0;
      var n = t.getViewOfComponentModel(a);
      !n || !n.focusBlurEnabled || n.group.traverse(function(i) {
        Lg(i);
      });
    }
  }
}
function sR(r, e, t) {
  var a = r.seriesIndex, n = r.getData(e.dataType);
  if (!n) {
    ({}).NODE_ENV !== "production" && ve("Unknown dataType " + e.dataType);
    return;
  }
  var i = ci(n, e);
  i = (z(i) ? i[0] : i) || 0;
  var o = n.getItemGraphicEl(i);
  if (!o)
    for (var s = n.count(), l = 0; !o && l < s; )
      o = n.getItemGraphicEl(l++);
  if (o) {
    var u = it(o);
    jd(a, u.focus, u.blurScope, t);
  } else {
    var f = r.get(["emphasis", "focus"]), h = r.get(["emphasis", "blurScope"]);
    f != null && jd(a, f, h, t);
  }
}
function Pg(r, e, t, a) {
  var n = {
    focusSelf: !1,
    dispatchers: null
  };
  if (r == null || r === "series" || e == null || t == null)
    return n;
  var i = a.getModel().getComponent(r, e);
  if (!i)
    return n;
  var o = a.getViewOfComponentModel(i);
  if (!o || !o.findHighDownDispatchers)
    return n;
  for (var s = o.findHighDownDispatchers(t), l, u = 0; u < s.length; u++)
    if ({}.NODE_ENV !== "production" && !tn(s[u]) && ve("param should be highDownDispatcher"), it(s[u]).focus === "self") {
      l = !0;
      break;
    }
  return {
    focusSelf: l,
    dispatchers: s
  };
}
function lR(r, e, t) {
  ({}).NODE_ENV !== "production" && !tn(r) && ve("param should be highDownDispatcher");
  var a = it(r), n = Pg(a.componentMainType, a.componentIndex, a.componentHighDownName, t), i = n.dispatchers, o = n.focusSelf;
  i ? (o && Jd(a.componentMainType, a.componentIndex, t), M(i, function(s) {
    return T0(s, e);
  })) : (jd(a.seriesIndex, a.focus, a.blurScope, t), a.focus === "self" && Jd(a.componentMainType, a.componentIndex, t), T0(r, e));
}
function uR(r, e, t) {
  ({}).NODE_ENV !== "production" && !tn(r) && ve("param should be highDownDispatcher"), XT(t);
  var a = it(r), n = Pg(a.componentMainType, a.componentIndex, a.componentHighDownName, t).dispatchers;
  n ? M(n, function(i) {
    return D0(i, e);
  }) : D0(r, e);
}
function fR(r, e, t) {
  if (tp(e)) {
    var a = e.dataType, n = r.getData(a), i = ci(n, e);
    z(i) || (i = [i]), r[e.type === Ns ? "toggleSelect" : e.type === Rs ? "select" : "unselect"](i, a);
  }
}
function C0(r) {
  var e = r.getAllData();
  M(e, function(t) {
    var a = t.data, n = t.type;
    a.eachItemGraphicEl(function(i, o) {
      r.isSelected(o, n) ? UT(i) : YT(i);
    });
  });
}
function hR(r) {
  var e = [];
  return r.eachSeries(function(t) {
    var a = t.getAllData();
    M(a, function(n) {
      n.data;
      var i = n.type, o = t.getSelectedDataIndices();
      if (o.length > 0) {
        var s = {
          dataIndex: o,
          seriesIndex: t.seriesIndex
        };
        i != null && (s.dataType = i), e.push(s);
      }
    });
  }), e;
}
function ni(r, e, t) {
  Xn(r, !0), xa(r, di), Qd(r, e, t);
}
function cR(r) {
  Xn(r, !1);
}
function Wt(r, e, t, a) {
  a ? cR(r) : ni(r, e, t);
}
function Qd(r, e, t) {
  var a = it(r);
  e != null ? (a.focus = e, a.blurScope = t) : a.focus && (a.focus = null);
}
var A0 = ["emphasis", "blur", "select"], vR = {
  itemStyle: "getItemStyle",
  lineStyle: "getLineStyle",
  areaStyle: "getAreaStyle"
};
function de(r, e, t, a) {
  t = t || "itemStyle";
  for (var n = 0; n < A0.length; n++) {
    var i = A0[n], o = e.getModel([i, t]), s = r.ensureState(i);
    s.style = a ? a(o) : o[vR[t]]();
  }
}
function Xn(r, e) {
  var t = e === !1, a = r;
  r.highDownSilentOnTouch && (a.__highDownSilentOnTouch = r.highDownSilentOnTouch), (!t || a.__highDownDispatcher) && (a.__highByOuter = a.__highByOuter || 0, a.__highDownDispatcher = !t);
}
function tn(r) {
  return !!(r && r.__highDownDispatcher);
}
function dR(r, e, t) {
  var a = it(r);
  a.componentMainType = e.mainType, a.componentIndex = e.componentIndex, a.componentHighDownName = t;
}
function pR(r) {
  var e = S0[r];
  return e == null && _0 <= 32 && (e = S0[r] = _0++), e;
}
function tp(r) {
  var e = r.type;
  return e === Rs || e === Zu || e === Ns;
}
function M0(r) {
  var e = r.type;
  return e === ai || e === Yu;
}
function gR(r) {
  var e = GT(r);
  e.normalFill = r.style.fill, e.normalStroke = r.style.stroke;
  var t = r.states.select || {};
  e.selectFill = t.style && t.style.fill || null, e.selectStroke = t.style && t.style.stroke || null;
}
var Pi = Kr.CMD, yR = [[], [], []], I0 = Math.sqrt, mR = Math.atan2;
function qT(r, e) {
  if (e) {
    var t = r.data, a = r.len(), n, i, o, s, l, u, f = Pi.M, h = Pi.C, c = Pi.L, v = Pi.R, d = Pi.A, p = Pi.Q;
    for (o = 0, s = 0; o < a; ) {
      switch (n = t[o++], s = o, i = 0, n) {
        case f:
          i = 1;
          break;
        case c:
          i = 1;
          break;
        case h:
          i = 3;
          break;
        case p:
          i = 2;
          break;
        case d:
          var g = e[4], y = e[5], m = I0(e[0] * e[0] + e[1] * e[1]), _ = I0(e[2] * e[2] + e[3] * e[3]), S = mR(-e[1] / _, e[0] / m);
          t[o] *= m, t[o++] += g, t[o] *= _, t[o++] += y, t[o++] *= m, t[o++] *= _, t[o++] += S, t[o++] += S, o += 2, s = o;
          break;
        case v:
          u[0] = t[o++], u[1] = t[o++], he(u, u, e), t[s++] = u[0], t[s++] = u[1], u[0] += t[o++], u[1] += t[o++], he(u, u, e), t[s++] = u[0], t[s++] = u[1];
      }
      for (l = 0; l < i; l++) {
        var w = yR[l];
        w[0] = t[o++], w[1] = t[o++], he(w, w, e), t[s++] = w[0], t[s++] = w[1];
      }
    }
    r.increaseVersion();
  }
}
var Rc = Math.sqrt, ql = Math.sin, Kl = Math.cos, Zo = Math.PI;
function L0(r) {
  return Math.sqrt(r[0] * r[0] + r[1] * r[1]);
}
function ep(r, e) {
  return (r[0] * e[0] + r[1] * e[1]) / (L0(r) * L0(e));
}
function E0(r, e) {
  return (r[0] * e[1] < r[1] * e[0] ? -1 : 1) * Math.acos(ep(r, e));
}
function P0(r, e, t, a, n, i, o, s, l, u, f) {
  var h = l * (Zo / 180), c = Kl(h) * (r - t) / 2 + ql(h) * (e - a) / 2, v = -1 * ql(h) * (r - t) / 2 + Kl(h) * (e - a) / 2, d = c * c / (o * o) + v * v / (s * s);
  d > 1 && (o *= Rc(d), s *= Rc(d));
  var p = (n === i ? -1 : 1) * Rc((o * o * (s * s) - o * o * (v * v) - s * s * (c * c)) / (o * o * (v * v) + s * s * (c * c))) || 0, g = p * o * v / s, y = p * -s * c / o, m = (r + t) / 2 + Kl(h) * g - ql(h) * y, _ = (e + a) / 2 + ql(h) * g + Kl(h) * y, S = E0([1, 0], [(c - g) / o, (v - y) / s]), w = [(c - g) / o, (v - y) / s], x = [(-1 * c - g) / o, (-1 * v - y) / s], b = E0(w, x);
  if (ep(w, x) <= -1 && (b = Zo), ep(w, x) >= 1 && (b = 0), b < 0) {
    var T = Math.round(b / Zo * 1e6) / 1e6;
    b = Zo * 2 + T % 2 * Zo;
  }
  f.addData(u, m, _, o, s, S, b, h, i);
}
var _R = /([mlvhzcqtsa])([^mlvhzcqtsa]*)/ig, SR = /-?([0-9]*\.)?[0-9]+([eE]-?[0-9]+)?/g;
function xR(r) {
  var e = new Kr();
  if (!r)
    return e;
  var t = 0, a = 0, n = t, i = a, o, s = Kr.CMD, l = r.match(_R);
  if (!l)
    return e;
  for (var u = 0; u < l.length; u++) {
    for (var f = l[u], h = f.charAt(0), c = void 0, v = f.match(SR) || [], d = v.length, p = 0; p < d; p++)
      v[p] = parseFloat(v[p]);
    for (var g = 0; g < d; ) {
      var y = void 0, m = void 0, _ = void 0, S = void 0, w = void 0, x = void 0, b = void 0, T = t, C = a, D = void 0, A = void 0;
      switch (h) {
        case "l":
          t += v[g++], a += v[g++], c = s.L, e.addData(c, t, a);
          break;
        case "L":
          t = v[g++], a = v[g++], c = s.L, e.addData(c, t, a);
          break;
        case "m":
          t += v[g++], a += v[g++], c = s.M, e.addData(c, t, a), n = t, i = a, h = "l";
          break;
        case "M":
          t = v[g++], a = v[g++], c = s.M, e.addData(c, t, a), n = t, i = a, h = "L";
          break;
        case "h":
          t += v[g++], c = s.L, e.addData(c, t, a);
          break;
        case "H":
          t = v[g++], c = s.L, e.addData(c, t, a);
          break;
        case "v":
          a += v[g++], c = s.L, e.addData(c, t, a);
          break;
        case "V":
          a = v[g++], c = s.L, e.addData(c, t, a);
          break;
        case "C":
          c = s.C, e.addData(c, v[g++], v[g++], v[g++], v[g++], v[g++], v[g++]), t = v[g - 2], a = v[g - 1];
          break;
        case "c":
          c = s.C, e.addData(c, v[g++] + t, v[g++] + a, v[g++] + t, v[g++] + a, v[g++] + t, v[g++] + a), t += v[g - 2], a += v[g - 1];
          break;
        case "S":
          y = t, m = a, D = e.len(), A = e.data, o === s.C && (y += t - A[D - 4], m += a - A[D - 3]), c = s.C, T = v[g++], C = v[g++], t = v[g++], a = v[g++], e.addData(c, y, m, T, C, t, a);
          break;
        case "s":
          y = t, m = a, D = e.len(), A = e.data, o === s.C && (y += t - A[D - 4], m += a - A[D - 3]), c = s.C, T = t + v[g++], C = a + v[g++], t += v[g++], a += v[g++], e.addData(c, y, m, T, C, t, a);
          break;
        case "Q":
          T = v[g++], C = v[g++], t = v[g++], a = v[g++], c = s.Q, e.addData(c, T, C, t, a);
          break;
        case "q":
          T = v[g++] + t, C = v[g++] + a, t += v[g++], a += v[g++], c = s.Q, e.addData(c, T, C, t, a);
          break;
        case "T":
          y = t, m = a, D = e.len(), A = e.data, o === s.Q && (y += t - A[D - 4], m += a - A[D - 3]), t = v[g++], a = v[g++], c = s.Q, e.addData(c, y, m, t, a);
          break;
        case "t":
          y = t, m = a, D = e.len(), A = e.data, o === s.Q && (y += t - A[D - 4], m += a - A[D - 3]), t += v[g++], a += v[g++], c = s.Q, e.addData(c, y, m, t, a);
          break;
        case "A":
          _ = v[g++], S = v[g++], w = v[g++], x = v[g++], b = v[g++], T = t, C = a, t = v[g++], a = v[g++], c = s.A, P0(T, C, t, a, x, b, _, S, w, c, e);
          break;
        case "a":
          _ = v[g++], S = v[g++], w = v[g++], x = v[g++], b = v[g++], T = t, C = a, t += v[g++], a += v[g++], c = s.A, P0(T, C, t, a, x, b, _, S, w, c, e);
          break;
      }
    }
    (h === "z" || h === "Z") && (c = s.Z, e.addData(c), t = n, a = i), o = c;
  }
  return e.toStatic(), e;
}
var KT = function(r) {
  N(e, r);
  function e() {
    return r !== null && r.apply(this, arguments) || this;
  }
  return e.prototype.applyTransform = function(t) {
  }, e;
}(mt);
function jT(r) {
  return r.setData != null;
}
function JT(r, e) {
  var t = xR(r), a = V({}, e);
  return a.buildPath = function(n) {
    if (jT(n)) {
      n.setData(t.data);
      var i = n.getContext();
      i && n.rebuildPath(i, 1);
    } else {
      var i = n;
      t.rebuildPath(i, 1);
    }
  }, a.applyTransform = function(n) {
    qT(t, n), this.dirtyShape();
  }, a;
}
function QT(r, e) {
  return new KT(JT(r, e));
}
function wR(r, e) {
  var t = JT(r, e), a = function(n) {
    N(i, n);
    function i(o) {
      var s = n.call(this, o) || this;
      return s.applyTransform = t.applyTransform, s.buildPath = t.buildPath, s;
    }
    return i;
  }(KT);
  return a;
}
function bR(r, e) {
  for (var t = [], a = r.length, n = 0; n < a; n++) {
    var i = r[n];
    t.push(i.getUpdatedPathProxy(!0));
  }
  var o = new mt(e);
  return o.createPathProxy(), o.buildPath = function(s) {
    if (jT(s)) {
      s.appendPath(t);
      var l = s.getContext();
      l && s.rebuildPath(l, 1);
    }
  }, o;
}
function Rg(r, e) {
  e = e || {};
  var t = new mt();
  return r.shape && t.setShape(r.shape), t.setStyle(r.style), e.bakeTransform ? qT(t.path, r.getComputedTransform()) : e.toLocal ? t.setLocalTransform(r.getComputedTransform()) : t.copyTransform(r), t.buildPath = r.buildPath, t.applyTransform = t.applyTransform, t.z = r.z, t.z2 = r.z2, t.zlevel = r.zlevel, t;
}
var TR = function() {
  function r() {
    this.cx = 0, this.cy = 0, this.r = 0;
  }
  return r;
}(), tD = function(r) {
  N(e, r);
  function e(t) {
    return r.call(this, t) || this;
  }
  return e.prototype.getDefaultShape = function() {
    return new TR();
  }, e.prototype.buildPath = function(t, a) {
    t.moveTo(a.cx + a.r, a.cy), t.arc(a.cx, a.cy, a.r, 0, Math.PI * 2);
  }, e;
}(mt);
tD.prototype.type = "circle";
const jr = tD;
var DR = function() {
  function r() {
    this.cx = 0, this.cy = 0, this.rx = 0, this.ry = 0;
  }
  return r;
}(), eD = function(r) {
  N(e, r);
  function e(t) {
    return r.call(this, t) || this;
  }
  return e.prototype.getDefaultShape = function() {
    return new DR();
  }, e.prototype.buildPath = function(t, a) {
    var n = 0.5522848, i = a.cx, o = a.cy, s = a.rx, l = a.ry, u = s * n, f = l * n;
    t.moveTo(i - s, o), t.bezierCurveTo(i - s, o - f, i - u, o - l, i, o - l), t.bezierCurveTo(i + u, o - l, i + s, o - f, i + s, o), t.bezierCurveTo(i + s, o + f, i + u, o + l, i, o + l), t.bezierCurveTo(i - u, o + l, i - s, o + f, i - s, o), t.closePath();
  }, e;
}(mt);
eD.prototype.type = "ellipse";
const Ng = eD;
var rD = Math.PI, Nc = rD * 2, Tn = Math.sin, Ri = Math.cos, CR = Math.acos, me = Math.atan2, R0 = Math.abs, Os = Math.sqrt, _s = Math.max, Nr = Math.min, gr = 1e-4;
function AR(r, e, t, a, n, i, o, s) {
  var l = t - r, u = a - e, f = o - n, h = s - i, c = h * l - f * u;
  if (!(c * c < gr))
    return c = (f * (e - i) - h * (r - n)) / c, [r + c * l, e + c * u];
}
function jl(r, e, t, a, n, i, o) {
  var s = r - t, l = e - a, u = (o ? i : -i) / Os(s * s + l * l), f = u * l, h = -u * s, c = r + f, v = e + h, d = t + f, p = a + h, g = (c + d) / 2, y = (v + p) / 2, m = d - c, _ = p - v, S = m * m + _ * _, w = n - i, x = c * p - d * v, b = (_ < 0 ? -1 : 1) * Os(_s(0, w * w * S - x * x)), T = (x * _ - m * b) / S, C = (-x * m - _ * b) / S, D = (x * _ + m * b) / S, A = (-x * m + _ * b) / S, I = T - g, L = C - y, E = D - g, P = A - y;
  return I * I + L * L > E * E + P * P && (T = D, C = A), {
    cx: T,
    cy: C,
    x0: -f,
    y0: -h,
    x1: T * (n / w - 1),
    y1: C * (n / w - 1)
  };
}
function MR(r) {
  var e;
  if (z(r)) {
    var t = r.length;
    if (!t)
      return r;
    t === 1 ? e = [r[0], r[0], 0, 0] : t === 2 ? e = [r[0], r[0], r[1], r[1]] : t === 3 ? e = r.concat(r[2]) : e = r;
  } else
    e = [r, r, r, r];
  return e;
}
function IR(r, e) {
  var t, a = _s(e.r, 0), n = _s(e.r0 || 0, 0), i = a > 0, o = n > 0;
  if (!(!i && !o)) {
    if (i || (a = n, n = 0), n > a) {
      var s = a;
      a = n, n = s;
    }
    var l = e.startAngle, u = e.endAngle;
    if (!(isNaN(l) || isNaN(u))) {
      var f = e.cx, h = e.cy, c = !!e.clockwise, v = R0(u - l), d = v > Nc && v % Nc;
      if (d > gr && (v = d), !(a > gr))
        r.moveTo(f, h);
      else if (v > Nc - gr)
        r.moveTo(f + a * Ri(l), h + a * Tn(l)), r.arc(f, h, a, l, u, !c), n > gr && (r.moveTo(f + n * Ri(u), h + n * Tn(u)), r.arc(f, h, n, u, l, c));
      else {
        var p = void 0, g = void 0, y = void 0, m = void 0, _ = void 0, S = void 0, w = void 0, x = void 0, b = void 0, T = void 0, C = void 0, D = void 0, A = void 0, I = void 0, L = void 0, E = void 0, P = a * Ri(l), R = a * Tn(l), k = n * Ri(u), O = n * Tn(u), B = v > gr;
        if (B) {
          var F = e.cornerRadius;
          F && (t = MR(F), p = t[0], g = t[1], y = t[2], m = t[3]);
          var W = R0(a - n) / 2;
          if (_ = Nr(W, y), S = Nr(W, m), w = Nr(W, p), x = Nr(W, g), C = b = _s(_, S), D = T = _s(w, x), (b > gr || T > gr) && (A = a * Ri(u), I = a * Tn(u), L = n * Ri(l), E = n * Tn(l), v < rD)) {
            var Z = AR(P, R, L, E, A, I, k, O);
            if (Z) {
              var Q = P - Z[0], tt = R - Z[1], dt = A - Z[0], St = I - Z[1], pt = 1 / Tn(CR((Q * dt + tt * St) / (Os(Q * Q + tt * tt) * Os(dt * dt + St * St))) / 2), rt = Os(Z[0] * Z[0] + Z[1] * Z[1]);
              C = Nr(b, (a - rt) / (pt + 1)), D = Nr(T, (n - rt) / (pt - 1));
            }
          }
        }
        if (!B)
          r.moveTo(f + P, h + R);
        else if (C > gr) {
          var gt = Nr(y, C), st = Nr(m, C), q = jl(L, E, P, R, a, gt, c), lt = jl(A, I, k, O, a, st, c);
          r.moveTo(f + q.cx + q.x0, h + q.cy + q.y0), C < b && gt === st ? r.arc(f + q.cx, h + q.cy, C, me(q.y0, q.x0), me(lt.y0, lt.x0), !c) : (gt > 0 && r.arc(f + q.cx, h + q.cy, gt, me(q.y0, q.x0), me(q.y1, q.x1), !c), r.arc(f, h, a, me(q.cy + q.y1, q.cx + q.x1), me(lt.cy + lt.y1, lt.cx + lt.x1), !c), st > 0 && r.arc(f + lt.cx, h + lt.cy, st, me(lt.y1, lt.x1), me(lt.y0, lt.x0), !c));
        } else
          r.moveTo(f + P, h + R), r.arc(f, h, a, l, u, !c);
        if (!(n > gr) || !B)
          r.lineTo(f + k, h + O);
        else if (D > gr) {
          var gt = Nr(p, D), st = Nr(g, D), q = jl(k, O, A, I, n, -st, c), lt = jl(P, R, L, E, n, -gt, c);
          r.lineTo(f + q.cx + q.x0, h + q.cy + q.y0), D < T && gt === st ? r.arc(f + q.cx, h + q.cy, D, me(q.y0, q.x0), me(lt.y0, lt.x0), !c) : (st > 0 && r.arc(f + q.cx, h + q.cy, st, me(q.y0, q.x0), me(q.y1, q.x1), !c), r.arc(f, h, n, me(q.cy + q.y1, q.cx + q.x1), me(lt.cy + lt.y1, lt.cx + lt.x1), c), gt > 0 && r.arc(f + lt.cx, h + lt.cy, gt, me(lt.y1, lt.x1), me(lt.y0, lt.x0), !c));
        } else
          r.lineTo(f + k, h + O), r.arc(f, h, n, u, l, c);
      }
      r.closePath();
    }
  }
}
var LR = function() {
  function r() {
    this.cx = 0, this.cy = 0, this.r0 = 0, this.r = 0, this.startAngle = 0, this.endAngle = Math.PI * 2, this.clockwise = !0, this.cornerRadius = 0;
  }
  return r;
}(), aD = function(r) {
  N(e, r);
  function e(t) {
    return r.call(this, t) || this;
  }
  return e.prototype.getDefaultShape = function() {
    return new LR();
  }, e.prototype.buildPath = function(t, a) {
    IR(t, a);
  }, e.prototype.isZeroArea = function() {
    return this.shape.startAngle === this.shape.endAngle || this.shape.r === this.shape.r0;
  }, e;
}(mt);
aD.prototype.type = "sector";
const ze = aD;
var ER = function() {
  function r() {
    this.cx = 0, this.cy = 0, this.r = 0, this.r0 = 0;
  }
  return r;
}(), nD = function(r) {
  N(e, r);
  function e(t) {
    return r.call(this, t) || this;
  }
  return e.prototype.getDefaultShape = function() {
    return new ER();
  }, e.prototype.buildPath = function(t, a) {
    var n = a.cx, i = a.cy, o = Math.PI * 2;
    t.moveTo(n + a.r, i), t.arc(n, i, a.r, 0, o, !1), t.moveTo(n + a.r0, i), t.arc(n, i, a.r0, 0, o, !0);
  }, e;
}(mt);
nD.prototype.type = "ring";
const Sh = nD;
function PR(r, e, t, a) {
  var n = [], i = [], o = [], s = [], l, u, f, h;
  if (a) {
    f = [1 / 0, 1 / 0], h = [-1 / 0, -1 / 0];
    for (var c = 0, v = r.length; c < v; c++)
      Ga(f, f, r[c]), Fa(h, h, r[c]);
    Ga(f, f, a[0]), Fa(h, h, a[1]);
  }
  for (var c = 0, v = r.length; c < v; c++) {
    var d = r[c];
    if (t)
      l = r[c ? c - 1 : v - 1], u = r[(c + 1) % v];
    else if (c === 0 || c === v - 1) {
      n.push(la(r[c]));
      continue;
    } else
      l = r[c - 1], u = r[c + 1];
    Yn(i, u, l), zu(i, i, e);
    var p = Cd(d, l), g = Cd(d, u), y = p + g;
    y !== 0 && (p /= y, g /= y), zu(o, i, -p), zu(s, i, g);
    var m = wm([], d, o), _ = wm([], d, s);
    a && (Fa(m, m, f), Ga(m, m, h), Fa(_, _, f), Ga(_, _, h)), n.push(m), n.push(_);
  }
  return t && n.push(n.shift()), n;
}
function iD(r, e, t) {
  var a = e.smooth, n = e.points;
  if (n && n.length >= 2) {
    if (a) {
      var i = PR(n, a, t, e.smoothConstraint);
      r.moveTo(n[0][0], n[0][1]);
      for (var o = n.length, s = 0; s < (t ? o : o - 1); s++) {
        var l = i[s * 2], u = i[s * 2 + 1], f = n[(s + 1) % o];
        r.bezierCurveTo(l[0], l[1], u[0], u[1], f[0], f[1]);
      }
    } else {
      r.moveTo(n[0][0], n[0][1]);
      for (var s = 1, h = n.length; s < h; s++)
        r.lineTo(n[s][0], n[s][1]);
    }
    t && r.closePath();
  }
}
var RR = function() {
  function r() {
    this.points = null, this.smooth = 0, this.smoothConstraint = null;
  }
  return r;
}(), oD = function(r) {
  N(e, r);
  function e(t) {
    return r.call(this, t) || this;
  }
  return e.prototype.getDefaultShape = function() {
    return new RR();
  }, e.prototype.buildPath = function(t, a) {
    iD(t, a, !0);
  }, e;
}(mt);
oD.prototype.type = "polygon";
const Ge = oD;
var NR = function() {
  function r() {
    this.points = null, this.percent = 1, this.smooth = 0, this.smoothConstraint = null;
  }
  return r;
}(), sD = function(r) {
  N(e, r);
  function e(t) {
    return r.call(this, t) || this;
  }
  return e.prototype.getDefaultStyle = function() {
    return {
      stroke: "#000",
      fill: null
    };
  }, e.prototype.getDefaultShape = function() {
    return new NR();
  }, e.prototype.buildPath = function(t, a) {
    iD(t, a, !1);
  }, e;
}(mt);
sD.prototype.type = "polyline";
const Fe = sD;
var OR = {}, kR = function() {
  function r() {
    this.x1 = 0, this.y1 = 0, this.x2 = 0, this.y2 = 0, this.percent = 1;
  }
  return r;
}(), lD = function(r) {
  N(e, r);
  function e(t) {
    return r.call(this, t) || this;
  }
  return e.prototype.getDefaultStyle = function() {
    return {
      stroke: "#000",
      fill: null
    };
  }, e.prototype.getDefaultShape = function() {
    return new kR();
  }, e.prototype.buildPath = function(t, a) {
    var n, i, o, s;
    if (this.subPixelOptimize) {
      var l = NT(OR, a, this.style);
      n = l.x1, i = l.y1, o = l.x2, s = l.y2;
    } else
      n = a.x1, i = a.y1, o = a.x2, s = a.y2;
    var u = a.percent;
    u !== 0 && (t.moveTo(n, i), u < 1 && (o = n * (1 - u) + o * u, s = i * (1 - u) + s * u), t.lineTo(o, s));
  }, e.prototype.pointAt = function(t) {
    var a = this.shape;
    return [
      a.x1 * (1 - t) + a.x2 * t,
      a.y1 * (1 - t) + a.y2 * t
    ];
  }, e;
}(mt);
lD.prototype.type = "line";
const ue = lD;
var Pe = [], VR = function() {
  function r() {
    this.x1 = 0, this.y1 = 0, this.x2 = 0, this.y2 = 0, this.cpx1 = 0, this.cpy1 = 0, this.percent = 1;
  }
  return r;
}();
function N0(r, e, t) {
  var a = r.cpx2, n = r.cpy2;
  return a != null || n != null ? [
    (t ? Nm : ne)(r.x1, r.cpx1, r.cpx2, r.x2, e),
    (t ? Nm : ne)(r.y1, r.cpy1, r.cpy2, r.y2, e)
  ] : [
    (t ? Pd : le)(r.x1, r.cpx1, r.x2, e),
    (t ? Pd : le)(r.y1, r.cpy1, r.y2, e)
  ];
}
var uD = function(r) {
  N(e, r);
  function e(t) {
    return r.call(this, t) || this;
  }
  return e.prototype.getDefaultStyle = function() {
    return {
      stroke: "#000",
      fill: null
    };
  }, e.prototype.getDefaultShape = function() {
    return new VR();
  }, e.prototype.buildPath = function(t, a) {
    var n = a.x1, i = a.y1, o = a.x2, s = a.y2, l = a.cpx1, u = a.cpy1, f = a.cpx2, h = a.cpy2, c = a.percent;
    c !== 0 && (t.moveTo(n, i), f == null || h == null ? (c < 1 && ($s(n, l, o, c, Pe), l = Pe[1], o = Pe[2], $s(i, u, s, c, Pe), u = Pe[1], s = Pe[2]), t.quadraticCurveTo(l, u, o, s)) : (c < 1 && (Qa(n, l, f, o, c, Pe), l = Pe[1], f = Pe[2], o = Pe[3], Qa(i, u, h, s, c, Pe), u = Pe[1], h = Pe[2], s = Pe[3]), t.bezierCurveTo(l, u, f, h, o, s)));
  }, e.prototype.pointAt = function(t) {
    return N0(this.shape, t, !1);
  }, e.prototype.tangentAt = function(t) {
    var a = N0(this.shape, t, !0);
    return bo(a, a);
  }, e;
}(mt);
uD.prototype.type = "bezier-curve";
const xh = uD;
var BR = function() {
  function r() {
    this.cx = 0, this.cy = 0, this.r = 0, this.startAngle = 0, this.endAngle = Math.PI * 2, this.clockwise = !0;
  }
  return r;
}(), fD = function(r) {
  N(e, r);
  function e(t) {
    return r.call(this, t) || this;
  }
  return e.prototype.getDefaultStyle = function() {
    return {
      stroke: "#000",
      fill: null
    };
  }, e.prototype.getDefaultShape = function() {
    return new BR();
  }, e.prototype.buildPath = function(t, a) {
    var n = a.cx, i = a.cy, o = Math.max(a.r, 0), s = a.startAngle, l = a.endAngle, u = a.clockwise, f = Math.cos(s), h = Math.sin(s);
    t.moveTo(f * o + n, h * o + i), t.arc(n, i, o, s, l, !u);
  }, e;
}(mt);
fD.prototype.type = "arc";
const Og = fD;
var zR = function(r) {
  N(e, r);
  function e() {
    var t = r !== null && r.apply(this, arguments) || this;
    return t.type = "compound", t;
  }
  return e.prototype._updatePathDirty = function() {
    for (var t = this.shape.paths, a = this.shapeChanged(), n = 0; n < t.length; n++)
      a = a || t[n].shapeChanged();
    a && this.dirtyShape();
  }, e.prototype.beforeBrush = function() {
    this._updatePathDirty();
    for (var t = this.shape.paths || [], a = this.getGlobalScale(), n = 0; n < t.length; n++)
      t[n].path || t[n].createPathProxy(), t[n].path.setScale(a[0], a[1], t[n].segmentIgnoreThreshold);
  }, e.prototype.buildPath = function(t, a) {
    for (var n = a.paths || [], i = 0; i < n.length; i++)
      n[i].buildPath(t, n[i].shape, !0);
  }, e.prototype.afterBrush = function() {
    for (var t = this.shape.paths || [], a = 0; a < t.length; a++)
      t[a].pathUpdated();
  }, e.prototype.getBoundingRect = function() {
    return this._updatePathDirty.call(this), mt.prototype.getBoundingRect.call(this);
  }, e;
}(mt);
const kg = zR;
var GR = function() {
  function r(e) {
    this.colorStops = e || [];
  }
  return r.prototype.addColorStop = function(e, t) {
    this.colorStops.push({
      offset: e,
      color: t
    });
  }, r;
}();
const hD = GR;
var FR = function(r) {
  N(e, r);
  function e(t, a, n, i, o, s) {
    var l = r.call(this, o) || this;
    return l.x = t == null ? 0 : t, l.y = a == null ? 0 : a, l.x2 = n == null ? 1 : n, l.y2 = i == null ? 0 : i, l.type = "linear", l.global = s || !1, l;
  }
  return e;
}(hD);
const _l = FR;
var HR = function(r) {
  N(e, r);
  function e(t, a, n, i, o) {
    var s = r.call(this, i) || this;
    return s.x = t == null ? 0.5 : t, s.y = a == null ? 0.5 : a, s.r = n == null ? 0.5 : n, s.type = "radial", s.global = o || !1, s;
  }
  return e;
}(hD);
const cD = HR;
var Dn = [0, 0], Cn = [0, 0], Jl = new ut(), Ql = new ut(), WR = function() {
  function r(e, t) {
    this._corners = [], this._axes = [], this._origin = [0, 0];
    for (var a = 0; a < 4; a++)
      this._corners[a] = new ut();
    for (var a = 0; a < 2; a++)
      this._axes[a] = new ut();
    e && this.fromBoundingRect(e, t);
  }
  return r.prototype.fromBoundingRect = function(e, t) {
    var a = this._corners, n = this._axes, i = e.x, o = e.y, s = i + e.width, l = o + e.height;
    if (a[0].set(i, o), a[1].set(s, o), a[2].set(s, l), a[3].set(i, l), t)
      for (var u = 0; u < 4; u++)
        a[u].transform(t);
    ut.sub(n[0], a[1], a[0]), ut.sub(n[1], a[3], a[0]), n[0].normalize(), n[1].normalize();
    for (var u = 0; u < 2; u++)
      this._origin[u] = n[u].dot(a[0]);
  }, r.prototype.intersect = function(e, t) {
    var a = !0, n = !t;
    return Jl.set(1 / 0, 1 / 0), Ql.set(0, 0), !this._intersectCheckOneSide(this, e, Jl, Ql, n, 1) && (a = !1, n) || !this._intersectCheckOneSide(e, this, Jl, Ql, n, -1) && (a = !1, n) || n || ut.copy(t, a ? Jl : Ql), a;
  }, r.prototype._intersectCheckOneSide = function(e, t, a, n, i, o) {
    for (var s = !0, l = 0; l < 2; l++) {
      var u = this._axes[l];
      if (this._getProjMinMaxOnAxis(l, e._corners, Dn), this._getProjMinMaxOnAxis(l, t._corners, Cn), Dn[1] < Cn[0] || Dn[0] > Cn[1]) {
        if (s = !1, i)
          return s;
        var f = Math.abs(Cn[0] - Dn[1]), h = Math.abs(Dn[0] - Cn[1]);
        Math.min(f, h) > n.len() && (f < h ? ut.scale(n, u, -f * o) : ut.scale(n, u, h * o));
      } else if (a) {
        var f = Math.abs(Cn[0] - Dn[1]), h = Math.abs(Dn[0] - Cn[1]);
        Math.min(f, h) < a.len() && (f < h ? ut.scale(a, u, f * o) : ut.scale(a, u, -h * o));
      }
    }
    return s;
  }, r.prototype._getProjMinMaxOnAxis = function(e, t, a) {
    for (var n = this._axes[e], i = this._origin, o = t[0].dot(n) + i[e], s = o, l = o, u = 1; u < t.length; u++) {
      var f = t[u].dot(n) + i[e];
      s = Math.min(f, s), l = Math.max(f, l);
    }
    a[0] = s, a[1] = l;
  }, r;
}();
const mf = WR;
var $R = [], UR = function(r) {
  N(e, r);
  function e() {
    var t = r !== null && r.apply(this, arguments) || this;
    return t.notClear = !0, t.incremental = !0, t._displayables = [], t._temporaryDisplayables = [], t._cursor = 0, t;
  }
  return e.prototype.traverse = function(t, a) {
    t.call(a, this);
  }, e.prototype.useStyle = function() {
    this.style = {};
  }, e.prototype.getCursor = function() {
    return this._cursor;
  }, e.prototype.innerAfterBrush = function() {
    this._cursor = this._displayables.length;
  }, e.prototype.clearDisplaybles = function() {
    this._displayables = [], this._temporaryDisplayables = [], this._cursor = 0, this.markRedraw(), this.notClear = !1;
  }, e.prototype.clearTemporalDisplayables = function() {
    this._temporaryDisplayables = [];
  }, e.prototype.addDisplayable = function(t, a) {
    a ? this._temporaryDisplayables.push(t) : this._displayables.push(t), this.markRedraw();
  }, e.prototype.addDisplayables = function(t, a) {
    a = a || !1;
    for (var n = 0; n < t.length; n++)
      this.addDisplayable(t[n], a);
  }, e.prototype.getDisplayables = function() {
    return this._displayables;
  }, e.prototype.getTemporalDisplayables = function() {
    return this._temporaryDisplayables;
  }, e.prototype.eachPendingDisplayable = function(t) {
    for (var a = this._cursor; a < this._displayables.length; a++)
      t && t(this._displayables[a]);
    for (var a = 0; a < this._temporaryDisplayables.length; a++)
      t && t(this._temporaryDisplayables[a]);
  }, e.prototype.update = function() {
    this.updateTransform();
    for (var t = this._cursor; t < this._displayables.length; t++) {
      var a = this._displayables[t];
      a.parent = this, a.update(), a.parent = null;
    }
    for (var t = 0; t < this._temporaryDisplayables.length; t++) {
      var a = this._temporaryDisplayables[t];
      a.parent = this, a.update(), a.parent = null;
    }
  }, e.prototype.getBoundingRect = function() {
    if (!this._rect) {
      for (var t = new ct(1 / 0, 1 / 0, -1 / 0, -1 / 0), a = 0; a < this._displayables.length; a++) {
        var n = this._displayables[a], i = n.getBoundingRect().clone();
        n.needLocalTransform() && i.applyTransform(n.getLocalTransform($R)), t.union(i);
      }
      this._rect = t;
    }
    return this._rect;
  }, e.prototype.contain = function(t, a) {
    var n = this.transformCoordToLocal(t, a), i = this.getBoundingRect();
    if (i.contain(n[0], n[1]))
      for (var o = 0; o < this._displayables.length; o++) {
        var s = this._displayables[o];
        if (s.contain(t, a))
          return !0;
      }
    return !1;
  }, e;
}(hr);
const YR = UR;
var vD = Dt();
function Ao(r, e, t, a, n) {
  var i;
  if (e && e.ecModel) {
    var o = e.ecModel.getUpdatePayload();
    i = o && o.animation;
  }
  var s = e && e.isAnimationEnabled(), l = r === "update";
  if (s) {
    var u = void 0, f = void 0, h = void 0;
    a ? (u = ft(a.duration, 200), f = ft(a.easing, "cubicOut"), h = 0) : (u = e.getShallow(l ? "animationDurationUpdate" : "animationDuration"), f = e.getShallow(l ? "animationEasingUpdate" : "animationEasing"), h = e.getShallow(l ? "animationDelayUpdate" : "animationDelay")), i && (i.duration != null && (u = i.duration), i.easing != null && (f = i.easing), i.delay != null && (h = i.delay)), K(h) && (h = h(t, n)), K(u) && (u = u(t));
    var c = {
      duration: u || 0,
      delay: h,
      easing: f
    };
    return c;
  } else
    return null;
}
function Vg(r, e, t, a, n, i, o) {
  var s = !1, l;
  K(n) ? (o = i, i = n, n = null) : j(n) && (i = n.cb, o = n.during, s = n.isFrom, l = n.removeOpt, n = n.dataIndex);
  var u = r === "leave";
  u || e.stopAnimation("leave");
  var f = Ao(r, a, n, u ? l || {} : null, a && a.getAnimationDelayParams ? a.getAnimationDelayParams(e, n) : null);
  if (f && f.duration > 0) {
    var h = f.duration, c = f.delay, v = f.easing, d = {
      duration: h,
      delay: c || 0,
      easing: v,
      done: i,
      force: !!i || !!o,
      // Set to final state in update/init animation.
      // So the post processing based on the path shape can be done correctly.
      setToFinal: !u,
      scope: r,
      during: o
    };
    s ? e.animateFrom(t, d) : e.animateTo(t, d);
  } else
    e.stopAnimation(), !s && e.attr(t), o && o(1), i && i();
}
function Mt(r, e, t, a, n, i) {
  Vg("update", r, e, t, a, n, i);
}
function Bt(r, e, t, a, n, i) {
  Vg("enter", r, e, t, a, n, i);
}
function oo(r) {
  if (!r.__zr)
    return !0;
  for (var e = 0; e < r.animators.length; e++) {
    var t = r.animators[e];
    if (t.scope === "leave")
      return !0;
  }
  return !1;
}
function en(r, e, t, a, n, i) {
  oo(r) || Vg("leave", r, e, t, a, n, i);
}
function O0(r, e, t, a) {
  r.removeTextContent(), r.removeTextGuideLine(), en(r, {
    style: {
      opacity: 0
    }
  }, e, t, a);
}
function qs(r, e, t) {
  function a() {
    r.parent && r.parent.remove(r);
  }
  r.isGroup ? r.traverse(function(n) {
    n.isGroup || O0(n, e, t, a);
  }) : O0(r, e, t, a);
}
function Mr(r) {
  vD(r).oldStyle = r.style;
}
function ZR(r) {
  return vD(r).oldStyle;
}
var _f = Math.max, Sf = Math.min, rp = {};
function XR(r) {
  return mt.extend(r);
}
var qR = wR;
function KR(r, e) {
  return qR(r, e);
}
function Ir(r, e) {
  rp[r] = e;
}
function Bg(r) {
  if (rp.hasOwnProperty(r))
    return rp[r];
}
function wh(r, e, t, a) {
  var n = QT(r, e);
  return t && (a === "center" && (t = pD(t, n.getBoundingRect())), gD(n, t)), n;
}
function dD(r, e, t) {
  var a = new ge({
    style: {
      image: r,
      x: e.x,
      y: e.y,
      width: e.width,
      height: e.height
    },
    onload: function(n) {
      if (t === "center") {
        var i = {
          width: n.width,
          height: n.height
        };
        a.setStyle(pD(e, i));
      }
    }
  });
  return a;
}
function pD(r, e) {
  var t = e.width / e.height, a = r.height * t, n;
  a <= r.width ? n = r.height : (a = r.width, n = a / t);
  var i = r.x + r.width / 2, o = r.y + r.height / 2;
  return {
    x: i - a / 2,
    y: o - n / 2,
    width: a,
    height: n
  };
}
var ir = bR;
function gD(r, e) {
  if (r.applyTransform) {
    var t = r.getBoundingRect(), a = t.calculateTransform(e);
    r.applyTransform(a);
  }
}
function co(r, e) {
  return NT(r, r, {
    lineWidth: e
  }), r;
}
function jR(r) {
  return OT(r.shape, r.shape, r.style), r;
}
var Xu = Zn;
function ii(r, e) {
  for (var t = uh([]); r && r !== e; )
    ua(t, r.getLocalTransform(), t), r = r.parent;
  return t;
}
function Dr(r, e, t) {
  return e && !xe(e) && (e = oa.getLocalTransform(e)), t && (e = To([], e)), he([], r, e);
}
function bh(r, e, t) {
  var a = e[4] === 0 || e[5] === 0 || e[0] === 0 ? 1 : Math.abs(2 * e[4] / e[0]), n = e[4] === 0 || e[5] === 0 || e[2] === 0 ? 1 : Math.abs(2 * e[4] / e[2]), i = [r === "left" ? -a : r === "right" ? a : 0, r === "top" ? -n : r === "bottom" ? n : 0];
  return i = Dr(i, e, t), Math.abs(i[0]) > Math.abs(i[1]) ? i[0] > 0 ? "right" : "left" : i[1] > 0 ? "bottom" : "top";
}
function k0(r) {
  return !r.isGroup;
}
function JR(r) {
  return r.shape != null;
}
function Sl(r, e, t) {
  if (!r || !e)
    return;
  function a(o) {
    var s = {};
    return o.traverse(function(l) {
      k0(l) && l.anid && (s[l.anid] = l);
    }), s;
  }
  function n(o) {
    var s = {
      x: o.x,
      y: o.y,
      rotation: o.rotation
    };
    return JR(o) && (s.shape = V({}, o.shape)), s;
  }
  var i = a(r);
  e.traverse(function(o) {
    if (k0(o) && o.anid) {
      var s = i[o.anid];
      if (s) {
        var l = n(o);
        o.attr(n(s)), Mt(o, l, t, it(o).dataIndex);
      }
    }
  });
}
function yD(r, e) {
  return G(r, function(t) {
    var a = t[0];
    a = _f(a, e.x), a = Sf(a, e.x + e.width);
    var n = t[1];
    return n = _f(n, e.y), n = Sf(n, e.y + e.height), [a, n];
  });
}
function QR(r, e) {
  var t = _f(r.x, e.x), a = Sf(r.x + r.width, e.x + e.width), n = _f(r.y, e.y), i = Sf(r.y + r.height, e.y + e.height);
  if (a >= t && i >= n)
    return {
      x: t,
      y: n,
      width: a - t,
      height: i - n
    };
}
function xl(r, e, t) {
  var a = V({
    rectHover: !0
  }, e), n = a.style = {
    strokeNoScale: !0
  };
  if (t = t || {
    x: -1,
    y: -1,
    width: 2,
    height: 2
  }, r)
    return r.indexOf("image://") === 0 ? (n.image = r.slice(8), et(n, t), new ge(a)) : wh(r.replace("path://", ""), a, t, "center");
}
function Ss(r, e, t, a, n) {
  for (var i = 0, o = n[n.length - 1]; i < n.length; i++) {
    var s = n[i];
    if (mD(r, e, t, a, s[0], s[1], o[0], o[1]))
      return !0;
    o = s;
  }
}
function mD(r, e, t, a, n, i, o, s) {
  var l = t - r, u = a - e, f = o - n, h = s - i, c = Oc(f, h, l, u);
  if (tN(c))
    return !1;
  var v = r - n, d = e - i, p = Oc(v, d, l, u) / c;
  if (p < 0 || p > 1)
    return !1;
  var g = Oc(v, d, f, h) / c;
  return !(g < 0 || g > 1);
}
function Oc(r, e, t, a) {
  return r * a - t * e;
}
function tN(r) {
  return r <= 1e-6 && r >= -1e-6;
}
function Mo(r) {
  var e = r.itemTooltipOption, t = r.componentModel, a = r.itemName, n = $(e) ? {
    formatter: e
  } : e, i = t.mainType, o = t.componentIndex, s = {
    componentType: i,
    name: a,
    $vars: ["name"]
  };
  s[i + "Index"] = o;
  var l = r.formatterParamsExtra;
  l && M(_t(l), function(f) {
    U(s, f) || (s[f] = l[f], s.$vars.push(f));
  });
  var u = it(r.el);
  u.componentMainType = i, u.componentIndex = o, u.tooltipConfig = {
    name: a,
    option: et({
      content: a,
      formatterParams: s
    }, n)
  };
}
function V0(r, e) {
  var t;
  r.isGroup && (t = e(r)), t || r.traverse(e);
}
function un(r, e) {
  if (r)
    if (z(r))
      for (var t = 0; t < r.length; t++)
        V0(r[t], e);
    else
      V0(r, e);
}
Ir("circle", jr);
Ir("ellipse", Ng);
Ir("sector", ze);
Ir("ring", Sh);
Ir("polygon", Ge);
Ir("polyline", Fe);
Ir("rect", Tt);
Ir("line", ue);
Ir("bezierCurve", xh);
Ir("arc", Og);
const wl = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Arc: Og,
  BezierCurve: xh,
  BoundingRect: ct,
  Circle: jr,
  CompoundPath: kg,
  Ellipse: Ng,
  Group: nt,
  Image: ge,
  IncrementalDisplayable: YR,
  Line: ue,
  LinearGradient: _l,
  OrientedBoundingRect: mf,
  Path: mt,
  Point: ut,
  Polygon: Ge,
  Polyline: Fe,
  RadialGradient: cD,
  Rect: Tt,
  Ring: Sh,
  Sector: ze,
  Text: Ct,
  applyTransform: Dr,
  clipPointsByRect: yD,
  clipRectByRect: QR,
  createIcon: xl,
  extendPath: KR,
  extendShape: XR,
  getShapeClass: Bg,
  getTransform: ii,
  groupTransition: Sl,
  initProps: Bt,
  isElementRemoved: oo,
  lineLineIntersect: mD,
  linePolygonIntersect: Ss,
  makeImage: dD,
  makePath: wh,
  mergePath: ir,
  registerShape: Ir,
  removeElement: en,
  removeElementWithFadeOut: qs,
  resizePath: gD,
  setTooltipConfig: Mo,
  subPixelOptimize: Xu,
  subPixelOptimizeLine: co,
  subPixelOptimizeRect: jR,
  transformDirection: bh,
  traverseElements: un,
  updateProps: Mt
}, Symbol.toStringTag, { value: "Module" }));
var Th = {};
function _D(r, e) {
  for (var t = 0; t < Le.length; t++) {
    var a = Le[t], n = e[a], i = r.ensureState(a);
    i.style = i.style || {}, i.style.text = n;
  }
  var o = r.currentStates.slice();
  r.clearStates(!0), r.setStyle({
    text: e.normal
  }), r.useStates(o, !0);
}
function ap(r, e, t) {
  var a = r.labelFetcher, n = r.labelDataIndex, i = r.labelDimIndex, o = e.normal, s;
  a && (s = a.getFormattedLabel(n, "normal", null, i, o && o.get("formatter"), t != null ? {
    interpolatedValue: t
  } : null)), s == null && (s = K(r.defaultText) ? r.defaultText(n, r, t) : r.defaultText);
  for (var l = {
    normal: s
  }, u = 0; u < Le.length; u++) {
    var f = Le[u], h = e[f];
    l[f] = ft(a ? a.getFormattedLabel(n, f, null, i, h && h.get("formatter")) : null, s);
  }
  return l;
}
function pe(r, e, t, a) {
  t = t || Th;
  for (var n = r instanceof Ct, i = !1, o = 0; o < Xs.length; o++) {
    var s = e[Xs[o]];
    if (s && s.getShallow("show")) {
      i = !0;
      break;
    }
  }
  var l = n ? r : r.getTextContent();
  if (i) {
    n || (l || (l = new Ct(), r.setTextContent(l)), r.stateProxy && (l.stateProxy = r.stateProxy));
    var u = ap(t, e), f = e.normal, h = !!f.getShallow("show"), c = Ot(f, a && a.normal, t, !1, !n);
    c.text = u.normal, n || r.setTextConfig(xf(f, t, !1));
    for (var o = 0; o < Le.length; o++) {
      var v = Le[o], s = e[v];
      if (s) {
        var d = l.ensureState(v), p = !!ft(s.getShallow("show"), h);
        if (p !== h && (d.ignore = !p), d.style = Ot(s, a && a[v], t, !0, !n), d.style.text = u[v], !n) {
          var g = r.ensureState(v);
          g.textConfig = xf(s, t, !0);
        }
      }
    }
    l.silent = !!f.getShallow("silent"), l.style.x != null && (c.x = l.style.x), l.style.y != null && (c.y = l.style.y), l.ignore = !h, l.useStyle(c), l.dirty(), t.enableTextSetter && (Io(l).setLabelText = function(y) {
      var m = ap(t, e, y);
      _D(l, m);
    });
  } else
    l && (l.ignore = !0);
  r.dirty();
}
function oe(r, e) {
  e = e || "label";
  for (var t = {
    normal: r.getModel(e)
  }, a = 0; a < Le.length; a++) {
    var n = Le[a];
    t[n] = r.getModel([n, e]);
  }
  return t;
}
function Ot(r, e, t, a, n) {
  var i = {};
  return eN(i, r, t, a, n), e && V(i, e), i;
}
function xf(r, e, t) {
  e = e || {};
  var a = {}, n, i = r.getShallow("rotate"), o = ft(r.getShallow("distance"), t ? null : 5), s = r.getShallow("offset");
  return n = r.getShallow("position") || (t ? null : "inside"), n === "outside" && (n = e.defaultOutsidePosition || "top"), n != null && (a.position = n), s != null && (a.offset = s), i != null && (i *= Math.PI / 180, a.rotation = i), o != null && (a.distance = o), a.outsideFill = r.get("color") === "inherit" ? e.inheritColor || null : "auto", a;
}
function eN(r, e, t, a, n) {
  t = t || Th;
  var i = e.ecModel, o = i && i.option.textStyle, s = rN(e), l;
  if (s) {
    l = {};
    for (var u in s)
      if (s.hasOwnProperty(u)) {
        var f = e.getModel(["rich", u]);
        F0(l[u] = {}, f, o, t, a, n, !1, !0);
      }
  }
  l && (r.rich = l);
  var h = e.get("overflow");
  h && (r.overflow = h);
  var c = e.get("minMargin");
  c != null && (r.margin = c), F0(r, e, o, t, a, n, !0, !1);
}
function rN(r) {
  for (var e; r && r !== r.ecModel; ) {
    var t = (r.option || Th).rich;
    if (t) {
      e = e || {};
      for (var a = _t(t), n = 0; n < a.length; n++) {
        var i = a[n];
        e[i] = 1;
      }
    }
    r = r.parentModel;
  }
  return e;
}
var B0 = ["fontStyle", "fontWeight", "fontSize", "fontFamily", "textShadowColor", "textShadowBlur", "textShadowOffsetX", "textShadowOffsetY"], z0 = ["align", "lineHeight", "width", "height", "tag", "verticalAlign", "ellipsis"], G0 = ["padding", "borderWidth", "borderRadius", "borderDashOffset", "backgroundColor", "borderColor", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY"];
function F0(r, e, t, a, n, i, o, s) {
  t = !n && t || Th;
  var l = a && a.inheritColor, u = e.getShallow("color"), f = e.getShallow("textBorderColor"), h = ft(e.getShallow("opacity"), t.opacity);
  (u === "inherit" || u === "auto") && ({}.NODE_ENV !== "production" && u === "auto" && Kt("color: 'auto'", "color: 'inherit'"), l ? u = l : u = null), (f === "inherit" || f === "auto") && ({}.NODE_ENV !== "production" && f === "auto" && Kt("color: 'auto'", "color: 'inherit'"), l ? f = l : f = null), i || (u = u || t.color, f = f || t.textBorderColor), u != null && (r.fill = u), f != null && (r.stroke = f);
  var c = ft(e.getShallow("textBorderWidth"), t.textBorderWidth);
  c != null && (r.lineWidth = c);
  var v = ft(e.getShallow("textBorderType"), t.textBorderType);
  v != null && (r.lineDash = v);
  var d = ft(e.getShallow("textBorderDashOffset"), t.textBorderDashOffset);
  d != null && (r.lineDashOffset = d), !n && h == null && !s && (h = a && a.defaultOpacity), h != null && (r.opacity = h), !n && !i && r.fill == null && a.inheritColor && (r.fill = a.inheritColor);
  for (var p = 0; p < B0.length; p++) {
    var g = B0[p], y = ft(e.getShallow(g), t[g]);
    y != null && (r[g] = y);
  }
  for (var p = 0; p < z0.length; p++) {
    var g = z0[p], y = e.getShallow(g);
    y != null && (r[g] = y);
  }
  if (r.verticalAlign == null) {
    var m = e.getShallow("baseline");
    m != null && (r.verticalAlign = m);
  }
  if (!o || !a.disableBox) {
    for (var p = 0; p < G0.length; p++) {
      var g = G0[p], y = e.getShallow(g);
      y != null && (r[g] = y);
    }
    var _ = e.getShallow("borderType");
    _ != null && (r.borderDash = _), (r.backgroundColor === "auto" || r.backgroundColor === "inherit") && l && ({}.NODE_ENV !== "production" && r.backgroundColor === "auto" && Kt("backgroundColor: 'auto'", "backgroundColor: 'inherit'"), r.backgroundColor = l), (r.borderColor === "auto" || r.borderColor === "inherit") && l && ({}.NODE_ENV !== "production" && r.borderColor === "auto" && Kt("borderColor: 'auto'", "borderColor: 'inherit'"), r.borderColor = l);
  }
}
function SD(r, e) {
  var t = e && e.getModel("textStyle");
  return Sr([
    // FIXME in node-canvas fontWeight is before fontStyle
    r.fontStyle || t && t.getShallow("fontStyle") || "",
    r.fontWeight || t && t.getShallow("fontWeight") || "",
    (r.fontSize || t && t.getShallow("fontSize") || 12) + "px",
    r.fontFamily || t && t.getShallow("fontFamily") || "sans-serif"
  ].join(" "));
}
var Io = Dt();
function xD(r, e, t, a) {
  if (r) {
    var n = Io(r);
    n.prevValue = n.value, n.value = t;
    var i = e.normal;
    n.valueAnimation = i.get("valueAnimation"), n.valueAnimation && (n.precision = i.get("precision"), n.defaultInterpolatedText = a, n.statesModels = e);
  }
}
function wD(r, e, t, a, n) {
  var i = Io(r);
  if (!i.valueAnimation || i.prevValue === i.value)
    return;
  var o = i.defaultInterpolatedText, s = ft(i.interpolatedValue, i.prevValue), l = i.value;
  function u(f) {
    var h = bT(t, i.precision, s, l, f);
    i.interpolatedValue = f === 1 ? null : h;
    var c = ap({
      labelDataIndex: e,
      labelFetcher: n,
      defaultText: o ? o(h) : h + ""
    }, i.statesModels, h);
    _D(r, c);
  }
  r.percent = 0, (i.prevValue == null ? Bt : Mt)(r, {
    // percent is used to prevent animation from being aborted #15916
    percent: 1
  }, a, e, null, u);
}
var aN = ["textStyle", "color"], kc = ["fontStyle", "fontWeight", "fontSize", "fontFamily", "padding", "lineHeight", "rich", "width", "height", "overflow"], Vc = new Ct(), nN = (
  /** @class */
  function() {
    function r() {
    }
    return r.prototype.getTextColor = function(e) {
      var t = this.ecModel;
      return this.getShallow("color") || (!e && t ? t.get(aN) : null);
    }, r.prototype.getFont = function() {
      return SD({
        fontStyle: this.getShallow("fontStyle"),
        fontWeight: this.getShallow("fontWeight"),
        fontSize: this.getShallow("fontSize"),
        fontFamily: this.getShallow("fontFamily")
      }, this.ecModel);
    }, r.prototype.getTextRect = function(e) {
      for (var t = {
        text: e,
        verticalAlign: this.getShallow("verticalAlign") || this.getShallow("baseline")
      }, a = 0; a < kc.length; a++)
        t[kc[a]] = this.getShallow(kc[a]);
      return Vc.useStyle(t), Vc.update(), Vc.getBoundingRect();
    }, r;
  }()
);
const iN = nN;
var bD = [
  ["lineWidth", "width"],
  ["stroke", "color"],
  ["opacity"],
  ["shadowBlur"],
  ["shadowOffsetX"],
  ["shadowOffsetY"],
  ["shadowColor"],
  ["lineDash", "type"],
  ["lineDashOffset", "dashOffset"],
  ["lineCap", "cap"],
  ["lineJoin", "join"],
  ["miterLimit"]
  // Option decal is in `DecalObject` but style.decal is in `PatternObject`.
  // So do not transfer decal directly.
], oN = vi(bD), sN = (
  /** @class */
  function() {
    function r() {
    }
    return r.prototype.getLineStyle = function(e) {
      return oN(this, e);
    }, r;
  }()
), TD = [
  ["fill", "color"],
  ["stroke", "borderColor"],
  ["lineWidth", "borderWidth"],
  ["opacity"],
  ["shadowBlur"],
  ["shadowOffsetX"],
  ["shadowOffsetY"],
  ["shadowColor"],
  ["lineDash", "borderType"],
  ["lineDashOffset", "borderDashOffset"],
  ["lineCap", "borderCap"],
  ["lineJoin", "borderJoin"],
  ["miterLimit", "borderMiterLimit"]
  // Option decal is in `DecalObject` but style.decal is in `PatternObject`.
  // So do not transfer decal directly.
], lN = vi(TD), uN = (
  /** @class */
  function() {
    function r() {
    }
    return r.prototype.getItemStyle = function(e, t) {
      return lN(this, e, t);
    }, r;
  }()
), Si = (
  /** @class */
  function() {
    function r(e, t, a) {
      this.parentModel = t, this.ecModel = a, this.option = e;
    }
    return r.prototype.init = function(e, t, a) {
    }, r.prototype.mergeOption = function(e, t) {
      ht(this.option, e, !0);
    }, r.prototype.get = function(e, t) {
      return e == null ? this.option : this._doGet(this.parsePath(e), !t && this.parentModel);
    }, r.prototype.getShallow = function(e, t) {
      var a = this.option, n = a == null ? a : a[e];
      if (n == null && !t) {
        var i = this.parentModel;
        i && (n = i.getShallow(e));
      }
      return n;
    }, r.prototype.getModel = function(e, t) {
      var a = e != null, n = a ? this.parsePath(e) : null, i = a ? this._doGet(n) : this.option;
      return t = t || this.parentModel && this.parentModel.getModel(this.resolveParentPath(n)), new r(i, t, this.ecModel);
    }, r.prototype.isEmpty = function() {
      return this.option == null;
    }, r.prototype.restoreData = function() {
    }, r.prototype.clone = function() {
      var e = this.constructor;
      return new e(at(this.option));
    }, r.prototype.parsePath = function(e) {
      return typeof e == "string" ? e.split(".") : e;
    }, r.prototype.resolveParentPath = function(e) {
      return e;
    }, r.prototype.isAnimationEnabled = function() {
      if (!bt.node && this.option) {
        if (this.option.animation != null)
          return !!this.option.animation;
        if (this.parentModel)
          return this.parentModel.isAnimationEnabled();
      }
    }, r.prototype._doGet = function(e, t) {
      var a = this.option;
      if (!e)
        return a;
      for (var n = 0; n < e.length && !(e[n] && (a = a && typeof a == "object" ? a[e[n]] : null, a == null)); n++)
        ;
      return a == null && t && (a = t._doGet(this.resolveParentPath(e), t.parentModel)), a;
    }, r;
  }()
);
Cg(Si);
uP(Si);
te(Si, sN);
te(Si, uN);
te(Si, dP);
te(Si, iN);
const kt = Si;
var fN = Math.round(Math.random() * 10);
function Lo(r) {
  return [r || "", fN++].join("_");
}
function hN(r) {
  var e = {};
  r.registerSubTypeDefaulter = function(t, a) {
    var n = Hr(t);
    e[n.main] = a;
  }, r.determineSubType = function(t, a) {
    var n = a.type;
    if (!n) {
      var i = Hr(t).main;
      r.hasSubTypes(t) && e[i] && (n = e[i](a));
    }
    return n;
  };
}
function cN(r, e) {
  r.topologicalTravel = function(i, o, s, l) {
    if (!i.length)
      return;
    var u = t(o), f = u.graph, h = u.noEntryList, c = {};
    for (M(i, function(m) {
      c[m] = !0;
    }); h.length; ) {
      var v = h.pop(), d = f[v], p = !!c[v];
      p && (s.call(l, v, d.originalDeps.slice()), delete c[v]), M(d.successor, p ? y : g);
    }
    M(c, function() {
      var m = "";
      throw {}.NODE_ENV !== "production" && (m = Ie("Circular dependency may exists: ", c, i, o)), new Error(m);
    });
    function g(m) {
      f[m].entryCount--, f[m].entryCount === 0 && h.push(m);
    }
    function y(m) {
      c[m] = !0, g(m);
    }
  };
  function t(i) {
    var o = {}, s = [];
    return M(i, function(l) {
      var u = a(o, l), f = u.originalDeps = e(l), h = n(f, i);
      u.entryCount = h.length, u.entryCount === 0 && s.push(l), M(h, function(c) {
        vt(u.predecessor, c) < 0 && u.predecessor.push(c);
        var v = a(o, c);
        vt(v.successor, c) < 0 && v.successor.push(l);
      });
    }), {
      graph: o,
      noEntryList: s
    };
  }
  function a(i, o) {
    return i[o] || (i[o] = {
      predecessor: [],
      successor: []
    }), i[o];
  }
  function n(i, o) {
    var s = [];
    return M(i, function(l) {
      vt(o, l) >= 0 && s.push(l);
    }), s;
  }
}
function fn(r, e) {
  return ht(ht({}, r, !0), e, !0);
}
const vN = {
  time: {
    month: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
    monthAbbr: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
    dayOfWeek: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
    dayOfWeekAbbr: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]
  },
  legend: {
    selector: {
      all: "All",
      inverse: "Inv"
    }
  },
  toolbox: {
    brush: {
      title: {
        rect: "Box Select",
        polygon: "Lasso Select",
        lineX: "Horizontally Select",
        lineY: "Vertically Select",
        keep: "Keep Selections",
        clear: "Clear Selections"
      }
    },
    dataView: {
      title: "Data View",
      lang: ["Data View", "Close", "Refresh"]
    },
    dataZoom: {
      title: {
        zoom: "Zoom",
        back: "Zoom Reset"
      }
    },
    magicType: {
      title: {
        line: "Switch to Line Chart",
        bar: "Switch to Bar Chart",
        stack: "Stack",
        tiled: "Tile"
      }
    },
    restore: {
      title: "Restore"
    },
    saveAsImage: {
      title: "Save as Image",
      lang: ["Right Click to Save Image"]
    }
  },
  series: {
    typeNames: {
      pie: "Pie chart",
      bar: "Bar chart",
      line: "Line chart",
      scatter: "Scatter plot",
      effectScatter: "Ripple scatter plot",
      radar: "Radar chart",
      tree: "Tree",
      treemap: "Treemap",
      boxplot: "Boxplot",
      candlestick: "Candlestick",
      k: "K line chart",
      heatmap: "Heat map",
      map: "Map",
      parallel: "Parallel coordinate map",
      lines: "Line graph",
      graph: "Relationship graph",
      sankey: "Sankey diagram",
      funnel: "Funnel chart",
      gauge: "Gauge",
      pictorialBar: "Pictorial bar",
      themeRiver: "Theme River Map",
      sunburst: "Sunburst"
    }
  },
  aria: {
    general: {
      withTitle: 'This is a chart about "{title}"',
      withoutTitle: "This is a chart"
    },
    series: {
      single: {
        prefix: "",
        withName: " with type {seriesType} named {seriesName}.",
        withoutName: " with type {seriesType}."
      },
      multiple: {
        prefix: ". It consists of {seriesCount} series count.",
        withName: " The {seriesId} series is a {seriesType} representing {seriesName}.",
        withoutName: " The {seriesId} series is a {seriesType}.",
        separator: {
          middle: "",
          end: ""
        }
      }
    },
    data: {
      allData: "The data is as follows: ",
      partialData: "The first {displayCnt} items are: ",
      withName: "the data for {name} is {value}",
      withoutName: "{value}",
      separator: {
        middle: ", ",
        end: ". "
      }
    }
  }
}, dN = {
  time: {
    month: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
    monthAbbr: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"],
    dayOfWeek: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"],
    dayOfWeekAbbr: ["日", "一", "二", "三", "四", "五", "六"]
  },
  legend: {
    selector: {
      all: "全选",
      inverse: "反选"
    }
  },
  toolbox: {
    brush: {
      title: {
        rect: "矩形选择",
        polygon: "圈选",
        lineX: "横向选择",
        lineY: "纵向选择",
        keep: "保持选择",
        clear: "清除选择"
      }
    },
    dataView: {
      title: "数据视图",
      lang: ["数据视图", "关闭", "刷新"]
    },
    dataZoom: {
      title: {
        zoom: "区域缩放",
        back: "区域缩放还原"
      }
    },
    magicType: {
      title: {
        line: "切换为折线图",
        bar: "切换为柱状图",
        stack: "切换为堆叠",
        tiled: "切换为平铺"
      }
    },
    restore: {
      title: "还原"
    },
    saveAsImage: {
      title: "保存为图片",
      lang: ["右键另存为图片"]
    }
  },
  series: {
    typeNames: {
      pie: "饼图",
      bar: "柱状图",
      line: "折线图",
      scatter: "散点图",
      effectScatter: "涟漪散点图",
      radar: "雷达图",
      tree: "树图",
      treemap: "矩形树图",
      boxplot: "箱型图",
      candlestick: "K线图",
      k: "K线图",
      heatmap: "热力图",
      map: "地图",
      parallel: "平行坐标图",
      lines: "线图",
      graph: "关系图",
      sankey: "桑基图",
      funnel: "漏斗图",
      gauge: "仪表盘图",
      pictorialBar: "象形柱图",
      themeRiver: "主题河流图",
      sunburst: "旭日图"
    }
  },
  aria: {
    general: {
      withTitle: "这是一个关于“{title}”的图表。",
      withoutTitle: "这是一个图表，"
    },
    series: {
      single: {
        prefix: "",
        withName: "图表类型是{seriesType}，表示{seriesName}。",
        withoutName: "图表类型是{seriesType}。"
      },
      multiple: {
        prefix: "它由{seriesCount}个图表系列组成。",
        withName: "第{seriesId}个系列是一个表示{seriesName}的{seriesType}，",
        withoutName: "第{seriesId}个系列是一个{seriesType}，",
        separator: {
          middle: "；",
          end: "。"
        }
      }
    },
    data: {
      allData: "其数据是——",
      partialData: "其中，前{displayCnt}项是——",
      withName: "{name}的数据是{value}",
      withoutName: "{value}",
      separator: {
        middle: "，",
        end: ""
      }
    }
  }
};
var wf = "ZH", zg = "EN", Ks = zg, qu = {}, Gg = {}, DD = bt.domSupported ? function() {
  var r = (
    /* eslint-disable-next-line */
    (document.documentElement.lang || navigator.language || navigator.browserLanguage).toUpperCase()
  );
  return r.indexOf(wf) > -1 ? wf : Ks;
}() : Ks;
function CD(r, e) {
  r = r.toUpperCase(), Gg[r] = new kt(e), qu[r] = e;
}
function pN(r) {
  if ($(r)) {
    var e = qu[r.toUpperCase()] || {};
    return r === wf || r === zg ? at(e) : ht(at(e), at(qu[Ks]), !1);
  } else
    return ht(at(r), at(qu[Ks]), !1);
}
function np(r) {
  return Gg[r];
}
function gN() {
  return Gg[Ks];
}
CD(zg, vN);
CD(wf, dN);
var Fg = 1e3, Hg = Fg * 60, ks = Hg * 60, or = ks * 24, H0 = or * 365, xs = {
  year: "{yyyy}",
  month: "{MMM}",
  day: "{d}",
  hour: "{HH}:{mm}",
  minute: "{HH}:{mm}",
  second: "{HH}:{mm}:{ss}",
  millisecond: "{HH}:{mm}:{ss} {SSS}",
  none: "{yyyy}-{MM}-{dd} {HH}:{mm}:{ss} {SSS}"
}, tu = "{yyyy}-{MM}-{dd}", W0 = {
  year: "{yyyy}",
  month: "{yyyy}-{MM}",
  day: tu,
  hour: tu + " " + xs.hour,
  minute: tu + " " + xs.minute,
  second: tu + " " + xs.second,
  millisecond: xs.none
}, Bc = ["year", "month", "day", "hour", "minute", "second", "millisecond"], AD = ["year", "half-year", "quarter", "month", "week", "half-week", "day", "half-day", "quarter-day", "hour", "minute", "second", "millisecond"];
function Ma(r, e) {
  return r += "", "0000".substr(0, e - r.length) + r;
}
function so(r) {
  switch (r) {
    case "half-year":
    case "quarter":
      return "month";
    case "week":
    case "half-week":
      return "day";
    case "half-day":
    case "quarter-day":
      return "hour";
    default:
      return r;
  }
}
function yN(r) {
  return r === so(r);
}
function mN(r) {
  switch (r) {
    case "year":
    case "month":
      return "day";
    case "millisecond":
      return "millisecond";
    default:
      return "second";
  }
}
function Dh(r, e, t, a) {
  var n = qr(r), i = n[Wg(t)](), o = n[lo(t)]() + 1, s = Math.floor((o - 1) / 3) + 1, l = n[Ch(t)](), u = n["get" + (t ? "UTC" : "") + "Day"](), f = n[js(t)](), h = (f - 1) % 12 + 1, c = n[Ah(t)](), v = n[Mh(t)](), d = n[Ih(t)](), p = a instanceof kt ? a : np(a || DD) || gN(), g = p.getModel("time"), y = g.get("month"), m = g.get("monthAbbr"), _ = g.get("dayOfWeek"), S = g.get("dayOfWeekAbbr");
  return (e || "").replace(/{yyyy}/g, i + "").replace(/{yy}/g, Ma(i % 100 + "", 2)).replace(/{Q}/g, s + "").replace(/{MMMM}/g, y[o - 1]).replace(/{MMM}/g, m[o - 1]).replace(/{MM}/g, Ma(o, 2)).replace(/{M}/g, o + "").replace(/{dd}/g, Ma(l, 2)).replace(/{d}/g, l + "").replace(/{eeee}/g, _[u]).replace(/{ee}/g, S[u]).replace(/{e}/g, u + "").replace(/{HH}/g, Ma(f, 2)).replace(/{H}/g, f + "").replace(/{hh}/g, Ma(h + "", 2)).replace(/{h}/g, h + "").replace(/{mm}/g, Ma(c, 2)).replace(/{m}/g, c + "").replace(/{ss}/g, Ma(v, 2)).replace(/{s}/g, v + "").replace(/{SSS}/g, Ma(d, 3)).replace(/{S}/g, d + "");
}
function _N(r, e, t, a, n) {
  var i = null;
  if ($(t))
    i = t;
  else if (K(t))
    i = t(r.value, e, {
      level: r.level
    });
  else {
    var o = V({}, xs);
    if (r.level > 0)
      for (var s = 0; s < Bc.length; ++s)
        o[Bc[s]] = "{primary|" + o[Bc[s]] + "}";
    var l = t ? t.inherit === !1 ? t : et(t, o) : o, u = MD(r.value, n);
    if (l[u])
      i = l[u];
    else if (l.inherit) {
      for (var f = AD.indexOf(u), s = f - 1; s >= 0; --s)
        if (l[u]) {
          i = l[u];
          break;
        }
      i = i || o.none;
    }
    if (z(i)) {
      var h = r.level == null ? 0 : r.level >= 0 ? r.level : i.length + r.level;
      h = Math.min(h, i.length - 1), i = i[h];
    }
  }
  return Dh(new Date(r.value), i, n, a);
}
function MD(r, e) {
  var t = qr(r), a = t[lo(e)]() + 1, n = t[Ch(e)](), i = t[js(e)](), o = t[Ah(e)](), s = t[Mh(e)](), l = t[Ih(e)](), u = l === 0, f = u && s === 0, h = f && o === 0, c = h && i === 0, v = c && n === 1, d = v && a === 1;
  return d ? "year" : v ? "month" : c ? "day" : h ? "hour" : f ? "minute" : u ? "second" : "millisecond";
}
function $0(r, e, t) {
  var a = At(r) ? qr(r) : r;
  switch (e = e || MD(r, t), e) {
    case "year":
      return a[Wg(t)]();
    case "half-year":
      return a[lo(t)]() >= 6 ? 1 : 0;
    case "quarter":
      return Math.floor((a[lo(t)]() + 1) / 4);
    case "month":
      return a[lo(t)]();
    case "day":
      return a[Ch(t)]();
    case "half-day":
      return a[js(t)]() / 24;
    case "hour":
      return a[js(t)]();
    case "minute":
      return a[Ah(t)]();
    case "second":
      return a[Mh(t)]();
    case "millisecond":
      return a[Ih(t)]();
  }
}
function Wg(r) {
  return r ? "getUTCFullYear" : "getFullYear";
}
function lo(r) {
  return r ? "getUTCMonth" : "getMonth";
}
function Ch(r) {
  return r ? "getUTCDate" : "getDate";
}
function js(r) {
  return r ? "getUTCHours" : "getHours";
}
function Ah(r) {
  return r ? "getUTCMinutes" : "getMinutes";
}
function Mh(r) {
  return r ? "getUTCSeconds" : "getSeconds";
}
function Ih(r) {
  return r ? "getUTCMilliseconds" : "getMilliseconds";
}
function SN(r) {
  return r ? "setUTCFullYear" : "setFullYear";
}
function ID(r) {
  return r ? "setUTCMonth" : "setMonth";
}
function LD(r) {
  return r ? "setUTCDate" : "setDate";
}
function ED(r) {
  return r ? "setUTCHours" : "setHours";
}
function PD(r) {
  return r ? "setUTCMinutes" : "setMinutes";
}
function RD(r) {
  return r ? "setUTCSeconds" : "setSeconds";
}
function ND(r) {
  return r ? "setUTCMilliseconds" : "setMilliseconds";
}
function OD(r) {
  if (!bg(r))
    return $(r) ? r : "-";
  var e = (r + "").split(".");
  return e[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g, "$1,") + (e.length > 1 ? "." + e[1] : "");
}
function kD(r, e) {
  return r = (r || "").toLowerCase().replace(/-(.)/g, function(t, a) {
    return a.toUpperCase();
  }), e && r && (r = r.charAt(0).toUpperCase() + r.slice(1)), r;
}
var Eo = pg;
function ip(r, e, t) {
  var a = "{yyyy}-{MM}-{dd} {HH}:{mm}:{ss}";
  function n(f) {
    return f && Sr(f) ? f : "-";
  }
  function i(f) {
    return !!(f != null && !isNaN(f) && isFinite(f));
  }
  var o = e === "time", s = r instanceof Date;
  if (o || s) {
    var l = o ? qr(r) : r;
    if (isNaN(+l)) {
      if (s)
        return "-";
    } else
      return Dh(l, a, t);
  }
  if (e === "ordinal")
    return nf(r) ? n(r) : At(r) && i(r) ? r + "" : "-";
  var u = pa(r);
  return i(u) ? OD(u) : nf(r) ? n(r) : typeof r == "boolean" ? r + "" : "-";
}
var U0 = ["a", "b", "c", "d", "e", "f", "g"], zc = function(r, e) {
  return "{" + r + (e == null ? "" : e) + "}";
};
function VD(r, e, t) {
  z(e) || (e = [e]);
  var a = e.length;
  if (!a)
    return "";
  for (var n = e[0].$vars || [], i = 0; i < n.length; i++) {
    var o = U0[i];
    r = r.replace(zc(o), zc(o, 0));
  }
  for (var s = 0; s < a; s++)
    for (var l = 0; l < n.length; l++) {
      var u = e[s][n[l]];
      r = r.replace(zc(U0[l], s), t ? Ne(u) : u);
    }
  return r;
}
function xN(r, e, t) {
  return M(e, function(a, n) {
    r = r.replace("{" + n + "}", t ? Ne(a) : a);
  }), r;
}
function wN(r, e) {
  var t = $(r) ? {
    color: r,
    extraCssText: e
  } : r || {}, a = t.color, n = t.type;
  e = t.extraCssText;
  var i = t.renderMode || "html";
  if (!a)
    return "";
  if (i === "html")
    return n === "subItem" ? '<span style="display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;border-radius:4px;width:4px;height:4px;background-color:' + Ne(a) + ";" + (e || "") + '"></span>' : '<span style="display:inline-block;margin-right:4px;border-radius:10px;width:10px;height:10px;background-color:' + Ne(a) + ";" + (e || "") + '"></span>';
  var o = t.markerId || "markerX";
  return {
    renderMode: i,
    content: "{" + o + "|}  ",
    style: n === "subItem" ? {
      width: 4,
      height: 4,
      borderRadius: 2,
      backgroundColor: a
    } : {
      width: 10,
      height: 10,
      borderRadius: 5,
      backgroundColor: a
    }
  };
}
function pi(r, e) {
  return e = e || "transparent", $(r) ? r : j(r) && r.colorStops && (r.colorStops[0] || {}).color || e;
}
function bf(r, e) {
  if (e === "_blank" || e === "blank") {
    var t = window.open();
    t.opener = null, t.location.href = r;
  } else
    window.open(r, e);
}
var Ku = M, BD = ["left", "right", "top", "bottom", "width", "height"], qn = [["width", "left", "right"], ["height", "top", "bottom"]];
function $g(r, e, t, a, n) {
  var i = 0, o = 0;
  a == null && (a = 1 / 0), n == null && (n = 1 / 0);
  var s = 0;
  e.eachChild(function(l, u) {
    var f = l.getBoundingRect(), h = e.childAt(u + 1), c = h && h.getBoundingRect(), v, d;
    if (r === "horizontal") {
      var p = f.width + (c ? -c.x + f.x : 0);
      v = i + p, v > a || l.newline ? (i = 0, v = p, o += s + t, s = f.height) : s = Math.max(s, f.height);
    } else {
      var g = f.height + (c ? -c.y + f.y : 0);
      d = o + g, d > n || l.newline ? (i += s + t, o = 0, d = g, s = f.width) : s = Math.max(s, f.width);
    }
    l.newline || (l.x = i, l.y = o, l.markRedraw(), r === "horizontal" ? i = v + t : o = d + t);
  });
}
var oi = $g;
ot($g, "vertical");
ot($g, "horizontal");
function bN(r, e, t) {
  var a = e.width, n = e.height, i = H(r.left, a), o = H(r.top, n), s = H(r.right, a), l = H(r.bottom, n);
  return (isNaN(i) || isNaN(parseFloat(r.left))) && (i = 0), (isNaN(s) || isNaN(parseFloat(r.right))) && (s = a), (isNaN(o) || isNaN(parseFloat(r.top))) && (o = 0), (isNaN(l) || isNaN(parseFloat(r.bottom))) && (l = n), t = Eo(t || 0), {
    width: Math.max(s - i - t[1] - t[3], 0),
    height: Math.max(l - o - t[0] - t[2], 0)
  };
}
function ae(r, e, t) {
  t = Eo(t || 0);
  var a = e.width, n = e.height, i = H(r.left, a), o = H(r.top, n), s = H(r.right, a), l = H(r.bottom, n), u = H(r.width, a), f = H(r.height, n), h = t[2] + t[0], c = t[1] + t[3], v = r.aspect;
  switch (isNaN(u) && (u = a - s - c - i), isNaN(f) && (f = n - l - h - o), v != null && (isNaN(u) && isNaN(f) && (v > a / n ? u = a * 0.8 : f = n * 0.8), isNaN(u) && (u = v * f), isNaN(f) && (f = u / v)), isNaN(i) && (i = a - s - u - c), isNaN(o) && (o = n - l - f - h), r.left || r.right) {
    case "center":
      i = a / 2 - u / 2 - t[3];
      break;
    case "right":
      i = a - u - c;
      break;
  }
  switch (r.top || r.bottom) {
    case "middle":
    case "center":
      o = n / 2 - f / 2 - t[0];
      break;
    case "bottom":
      o = n - f - h;
      break;
  }
  i = i || 0, o = o || 0, isNaN(u) && (u = a - c - i - (s || 0)), isNaN(f) && (f = n - h - o - (l || 0));
  var d = new ct(i + t[3], o + t[0], u, f);
  return d.margin = t, d;
}
function Lh(r, e, t, a, n, i) {
  var o = !n || !n.hv || n.hv[0], s = !n || !n.hv || n.hv[1], l = n && n.boundingMode || "all";
  if (i = i || r, i.x = r.x, i.y = r.y, !o && !s)
    return !1;
  var u;
  if (l === "raw")
    u = r.type === "group" ? new ct(0, 0, +e.width || 0, +e.height || 0) : r.getBoundingRect();
  else if (u = r.getBoundingRect(), r.needLocalTransform()) {
    var f = r.getLocalTransform();
    u = u.clone(), u.applyTransform(f);
  }
  var h = ae(et({
    width: u.width,
    height: u.height
  }, e), t, a), c = o ? h.x - u.x : 0, v = s ? h.y - u.y : 0;
  return l === "raw" ? (i.x = c, i.y = v) : (i.x += c, i.y += v), i === r && r.markRedraw(), !0;
}
function TN(r, e) {
  return r[qn[e][0]] != null || r[qn[e][1]] != null && r[qn[e][2]] != null;
}
function Js(r) {
  var e = r.layoutMode || r.constructor.layoutMode;
  return j(e) ? e : e ? {
    type: e
  } : null;
}
function rn(r, e, t) {
  var a = t && t.ignoreSize;
  !z(a) && (a = [a, a]);
  var n = o(qn[0], 0), i = o(qn[1], 1);
  u(qn[0], r, n), u(qn[1], r, i);
  function o(f, h) {
    var c = {}, v = 0, d = {}, p = 0, g = 2;
    if (Ku(f, function(_) {
      d[_] = r[_];
    }), Ku(f, function(_) {
      s(e, _) && (c[_] = d[_] = e[_]), l(c, _) && v++, l(d, _) && p++;
    }), a[h])
      return l(e, f[1]) ? d[f[2]] = null : l(e, f[2]) && (d[f[1]] = null), d;
    if (p === g || !v)
      return d;
    if (v >= g)
      return c;
    for (var y = 0; y < f.length; y++) {
      var m = f[y];
      if (!s(c, m) && s(r, m)) {
        c[m] = r[m];
        break;
      }
    }
    return c;
  }
  function s(f, h) {
    return f.hasOwnProperty(h);
  }
  function l(f, h) {
    return f[h] != null && f[h] !== "auto";
  }
  function u(f, h, c) {
    Ku(f, function(v) {
      h[v] = c[v];
    });
  }
}
function Po(r) {
  return zD({}, r);
}
function zD(r, e) {
  return e && r && Ku(BD, function(t) {
    e.hasOwnProperty(t) && (r[t] = e[t]);
  }), r;
}
var DN = Dt(), Ro = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t, a, n) {
      var i = r.call(this, t, a, n) || this;
      return i.uid = Lo("ec_cpt_model"), i;
    }
    return e.prototype.init = function(t, a, n) {
      this.mergeDefaultAndTheme(t, n);
    }, e.prototype.mergeDefaultAndTheme = function(t, a) {
      var n = Js(this), i = n ? Po(t) : {}, o = a.getTheme();
      ht(t, o.get(this.mainType)), ht(t, this.getDefaultOption()), n && rn(t, i, n);
    }, e.prototype.mergeOption = function(t, a) {
      ht(this.option, t, !0);
      var n = Js(this);
      n && rn(this.option, t, n);
    }, e.prototype.optionUpdated = function(t, a) {
    }, e.prototype.getDefaultOption = function() {
      var t = this.constructor;
      if (!oP(t))
        return t.defaultOption;
      var a = DN(this);
      if (!a.defaultOption) {
        for (var n = [], i = t; i; ) {
          var o = i.prototype.defaultOption;
          o && n.push(o), i = i.superClass;
        }
        for (var s = {}, l = n.length - 1; l >= 0; l--)
          s = ht(s, n[l], !0);
        a.defaultOption = s;
      }
      return a.defaultOption;
    }, e.prototype.getReferringComponents = function(t, a) {
      var n = t + "Index", i = t + "Id";
      return yl(this.ecModel, t, {
        index: this.get(n, !0),
        id: this.get(i, !0)
      }, a);
    }, e.prototype.getBoxLayoutParams = function() {
      var t = this;
      return {
        left: t.get("left"),
        top: t.get("top"),
        right: t.get("right"),
        bottom: t.get("bottom"),
        width: t.get("width"),
        height: t.get("height")
      };
    }, e.prototype.getZLevelKey = function() {
      return "";
    }, e.prototype.setZLevel = function(t) {
      this.option.zlevel = t;
    }, e.protoInitialize = function() {
      var t = e.prototype;
      t.type = "component", t.id = "", t.name = "", t.mainType = "", t.subType = "", t.componentIndex = 0;
    }(), e;
  }(kt)
);
DT(Ro, kt);
dh(Ro);
hN(Ro);
cN(Ro, CN);
function CN(r) {
  var e = [];
  return M(Ro.getClassesByMainType(r), function(t) {
    e = e.concat(t.dependencies || t.prototype.dependencies || []);
  }), e = G(e, function(t) {
    return Hr(t).main;
  }), r !== "dataset" && vt(e, "dataset") <= 0 && e.unshift("dataset"), e;
}
const xt = Ro;
var GD = "";
typeof navigator < "u" && (GD = navigator.platform || "");
var Ni = "rgba(0, 0, 0, 0.2)";
const AN = {
  darkMode: "auto",
  // backgroundColor: 'rgba(0,0,0,0)',
  colorBy: "series",
  color: ["#5470c6", "#91cc75", "#fac858", "#ee6666", "#73c0de", "#3ba272", "#fc8452", "#9a60b4", "#ea7ccc"],
  gradientColor: ["#f6efa6", "#d88273", "#bf444c"],
  aria: {
    decal: {
      decals: [{
        color: Ni,
        dashArrayX: [1, 0],
        dashArrayY: [2, 5],
        symbolSize: 1,
        rotation: Math.PI / 6
      }, {
        color: Ni,
        symbol: "circle",
        dashArrayX: [[8, 8], [0, 8, 8, 0]],
        dashArrayY: [6, 0],
        symbolSize: 0.8
      }, {
        color: Ni,
        dashArrayX: [1, 0],
        dashArrayY: [4, 3],
        rotation: -Math.PI / 4
      }, {
        color: Ni,
        dashArrayX: [[6, 6], [0, 6, 6, 0]],
        dashArrayY: [6, 0]
      }, {
        color: Ni,
        dashArrayX: [[1, 0], [1, 6]],
        dashArrayY: [1, 0, 6, 0],
        rotation: Math.PI / 4
      }, {
        color: Ni,
        symbol: "triangle",
        dashArrayX: [[9, 9], [0, 9, 9, 0]],
        dashArrayY: [7, 2],
        symbolSize: 0.75
      }]
    }
  },
  // If xAxis and yAxis declared, grid is created by default.
  // grid: {},
  textStyle: {
    // color: '#000',
    // decoration: 'none',
    // PENDING
    fontFamily: GD.match(/^Win/) ? "Microsoft YaHei" : "sans-serif",
    // fontFamily: 'Arial, Verdana, sans-serif',
    fontSize: 12,
    fontStyle: "normal",
    fontWeight: "normal"
  },
  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/
  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation
  // Default is source-over
  blendMode: null,
  stateAnimation: {
    duration: 300,
    easing: "cubicOut"
  },
  animation: "auto",
  animationDuration: 1e3,
  animationDurationUpdate: 500,
  animationEasing: "cubicInOut",
  animationEasingUpdate: "cubicInOut",
  animationThreshold: 2e3,
  // Configuration for progressive/incremental rendering
  progressiveThreshold: 3e3,
  progressive: 400,
  // Threshold of if use single hover layer to optimize.
  // It is recommended that `hoverLayerThreshold` is equivalent to or less than
  // `progressiveThreshold`, otherwise hover will cause restart of progressive,
  // which is unexpected.
  // see example <echarts/test/heatmap-large.html>.
  hoverLayerThreshold: 3e3,
  // See: module:echarts/scale/Time
  useUTC: !1
};
var op = X(["tooltip", "label", "itemName", "itemId", "itemGroupId", "seriesName"]), vr = "original", we = "arrayRows", dr = "objectRows", Jr = "keyedColumns", ha = "typedArray", FD = "unknown", Ur = "column", No = "row", fe = {
  Must: 1,
  Might: 2,
  Not: 3
  // Other cases
}, HD = Dt();
function MN(r) {
  HD(r).datasetMap = X();
}
function WD(r, e, t) {
  var a = {}, n = Yg(e);
  if (!n || !r)
    return a;
  var i = [], o = [], s = e.ecModel, l = HD(s).datasetMap, u = n.uid + "_" + t.seriesLayoutBy, f, h;
  r = r.slice(), M(r, function(p, g) {
    var y = j(p) ? p : r[g] = {
      name: p
    };
    y.type === "ordinal" && f == null && (f = g, h = d(y)), a[y.name] = [];
  });
  var c = l.get(u) || l.set(u, {
    categoryWayDim: h,
    valueWayDim: 0
  });
  M(r, function(p, g) {
    var y = p.name, m = d(p);
    if (f == null) {
      var _ = c.valueWayDim;
      v(a[y], _, m), v(o, _, m), c.valueWayDim += m;
    } else if (f === g)
      v(a[y], 0, m), v(i, 0, m);
    else {
      var _ = c.categoryWayDim;
      v(a[y], _, m), v(o, _, m), c.categoryWayDim += m;
    }
  });
  function v(p, g, y) {
    for (var m = 0; m < y; m++)
      p.push(g + m);
  }
  function d(p) {
    var g = p.dimsDef;
    return g ? g.length : 1;
  }
  return i.length && (a.itemName = i), o.length && (a.seriesName = o), a;
}
function Ug(r, e, t) {
  var a = {}, n = Yg(r);
  if (!n)
    return a;
  var i = e.sourceFormat, o = e.dimensionsDefine, s;
  (i === dr || i === Jr) && M(o, function(f, h) {
    (j(f) ? f.name : f) === "name" && (s = h);
  });
  var l = function() {
    for (var f = {}, h = {}, c = [], v = 0, d = Math.min(5, t); v < d; v++) {
      var p = UD(e.data, i, e.seriesLayoutBy, o, e.startIndex, v);
      c.push(p);
      var g = p === fe.Not;
      if (g && f.v == null && v !== s && (f.v = v), (f.n == null || f.n === f.v || !g && c[f.n] === fe.Not) && (f.n = v), y(f) && c[f.n] !== fe.Not)
        return f;
      g || (p === fe.Might && h.v == null && v !== s && (h.v = v), (h.n == null || h.n === h.v) && (h.n = v));
    }
    function y(m) {
      return m.v != null && m.n != null;
    }
    return y(f) ? f : y(h) ? h : null;
  }();
  if (l) {
    a.value = [l.v];
    var u = s != null ? s : l.n;
    a.itemName = [u], a.seriesName = [u];
  }
  return a;
}
function Yg(r) {
  var e = r.get("data", !0);
  if (!e)
    return yl(r.ecModel, "dataset", {
      index: r.get("datasetIndex", !0),
      id: r.get("datasetId", !0)
    }, Jt).models[0];
}
function IN(r) {
  return !r.get("transform", !0) && !r.get("fromTransformResult", !0) ? [] : yl(r.ecModel, "dataset", {
    index: r.get("fromDatasetIndex", !0),
    id: r.get("fromDatasetId", !0)
  }, Jt).models;
}
function $D(r, e) {
  return UD(r.data, r.sourceFormat, r.seriesLayoutBy, r.dimensionsDefine, r.startIndex, e);
}
function UD(r, e, t, a, n, i) {
  var o, s = 5;
  if (Be(r))
    return fe.Not;
  var l, u;
  if (a) {
    var f = a[i];
    j(f) ? (l = f.name, u = f.type) : $(f) && (l = f);
  }
  if (u != null)
    return u === "ordinal" ? fe.Must : fe.Not;
  if (e === we) {
    var h = r;
    if (t === No) {
      for (var c = h[i], v = 0; v < (c || []).length && v < s; v++)
        if ((o = S(c[n + v])) != null)
          return o;
    } else
      for (var v = 0; v < h.length && v < s; v++) {
        var d = h[n + v];
        if (d && (o = S(d[i])) != null)
          return o;
      }
  } else if (e === dr) {
    var p = r;
    if (!l)
      return fe.Not;
    for (var v = 0; v < p.length && v < s; v++) {
      var g = p[v];
      if (g && (o = S(g[l])) != null)
        return o;
    }
  } else if (e === Jr) {
    var y = r;
    if (!l)
      return fe.Not;
    var c = y[l];
    if (!c || Be(c))
      return fe.Not;
    for (var v = 0; v < c.length && v < s; v++)
      if ((o = S(c[v])) != null)
        return o;
  } else if (e === vr)
    for (var m = r, v = 0; v < m.length && v < s; v++) {
      var g = m[v], _ = Do(g);
      if (!z(_))
        return fe.Not;
      if ((o = S(_[i])) != null)
        return o;
    }
  function S(w) {
    var x = $(w);
    if (w != null && isFinite(w) && w !== "")
      return x ? fe.Might : fe.Not;
    if (x && w !== "-")
      return fe.Must;
  }
  return fe.Not;
}
var sp = X();
function LN(r, e) {
  J(sp.get(r) == null && e), sp.set(r, e);
}
function EN(r, e, t) {
  var a = sp.get(e);
  if (!a)
    return t;
  var n = a(r);
  if (!n)
    return t;
  if ({}.NODE_ENV !== "production")
    for (var i = 0; i < n.length; i++)
      J(ho(n[i]));
  return t.concat(n);
}
var Y0 = Dt(), PN = Dt(), Zg = (
  /** @class */
  function() {
    function r() {
    }
    return r.prototype.getColorFromPalette = function(e, t, a) {
      var n = Pt(this.get("color", !0)), i = this.get("colorLayer", !0);
      return YD(this, Y0, n, i, e, t, a);
    }, r.prototype.clearColorPalette = function() {
      NN(this, Y0);
    }, r;
  }()
);
function lp(r, e, t, a) {
  var n = Pt(r.get(["aria", "decal", "decals"]));
  return YD(r, PN, n, null, e, t, a);
}
function RN(r, e) {
  for (var t = r.length, a = 0; a < t; a++)
    if (r[a].length > e)
      return r[a];
  return r[t - 1];
}
function YD(r, e, t, a, n, i, o) {
  i = i || r;
  var s = e(i), l = s.paletteIdx || 0, u = s.paletteNameMap = s.paletteNameMap || {};
  if (u.hasOwnProperty(n))
    return u[n];
  var f = o == null || !a ? t : RN(a, o);
  if (f = f || t, !(!f || !f.length)) {
    var h = f[l];
    return n && (u[n] = h), s.paletteIdx = (l + 1) % f.length, h;
  }
}
function NN(r, e) {
  e(r).paletteIdx = 0, e(r).paletteNameMap = {};
}
var eu, Xo, Z0, Gc = "\0_ec_inner", X0 = 1, ON = {
  grid: "GridComponent",
  polar: "PolarComponent",
  geo: "GeoComponent",
  singleAxis: "SingleAxisComponent",
  parallel: "ParallelComponent",
  calendar: "CalendarComponent",
  graphic: "GraphicComponent",
  toolbox: "ToolboxComponent",
  tooltip: "TooltipComponent",
  axisPointer: "AxisPointerComponent",
  brush: "BrushComponent",
  title: "TitleComponent",
  timeline: "TimelineComponent",
  markPoint: "MarkPointComponent",
  markLine: "MarkLineComponent",
  markArea: "MarkAreaComponent",
  legend: "LegendComponent",
  dataZoom: "DataZoomComponent",
  visualMap: "VisualMapComponent",
  // aria: 'AriaComponent',
  // dataset: 'DatasetComponent',
  // Dependencies
  xAxis: "GridComponent",
  yAxis: "GridComponent",
  angleAxis: "PolarComponent",
  radiusAxis: "PolarComponent"
}, kN = {
  line: "LineChart",
  bar: "BarChart",
  pie: "PieChart",
  scatter: "ScatterChart",
  radar: "RadarChart",
  map: "MapChart",
  tree: "TreeChart",
  treemap: "TreemapChart",
  graph: "GraphChart",
  gauge: "GaugeChart",
  funnel: "FunnelChart",
  parallel: "ParallelChart",
  sankey: "SankeyChart",
  boxplot: "BoxplotChart",
  candlestick: "CandlestickChart",
  effectScatter: "EffectScatterChart",
  lines: "LinesChart",
  heatmap: "HeatmapChart",
  pictorialBar: "PictorialBarChart",
  themeRiver: "ThemeRiverChart",
  sunburst: "SunburstChart",
  custom: "CustomChart"
}, Tf = {};
function VN(r) {
  M(r, function(e, t) {
    if (!xt.hasClass(t)) {
      var a = ON[t];
      a && !Tf[a] && (ve("Component " + t + " is used but not imported.\nimport { " + a + " } from 'echarts/components';\necharts.use([" + a + "]);"), Tf[a] = !0);
    }
  });
}
var ZD = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return e.prototype.init = function(t, a, n, i, o, s) {
      i = i || {}, this.option = null, this._theme = new kt(i), this._locale = new kt(o), this._optionManager = s;
    }, e.prototype.setOption = function(t, a, n) {
      ({}).NODE_ENV !== "production" && (J(t != null, "option is null/undefined"), J(t[Gc] !== X0, "please use chart.getOption()"));
      var i = j0(a);
      this._optionManager.setOption(t, n, i), this._resetOption(null, i);
    }, e.prototype.resetOption = function(t, a) {
      return this._resetOption(t, j0(a));
    }, e.prototype._resetOption = function(t, a) {
      var n = !1, i = this._optionManager;
      if (!t || t === "recreate") {
        var o = i.mountOption(t === "recreate");
        ({}).NODE_ENV !== "production" && VN(o), !this.option || t === "recreate" ? Z0(this, o) : (this.restoreData(), this._mergeOption(o, a)), n = !0;
      }
      if ((t === "timeline" || t === "media") && this.restoreData(), !t || t === "recreate" || t === "timeline") {
        var s = i.getTimelineOption(this);
        s && (n = !0, this._mergeOption(s, a));
      }
      if (!t || t === "recreate" || t === "media") {
        var l = i.getMediaOption(this);
        l.length && M(l, function(u) {
          n = !0, this._mergeOption(u, a);
        }, this);
      }
      return n;
    }, e.prototype.mergeOption = function(t) {
      this._mergeOption(t, null);
    }, e.prototype._mergeOption = function(t, a) {
      var n = this.option, i = this._componentsMap, o = this._componentsCount, s = [], l = X(), u = a && a.replaceMergeMainTypeMap;
      MN(this), M(t, function(h, c) {
        h != null && (xt.hasClass(c) ? c && (s.push(c), l.set(c, !0)) : n[c] = n[c] == null ? at(h) : ht(n[c], h, !0));
      }), u && u.each(function(h, c) {
        xt.hasClass(c) && !l.get(c) && (s.push(c), l.set(c, !0));
      }), xt.topologicalTravel(s, xt.getAllClassMainTypes(), f, this);
      function f(h) {
        var c = EN(this, h, Pt(t[h])), v = i.get(h), d = (
          // `!oldCmptList` means init. See the comment in `mappingToExists`
          v ? u && u.get(h) ? "replaceMerge" : "normalMerge" : "replaceAll"
        ), p = ST(v, c, d);
        jE(p, h, xt), n[h] = null, i.set(h, null), o.set(h, 0);
        var g = [], y = [], m = 0, _, S;
        M(p, function(w, x) {
          var b = w.existing, T = w.newOption;
          if (!T)
            b && (b.mergeOption({}, this), b.optionUpdated({}, !1));
          else {
            var C = h === "series", D = xt.getClass(
              h,
              w.keyInfo.subType,
              !C
              // Give a more detailed warn later if series don't exists
            );
            if (!D) {
              if ({}.NODE_ENV !== "production") {
                var A = w.keyInfo.subType, I = kN[A];
                Tf[A] || (Tf[A] = !0, ve(I ? "Series " + A + " is used but not imported.\nimport { " + I + " } from 'echarts/charts';\necharts.use([" + I + "]);" : "Unknown series " + A));
              }
              return;
            }
            if (h === "tooltip") {
              if (_) {
                ({}).NODE_ENV !== "production" && (S || (Ft("Currently only one tooltip component is allowed."), S = !0));
                return;
              }
              _ = !0;
            }
            if (b && b.constructor === D)
              b.name = w.keyInfo.name, b.mergeOption(T, this), b.optionUpdated(T, !1);
            else {
              var L = V({
                componentIndex: x
              }, w.keyInfo);
              b = new D(T, this, this, L), V(b, L), w.brandNew && (b.__requireNewView = !0), b.init(T, this, this), b.optionUpdated(null, !0);
            }
          }
          b ? (g.push(b.option), y.push(b), m++) : (g.push(void 0), y.push(void 0));
        }, this), n[h] = g, i.set(h, y), o.set(h, m), h === "series" && eu(this);
      }
      this._seriesIndices || eu(this);
    }, e.prototype.getOption = function() {
      var t = at(this.option);
      return M(t, function(a, n) {
        if (xt.hasClass(n)) {
          for (var i = Pt(a), o = i.length, s = !1, l = o - 1; l >= 0; l--)
            i[l] && !ho(i[l]) ? s = !0 : (i[l] = null, !s && o--);
          i.length = o, t[n] = i;
        }
      }), delete t[Gc], t;
    }, e.prototype.getTheme = function() {
      return this._theme;
    }, e.prototype.getLocaleModel = function() {
      return this._locale;
    }, e.prototype.setUpdatePayload = function(t) {
      this._payload = t;
    }, e.prototype.getUpdatePayload = function() {
      return this._payload;
    }, e.prototype.getComponent = function(t, a) {
      var n = this._componentsMap.get(t);
      if (n) {
        var i = n[a || 0];
        if (i)
          return i;
        if (a == null) {
          for (var o = 0; o < n.length; o++)
            if (n[o])
              return n[o];
        }
      }
    }, e.prototype.queryComponents = function(t) {
      var a = t.mainType;
      if (!a)
        return [];
      var n = t.index, i = t.id, o = t.name, s = this._componentsMap.get(a);
      if (!s || !s.length)
        return [];
      var l;
      return n != null ? (l = [], M(Pt(n), function(u) {
        s[u] && l.push(s[u]);
      })) : i != null ? l = q0("id", i, s) : o != null ? l = q0("name", o, s) : l = Et(s, function(u) {
        return !!u;
      }), K0(l, t);
    }, e.prototype.findComponents = function(t) {
      var a = t.query, n = t.mainType, i = s(a), o = i ? this.queryComponents(i) : Et(this._componentsMap.get(n), function(u) {
        return !!u;
      });
      return l(K0(o, t));
      function s(u) {
        var f = n + "Index", h = n + "Id", c = n + "Name";
        return u && (u[f] != null || u[h] != null || u[c] != null) ? {
          mainType: n,
          // subType will be filtered finally.
          index: u[f],
          id: u[h],
          name: u[c]
        } : null;
      }
      function l(u) {
        return t.filter ? Et(u, t.filter) : u;
      }
    }, e.prototype.eachComponent = function(t, a, n) {
      var i = this._componentsMap;
      if (K(t)) {
        var o = a, s = t;
        i.each(function(h, c) {
          for (var v = 0; h && v < h.length; v++) {
            var d = h[v];
            d && s.call(o, c, d, d.componentIndex);
          }
        });
      } else
        for (var l = $(t) ? i.get(t) : j(t) ? this.findComponents(t) : null, u = 0; l && u < l.length; u++) {
          var f = l[u];
          f && a.call(n, f, f.componentIndex);
        }
    }, e.prototype.getSeriesByName = function(t) {
      var a = re(t, null);
      return Et(this._componentsMap.get("series"), function(n) {
        return !!n && a != null && n.name === a;
      });
    }, e.prototype.getSeriesByIndex = function(t) {
      return this._componentsMap.get("series")[t];
    }, e.prototype.getSeriesByType = function(t) {
      return Et(this._componentsMap.get("series"), function(a) {
        return !!a && a.subType === t;
      });
    }, e.prototype.getSeries = function() {
      return Et(this._componentsMap.get("series"), function(t) {
        return !!t;
      });
    }, e.prototype.getSeriesCount = function() {
      return this._componentsCount.get("series");
    }, e.prototype.eachSeries = function(t, a) {
      Xo(this), M(this._seriesIndices, function(n) {
        var i = this._componentsMap.get("series")[n];
        t.call(a, i, n);
      }, this);
    }, e.prototype.eachRawSeries = function(t, a) {
      M(this._componentsMap.get("series"), function(n) {
        n && t.call(a, n, n.componentIndex);
      });
    }, e.prototype.eachSeriesByType = function(t, a, n) {
      Xo(this), M(this._seriesIndices, function(i) {
        var o = this._componentsMap.get("series")[i];
        o.subType === t && a.call(n, o, i);
      }, this);
    }, e.prototype.eachRawSeriesByType = function(t, a, n) {
      return M(this.getSeriesByType(t), a, n);
    }, e.prototype.isSeriesFiltered = function(t) {
      return Xo(this), this._seriesIndicesMap.get(t.componentIndex) == null;
    }, e.prototype.getCurrentSeriesIndices = function() {
      return (this._seriesIndices || []).slice();
    }, e.prototype.filterSeries = function(t, a) {
      Xo(this);
      var n = [];
      M(this._seriesIndices, function(i) {
        var o = this._componentsMap.get("series")[i];
        t.call(a, o, i) && n.push(i);
      }, this), this._seriesIndices = n, this._seriesIndicesMap = X(n);
    }, e.prototype.restoreData = function(t) {
      eu(this);
      var a = this._componentsMap, n = [];
      a.each(function(i, o) {
        xt.hasClass(o) && n.push(o);
      }), xt.topologicalTravel(n, xt.getAllClassMainTypes(), function(i) {
        M(a.get(i), function(o) {
          o && (i !== "series" || !BN(o, t)) && o.restoreData();
        });
      });
    }, e.internalField = function() {
      eu = function(t) {
        var a = t._seriesIndices = [];
        M(t._componentsMap.get("series"), function(n) {
          n && a.push(n.componentIndex);
        }), t._seriesIndicesMap = X(a);
      }, Xo = function(t) {
        if ({}.NODE_ENV !== "production" && !t._seriesIndices)
          throw new Error("Option should contains series.");
      }, Z0 = function(t, a) {
        t.option = {}, t.option[Gc] = X0, t._componentsMap = X({
          series: []
        }), t._componentsCount = X();
        var n = a.aria;
        j(n) && n.enabled == null && (n.enabled = !0), zN(a, t._theme.option), ht(a, AN, !1), t._mergeOption(a, null);
      };
    }(), e;
  }(kt)
);
function BN(r, e) {
  if (e) {
    var t = e.seriesIndex, a = e.seriesId, n = e.seriesName;
    return t != null && r.componentIndex !== t || a != null && r.id !== a || n != null && r.name !== n;
  }
}
function zN(r, e) {
  var t = r.color && !r.colorLayer;
  M(e, function(a, n) {
    n === "colorLayer" && t || xt.hasClass(n) || (typeof a == "object" ? r[n] = r[n] ? ht(r[n], a, !1) : at(a) : r[n] == null && (r[n] = a));
  });
}
function q0(r, e, t) {
  if (z(e)) {
    var a = X();
    return M(e, function(i) {
      if (i != null) {
        var o = re(i, null);
        o != null && a.set(i, !0);
      }
    }), Et(t, function(i) {
      return i && a.get(i[r]);
    });
  } else {
    var n = re(e, null);
    return Et(t, function(i) {
      return i && n != null && i[r] === n;
    });
  }
}
function K0(r, e) {
  return e.hasOwnProperty("subType") ? Et(r, function(t) {
    return t && t.subType === e.subType;
  }) : r;
}
function j0(r) {
  var e = X();
  return r && M(Pt(r.replaceMerge), function(t) {
    ({}).NODE_ENV !== "production" && J(xt.hasClass(t), '"' + t + '" is not valid component main type in "replaceMerge"'), e.set(t, !0);
  }), {
    replaceMergeMainTypeMap: e
  };
}
te(ZD, Zg);
const XD = ZD;
var GN = [
  "getDom",
  "getZr",
  "getWidth",
  "getHeight",
  "getDevicePixelRatio",
  "dispatchAction",
  "isSSR",
  "isDisposed",
  "on",
  "off",
  "getDataURL",
  "getConnectedDataURL",
  // 'getModel',
  "getOption",
  // 'getViewOfComponentModel',
  // 'getViewOfSeriesModel',
  "getId",
  "updateLabelLayout"
], FN = (
  /** @class */
  function() {
    function r(e) {
      M(GN, function(t) {
        this[t] = Y(e[t], e);
      }, this);
    }
    return r;
  }()
);
const qD = FN;
var Fc = {}, HN = (
  /** @class */
  function() {
    function r() {
      this._coordinateSystems = [];
    }
    return r.prototype.create = function(e, t) {
      var a = [];
      M(Fc, function(n, i) {
        var o = n.create(e, t);
        a = a.concat(o || []);
      }), this._coordinateSystems = a;
    }, r.prototype.update = function(e, t) {
      M(this._coordinateSystems, function(a) {
        a.update && a.update(e, t);
      });
    }, r.prototype.getCoordinateSystems = function() {
      return this._coordinateSystems.slice();
    }, r.register = function(e, t) {
      Fc[e] = t;
    }, r.get = function(e) {
      return Fc[e];
    }, r;
  }()
);
const Oo = HN;
var WN = /^(min|max)?(.+)$/, $N = (
  /** @class */
  function() {
    function r(e) {
      this._timelineOptions = [], this._mediaList = [], this._currentMediaIndices = [], this._api = e;
    }
    return r.prototype.setOption = function(e, t, a) {
      e && (M(Pt(e.series), function(o) {
        o && o.data && Be(o.data) && of(o.data);
      }), M(Pt(e.dataset), function(o) {
        o && o.source && Be(o.source) && of(o.source);
      })), e = at(e);
      var n = this._optionBackup, i = UN(e, t, !n);
      this._newBaseOption = i.baseOption, n ? (i.timelineOptions.length && (n.timelineOptions = i.timelineOptions), i.mediaList.length && (n.mediaList = i.mediaList), i.mediaDefault && (n.mediaDefault = i.mediaDefault)) : this._optionBackup = i;
    }, r.prototype.mountOption = function(e) {
      var t = this._optionBackup;
      return this._timelineOptions = t.timelineOptions, this._mediaList = t.mediaList, this._mediaDefault = t.mediaDefault, this._currentMediaIndices = [], at(e ? t.baseOption : this._newBaseOption);
    }, r.prototype.getTimelineOption = function(e) {
      var t, a = this._timelineOptions;
      if (a.length) {
        var n = e.getComponent("timeline");
        n && (t = at(
          // FIXME:TS as TimelineModel or quivlant interface
          a[n.getCurrentIndex()]
        ));
      }
      return t;
    }, r.prototype.getMediaOption = function(e) {
      var t = this._api.getWidth(), a = this._api.getHeight(), n = this._mediaList, i = this._mediaDefault, o = [], s = [];
      if (!n.length && !i)
        return s;
      for (var l = 0, u = n.length; l < u; l++)
        YN(n[l].query, t, a) && o.push(l);
      return !o.length && i && (o = [-1]), o.length && !XN(o, this._currentMediaIndices) && (s = G(o, function(f) {
        return at(f === -1 ? i.option : n[f].option);
      })), this._currentMediaIndices = o, s;
    }, r;
  }()
);
function UN(r, e, t) {
  var a = [], n, i, o = r.baseOption, s = r.timeline, l = r.options, u = r.media, f = !!r.media, h = !!(l || s || o && o.timeline);
  o ? (i = o, i.timeline || (i.timeline = s)) : ((h || f) && (r.options = r.media = null), i = r), f && (z(u) ? M(u, function(v) {
    ({}).NODE_ENV !== "production" && v && !v.option && j(v.query) && j(v.query.option) && ve("Illegal media option. Must be like { media: [ { query: {}, option: {} } ] }"), v && v.option && (v.query ? a.push(v) : n || (n = v));
  }) : {}.NODE_ENV !== "production" && ve("Illegal media option. Must be an array. Like { media: [ {...}, {...} ] }")), c(i), M(l, function(v) {
    return c(v);
  }), M(a, function(v) {
    return c(v.option);
  });
  function c(v) {
    M(e, function(d) {
      d(v, t);
    });
  }
  return {
    baseOption: i,
    timelineOptions: l || [],
    mediaDefault: n,
    mediaList: a
  };
}
function YN(r, e, t) {
  var a = {
    width: e,
    height: t,
    aspectratio: e / t
    // lower case for convenience.
  }, n = !0;
  return M(r, function(i, o) {
    var s = o.match(WN);
    if (!(!s || !s[1] || !s[2])) {
      var l = s[1], u = s[2].toLowerCase();
      ZN(a[u], i, l) || (n = !1);
    }
  }), n;
}
function ZN(r, e, t) {
  return t === "min" ? r >= e : t === "max" ? r <= e : r === e;
}
function XN(r, e) {
  return r.join(",") === e.join(",");
}
const qN = $N;
var Ze = M, Qs = j, J0 = ["areaStyle", "lineStyle", "nodeStyle", "linkStyle", "chordStyle", "label", "labelLine"];
function Hc(r) {
  var e = r && r.itemStyle;
  if (e)
    for (var t = 0, a = J0.length; t < a; t++) {
      var n = J0[t], i = e.normal, o = e.emphasis;
      i && i[n] && ({}.NODE_ENV !== "production" && Kt("itemStyle.normal." + n, n), r[n] = r[n] || {}, r[n].normal ? ht(r[n].normal, i[n]) : r[n].normal = i[n], i[n] = null), o && o[n] && ({}.NODE_ENV !== "production" && Kt("itemStyle.emphasis." + n, "emphasis." + n), r[n] = r[n] || {}, r[n].emphasis ? ht(r[n].emphasis, o[n]) : r[n].emphasis = o[n], o[n] = null);
    }
}
function Se(r, e, t) {
  if (r && r[e] && (r[e].normal || r[e].emphasis)) {
    var a = r[e].normal, n = r[e].emphasis;
    a && ({}.NODE_ENV !== "production" && Ar("'normal' hierarchy in " + e + " has been removed since 4.0. All style properties are configured in " + e + " directly now."), t ? (r[e].normal = r[e].emphasis = null, et(r[e], a)) : r[e] = a), n && ({}.NODE_ENV !== "production" && Ar(e + ".emphasis has been changed to emphasis." + e + " since 4.0"), r.emphasis = r.emphasis || {}, r.emphasis[e] = n, n.focus && (r.emphasis.focus = n.focus), n.blurScope && (r.emphasis.blurScope = n.blurScope));
  }
}
function ws(r) {
  Se(r, "itemStyle"), Se(r, "lineStyle"), Se(r, "areaStyle"), Se(r, "label"), Se(r, "labelLine"), Se(r, "upperLabel"), Se(r, "edgeLabel");
}
function qt(r, e) {
  var t = Qs(r) && r[e], a = Qs(t) && t.textStyle;
  if (a) {
    ({}).NODE_ENV !== "production" && Ar("textStyle hierarchy in " + e + " has been removed since 4.0. All textStyle properties are configured in " + e + " directly now.");
    for (var n = 0, i = t0.length; n < i; n++) {
      var o = t0[n];
      a.hasOwnProperty(o) && (t[o] = a[o]);
    }
  }
}
function tr(r) {
  r && (ws(r), qt(r, "label"), r.emphasis && qt(r.emphasis, "label"));
}
function KN(r) {
  if (Qs(r)) {
    Hc(r), ws(r), qt(r, "label"), qt(r, "upperLabel"), qt(r, "edgeLabel"), r.emphasis && (qt(r.emphasis, "label"), qt(r.emphasis, "upperLabel"), qt(r.emphasis, "edgeLabel"));
    var e = r.markPoint;
    e && (Hc(e), tr(e));
    var t = r.markLine;
    t && (Hc(t), tr(t));
    var a = r.markArea;
    a && tr(a);
    var n = r.data;
    if (r.type === "graph") {
      n = n || r.nodes;
      var i = r.links || r.edges;
      if (i && !Be(i))
        for (var o = 0; o < i.length; o++)
          tr(i[o]);
      M(r.categories, function(u) {
        ws(u);
      });
    }
    if (n && !Be(n))
      for (var o = 0; o < n.length; o++)
        tr(n[o]);
    if (e = r.markPoint, e && e.data)
      for (var s = e.data, o = 0; o < s.length; o++)
        tr(s[o]);
    if (t = r.markLine, t && t.data)
      for (var l = t.data, o = 0; o < l.length; o++)
        z(l[o]) ? (tr(l[o][0]), tr(l[o][1])) : tr(l[o]);
    r.type === "gauge" ? (qt(r, "axisLabel"), qt(r, "title"), qt(r, "detail")) : r.type === "treemap" ? (Se(r.breadcrumb, "itemStyle"), M(r.levels, function(u) {
      ws(u);
    })) : r.type === "tree" && ws(r.leaves);
  }
}
function ra(r) {
  return z(r) ? r : r ? [r] : [];
}
function Q0(r) {
  return (z(r) ? r[0] : r) || {};
}
function jN(r, e) {
  Ze(ra(r.series), function(a) {
    Qs(a) && KN(a);
  });
  var t = ["xAxis", "yAxis", "radiusAxis", "angleAxis", "singleAxis", "parallelAxis", "radar"];
  e && t.push("valueAxis", "categoryAxis", "logAxis", "timeAxis"), Ze(t, function(a) {
    Ze(ra(r[a]), function(n) {
      n && (qt(n, "axisLabel"), qt(n.axisPointer, "label"));
    });
  }), Ze(ra(r.parallel), function(a) {
    var n = a && a.parallelAxisDefault;
    qt(n, "axisLabel"), qt(n && n.axisPointer, "label");
  }), Ze(ra(r.calendar), function(a) {
    Se(a, "itemStyle"), qt(a, "dayLabel"), qt(a, "monthLabel"), qt(a, "yearLabel");
  }), Ze(ra(r.radar), function(a) {
    qt(a, "name"), a.name && a.axisName == null && (a.axisName = a.name, delete a.name, {}.NODE_ENV !== "production" && Ar("name property in radar component has been changed to axisName")), a.nameGap != null && a.axisNameGap == null && (a.axisNameGap = a.nameGap, delete a.nameGap, {}.NODE_ENV !== "production" && Ar("nameGap property in radar component has been changed to axisNameGap")), {}.NODE_ENV !== "production" && Ze(a.indicator, function(n) {
      n.text && Kt("text", "name", "radar.indicator");
    });
  }), Ze(ra(r.geo), function(a) {
    Qs(a) && (tr(a), Ze(ra(a.regions), function(n) {
      tr(n);
    }));
  }), Ze(ra(r.timeline), function(a) {
    tr(a), Se(a, "label"), Se(a, "itemStyle"), Se(a, "controlStyle", !0);
    var n = a.data;
    z(n) && M(n, function(i) {
      j(i) && (Se(i, "label"), Se(i, "itemStyle"));
    });
  }), Ze(ra(r.toolbox), function(a) {
    Se(a, "iconStyle"), Ze(a.feature, function(n) {
      Se(n, "iconStyle");
    });
  }), qt(Q0(r.axisPointer), "label"), qt(Q0(r.tooltip).axisPointer, "label");
}
function JN(r, e) {
  for (var t = e.split(","), a = r, n = 0; n < t.length && (a = a && a[t[n]], a != null); n++)
    ;
  return a;
}
function QN(r, e, t, a) {
  for (var n = e.split(","), i = r, o, s = 0; s < n.length - 1; s++)
    o = n[s], i[o] == null && (i[o] = {}), i = i[o];
  (a || i[n[s]] == null) && (i[n[s]] = t);
}
function t_(r) {
  r && M(tO, function(e) {
    e[0] in r && !(e[1] in r) && (r[e[1]] = r[e[0]]);
  });
}
var tO = [["x", "left"], ["y", "top"], ["x2", "right"], ["y2", "bottom"]], eO = ["grid", "geo", "parallel", "legend", "toolbox", "title", "visualMap", "dataZoom", "timeline"], Wc = [["borderRadius", "barBorderRadius"], ["borderColor", "barBorderColor"], ["borderWidth", "barBorderWidth"]];
function qo(r) {
  var e = r && r.itemStyle;
  if (e)
    for (var t = 0; t < Wc.length; t++) {
      var a = Wc[t][1], n = Wc[t][0];
      e[a] != null && (e[n] = e[a], {}.NODE_ENV !== "production" && Kt(a, n));
    }
}
function e_(r) {
  r && r.alignTo === "edge" && r.margin != null && r.edgeDistance == null && ({}.NODE_ENV !== "production" && Kt("label.margin", "label.edgeDistance", "pie"), r.edgeDistance = r.margin);
}
function r_(r) {
  r && r.downplay && !r.blur && (r.blur = r.downplay, {}.NODE_ENV !== "production" && Kt("downplay", "blur", "sunburst"));
}
function rO(r) {
  r && r.focusNodeAdjacency != null && (r.emphasis = r.emphasis || {}, r.emphasis.focus == null && ({}.NODE_ENV !== "production" && Kt("focusNodeAdjacency", "emphasis: { focus: 'adjacency'}", "graph/sankey"), r.emphasis.focus = "adjacency"));
}
function KD(r, e) {
  if (r)
    for (var t = 0; t < r.length; t++)
      e(r[t]), r[t] && KD(r[t].children, e);
}
function jD(r, e) {
  jN(r, e), r.series = Pt(r.series), M(r.series, function(t) {
    if (j(t)) {
      var a = t.type;
      if (a === "line")
        t.clipOverflow != null && (t.clip = t.clipOverflow, {}.NODE_ENV !== "production" && Kt("clipOverflow", "clip", "line"));
      else if (a === "pie" || a === "gauge") {
        t.clockWise != null && (t.clockwise = t.clockWise, {}.NODE_ENV !== "production" && Kt("clockWise", "clockwise")), e_(t.label);
        var n = t.data;
        if (n && !Be(n))
          for (var i = 0; i < n.length; i++)
            e_(n[i]);
        t.hoverOffset != null && (t.emphasis = t.emphasis || {}, (t.emphasis.scaleSize = null) && ({}.NODE_ENV !== "production" && Kt("hoverOffset", "emphasis.scaleSize"), t.emphasis.scaleSize = t.hoverOffset));
      } else if (a === "gauge") {
        var o = JN(t, "pointer.color");
        o != null && QN(t, "itemStyle.color", o);
      } else if (a === "bar") {
        qo(t), qo(t.backgroundStyle), qo(t.emphasis);
        var n = t.data;
        if (n && !Be(n))
          for (var i = 0; i < n.length; i++)
            typeof n[i] == "object" && (qo(n[i]), qo(n[i] && n[i].emphasis));
      } else if (a === "sunburst") {
        var s = t.highlightPolicy;
        s && (t.emphasis = t.emphasis || {}, t.emphasis.focus || (t.emphasis.focus = s, {}.NODE_ENV !== "production" && Kt("highlightPolicy", "emphasis.focus", "sunburst"))), r_(t), KD(t.data, r_);
      } else
        a === "graph" || a === "sankey" ? rO(t) : a === "map" && (t.mapType && !t.map && ({}.NODE_ENV !== "production" && Kt("mapType", "map", "map"), t.map = t.mapType), t.mapLocation && ({}.NODE_ENV !== "production" && Ar("`mapLocation` is not used anymore."), et(t, t.mapLocation)));
      t.hoverAnimation != null && (t.emphasis = t.emphasis || {}, t.emphasis && t.emphasis.scale == null && ({}.NODE_ENV !== "production" && Kt("hoverAnimation", "emphasis.scale"), t.emphasis.scale = t.hoverAnimation)), t_(t);
    }
  }), r.dataRange && (r.visualMap = r.dataRange), M(eO, function(t) {
    var a = r[t];
    a && (z(a) || (a = [a]), M(a, function(n) {
      t_(n);
    }));
  });
}
function aO(r) {
  var e = X();
  r.eachSeries(function(t) {
    var a = t.get("stack");
    if (a) {
      var n = e.get(a) || e.set(a, []), i = t.getData(), o = {
        // Used for calculate axis extent automatically.
        // TODO: Type getCalculationInfo return more specific type?
        stackResultDimension: i.getCalculationInfo("stackResultDimension"),
        stackedOverDimension: i.getCalculationInfo("stackedOverDimension"),
        stackedDimension: i.getCalculationInfo("stackedDimension"),
        stackedByDimension: i.getCalculationInfo("stackedByDimension"),
        isStackedByIndex: i.getCalculationInfo("isStackedByIndex"),
        data: i,
        seriesModel: t
      };
      if (!o.stackedDimension || !(o.isStackedByIndex || o.stackedByDimension))
        return;
      n.length && i.setCalculationInfo("stackedOnSeries", n[n.length - 1].seriesModel), n.push(o);
    }
  }), e.each(nO);
}
function nO(r) {
  M(r, function(e, t) {
    var a = [], n = [NaN, NaN], i = [e.stackResultDimension, e.stackedOverDimension], o = e.data, s = e.isStackedByIndex, l = e.seriesModel.get("stackStrategy") || "samesign";
    o.modify(i, function(u, f, h) {
      var c = o.get(e.stackedDimension, h);
      if (isNaN(c))
        return n;
      var v, d;
      s ? d = o.getRawIndex(h) : v = o.get(e.stackedByDimension, h);
      for (var p = NaN, g = t - 1; g >= 0; g--) {
        var y = r[g];
        if (s || (d = y.data.rawIndexOf(y.stackedByDimension, v)), d >= 0) {
          var m = y.data.getByRawIndex(y.stackResultDimension, d);
          if (l === "all" || l === "positive" && m > 0 || l === "negative" && m < 0 || l === "samesign" && c >= 0 && m > 0 || l === "samesign" && c <= 0 && m < 0) {
            c = VE(c, m), p = m;
            break;
          }
        }
      }
      return a[0] = c, a[1] = p, a;
    });
  });
}
var Eh = (
  /** @class */
  function() {
    function r(e) {
      this.data = e.data || (e.sourceFormat === Jr ? {} : []), this.sourceFormat = e.sourceFormat || FD, this.seriesLayoutBy = e.seriesLayoutBy || Ur, this.startIndex = e.startIndex || 0, this.dimensionsDetectedCount = e.dimensionsDetectedCount, this.metaRawOption = e.metaRawOption;
      var t = this.dimensionsDefine = e.dimensionsDefine;
      if (t)
        for (var a = 0; a < t.length; a++) {
          var n = t[a];
          n.type == null && $D(this, a) === fe.Must && (n.type = "ordinal");
        }
    }
    return r;
  }()
);
function Xg(r) {
  return r instanceof Eh;
}
function up(r, e, t) {
  t = t || JD(r);
  var a = e.seriesLayoutBy, n = oO(r, t, a, e.sourceHeader, e.dimensions), i = new Eh({
    data: r,
    sourceFormat: t,
    seriesLayoutBy: a,
    dimensionsDefine: n.dimensionsDefine,
    startIndex: n.startIndex,
    dimensionsDetectedCount: n.dimensionsDetectedCount,
    metaRawOption: at(e)
  });
  return i;
}
function qg(r) {
  return new Eh({
    data: r,
    sourceFormat: Be(r) ? ha : vr
  });
}
function iO(r) {
  return new Eh({
    data: r.data,
    sourceFormat: r.sourceFormat,
    seriesLayoutBy: r.seriesLayoutBy,
    dimensionsDefine: at(r.dimensionsDefine),
    startIndex: r.startIndex,
    dimensionsDetectedCount: r.dimensionsDetectedCount
  });
}
function JD(r) {
  var e = FD;
  if (Be(r))
    e = ha;
  else if (z(r)) {
    r.length === 0 && (e = we);
    for (var t = 0, a = r.length; t < a; t++) {
      var n = r[t];
      if (n != null) {
        if (z(n)) {
          e = we;
          break;
        } else if (j(n)) {
          e = dr;
          break;
        }
      }
    }
  } else if (j(r)) {
    for (var i in r)
      if (U(r, i) && xe(r[i])) {
        e = Jr;
        break;
      }
  }
  return e;
}
function oO(r, e, t, a, n) {
  var i, o;
  if (!r)
    return {
      dimensionsDefine: a_(n),
      startIndex: o,
      dimensionsDetectedCount: i
    };
  if (e === we) {
    var s = r;
    a === "auto" || a == null ? n_(function(u) {
      u != null && u !== "-" && ($(u) ? o == null && (o = 1) : o = 0);
    }, t, s, 10) : o = At(a) ? a : a ? 1 : 0, !n && o === 1 && (n = [], n_(function(u, f) {
      n[f] = u != null ? u + "" : "";
    }, t, s, 1 / 0)), i = n ? n.length : t === No ? s.length : s[0] ? s[0].length : null;
  } else if (e === dr)
    n || (n = sO(r));
  else if (e === Jr)
    n || (n = [], M(r, function(u, f) {
      n.push(f);
    }));
  else if (e === vr) {
    var l = Do(r[0]);
    i = z(l) && l.length || 1;
  } else
    e === ha && {}.NODE_ENV !== "production" && J(!!n, "dimensions must be given if data is TypedArray.");
  return {
    startIndex: o,
    dimensionsDefine: a_(n),
    dimensionsDetectedCount: i
  };
}
function sO(r) {
  for (var e = 0, t; e < r.length && !(t = r[e++]); )
    ;
  if (t)
    return _t(t);
}
function a_(r) {
  if (r) {
    var e = X();
    return G(r, function(t, a) {
      t = j(t) ? t : {
        name: t
      };
      var n = {
        name: t.name,
        displayName: t.displayName,
        type: t.type
      };
      if (n.name == null)
        return n;
      n.name += "", n.displayName == null && (n.displayName = n.name);
      var i = e.get(n.name);
      return i ? n.name += "-" + i.count++ : e.set(n.name, {
        count: 1
      }), n;
    });
  }
}
function n_(r, e, t, a) {
  if (e === No)
    for (var n = 0; n < t.length && n < a; n++)
      r(t[n] ? t[n][0] : null, n);
  else
    for (var i = t[0] || [], n = 0; n < i.length && n < a; n++)
      r(i[n], n);
}
function QD(r) {
  var e = r.sourceFormat;
  return e === dr || e === Jr;
}
var An, Mn, In, i_, o_, tC = (
  /** @class */
  function() {
    function r(e, t) {
      var a = Xg(e) ? e : qg(e);
      this._source = a;
      var n = this._data = a.data;
      if (a.sourceFormat === ha) {
        if ({}.NODE_ENV !== "production" && t == null)
          throw new Error("Typed array data must specify dimension size");
        this._offset = 0, this._dimSize = t, this._data = n;
      }
      o_(this, n, a);
    }
    return r.prototype.getSource = function() {
      return this._source;
    }, r.prototype.count = function() {
      return 0;
    }, r.prototype.getItem = function(e, t) {
    }, r.prototype.appendData = function(e) {
    }, r.prototype.clean = function() {
    }, r.protoInitialize = function() {
      var e = r.prototype;
      e.pure = !1, e.persistent = !0;
    }(), r.internalField = function() {
      var e;
      o_ = function(o, s, l) {
        var u = l.sourceFormat, f = l.seriesLayoutBy, h = l.startIndex, c = l.dimensionsDefine, v = i_[Kg(u, f)];
        if ({}.NODE_ENV !== "production" && J(v, "Invalide sourceFormat: " + u), V(o, v), u === ha)
          o.getItem = t, o.count = n, o.fillStorage = a;
        else {
          var d = eC(u, f);
          o.getItem = Y(d, null, s, h, c);
          var p = rC(u, f);
          o.count = Y(p, null, s, h, c);
        }
      };
      var t = function(o, s) {
        o = o - this._offset, s = s || [];
        for (var l = this._data, u = this._dimSize, f = u * o, h = 0; h < u; h++)
          s[h] = l[f + h];
        return s;
      }, a = function(o, s, l, u) {
        for (var f = this._data, h = this._dimSize, c = 0; c < h; c++) {
          for (var v = u[c], d = v[0] == null ? 1 / 0 : v[0], p = v[1] == null ? -1 / 0 : v[1], g = s - o, y = l[c], m = 0; m < g; m++) {
            var _ = f[m * h + c];
            y[o + m] = _, _ < d && (d = _), _ > p && (p = _);
          }
          v[0] = d, v[1] = p;
        }
      }, n = function() {
        return this._data ? this._data.length / this._dimSize : 0;
      };
      i_ = (e = {}, e[we + "_" + Ur] = {
        pure: !0,
        appendData: i
      }, e[we + "_" + No] = {
        pure: !0,
        appendData: function() {
          throw new Error('Do not support appendData when set seriesLayoutBy: "row".');
        }
      }, e[dr] = {
        pure: !0,
        appendData: i
      }, e[Jr] = {
        pure: !0,
        appendData: function(o) {
          var s = this._data;
          M(o, function(l, u) {
            for (var f = s[u] || (s[u] = []), h = 0; h < (l || []).length; h++)
              f.push(l[h]);
          });
        }
      }, e[vr] = {
        appendData: i
      }, e[ha] = {
        persistent: !1,
        pure: !0,
        appendData: function(o) {
          ({}).NODE_ENV !== "production" && J(Be(o), "Added data must be TypedArray if data in initialization is TypedArray"), this._data = o;
        },
        // Clean self if data is already used.
        clean: function() {
          this._offset += this.count(), this._data = null;
        }
      }, e);
      function i(o) {
        for (var s = 0; s < o.length; s++)
          this._data.push(o[s]);
      }
    }(), r;
  }()
), s_ = function(r, e, t, a) {
  return r[a];
}, lO = (An = {}, An[we + "_" + Ur] = function(r, e, t, a) {
  return r[a + e];
}, An[we + "_" + No] = function(r, e, t, a, n) {
  a += e;
  for (var i = n || [], o = r, s = 0; s < o.length; s++) {
    var l = o[s];
    i[s] = l ? l[a] : null;
  }
  return i;
}, An[dr] = s_, An[Jr] = function(r, e, t, a, n) {
  for (var i = n || [], o = 0; o < t.length; o++) {
    var s = t[o].name;
    if ({}.NODE_ENV !== "production" && s == null)
      throw new Error();
    var l = r[s];
    i[o] = l ? l[a] : null;
  }
  return i;
}, An[vr] = s_, An);
function eC(r, e) {
  var t = lO[Kg(r, e)];
  return {}.NODE_ENV !== "production" && J(t, 'Do not support get item on "' + r + '", "' + e + '".'), t;
}
var l_ = function(r, e, t) {
  return r.length;
}, uO = (Mn = {}, Mn[we + "_" + Ur] = function(r, e, t) {
  return Math.max(0, r.length - e);
}, Mn[we + "_" + No] = function(r, e, t) {
  var a = r[0];
  return a ? Math.max(0, a.length - e) : 0;
}, Mn[dr] = l_, Mn[Jr] = function(r, e, t) {
  var a = t[0].name;
  if ({}.NODE_ENV !== "production" && a == null)
    throw new Error();
  var n = r[a];
  return n ? n.length : 0;
}, Mn[vr] = l_, Mn);
function rC(r, e) {
  var t = uO[Kg(r, e)];
  return {}.NODE_ENV !== "production" && J(t, 'Do not support count on "' + r + '", "' + e + '".'), t;
}
var $c = function(r, e, t) {
  return r[e];
}, fO = (In = {}, In[we] = $c, In[dr] = function(r, e, t) {
  return r[t];
}, In[Jr] = $c, In[vr] = function(r, e, t) {
  var a = Do(r);
  return a instanceof Array ? a[e] : a;
}, In[ha] = $c, In);
function aC(r) {
  var e = fO[r];
  return {}.NODE_ENV !== "production" && J(e, 'Do not support get value on "' + r + '".'), e;
}
function Kg(r, e) {
  return r === we ? r + "_" + e : r;
}
function vo(r, e, t) {
  if (r) {
    var a = r.getRawDataItem(e);
    if (a != null) {
      var n = r.getStore(), i = n.getSource().sourceFormat;
      if (t != null) {
        var o = r.getDimensionIndex(t), s = n.getDimensionProperty(o);
        return aC(i)(a, o, s);
      } else {
        var l = a;
        return i === vr && (l = Do(a)), l;
      }
    }
  }
}
var hO = /\{@(.+?)\}/g, jg = (
  /** @class */
  function() {
    function r() {
    }
    return r.prototype.getDataParams = function(e, t) {
      var a = this.getData(t), n = this.getRawValue(e, t), i = a.getRawIndex(e), o = a.getName(e), s = a.getRawDataItem(e), l = a.getItemVisual(e, "style"), u = l && l[a.getItemVisual(e, "drawType") || "fill"], f = l && l.stroke, h = this.mainType, c = h === "series", v = a.userOutput && a.userOutput.get();
      return {
        componentType: h,
        componentSubType: this.subType,
        componentIndex: this.componentIndex,
        seriesType: c ? this.subType : null,
        seriesIndex: this.seriesIndex,
        seriesId: c ? this.id : null,
        seriesName: c ? this.name : null,
        name: o,
        dataIndex: i,
        data: s,
        dataType: t,
        value: n,
        color: u,
        borderColor: f,
        dimensionNames: v ? v.fullDimensions : null,
        encode: v ? v.encode : null,
        // Param name list for mapping `a`, `b`, `c`, `d`, `e`
        $vars: ["seriesName", "name", "value"]
      };
    }, r.prototype.getFormattedLabel = function(e, t, a, n, i, o) {
      t = t || "normal";
      var s = this.getData(a), l = this.getDataParams(e, a);
      if (o && (l.value = o.interpolatedValue), n != null && z(l.value) && (l.value = l.value[n]), !i) {
        var u = s.getItemModel(e);
        i = u.get(t === "normal" ? ["label", "formatter"] : [t, "label", "formatter"]);
      }
      if (K(i))
        return l.status = t, l.dimensionIndex = n, i(l);
      if ($(i)) {
        var f = VD(i, l);
        return f.replace(hO, function(h, c) {
          var v = c.length, d = c;
          d.charAt(0) === "[" && d.charAt(v - 1) === "]" && (d = +d.slice(1, v - 1), {}.NODE_ENV !== "production" && isNaN(d) && ve("Invalide label formatter: @" + c + ", only support @[0], @[1], @[2], ..."));
          var p = vo(s, e, d);
          if (o && z(o.interpolatedValue)) {
            var g = s.getDimensionIndex(d);
            g >= 0 && (p = o.interpolatedValue[g]);
          }
          return p != null ? p + "" : "";
        });
      }
    }, r.prototype.getRawValue = function(e, t) {
      return vo(this.getData(t), e);
    }, r.prototype.formatTooltip = function(e, t, a) {
    }, r;
  }()
);
function u_(r) {
  var e, t;
  return j(r) ? r.type ? t = r : {}.NODE_ENV !== "production" && console.warn("The return type of `formatTooltip` is not supported: " + Ie(r)) : e = r, {
    text: e,
    // markers: markers || markersExisting,
    frag: t
  };
}
function Vs(r) {
  return new cO(r);
}
var cO = (
  /** @class */
  function() {
    function r(e) {
      e = e || {}, this._reset = e.reset, this._plan = e.plan, this._count = e.count, this._onDirty = e.onDirty, this._dirty = !0;
    }
    return r.prototype.perform = function(e) {
      var t = this._upstream, a = e && e.skip;
      if (this._dirty && t) {
        var n = this.context;
        n.data = n.outputData = t.context.outputData;
      }
      this.__pipeline && (this.__pipeline.currentTask = this);
      var i;
      this._plan && !a && (i = this._plan(this.context));
      var o = f(this._modBy), s = this._modDataCount || 0, l = f(e && e.modBy), u = e && e.modDataCount || 0;
      (o !== l || s !== u) && (i = "reset");
      function f(m) {
        return !(m >= 1) && (m = 1), m;
      }
      var h;
      (this._dirty || i === "reset") && (this._dirty = !1, h = this._doReset(a)), this._modBy = l, this._modDataCount = u;
      var c = e && e.step;
      if (t ? ({}.NODE_ENV !== "production" && J(t._outputDueEnd != null), this._dueEnd = t._outputDueEnd) : ({}.NODE_ENV !== "production" && J(!this._progress || this._count), this._dueEnd = this._count ? this._count(this.context) : 1 / 0), this._progress) {
        var v = this._dueIndex, d = Math.min(c != null ? this._dueIndex + c : 1 / 0, this._dueEnd);
        if (!a && (h || v < d)) {
          var p = this._progress;
          if (z(p))
            for (var g = 0; g < p.length; g++)
              this._doProgress(p[g], v, d, l, u);
          else
            this._doProgress(p, v, d, l, u);
        }
        this._dueIndex = d;
        var y = this._settedOutputEnd != null ? this._settedOutputEnd : d;
        ({}).NODE_ENV !== "production" && J(y >= this._outputDueEnd), this._outputDueEnd = y;
      } else
        this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;
      return this.unfinished();
    }, r.prototype.dirty = function() {
      this._dirty = !0, this._onDirty && this._onDirty(this.context);
    }, r.prototype._doProgress = function(e, t, a, n, i) {
      f_.reset(t, a, n, i), this._callingProgress = e, this._callingProgress({
        start: t,
        end: a,
        count: a - t,
        next: f_.next
      }, this.context);
    }, r.prototype._doReset = function(e) {
      this._dueIndex = this._outputDueEnd = this._dueEnd = 0, this._settedOutputEnd = null;
      var t, a;
      !e && this._reset && (t = this._reset(this.context), t && t.progress && (a = t.forceFirstProgress, t = t.progress), z(t) && !t.length && (t = null)), this._progress = t, this._modBy = this._modDataCount = null;
      var n = this._downstream;
      return n && n.dirty(), a;
    }, r.prototype.unfinished = function() {
      return this._progress && this._dueIndex < this._dueEnd;
    }, r.prototype.pipe = function(e) {
      ({}).NODE_ENV !== "production" && J(e && !e._disposed && e !== this), (this._downstream !== e || this._dirty) && (this._downstream = e, e._upstream = this, e.dirty());
    }, r.prototype.dispose = function() {
      this._disposed || (this._upstream && (this._upstream._downstream = null), this._downstream && (this._downstream._upstream = null), this._dirty = !1, this._disposed = !0);
    }, r.prototype.getUpstream = function() {
      return this._upstream;
    }, r.prototype.getDownstream = function() {
      return this._downstream;
    }, r.prototype.setOutputEnd = function(e) {
      this._outputDueEnd = this._settedOutputEnd = e;
    }, r;
  }()
), f_ = function() {
  var r, e, t, a, n, i = {
    reset: function(l, u, f, h) {
      e = l, r = u, t = f, a = h, n = Math.ceil(a / t), i.next = t > 1 && a > 0 ? s : o;
    }
  };
  return i;
  function o() {
    return e < r ? e++ : null;
  }
  function s() {
    var l = e % n * t + Math.ceil(e / n), u = e >= r ? null : l < a ? l : e;
    return e++, u;
  }
}();
function qa(r, e) {
  var t = e && e.type;
  return t === "ordinal" ? r : (t === "time" && !At(r) && r != null && r !== "-" && (r = +qr(r)), r == null || r === "" ? NaN : +r);
}
var vO = X({
  number: function(r) {
    return parseFloat(r);
  },
  time: function(r) {
    return +qr(r);
  },
  trim: function(r) {
    return $(r) ? Sr(r) : r;
  }
});
function nC(r) {
  return vO.get(r);
}
var iC = {
  lt: function(r, e) {
    return r < e;
  },
  lte: function(r, e) {
    return r <= e;
  },
  gt: function(r, e) {
    return r > e;
  },
  gte: function(r, e) {
    return r >= e;
  }
}, dO = (
  /** @class */
  function() {
    function r(e, t) {
      if (!At(t)) {
        var a = "";
        ({}).NODE_ENV !== "production" && (a = 'rvalue of "<", ">", "<=", ">=" can only be number in filter.'), It(a);
      }
      this._opFn = iC[e], this._rvalFloat = pa(t);
    }
    return r.prototype.evaluate = function(e) {
      return At(e) ? this._opFn(e, this._rvalFloat) : this._opFn(pa(e), this._rvalFloat);
    }, r;
  }()
), oC = (
  /** @class */
  function() {
    function r(e, t) {
      var a = e === "desc";
      this._resultLT = a ? 1 : -1, t == null && (t = a ? "min" : "max"), this._incomparable = t === "min" ? -1 / 0 : 1 / 0;
    }
    return r.prototype.evaluate = function(e, t) {
      var a = At(e) ? e : pa(e), n = At(t) ? t : pa(t), i = isNaN(a), o = isNaN(n);
      if (i && (a = this._incomparable), o && (n = this._incomparable), i && o) {
        var s = $(e), l = $(t);
        s && (a = l ? e : 0), l && (n = s ? t : 0);
      }
      return a < n ? this._resultLT : a > n ? -this._resultLT : 0;
    }, r;
  }()
), pO = (
  /** @class */
  function() {
    function r(e, t) {
      this._rval = t, this._isEQ = e, this._rvalTypeof = typeof t, this._rvalFloat = pa(t);
    }
    return r.prototype.evaluate = function(e) {
      var t = e === this._rval;
      if (!t) {
        var a = typeof e;
        a !== this._rvalTypeof && (a === "number" || this._rvalTypeof === "number") && (t = pa(e) === this._rvalFloat);
      }
      return this._isEQ ? t : !t;
    }, r;
  }()
);
function gO(r, e) {
  return r === "eq" || r === "ne" ? new pO(r === "eq", e) : U(iC, r) ? new dO(r, e) : null;
}
var yO = (
  /** @class */
  function() {
    function r() {
    }
    return r.prototype.getRawData = function() {
      throw new Error("not supported");
    }, r.prototype.getRawDataItem = function(e) {
      throw new Error("not supported");
    }, r.prototype.cloneRawData = function() {
    }, r.prototype.getDimensionInfo = function(e) {
    }, r.prototype.cloneAllDimensionInfo = function() {
    }, r.prototype.count = function() {
    }, r.prototype.retrieveValue = function(e, t) {
    }, r.prototype.retrieveValueFromItem = function(e, t) {
    }, r.prototype.convertValue = function(e, t) {
      return qa(e, t);
    }, r;
  }()
);
function mO(r, e) {
  var t = new yO(), a = r.data, n = t.sourceFormat = r.sourceFormat, i = r.startIndex, o = "";
  r.seriesLayoutBy !== Ur && ({}.NODE_ENV !== "production" && (o = '`seriesLayoutBy` of upstream dataset can only be "column" in data transform.'), It(o));
  var s = [], l = {}, u = r.dimensionsDefine;
  if (u)
    M(u, function(p, g) {
      var y = p.name, m = {
        index: g,
        name: y,
        displayName: p.displayName
      };
      if (s.push(m), y != null) {
        var _ = "";
        U(l, y) && ({}.NODE_ENV !== "production" && (_ = 'dimension name "' + y + '" duplicated.'), It(_)), l[y] = m;
      }
    });
  else
    for (var f = 0; f < r.dimensionsDetectedCount; f++)
      s.push({
        index: f
      });
  var h = eC(n, Ur);
  e.__isBuiltIn && (t.getRawDataItem = function(p) {
    return h(a, i, s, p);
  }, t.getRawData = Y(_O, null, r)), t.cloneRawData = Y(SO, null, r);
  var c = rC(n, Ur);
  t.count = Y(c, null, a, i, s);
  var v = aC(n);
  t.retrieveValue = function(p, g) {
    var y = h(a, i, s, p);
    return d(y, g);
  };
  var d = t.retrieveValueFromItem = function(p, g) {
    if (p != null) {
      var y = s[g];
      if (y)
        return v(p, g, y.name);
    }
  };
  return t.getDimensionInfo = Y(xO, null, s, l), t.cloneAllDimensionInfo = Y(wO, null, s), t;
}
function _O(r) {
  var e = r.sourceFormat;
  if (!Jg(e)) {
    var t = "";
    ({}).NODE_ENV !== "production" && (t = "`getRawData` is not supported in source format " + e), It(t);
  }
  return r.data;
}
function SO(r) {
  var e = r.sourceFormat, t = r.data;
  if (!Jg(e)) {
    var a = "";
    ({}).NODE_ENV !== "production" && (a = "`cloneRawData` is not supported in source format " + e), It(a);
  }
  if (e === we) {
    for (var n = [], i = 0, o = t.length; i < o; i++)
      n.push(t[i].slice());
    return n;
  } else if (e === dr) {
    for (var n = [], i = 0, o = t.length; i < o; i++)
      n.push(V({}, t[i]));
    return n;
  }
}
function xO(r, e, t) {
  if (t != null) {
    if (At(t) || !isNaN(t) && !U(e, t))
      return r[t];
    if (U(e, t))
      return e[t];
  }
}
function wO(r) {
  return at(r);
}
var sC = X();
function bO(r) {
  r = at(r);
  var e = r.type, t = "";
  e || ({}.NODE_ENV !== "production" && (t = "Must have a `type` when `registerTransform`."), It(t));
  var a = e.split(":");
  a.length !== 2 && ({}.NODE_ENV !== "production" && (t = 'Name must include namespace like "ns:regression".'), It(t));
  var n = !1;
  a[0] === "echarts" && (e = a[1], n = !0), r.__isBuiltIn = n, sC.set(e, r);
}
function TO(r, e, t) {
  var a = Pt(r), n = a.length, i = "";
  n || ({}.NODE_ENV !== "production" && (i = "If `transform` declared, it should at least contain one transform."), It(i));
  for (var o = 0, s = n; o < s; o++) {
    var l = a[o];
    e = DO(l, e, t, n === 1 ? null : o), o !== s - 1 && (e.length = Math.max(e.length, 1));
  }
  return e;
}
function DO(r, e, t, a) {
  var n = "";
  e.length || ({}.NODE_ENV !== "production" && (n = "Must have at least one upstream dataset."), It(n)), j(r) || ({}.NODE_ENV !== "production" && (n = "transform declaration must be an object rather than " + typeof r + "."), It(n));
  var i = r.type, o = sC.get(i);
  o || ({}.NODE_ENV !== "production" && (n = 'Can not find transform on type "' + i + '".'), It(n));
  var s = G(e, function(f) {
    return mO(f, o);
  }), l = Pt(o.transform({
    upstream: s[0],
    upstreamList: s,
    config: at(r.config)
  }));
  if ({}.NODE_ENV !== "production" && r.print) {
    var u = G(l, function(f) {
      var h = a != null ? " === pipe index: " + a : "";
      return ["=== dataset index: " + t.datasetIndex + h + " ===", "- transform result data:", Ie(f.data), "- transform result dimensions:", Ie(f.dimensions)].join("\n");
    }).join("\n");
    HE(u);
  }
  return G(l, function(f, h) {
    var c = "";
    j(f) || ({}.NODE_ENV !== "production" && (c = "A transform should not return some empty results."), It(c)), f.data || ({}.NODE_ENV !== "production" && (c = "Transform result data should be not be null or undefined"), It(c));
    var v = JD(f.data);
    Jg(v) || ({}.NODE_ENV !== "production" && (c = "Transform result data should be array rows or object rows."), It(c));
    var d, p = e[0];
    if (p && h === 0 && !f.dimensions) {
      var g = p.startIndex;
      g && (f.data = p.data.slice(0, g).concat(f.data)), d = {
        seriesLayoutBy: Ur,
        sourceHeader: g,
        dimensions: p.metaRawOption.dimensions
      };
    } else
      d = {
        seriesLayoutBy: Ur,
        sourceHeader: 0,
        dimensions: f.dimensions
      };
    return up(f.data, d, null);
  });
}
function Jg(r) {
  return r === we || r === dr;
}
var Ph = "undefined", CO = typeof Uint32Array === Ph ? Array : Uint32Array, AO = typeof Uint16Array === Ph ? Array : Uint16Array, lC = typeof Int32Array === Ph ? Array : Int32Array, h_ = typeof Float64Array === Ph ? Array : Float64Array, uC = {
  float: h_,
  int: lC,
  // Ordinal data type can be string or int
  ordinal: Array,
  number: Array,
  time: h_
}, Uc;
function Ko(r) {
  return r > 65535 ? CO : AO;
}
function Oi() {
  return [1 / 0, -1 / 0];
}
function MO(r) {
  var e = r.constructor;
  return e === Array ? r.slice() : new e(r);
}
function c_(r, e, t, a, n) {
  var i = uC[t || "float"];
  if (n) {
    var o = r[e], s = o && o.length;
    if (s !== a) {
      for (var l = new i(a), u = 0; u < s; u++)
        l[u] = o[u];
      r[e] = l;
    }
  } else
    r[e] = new i(a);
}
var fp = (
  /** @class */
  function() {
    function r() {
      this._chunks = [], this._rawExtent = [], this._extent = [], this._count = 0, this._rawCount = 0, this._calcDimNameToIdx = X();
    }
    return r.prototype.initData = function(e, t, a) {
      ({}).NODE_ENV !== "production" && J(K(e.getItem) && K(e.count), "Invalid data provider."), this._provider = e, this._chunks = [], this._indices = null, this.getRawIndex = this._getRawIdxIdentity;
      var n = e.getSource(), i = this.defaultDimValueGetter = Uc[n.sourceFormat];
      this._dimValueGetter = a || i, this._rawExtent = [];
      var o = QD(n);
      this._dimensions = G(t, function(s) {
        return {}.NODE_ENV !== "production" && o && J(s.property != null), {
          // Only pick these two props. Not leak other properties like orderMeta.
          type: s.type,
          property: s.property
        };
      }), this._initDataFromProvider(0, e.count());
    }, r.prototype.getProvider = function() {
      return this._provider;
    }, r.prototype.getSource = function() {
      return this._provider.getSource();
    }, r.prototype.ensureCalculationDimension = function(e, t) {
      var a = this._calcDimNameToIdx, n = this._dimensions, i = a.get(e);
      if (i != null) {
        if (n[i].type === t)
          return i;
      } else
        i = n.length;
      return n[i] = {
        type: t
      }, a.set(e, i), this._chunks[i] = new uC[t || "float"](this._rawCount), this._rawExtent[i] = Oi(), i;
    }, r.prototype.collectOrdinalMeta = function(e, t) {
      var a = this._chunks[e], n = this._dimensions[e], i = this._rawExtent, o = n.ordinalOffset || 0, s = a.length;
      o === 0 && (i[e] = Oi());
      for (var l = i[e], u = o; u < s; u++) {
        var f = a[u] = t.parseAndCollect(a[u]);
        isNaN(f) || (l[0] = Math.min(f, l[0]), l[1] = Math.max(f, l[1]));
      }
      n.ordinalMeta = t, n.ordinalOffset = s, n.type = "ordinal";
    }, r.prototype.getOrdinalMeta = function(e) {
      var t = this._dimensions[e], a = t.ordinalMeta;
      return a;
    }, r.prototype.getDimensionProperty = function(e) {
      var t = this._dimensions[e];
      return t && t.property;
    }, r.prototype.appendData = function(e) {
      ({}).NODE_ENV !== "production" && J(!this._indices, "appendData can only be called on raw data.");
      var t = this._provider, a = this.count();
      t.appendData(e);
      var n = t.count();
      return t.persistent || (n += a), a < n && this._initDataFromProvider(a, n, !0), [a, n];
    }, r.prototype.appendValues = function(e, t) {
      for (var a = this._chunks, n = this._dimensions, i = n.length, o = this._rawExtent, s = this.count(), l = s + Math.max(e.length, t || 0), u = 0; u < i; u++) {
        var f = n[u];
        c_(a, u, f.type, l, !0);
      }
      for (var h = [], c = s; c < l; c++)
        for (var v = c - s, d = 0; d < i; d++) {
          var f = n[d], p = Uc.arrayRows.call(this, e[v] || h, f.property, v, d);
          a[d][c] = p;
          var g = o[d];
          p < g[0] && (g[0] = p), p > g[1] && (g[1] = p);
        }
      return this._rawCount = this._count = l, {
        start: s,
        end: l
      };
    }, r.prototype._initDataFromProvider = function(e, t, a) {
      for (var n = this._provider, i = this._chunks, o = this._dimensions, s = o.length, l = this._rawExtent, u = G(o, function(m) {
        return m.property;
      }), f = 0; f < s; f++) {
        var h = o[f];
        l[f] || (l[f] = Oi()), c_(i, f, h.type, t, a);
      }
      if (n.fillStorage)
        n.fillStorage(e, t, i, l);
      else
        for (var c = [], v = e; v < t; v++) {
          c = n.getItem(v, c);
          for (var d = 0; d < s; d++) {
            var p = i[d], g = this._dimValueGetter(c, u[d], v, d);
            p[v] = g;
            var y = l[d];
            g < y[0] && (y[0] = g), g > y[1] && (y[1] = g);
          }
        }
      !n.persistent && n.clean && n.clean(), this._rawCount = this._count = t, this._extent = [];
    }, r.prototype.count = function() {
      return this._count;
    }, r.prototype.get = function(e, t) {
      if (!(t >= 0 && t < this._count))
        return NaN;
      var a = this._chunks[e];
      return a ? a[this.getRawIndex(t)] : NaN;
    }, r.prototype.getValues = function(e, t) {
      var a = [], n = [];
      if (t == null) {
        t = e, e = [];
        for (var i = 0; i < this._dimensions.length; i++)
          n.push(i);
      } else
        n = e;
      for (var i = 0, o = n.length; i < o; i++)
        a.push(this.get(n[i], t));
      return a;
    }, r.prototype.getByRawIndex = function(e, t) {
      if (!(t >= 0 && t < this._rawCount))
        return NaN;
      var a = this._chunks[e];
      return a ? a[t] : NaN;
    }, r.prototype.getSum = function(e) {
      var t = this._chunks[e], a = 0;
      if (t)
        for (var n = 0, i = this.count(); n < i; n++) {
          var o = this.get(e, n);
          isNaN(o) || (a += o);
        }
      return a;
    }, r.prototype.getMedian = function(e) {
      var t = [];
      this.each([e], function(i) {
        isNaN(i) || t.push(i);
      });
      var a = t.sort(function(i, o) {
        return i - o;
      }), n = this.count();
      return n === 0 ? 0 : n % 2 === 1 ? a[(n - 1) / 2] : (a[n / 2] + a[n / 2 - 1]) / 2;
    }, r.prototype.indexOfRawIndex = function(e) {
      if (e >= this._rawCount || e < 0)
        return -1;
      if (!this._indices)
        return e;
      var t = this._indices, a = t[e];
      if (a != null && a < this._count && a === e)
        return e;
      for (var n = 0, i = this._count - 1; n <= i; ) {
        var o = (n + i) / 2 | 0;
        if (t[o] < e)
          n = o + 1;
        else if (t[o] > e)
          i = o - 1;
        else
          return o;
      }
      return -1;
    }, r.prototype.indicesOfNearest = function(e, t, a) {
      var n = this._chunks, i = n[e], o = [];
      if (!i)
        return o;
      a == null && (a = 1 / 0);
      for (var s = 1 / 0, l = -1, u = 0, f = 0, h = this.count(); f < h; f++) {
        var c = this.getRawIndex(f), v = t - i[c], d = Math.abs(v);
        d <= a && ((d < s || d === s && v >= 0 && l < 0) && (s = d, l = v, u = 0), v === l && (o[u++] = f));
      }
      return o.length = u, o;
    }, r.prototype.getIndices = function() {
      var e, t = this._indices;
      if (t) {
        var a = t.constructor, n = this._count;
        if (a === Array) {
          e = new a(n);
          for (var i = 0; i < n; i++)
            e[i] = t[i];
        } else
          e = new a(t.buffer, 0, n);
      } else {
        var a = Ko(this._rawCount);
        e = new a(this.count());
        for (var i = 0; i < e.length; i++)
          e[i] = i;
      }
      return e;
    }, r.prototype.filter = function(e, t) {
      if (!this._count)
        return this;
      for (var a = this.clone(), n = a.count(), i = Ko(a._rawCount), o = new i(n), s = [], l = e.length, u = 0, f = e[0], h = a._chunks, c = 0; c < n; c++) {
        var v = void 0, d = a.getRawIndex(c);
        if (l === 0)
          v = t(c);
        else if (l === 1) {
          var p = h[f][d];
          v = t(p, c);
        } else {
          for (var g = 0; g < l; g++)
            s[g] = h[e[g]][d];
          s[g] = c, v = t.apply(null, s);
        }
        v && (o[u++] = d);
      }
      return u < n && (a._indices = o), a._count = u, a._extent = [], a._updateGetRawIdx(), a;
    }, r.prototype.selectRange = function(e) {
      var t = this.clone(), a = t._count;
      if (!a)
        return this;
      var n = _t(e), i = n.length;
      if (!i)
        return this;
      var o = t.count(), s = Ko(t._rawCount), l = new s(o), u = 0, f = n[0], h = e[f][0], c = e[f][1], v = t._chunks, d = !1;
      if (!t._indices) {
        var p = 0;
        if (i === 1) {
          for (var g = v[n[0]], y = 0; y < a; y++) {
            var m = g[y];
            (m >= h && m <= c || isNaN(m)) && (l[u++] = p), p++;
          }
          d = !0;
        } else if (i === 2) {
          for (var g = v[n[0]], _ = v[n[1]], S = e[n[1]][0], w = e[n[1]][1], y = 0; y < a; y++) {
            var m = g[y], x = _[y];
            (m >= h && m <= c || isNaN(m)) && (x >= S && x <= w || isNaN(x)) && (l[u++] = p), p++;
          }
          d = !0;
        }
      }
      if (!d)
        if (i === 1)
          for (var y = 0; y < o; y++) {
            var b = t.getRawIndex(y), m = v[n[0]][b];
            (m >= h && m <= c || isNaN(m)) && (l[u++] = b);
          }
        else
          for (var y = 0; y < o; y++) {
            for (var T = !0, b = t.getRawIndex(y), C = 0; C < i; C++) {
              var D = n[C], m = v[D][b];
              (m < e[D][0] || m > e[D][1]) && (T = !1);
            }
            T && (l[u++] = t.getRawIndex(y));
          }
      return u < o && (t._indices = l), t._count = u, t._extent = [], t._updateGetRawIdx(), t;
    }, r.prototype.map = function(e, t) {
      var a = this.clone(e);
      return this._updateDims(a, e, t), a;
    }, r.prototype.modify = function(e, t) {
      this._updateDims(this, e, t);
    }, r.prototype._updateDims = function(e, t, a) {
      for (var n = e._chunks, i = [], o = t.length, s = e.count(), l = [], u = e._rawExtent, f = 0; f < t.length; f++)
        u[t[f]] = Oi();
      for (var h = 0; h < s; h++) {
        for (var c = e.getRawIndex(h), v = 0; v < o; v++)
          l[v] = n[t[v]][c];
        l[o] = h;
        var d = a && a.apply(null, l);
        if (d != null) {
          typeof d != "object" && (i[0] = d, d = i);
          for (var f = 0; f < d.length; f++) {
            var p = t[f], g = d[f], y = u[p], m = n[p];
            m && (m[c] = g), g < y[0] && (y[0] = g), g > y[1] && (y[1] = g);
          }
        }
      }
    }, r.prototype.lttbDownSample = function(e, t) {
      var a = this.clone([e], !0), n = a._chunks, i = n[e], o = this.count(), s = 0, l = Math.floor(1 / t), u = this.getRawIndex(0), f, h, c, v = new (Ko(this._rawCount))(Math.min((Math.ceil(o / l) + 2) * 2, o));
      v[s++] = u;
      for (var d = 1; d < o - 1; d += l) {
        for (var p = Math.min(d + l, o - 1), g = Math.min(d + l * 2, o), y = (g + p) / 2, m = 0, _ = p; _ < g; _++) {
          var S = this.getRawIndex(_), w = i[S];
          isNaN(w) || (m += w);
        }
        m /= g - p;
        var x = d, b = Math.min(d + l, o), T = d - 1, C = i[u];
        f = -1, c = x;
        for (var D = -1, A = 0, _ = x; _ < b; _++) {
          var S = this.getRawIndex(_), w = i[S];
          if (isNaN(w)) {
            A++, D < 0 && (D = S);
            continue;
          }
          h = Math.abs((T - y) * (w - C) - (T - _) * (m - C)), h > f && (f = h, c = S);
        }
        A > 0 && A < b - x && (v[s++] = Math.min(D, c), c = Math.max(D, c)), v[s++] = c, u = c;
      }
      return v[s++] = this.getRawIndex(o - 1), a._count = s, a._indices = v, a.getRawIndex = this._getRawIdx, a;
    }, r.prototype.downSample = function(e, t, a, n) {
      for (var i = this.clone([e], !0), o = i._chunks, s = [], l = Math.floor(1 / t), u = o[e], f = this.count(), h = i._rawExtent[e] = Oi(), c = new (Ko(this._rawCount))(Math.ceil(f / l)), v = 0, d = 0; d < f; d += l) {
        l > f - d && (l = f - d, s.length = l);
        for (var p = 0; p < l; p++) {
          var g = this.getRawIndex(d + p);
          s[p] = u[g];
        }
        var y = a(s), m = this.getRawIndex(Math.min(d + n(s, y) || 0, f - 1));
        u[m] = y, y < h[0] && (h[0] = y), y > h[1] && (h[1] = y), c[v++] = m;
      }
      return i._count = v, i._indices = c, i._updateGetRawIdx(), i;
    }, r.prototype.each = function(e, t) {
      if (this._count)
        for (var a = e.length, n = this._chunks, i = 0, o = this.count(); i < o; i++) {
          var s = this.getRawIndex(i);
          switch (a) {
            case 0:
              t(i);
              break;
            case 1:
              t(n[e[0]][s], i);
              break;
            case 2:
              t(n[e[0]][s], n[e[1]][s], i);
              break;
            default:
              for (var l = 0, u = []; l < a; l++)
                u[l] = n[e[l]][s];
              u[l] = i, t.apply(null, u);
          }
        }
    }, r.prototype.getDataExtent = function(e) {
      var t = this._chunks[e], a = Oi();
      if (!t)
        return a;
      var n = this.count(), i = !this._indices, o;
      if (i)
        return this._rawExtent[e].slice();
      if (o = this._extent[e], o)
        return o.slice();
      o = a;
      for (var s = o[0], l = o[1], u = 0; u < n; u++) {
        var f = this.getRawIndex(u), h = t[f];
        h < s && (s = h), h > l && (l = h);
      }
      return o = [s, l], this._extent[e] = o, o;
    }, r.prototype.getRawDataItem = function(e) {
      var t = this.getRawIndex(e);
      if (this._provider.persistent)
        return this._provider.getItem(t);
      for (var a = [], n = this._chunks, i = 0; i < n.length; i++)
        a.push(n[i][t]);
      return a;
    }, r.prototype.clone = function(e, t) {
      var a = new r(), n = this._chunks, i = e && Yr(e, function(s, l) {
        return s[l] = !0, s;
      }, {});
      if (i)
        for (var o = 0; o < n.length; o++)
          a._chunks[o] = i[o] ? MO(n[o]) : n[o];
      else
        a._chunks = n;
      return this._copyCommonProps(a), t || (a._indices = this._cloneIndices()), a._updateGetRawIdx(), a;
    }, r.prototype._copyCommonProps = function(e) {
      e._count = this._count, e._rawCount = this._rawCount, e._provider = this._provider, e._dimensions = this._dimensions, e._extent = at(this._extent), e._rawExtent = at(this._rawExtent);
    }, r.prototype._cloneIndices = function() {
      if (this._indices) {
        var e = this._indices.constructor, t = void 0;
        if (e === Array) {
          var a = this._indices.length;
          t = new e(a);
          for (var n = 0; n < a; n++)
            t[n] = this._indices[n];
        } else
          t = new e(this._indices);
        return t;
      }
      return null;
    }, r.prototype._getRawIdxIdentity = function(e) {
      return e;
    }, r.prototype._getRawIdx = function(e) {
      return e < this._count && e >= 0 ? this._indices[e] : -1;
    }, r.prototype._updateGetRawIdx = function() {
      this.getRawIndex = this._indices ? this._getRawIdx : this._getRawIdxIdentity;
    }, r.internalField = function() {
      function e(t, a, n, i) {
        return qa(t[i], this._dimensions[i]);
      }
      Uc = {
        arrayRows: e,
        objectRows: function(t, a, n, i) {
          return qa(t[a], this._dimensions[i]);
        },
        keyedColumns: e,
        original: function(t, a, n, i) {
          var o = t && (t.value == null ? t : t.value);
          return qa(o instanceof Array ? o[i] : o, this._dimensions[i]);
        },
        typedArray: function(t, a, n, i) {
          return t[i];
        }
      };
    }(), r;
  }()
), fC = (
  /** @class */
  function() {
    function r(e) {
      this._sourceList = [], this._storeList = [], this._upstreamSignList = [], this._versionSignBase = 0, this._dirty = !0, this._sourceHost = e;
    }
    return r.prototype.dirty = function() {
      this._setLocalSource([], []), this._storeList = [], this._dirty = !0;
    }, r.prototype._setLocalSource = function(e, t) {
      this._sourceList = e, this._upstreamSignList = t, this._versionSignBase++, this._versionSignBase > 9e10 && (this._versionSignBase = 0);
    }, r.prototype._getVersionSign = function() {
      return this._sourceHost.uid + "_" + this._versionSignBase;
    }, r.prototype.prepareSource = function() {
      this._isDirty() && (this._createSource(), this._dirty = !1);
    }, r.prototype._createSource = function() {
      this._setLocalSource([], []);
      var e = this._sourceHost, t = this._getUpstreamSourceManagers(), a = !!t.length, n, i;
      if (jo(e)) {
        var o = e, s = void 0, l = void 0, u = void 0;
        if (a) {
          var f = t[0];
          f.prepareSource(), u = f.getSource(), s = u.data, l = u.sourceFormat, i = [f._getVersionSign()];
        } else
          s = o.get("data", !0), l = Be(s) ? ha : vr, i = [];
        var h = this._getSourceMetaRawOption() || {}, c = u && u.metaRawOption || {}, v = ft(h.seriesLayoutBy, c.seriesLayoutBy) || null, d = ft(h.sourceHeader, c.sourceHeader), p = ft(h.dimensions, c.dimensions), g = v !== c.seriesLayoutBy || !!d != !!c.sourceHeader || p;
        n = g ? [up(s, {
          seriesLayoutBy: v,
          sourceHeader: d,
          dimensions: p
        }, l)] : [];
      } else {
        var y = e;
        if (a) {
          var m = this._applyTransform(t);
          n = m.sourceList, i = m.upstreamSignList;
        } else {
          var _ = y.get("source", !0);
          n = [up(_, this._getSourceMetaRawOption(), null)], i = [];
        }
      }
      ({}).NODE_ENV !== "production" && J(n && i), this._setLocalSource(n, i);
    }, r.prototype._applyTransform = function(e) {
      var t = this._sourceHost, a = t.get("transform", !0), n = t.get("fromTransformResult", !0);
      if ({}.NODE_ENV !== "production" && J(n != null || a != null), n != null) {
        var i = "";
        e.length !== 1 && ({}.NODE_ENV !== "production" && (i = "When using `fromTransformResult`, there should be only one upstream dataset"), d_(i));
      }
      var o, s = [], l = [];
      return M(e, function(u) {
        u.prepareSource();
        var f = u.getSource(n || 0), h = "";
        n != null && !f && ({}.NODE_ENV !== "production" && (h = "Can not retrieve result by `fromTransformResult`: " + n), d_(h)), s.push(f), l.push(u._getVersionSign());
      }), a ? o = TO(a, s, {
        datasetIndex: t.componentIndex
      }) : n != null && (o = [iO(s[0])]), {
        sourceList: o,
        upstreamSignList: l
      };
    }, r.prototype._isDirty = function() {
      if (this._dirty)
        return !0;
      for (var e = this._getUpstreamSourceManagers(), t = 0; t < e.length; t++) {
        var a = e[t];
        if (
          // Consider the case that there is ancestor diry, call it recursively.
          // The performance is probably not an issue because usually the chain is not long.
          a._isDirty() || this._upstreamSignList[t] !== a._getVersionSign()
        )
          return !0;
      }
    }, r.prototype.getSource = function(e) {
      e = e || 0;
      var t = this._sourceList[e];
      if (!t) {
        var a = this._getUpstreamSourceManagers();
        return a[0] && a[0].getSource(e);
      }
      return t;
    }, r.prototype.getSharedDataStore = function(e) {
      ({}).NODE_ENV !== "production" && J(jo(this._sourceHost), "Can only call getDataStore on series source manager.");
      var t = e.makeStoreSchema();
      return this._innerGetDataStore(t.dimensions, e.source, t.hash);
    }, r.prototype._innerGetDataStore = function(e, t, a) {
      var n = 0, i = this._storeList, o = i[n];
      o || (o = i[n] = {});
      var s = o[a];
      if (!s) {
        var l = this._getUpstreamSourceManagers()[0];
        jo(this._sourceHost) && l ? s = l._innerGetDataStore(e, t, a) : (s = new fp(), s.initData(new tC(t, e.length), e)), o[a] = s;
      }
      return s;
    }, r.prototype._getUpstreamSourceManagers = function() {
      var e = this._sourceHost;
      if (jo(e)) {
        var t = Yg(e);
        return t ? [t.getSourceManager()] : [];
      } else
        return G(IN(e), function(a) {
          return a.getSourceManager();
        });
    }, r.prototype._getSourceMetaRawOption = function() {
      var e = this._sourceHost, t, a, n;
      if (jo(e))
        t = e.get("seriesLayoutBy", !0), a = e.get("sourceHeader", !0), n = e.get("dimensions", !0);
      else if (!this._getUpstreamSourceManagers().length) {
        var i = e;
        t = i.get("seriesLayoutBy", !0), a = i.get("sourceHeader", !0), n = i.get("dimensions", !0);
      }
      return {
        seriesLayoutBy: t,
        sourceHeader: a,
        dimensions: n
      };
    }, r;
  }()
);
function v_(r) {
  var e = r.option.transform;
  e && of(r.option.transform);
}
function jo(r) {
  return r.mainType === "series";
}
function d_(r) {
  throw new Error(r);
}
var hC = "line-height:1";
function cC(r, e) {
  var t = r.color || "#6e7079", a = r.fontSize || 12, n = r.fontWeight || "400", i = r.color || "#464646", o = r.fontSize || 14, s = r.fontWeight || "900";
  return e === "html" ? {
    // eslint-disable-next-line max-len
    nameStyle: "font-size:" + Ne(a + "") + "px;color:" + Ne(t) + ";font-weight:" + Ne(n + ""),
    // eslint-disable-next-line max-len
    valueStyle: "font-size:" + Ne(o + "") + "px;color:" + Ne(i) + ";font-weight:" + Ne(s + "")
  } : {
    nameStyle: {
      fontSize: a,
      fill: t,
      fontWeight: n
    },
    valueStyle: {
      fontSize: o,
      fill: i,
      fontWeight: s
    }
  };
}
var IO = [0, 10, 20, 30], LO = ["", "\n", "\n\n", "\n\n\n"];
function se(r, e) {
  return e.type = r, e;
}
function hp(r) {
  return r.type === "section";
}
function vC(r) {
  return hp(r) ? EO : PO;
}
function dC(r) {
  if (hp(r)) {
    var e = 0, t = r.blocks.length, a = t > 1 || t > 0 && !r.noHeader;
    return M(r.blocks, function(n) {
      var i = dC(n);
      i >= e && (e = i + +(a && // 0 always can not be readable gap level.
      (!i || hp(n) && !n.noHeader)));
    }), e;
  }
  return 0;
}
function EO(r, e, t, a) {
  var n = e.noHeader, i = RO(dC(e)), o = [], s = e.blocks || [];
  J(!s || z(s)), s = s || [];
  var l = r.orderMode;
  if (e.sortBlocks && l) {
    s = s.slice();
    var u = {
      valueAsc: "asc",
      valueDesc: "desc"
    };
    if (U(u, l)) {
      var f = new oC(u[l], null);
      s.sort(function(d, p) {
        return f.evaluate(d.sortParam, p.sortParam);
      });
    } else
      l === "seriesDesc" && s.reverse();
  }
  M(s, function(d, p) {
    var g = e.valueFormatter, y = vC(d)(
      // Inherit valueFormatter
      g ? V(V({}, r), {
        valueFormatter: g
      }) : r,
      d,
      p > 0 ? i.html : 0,
      a
    );
    y != null && o.push(y);
  });
  var h = r.renderMode === "richText" ? o.join(i.richText) : cp(o.join(""), n ? t : i.html);
  if (n)
    return h;
  var c = ip(e.header, "ordinal", r.useUTC), v = cC(a, r.renderMode).nameStyle;
  return r.renderMode === "richText" ? pC(r, c, v) + i.richText + h : cp('<div style="' + v + ";" + hC + ';">' + Ne(c) + "</div>" + h, t);
}
function PO(r, e, t, a) {
  var n = r.renderMode, i = e.noName, o = e.noValue, s = !e.markerType, l = e.name, u = r.useUTC, f = e.valueFormatter || r.valueFormatter || function(S) {
    return S = z(S) ? S : [S], G(S, function(w, x) {
      return ip(w, z(v) ? v[x] : v, u);
    });
  };
  if (!(i && o)) {
    var h = s ? "" : r.markupStyleCreator.makeTooltipMarker(e.markerType, e.markerColor || "#333", n), c = i ? "" : ip(l, "ordinal", u), v = e.valueType, d = o ? [] : f(e.value), p = !s || !i, g = !s && i, y = cC(a, n), m = y.nameStyle, _ = y.valueStyle;
    return n === "richText" ? (s ? "" : h) + (i ? "" : pC(r, c, m)) + (o ? "" : kO(r, d, p, g, _)) : cp((s ? "" : h) + (i ? "" : NO(c, !s, m)) + (o ? "" : OO(d, p, g, _)), t);
  }
}
function p_(r, e, t, a, n, i) {
  if (r) {
    var o = vC(r), s = {
      useUTC: n,
      renderMode: t,
      orderMode: a,
      markupStyleCreator: e,
      valueFormatter: r.valueFormatter
    };
    return o(s, r, 0, i);
  }
}
function RO(r) {
  return {
    html: IO[r],
    richText: LO[r]
  };
}
function cp(r, e) {
  var t = '<div style="clear:both"></div>', a = "margin: " + e + "px 0 0";
  return '<div style="' + a + ";" + hC + ';">' + r + t + "</div>";
}
function NO(r, e, t) {
  var a = e ? "margin-left:2px" : "";
  return '<span style="' + t + ";" + a + '">' + Ne(r) + "</span>";
}
function OO(r, e, t, a) {
  var n = t ? "10px" : "20px", i = e ? "float:right;margin-left:" + n : "";
  return r = z(r) ? r : [r], '<span style="' + i + ";" + a + '">' + G(r, function(o) {
    return Ne(o);
  }).join("&nbsp;&nbsp;") + "</span>";
}
function pC(r, e, t) {
  return r.markupStyleCreator.wrapRichTextStyle(e, t);
}
function kO(r, e, t, a, n) {
  var i = [n], o = a ? 10 : 20;
  return t && i.push({
    padding: [0, 0, 0, o],
    align: "right"
  }), r.markupStyleCreator.wrapRichTextStyle(z(e) ? e.join("  ") : e, i);
}
function gC(r, e) {
  var t = r.getData().getItemVisual(e, "style"), a = t[r.visualDrawType];
  return pi(a);
}
function yC(r, e) {
  var t = r.get("padding");
  return t != null ? t : e === "richText" ? [8, 10] : 10;
}
var Yc = (
  /** @class */
  function() {
    function r() {
      this.richTextStyles = {}, this._nextStyleNameId = gT();
    }
    return r.prototype._generateStyleName = function() {
      return "__EC_aUTo_" + this._nextStyleNameId++;
    }, r.prototype.makeTooltipMarker = function(e, t, a) {
      var n = a === "richText" ? this._generateStyleName() : null, i = wN({
        color: t,
        type: e,
        renderMode: a,
        markerId: n
      });
      return $(i) ? i : ({}.NODE_ENV !== "production" && J(n), this.richTextStyles[n] = i.style, i.content);
    }, r.prototype.wrapRichTextStyle = function(e, t) {
      var a = {};
      z(t) ? M(t, function(i) {
        return V(a, i);
      }) : V(a, t);
      var n = this._generateStyleName();
      return this.richTextStyles[n] = a, "{" + n + "|" + e + "}";
    }, r;
  }()
);
function mC(r) {
  var e = r.series, t = r.dataIndex, a = r.multipleSeries, n = e.getData(), i = n.mapDimensionsAll("defaultedTooltip"), o = i.length, s = e.getRawValue(t), l = z(s), u = gC(e, t), f, h, c, v;
  if (o > 1 || l && !o) {
    var d = VO(s, e, t, i, u);
    f = d.inlineValues, h = d.inlineValueTypes, c = d.blocks, v = d.inlineValues[0];
  } else if (o) {
    var p = n.getDimensionInfo(i[0]);
    v = f = vo(n, t, i[0]), h = p.type;
  } else
    v = f = l ? s[0] : s;
  var g = Tg(e), y = g && e.name || "", m = n.getName(t), _ = a ? y : m;
  return se("section", {
    header: y,
    // When series name is not specified, do not show a header line with only '-'.
    // This case always happens in tooltip.trigger: 'item'.
    noHeader: a || !g,
    sortParam: v,
    blocks: [se("nameValue", {
      markerType: "item",
      markerColor: u,
      // Do not mix display seriesName and itemName in one tooltip,
      // which might confuses users.
      name: _,
      // name dimension might be auto assigned, where the name might
      // be not readable. So we check trim here.
      noName: !Sr(_),
      value: f,
      valueType: h
    })].concat(c || [])
  });
}
function VO(r, e, t, a, n) {
  var i = e.getData(), o = Yr(r, function(h, c, v) {
    var d = i.getDimensionInfo(v);
    return h = h || d && d.tooltip !== !1 && d.displayName != null;
  }, !1), s = [], l = [], u = [];
  a.length ? M(a, function(h) {
    f(vo(i, t, h), h);
  }) : M(r, f);
  function f(h, c) {
    var v = i.getDimensionInfo(c);
    !v || v.otherDims.tooltip === !1 || (o ? u.push(se("nameValue", {
      markerType: "subItem",
      markerColor: n,
      name: v.displayName,
      value: h,
      valueType: v.type
    })) : (s.push(h), l.push(v.type)));
  }
  return {
    inlineValues: s,
    inlineValueTypes: l,
    blocks: u
  };
}
var Ia = Dt();
function ru(r, e) {
  return r.getName(e) || r.getId(e);
}
var ju = "__universalTransitionEnabled", Rh = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t._selectedDataIndicesMap = {}, t;
    }
    return e.prototype.init = function(t, a, n) {
      this.seriesIndex = this.componentIndex, this.dataTask = Vs({
        count: zO,
        reset: GO
      }), this.dataTask.context = {
        model: this
      }, this.mergeDefaultAndTheme(t, n);
      var i = Ia(this).sourceManager = new fC(this);
      i.prepareSource();
      var o = this.getInitialData(t, n);
      y_(o, this), this.dataTask.context.data = o, {}.NODE_ENV !== "production" && J(o, "getInitialData returned invalid data."), Ia(this).dataBeforeProcessed = o, g_(this), this._initSelectedMapFromData(o);
    }, e.prototype.mergeDefaultAndTheme = function(t, a) {
      var n = Js(this), i = n ? Po(t) : {}, o = this.subType;
      xt.hasClass(o) && (o += "Series"), ht(t, a.getTheme().get(this.subType)), ht(t, this.getDefaultOption()), hi(t, "label", ["show"]), this.fillDataTextStyle(t.data), n && rn(t, i, n);
    }, e.prototype.mergeOption = function(t, a) {
      t = ht(this.option, t, !0), this.fillDataTextStyle(t.data);
      var n = Js(this);
      n && rn(this.option, t, n);
      var i = Ia(this).sourceManager;
      i.dirty(), i.prepareSource();
      var o = this.getInitialData(t, a);
      y_(o, this), this.dataTask.dirty(), this.dataTask.context.data = o, Ia(this).dataBeforeProcessed = o, g_(this), this._initSelectedMapFromData(o);
    }, e.prototype.fillDataTextStyle = function(t) {
      if (t && !Be(t))
        for (var a = ["show"], n = 0; n < t.length; n++)
          t[n] && t[n].label && hi(t[n], "label", a);
    }, e.prototype.getInitialData = function(t, a) {
    }, e.prototype.appendData = function(t) {
      var a = this.getRawData();
      a.appendData(t.data);
    }, e.prototype.getData = function(t) {
      var a = vp(this);
      if (a) {
        var n = a.context.data;
        return t == null ? n : n.getLinkedData(t);
      } else
        return Ia(this).data;
    }, e.prototype.getAllData = function() {
      var t = this.getData();
      return t && t.getLinkedDataAll ? t.getLinkedDataAll() : [{
        data: t
      }];
    }, e.prototype.setData = function(t) {
      var a = vp(this);
      if (a) {
        var n = a.context;
        n.outputData = t, a !== this.dataTask && (n.data = t);
      }
      Ia(this).data = t;
    }, e.prototype.getEncode = function() {
      var t = this.get("encode", !0);
      if (t)
        return X(t);
    }, e.prototype.getSourceManager = function() {
      return Ia(this).sourceManager;
    }, e.prototype.getSource = function() {
      return this.getSourceManager().getSource();
    }, e.prototype.getRawData = function() {
      return Ia(this).dataBeforeProcessed;
    }, e.prototype.getColorBy = function() {
      var t = this.get("colorBy");
      return t || "series";
    }, e.prototype.isColorBySeries = function() {
      return this.getColorBy() === "series";
    }, e.prototype.getBaseAxis = function() {
      var t = this.coordinateSystem;
      return t && t.getBaseAxis && t.getBaseAxis();
    }, e.prototype.formatTooltip = function(t, a, n) {
      return mC({
        series: this,
        dataIndex: t,
        multipleSeries: a
      });
    }, e.prototype.isAnimationEnabled = function() {
      var t = this.ecModel;
      if (bt.node && !(t && t.ssr))
        return !1;
      var a = this.getShallow("animation");
      return a && this.getData().count() > this.getShallow("animationThreshold") && (a = !1), !!a;
    }, e.prototype.restoreData = function() {
      this.dataTask.dirty();
    }, e.prototype.getColorFromPalette = function(t, a, n) {
      var i = this.ecModel, o = Zg.prototype.getColorFromPalette.call(this, t, a, n);
      return o || (o = i.getColorFromPalette(t, a, n)), o;
    }, e.prototype.coordDimToDataDim = function(t) {
      return this.getRawData().mapDimensionsAll(t);
    }, e.prototype.getProgressive = function() {
      return this.get("progressive");
    }, e.prototype.getProgressiveThreshold = function() {
      return this.get("progressiveThreshold");
    }, e.prototype.select = function(t, a) {
      this._innerSelect(this.getData(a), t);
    }, e.prototype.unselect = function(t, a) {
      var n = this.option.selectedMap;
      if (n) {
        var i = this.option.selectedMode, o = this.getData(a);
        if (i === "series" || n === "all") {
          this.option.selectedMap = {}, this._selectedDataIndicesMap = {};
          return;
        }
        for (var s = 0; s < t.length; s++) {
          var l = t[s], u = ru(o, l);
          n[u] = !1, this._selectedDataIndicesMap[u] = -1;
        }
      }
    }, e.prototype.toggleSelect = function(t, a) {
      for (var n = [], i = 0; i < t.length; i++)
        n[0] = t[i], this.isSelected(t[i], a) ? this.unselect(n, a) : this.select(n, a);
    }, e.prototype.getSelectedDataIndices = function() {
      if (this.option.selectedMap === "all")
        return [].slice.call(this.getData().getIndices());
      for (var t = this._selectedDataIndicesMap, a = _t(t), n = [], i = 0; i < a.length; i++) {
        var o = t[a[i]];
        o >= 0 && n.push(o);
      }
      return n;
    }, e.prototype.isSelected = function(t, a) {
      var n = this.option.selectedMap;
      if (!n)
        return !1;
      var i = this.getData(a);
      return (n === "all" || n[ru(i, t)]) && !i.getItemModel(t).get(["select", "disabled"]);
    }, e.prototype.isUniversalTransitionEnabled = function() {
      if (this[ju])
        return !0;
      var t = this.option.universalTransition;
      return t ? t === !0 ? !0 : t && t.enabled : !1;
    }, e.prototype._innerSelect = function(t, a) {
      var n, i, o = this.option, s = o.selectedMode, l = a.length;
      if (!(!s || !l)) {
        if (s === "series")
          o.selectedMap = "all";
        else if (s === "multiple") {
          j(o.selectedMap) || (o.selectedMap = {});
          for (var u = o.selectedMap, f = 0; f < l; f++) {
            var h = a[f], c = ru(t, h);
            u[c] = !0, this._selectedDataIndicesMap[c] = t.getRawIndex(h);
          }
        } else if (s === "single" || s === !0) {
          var v = a[l - 1], c = ru(t, v);
          o.selectedMap = (n = {}, n[c] = !0, n), this._selectedDataIndicesMap = (i = {}, i[c] = t.getRawIndex(v), i);
        }
      }
    }, e.prototype._initSelectedMapFromData = function(t) {
      if (!this.option.selectedMap) {
        var a = [];
        t.hasItemOption && t.each(function(n) {
          var i = t.getRawDataItem(n);
          i && i.selected && a.push(n);
        }), a.length > 0 && this._innerSelect(t, a);
      }
    }, e.registerClass = function(t) {
      return xt.registerClass(t);
    }, e.protoInitialize = function() {
      var t = e.prototype;
      t.type = "series.__base__", t.seriesIndex = 0, t.ignoreStyleOnData = !1, t.hasSymbolVisual = !1, t.defaultSymbol = "circle", t.visualStyleAccessPath = "itemStyle", t.visualDrawType = "fill";
    }(), e;
  }(xt)
);
te(Rh, jg);
te(Rh, Zg);
DT(Rh, xt);
function g_(r) {
  var e = r.name;
  Tg(r) || (r.name = BO(r) || e);
}
function BO(r) {
  var e = r.getRawData(), t = e.mapDimensionsAll("seriesName"), a = [];
  return M(t, function(n) {
    var i = e.getDimensionInfo(n);
    i.displayName && a.push(i.displayName);
  }), a.join(" ");
}
function zO(r) {
  return r.model.getRawData().count();
}
function GO(r) {
  var e = r.model;
  return e.setData(e.getRawData().cloneShallow()), FO;
}
function FO(r, e) {
  e.outputData && r.end > e.outputData.count() && e.model.getRawData().cloneShallow(e.outputData);
}
function y_(r, e) {
  M(sf(r.CHANGABLE_METHODS, r.DOWNSAMPLE_METHODS), function(t) {
    r.wrapMethod(t, ot(HO, e));
  });
}
function HO(r, e) {
  var t = vp(r);
  return t && t.setOutputEnd((e || this).count()), e;
}
function vp(r) {
  var e = (r.ecModel || {}).scheduler, t = e && e.getPipeline(r.uid);
  if (t) {
    var a = t.currentTask;
    if (a) {
      var n = a.agentStubMap;
      n && (a = n.get(r.uid));
    }
    return a;
  }
}
const Gt = Rh;
var Qg = (
  /** @class */
  function() {
    function r() {
      this.group = new nt(), this.uid = Lo("viewComponent");
    }
    return r.prototype.init = function(e, t) {
    }, r.prototype.render = function(e, t, a, n) {
    }, r.prototype.dispose = function(e, t) {
    }, r.prototype.updateView = function(e, t, a, n) {
    }, r.prototype.updateLayout = function(e, t, a, n) {
    }, r.prototype.updateVisual = function(e, t, a, n) {
    }, r.prototype.toggleBlurSeries = function(e, t, a) {
    }, r.prototype.eachRendered = function(e) {
      var t = this.group;
      t && t.traverse(e);
    }, r;
  }()
);
Cg(Qg);
dh(Qg);
const $t = Qg;
function ko() {
  var r = Dt();
  return function(e) {
    var t = r(e), a = e.pipelineContext, n = !!t.large, i = !!t.progressiveRender, o = t.large = !!(a && a.large), s = t.progressiveRender = !!(a && a.progressiveRender);
    return (n !== o || i !== s) && "reset";
  };
}
var _C = Dt(), WO = ko(), ty = (
  /** @class */
  function() {
    function r() {
      this.group = new nt(), this.uid = Lo("viewChart"), this.renderTask = Vs({
        plan: $O,
        reset: UO
      }), this.renderTask.context = {
        view: this
      };
    }
    return r.prototype.init = function(e, t) {
    }, r.prototype.render = function(e, t, a, n) {
      if ({}.NODE_ENV !== "production")
        throw new Error("render method must been implemented");
    }, r.prototype.highlight = function(e, t, a, n) {
      var i = e.getData(n && n.dataType);
      if (!i) {
        ({}).NODE_ENV !== "production" && ve("Unknown dataType " + n.dataType);
        return;
      }
      __(i, n, "emphasis");
    }, r.prototype.downplay = function(e, t, a, n) {
      var i = e.getData(n && n.dataType);
      if (!i) {
        ({}).NODE_ENV !== "production" && ve("Unknown dataType " + n.dataType);
        return;
      }
      __(i, n, "normal");
    }, r.prototype.remove = function(e, t) {
      this.group.removeAll();
    }, r.prototype.dispose = function(e, t) {
    }, r.prototype.updateView = function(e, t, a, n) {
      this.render(e, t, a, n);
    }, r.prototype.updateLayout = function(e, t, a, n) {
      this.render(e, t, a, n);
    }, r.prototype.updateVisual = function(e, t, a, n) {
      this.render(e, t, a, n);
    }, r.prototype.eachRendered = function(e) {
      un(this.group, e);
    }, r.markUpdateMethod = function(e, t) {
      _C(e).updateMethod = t;
    }, r.protoInitialize = function() {
      var e = r.prototype;
      e.type = "chart";
    }(), r;
  }()
);
function m_(r, e, t) {
  r && tn(r) && (e === "emphasis" ? ga : ya)(r, t);
}
function __(r, e, t) {
  var a = ci(r, e), n = e && e.highlightKey != null ? pR(e.highlightKey) : null;
  a != null ? M(Pt(a), function(i) {
    m_(r.getItemGraphicEl(i), t, n);
  }) : r.eachItemGraphicEl(function(i) {
    m_(i, t, n);
  });
}
Cg(ty, ["dispose"]);
dh(ty);
function $O(r) {
  return WO(r.model);
}
function UO(r) {
  var e = r.model, t = r.ecModel, a = r.api, n = r.payload, i = e.pipelineContext.progressiveRender, o = r.view, s = n && _C(n).updateMethod, l = i ? "incrementalPrepareRender" : s && o[s] ? s : "render";
  return l !== "render" && o[l](e, t, a, n), YO[l];
}
var YO = {
  incrementalPrepareRender: {
    progress: function(r, e) {
      e.view.incrementalRender(r, e.model, e.ecModel, e.api, e.payload);
    }
  },
  render: {
    // Put view.render in `progress` to support appendData. But in this case
    // view.render should not be called in reset, otherwise it will be called
    // twise. Use `forceFirstProgress` to make sure that view.render is called
    // in any cases.
    forceFirstProgress: !0,
    progress: function(r, e) {
      e.view.render(e.model, e.ecModel, e.api, e.payload);
    }
  }
};
const Vt = ty;
var Df = "\0__throttleOriginMethod", S_ = "\0__throttleRate", x_ = "\0__throttleType";
function ey(r, e, t) {
  var a, n = 0, i = 0, o = null, s, l, u, f;
  e = e || 0;
  function h() {
    i = (/* @__PURE__ */ new Date()).getTime(), o = null, r.apply(l, u || []);
  }
  var c = function() {
    for (var v = [], d = 0; d < arguments.length; d++)
      v[d] = arguments[d];
    a = (/* @__PURE__ */ new Date()).getTime(), l = this, u = v;
    var p = f || e, g = f || t;
    f = null, s = a - (g ? n : i) - p, clearTimeout(o), g ? o = setTimeout(h, p) : s >= 0 ? h() : o = setTimeout(h, -s), n = a;
  };
  return c.clear = function() {
    o && (clearTimeout(o), o = null);
  }, c.debounceNextCall = function(v) {
    f = v;
  }, c;
}
function Vo(r, e, t, a) {
  var n = r[e];
  if (n) {
    var i = n[Df] || n, o = n[x_], s = n[S_];
    if (s !== t || o !== a) {
      if (t == null || !a)
        return r[e] = i;
      n = r[e] = ey(i, t, a === "debounce"), n[Df] = i, n[x_] = a, n[S_] = t;
    }
    return n;
  }
}
function tl(r, e) {
  var t = r[e];
  t && t[Df] && (t.clear && t.clear(), r[e] = t[Df]);
}
var w_ = Dt(), b_ = {
  itemStyle: vi(TD, !0),
  lineStyle: vi(bD, !0)
}, ZO = {
  lineStyle: "stroke",
  itemStyle: "fill"
};
function SC(r, e) {
  var t = r.visualStyleMapper || b_[e];
  return t || (console.warn("Unknown style type '" + e + "'."), b_.itemStyle);
}
function xC(r, e) {
  var t = r.visualDrawType || ZO[e];
  return t || (console.warn("Unknown style type '" + e + "'."), "fill");
}
var XO = {
  createOnAllSeries: !0,
  performRawSeries: !0,
  reset: function(r, e) {
    var t = r.getData(), a = r.visualStyleAccessPath || "itemStyle", n = r.getModel(a), i = SC(r, a), o = i(n), s = n.getShallow("decal");
    s && (t.setVisual("decal", s), s.dirty = !0);
    var l = xC(r, a), u = o[l], f = K(u) ? u : null, h = o.fill === "auto" || o.stroke === "auto";
    if (!o[l] || f || h) {
      var c = r.getColorFromPalette(
        // TODO series count changed.
        r.name,
        null,
        e.getSeriesCount()
      );
      o[l] || (o[l] = c, t.setVisual("colorFromPalette", !0)), o.fill = o.fill === "auto" || K(o.fill) ? c : o.fill, o.stroke = o.stroke === "auto" || K(o.stroke) ? c : o.stroke;
    }
    if (t.setVisual("style", o), t.setVisual("drawType", l), !e.isSeriesFiltered(r) && f)
      return t.setVisual("colorFromPalette", !1), {
        dataEach: function(v, d) {
          var p = r.getDataParams(d), g = V({}, o);
          g[l] = f(p), v.setItemVisual(d, "style", g);
        }
      };
  }
}, Jo = new kt(), qO = {
  createOnAllSeries: !0,
  performRawSeries: !0,
  reset: function(r, e) {
    if (!(r.ignoreStyleOnData || e.isSeriesFiltered(r))) {
      var t = r.getData(), a = r.visualStyleAccessPath || "itemStyle", n = SC(r, a), i = t.getVisual("drawType");
      return {
        dataEach: t.hasItemOption ? function(o, s) {
          var l = o.getRawDataItem(s);
          if (l && l[a]) {
            Jo.option = l[a];
            var u = n(Jo), f = o.ensureUniqueItemVisual(s, "style");
            V(f, u), Jo.option.decal && (o.setItemVisual(s, "decal", Jo.option.decal), Jo.option.decal.dirty = !0), i in u && o.setItemVisual(s, "colorFromPalette", !1);
          }
        } : null
      };
    }
  }
}, KO = {
  performRawSeries: !0,
  overallReset: function(r) {
    var e = X();
    r.eachSeries(function(t) {
      var a = t.getColorBy();
      if (!t.isColorBySeries()) {
        var n = t.type + "-" + a, i = e.get(n);
        i || (i = {}, e.set(n, i)), w_(t).scope = i;
      }
    }), r.eachSeries(function(t) {
      if (!(t.isColorBySeries() || r.isSeriesFiltered(t))) {
        var a = t.getRawData(), n = {}, i = t.getData(), o = w_(t).scope, s = t.visualStyleAccessPath || "itemStyle", l = xC(t, s);
        i.each(function(u) {
          var f = i.getRawIndex(u);
          n[f] = u;
        }), a.each(function(u) {
          var f = n[u], h = i.getItemVisual(f, "colorFromPalette");
          if (h) {
            var c = i.ensureUniqueItemVisual(f, "style"), v = a.getName(u) || u + "", d = a.count();
            c[l] = t.getColorFromPalette(v, o, d);
          }
        });
      }
    });
  }
}, au = Math.PI;
function jO(r, e) {
  e = e || {}, et(e, {
    text: "loading",
    textColor: "#000",
    fontSize: 12,
    fontWeight: "normal",
    fontStyle: "normal",
    fontFamily: "sans-serif",
    maskColor: "rgba(255, 255, 255, 0.8)",
    showSpinner: !0,
    color: "#5470c6",
    spinnerRadius: 10,
    lineWidth: 5,
    zlevel: 0
  });
  var t = new nt(), a = new Tt({
    style: {
      fill: e.maskColor
    },
    zlevel: e.zlevel,
    z: 1e4
  });
  t.add(a);
  var n = new Ct({
    style: {
      text: e.text,
      fill: e.textColor,
      fontSize: e.fontSize,
      fontWeight: e.fontWeight,
      fontStyle: e.fontStyle,
      fontFamily: e.fontFamily
    },
    zlevel: e.zlevel,
    z: 10001
  }), i = new Tt({
    style: {
      fill: "none"
    },
    textContent: n,
    textConfig: {
      position: "right",
      distance: 10
    },
    zlevel: e.zlevel,
    z: 10001
  });
  t.add(i);
  var o;
  return e.showSpinner && (o = new Og({
    shape: {
      startAngle: -au / 2,
      endAngle: -au / 2 + 0.1,
      r: e.spinnerRadius
    },
    style: {
      stroke: e.color,
      lineCap: "round",
      lineWidth: e.lineWidth
    },
    zlevel: e.zlevel,
    z: 10001
  }), o.animateShape(!0).when(1e3, {
    endAngle: au * 3 / 2
  }).start("circularInOut"), o.animateShape(!0).when(1e3, {
    startAngle: au * 3 / 2
  }).delay(300).start("circularInOut"), t.add(o)), t.resize = function() {
    var s = n.getBoundingRect().width, l = e.showSpinner ? e.spinnerRadius : 0, u = (r.getWidth() - l * 2 - (e.showSpinner && s ? 10 : 0) - s) / 2 - (e.showSpinner && s ? 0 : 5 + s / 2) + (e.showSpinner ? 0 : s / 2) + (s ? 0 : l), f = r.getHeight() / 2;
    e.showSpinner && o.setShape({
      cx: u,
      cy: f
    }), i.setShape({
      x: u - l,
      y: f - l,
      width: l * 2,
      height: l * 2
    }), a.setShape({
      x: 0,
      y: 0,
      width: r.getWidth(),
      height: r.getHeight()
    });
  }, t.resize(), t;
}
var JO = (
  /** @class */
  function() {
    function r(e, t, a, n) {
      this._stageTaskMap = X(), this.ecInstance = e, this.api = t, a = this._dataProcessorHandlers = a.slice(), n = this._visualHandlers = n.slice(), this._allHandlers = a.concat(n);
    }
    return r.prototype.restoreData = function(e, t) {
      e.restoreData(t), this._stageTaskMap.each(function(a) {
        var n = a.overallTask;
        n && n.dirty();
      });
    }, r.prototype.getPerformArgs = function(e, t) {
      if (e.__pipeline) {
        var a = this._pipelineMap.get(e.__pipeline.id), n = a.context, i = !t && a.progressiveEnabled && (!n || n.progressiveRender) && e.__idxInPipeline > a.blockIndex, o = i ? a.step : null, s = n && n.modDataCount, l = s != null ? Math.ceil(s / o) : null;
        return {
          step: o,
          modBy: l,
          modDataCount: s
        };
      }
    }, r.prototype.getPipeline = function(e) {
      return this._pipelineMap.get(e);
    }, r.prototype.updateStreamModes = function(e, t) {
      var a = this._pipelineMap.get(e.uid), n = e.getData(), i = n.count(), o = a.progressiveEnabled && t.incrementalPrepareRender && i >= a.threshold, s = e.get("large") && i >= e.get("largeThreshold"), l = e.get("progressiveChunkMode") === "mod" ? i : null;
      e.pipelineContext = a.context = {
        progressiveRender: o,
        modDataCount: l,
        large: s
      };
    }, r.prototype.restorePipelines = function(e) {
      var t = this, a = t._pipelineMap = X();
      e.eachSeries(function(n) {
        var i = n.getProgressive(), o = n.uid;
        a.set(o, {
          id: o,
          head: null,
          tail: null,
          threshold: n.getProgressiveThreshold(),
          progressiveEnabled: i && !(n.preventIncremental && n.preventIncremental()),
          blockIndex: -1,
          step: Math.round(i || 700),
          count: 0
        }), t._pipe(n, n.dataTask);
      });
    }, r.prototype.prepareStageTasks = function() {
      var e = this._stageTaskMap, t = this.api.getModel(), a = this.api;
      M(this._allHandlers, function(n) {
        var i = e.get(n.uid) || e.set(n.uid, {}), o = "";
        ({}).NODE_ENV !== "production" && (o = '"reset" and "overallReset" must not be both specified.'), J(!(n.reset && n.overallReset), o), n.reset && this._createSeriesStageTask(n, i, t, a), n.overallReset && this._createOverallStageTask(n, i, t, a);
      }, this);
    }, r.prototype.prepareView = function(e, t, a, n) {
      var i = e.renderTask, o = i.context;
      o.model = t, o.ecModel = a, o.api = n, i.__block = !e.incrementalPrepareRender, this._pipe(t, i);
    }, r.prototype.performDataProcessorTasks = function(e, t) {
      this._performStageTasks(this._dataProcessorHandlers, e, t, {
        block: !0
      });
    }, r.prototype.performVisualTasks = function(e, t, a) {
      this._performStageTasks(this._visualHandlers, e, t, a);
    }, r.prototype._performStageTasks = function(e, t, a, n) {
      n = n || {};
      var i = !1, o = this;
      M(e, function(l, u) {
        if (!(n.visualType && n.visualType !== l.visualType)) {
          var f = o._stageTaskMap.get(l.uid), h = f.seriesTaskMap, c = f.overallTask;
          if (c) {
            var v, d = c.agentStubMap;
            d.each(function(g) {
              s(n, g) && (g.dirty(), v = !0);
            }), v && c.dirty(), o.updatePayload(c, a);
            var p = o.getPerformArgs(c, n.block);
            d.each(function(g) {
              g.perform(p);
            }), c.perform(p) && (i = !0);
          } else
            h && h.each(function(g, y) {
              s(n, g) && g.dirty();
              var m = o.getPerformArgs(g, n.block);
              m.skip = !l.performRawSeries && t.isSeriesFiltered(g.context.model), o.updatePayload(g, a), g.perform(m) && (i = !0);
            });
        }
      });
      function s(l, u) {
        return l.setDirty && (!l.dirtyMap || l.dirtyMap.get(u.__pipeline.id));
      }
      this.unfinished = i || this.unfinished;
    }, r.prototype.performSeriesTasks = function(e) {
      var t;
      e.eachSeries(function(a) {
        t = a.dataTask.perform() || t;
      }), this.unfinished = t || this.unfinished;
    }, r.prototype.plan = function() {
      this._pipelineMap.each(function(e) {
        var t = e.tail;
        do {
          if (t.__block) {
            e.blockIndex = t.__idxInPipeline;
            break;
          }
          t = t.getUpstream();
        } while (t);
      });
    }, r.prototype.updatePayload = function(e, t) {
      t !== "remain" && (e.context.payload = t);
    }, r.prototype._createSeriesStageTask = function(e, t, a, n) {
      var i = this, o = t.seriesTaskMap, s = t.seriesTaskMap = X(), l = e.seriesType, u = e.getTargetSeries;
      e.createOnAllSeries ? a.eachRawSeries(f) : l ? a.eachRawSeriesByType(l, f) : u && u(a, n).each(f);
      function f(h) {
        var c = h.uid, v = s.set(c, o && o.get(c) || Vs({
          plan: ak,
          reset: nk,
          count: ok
        }));
        v.context = {
          model: h,
          ecModel: a,
          api: n,
          // PENDING: `useClearVisual` not used?
          useClearVisual: e.isVisual && !e.isLayout,
          plan: e.plan,
          reset: e.reset,
          scheduler: i
        }, i._pipe(h, v);
      }
    }, r.prototype._createOverallStageTask = function(e, t, a, n) {
      var i = this, o = t.overallTask = t.overallTask || Vs({
        reset: QO
      });
      o.context = {
        ecModel: a,
        api: n,
        overallReset: e.overallReset,
        scheduler: i
      };
      var s = o.agentStubMap, l = o.agentStubMap = X(), u = e.seriesType, f = e.getTargetSeries, h = !0, c = !1, v = "";
      ({}).NODE_ENV !== "production" && (v = '"createOnAllSeries" is not supported for "overallReset", because it will block all streams.'), J(!e.createOnAllSeries, v), u ? a.eachRawSeriesByType(u, d) : f ? f(a, n).each(d) : (h = !1, M(a.getSeries(), d));
      function d(p) {
        var g = p.uid, y = l.set(g, s && s.get(g) || // When the result of `getTargetSeries` changed, the overallTask
        // should be set as dirty and re-performed.
        (c = !0, Vs({
          reset: tk,
          onDirty: rk
        })));
        y.context = {
          model: p,
          overallProgress: h
          // FIXME:TS never used, so comment it
          // modifyOutputEnd: modifyOutputEnd
        }, y.agent = o, y.__block = h, i._pipe(p, y);
      }
      c && o.dirty();
    }, r.prototype._pipe = function(e, t) {
      var a = e.uid, n = this._pipelineMap.get(a);
      !n.head && (n.head = t), n.tail && n.tail.pipe(t), n.tail = t, t.__idxInPipeline = n.count++, t.__pipeline = n;
    }, r.wrapStageHandler = function(e, t) {
      return K(e) && (e = {
        overallReset: e,
        seriesType: sk(e)
      }), e.uid = Lo("stageHandler"), t && (e.visualType = t), e;
    }, r;
  }()
);
function QO(r) {
  r.overallReset(r.ecModel, r.api, r.payload);
}
function tk(r) {
  return r.overallProgress && ek;
}
function ek() {
  this.agent.dirty(), this.getDownstream().dirty();
}
function rk() {
  this.agent && this.agent.dirty();
}
function ak(r) {
  return r.plan ? r.plan(r.model, r.ecModel, r.api, r.payload) : null;
}
function nk(r) {
  r.useClearVisual && r.data.clearAllVisual();
  var e = r.resetDefines = Pt(r.reset(r.model, r.ecModel, r.api, r.payload));
  return e.length > 1 ? G(e, function(t, a) {
    return wC(a);
  }) : ik;
}
var ik = wC(0);
function wC(r) {
  return function(e, t) {
    var a = t.data, n = t.resetDefines[r];
    if (n && n.dataEach)
      for (var i = e.start; i < e.end; i++)
        n.dataEach(a, i);
    else
      n && n.progress && n.progress(e, a);
  };
}
function ok(r) {
  return r.data.count();
}
function sk(r) {
  Cf = null;
  try {
    r(el, bC);
  } catch (e) {
  }
  return Cf;
}
var el = {}, bC = {}, Cf;
TC(el, XD);
TC(bC, qD);
el.eachSeriesByType = el.eachRawSeriesByType = function(r) {
  Cf = r;
};
el.eachComponent = function(r) {
  r.mainType === "series" && r.subType && (Cf = r.subType);
};
function TC(r, e) {
  for (var t in e.prototype)
    r[t] = Xt;
}
const DC = JO;
var T_ = ["#37A2DA", "#32C5E9", "#67E0E3", "#9FE6B8", "#FFDB5C", "#ff9f7f", "#fb7293", "#E062AE", "#E690D1", "#e7bcf3", "#9d96f5", "#8378EA", "#96BFFF"];
const lk = {
  color: T_,
  colorLayer: [["#37A2DA", "#ffd85c", "#fd7b5f"], ["#37A2DA", "#67E0E3", "#FFDB5C", "#ff9f7f", "#E062AE", "#9d96f5"], ["#37A2DA", "#32C5E9", "#9FE6B8", "#FFDB5C", "#ff9f7f", "#fb7293", "#e7bcf3", "#8378EA", "#96BFFF"], T_]
};
var Te = "#B9B8CE", D_ = "#100C2A", nu = function() {
  return {
    axisLine: {
      lineStyle: {
        color: Te
      }
    },
    splitLine: {
      lineStyle: {
        color: "#484753"
      }
    },
    splitArea: {
      areaStyle: {
        color: ["rgba(255,255,255,0.02)", "rgba(255,255,255,0.05)"]
      }
    },
    minorSplitLine: {
      lineStyle: {
        color: "#20203B"
      }
    }
  };
}, C_ = ["#4992ff", "#7cffb2", "#fddd60", "#ff6e76", "#58d9f9", "#05c091", "#ff8a45", "#8d48e3", "#dd79ff"], CC = {
  darkMode: !0,
  color: C_,
  backgroundColor: D_,
  axisPointer: {
    lineStyle: {
      color: "#817f91"
    },
    crossStyle: {
      color: "#817f91"
    },
    label: {
      // TODO Contrast of label backgorundColor
      color: "#fff"
    }
  },
  legend: {
    textStyle: {
      color: Te
    }
  },
  textStyle: {
    color: Te
  },
  title: {
    textStyle: {
      color: "#EEF1FA"
    },
    subtextStyle: {
      color: "#B9B8CE"
    }
  },
  toolbox: {
    iconStyle: {
      borderColor: Te
    }
  },
  dataZoom: {
    borderColor: "#71708A",
    textStyle: {
      color: Te
    },
    brushStyle: {
      color: "rgba(135,163,206,0.3)"
    },
    handleStyle: {
      color: "#353450",
      borderColor: "#C5CBE3"
    },
    moveHandleStyle: {
      color: "#B0B6C3",
      opacity: 0.3
    },
    fillerColor: "rgba(135,163,206,0.2)",
    emphasis: {
      handleStyle: {
        borderColor: "#91B7F2",
        color: "#4D587D"
      },
      moveHandleStyle: {
        color: "#636D9A",
        opacity: 0.7
      }
    },
    dataBackground: {
      lineStyle: {
        color: "#71708A",
        width: 1
      },
      areaStyle: {
        color: "#71708A"
      }
    },
    selectedDataBackground: {
      lineStyle: {
        color: "#87A3CE"
      },
      areaStyle: {
        color: "#87A3CE"
      }
    }
  },
  visualMap: {
    textStyle: {
      color: Te
    }
  },
  timeline: {
    lineStyle: {
      color: Te
    },
    label: {
      color: Te
    },
    controlStyle: {
      color: Te,
      borderColor: Te
    }
  },
  calendar: {
    itemStyle: {
      color: D_
    },
    dayLabel: {
      color: Te
    },
    monthLabel: {
      color: Te
    },
    yearLabel: {
      color: Te
    }
  },
  timeAxis: nu(),
  logAxis: nu(),
  valueAxis: nu(),
  categoryAxis: nu(),
  line: {
    symbol: "circle"
  },
  graph: {
    color: C_
  },
  gauge: {
    title: {
      color: Te
    },
    axisLine: {
      lineStyle: {
        color: [[1, "rgba(207,212,219,0.2)"]]
      }
    },
    axisLabel: {
      color: Te
    },
    detail: {
      color: "#EEF1FA"
    }
  },
  candlestick: {
    itemStyle: {
      color: "#f64e56",
      color0: "#54ea92",
      borderColor: "#f64e56",
      borderColor0: "#54ea92"
      // borderColor: '#ca2824',
      // borderColor0: '#09a443'
    }
  }
};
CC.categoryAxis.splitLine.show = !1;
const uk = CC;
var fk = (
  /** @class */
  function() {
    function r() {
    }
    return r.prototype.normalizeQuery = function(e) {
      var t = {}, a = {}, n = {};
      if ($(e)) {
        var i = Hr(e);
        t.mainType = i.main || null, t.subType = i.sub || null;
      } else {
        var o = ["Index", "Name", "Id"], s = {
          name: 1,
          dataIndex: 1,
          dataType: 1
        };
        M(e, function(l, u) {
          for (var f = !1, h = 0; h < o.length; h++) {
            var c = o[h], v = u.lastIndexOf(c);
            if (v > 0 && v === u.length - c.length) {
              var d = u.slice(0, v);
              d !== "data" && (t.mainType = d, t[c.toLowerCase()] = l, f = !0);
            }
          }
          s.hasOwnProperty(u) && (a[u] = l, f = !0), f || (n[u] = l);
        });
      }
      return {
        cptQuery: t,
        dataQuery: a,
        otherQuery: n
      };
    }, r.prototype.filter = function(e, t) {
      var a = this.eventInfo;
      if (!a)
        return !0;
      var n = a.targetEl, i = a.packedEvent, o = a.model, s = a.view;
      if (!o || !s)
        return !0;
      var l = t.cptQuery, u = t.dataQuery;
      return f(l, o, "mainType") && f(l, o, "subType") && f(l, o, "index", "componentIndex") && f(l, o, "name") && f(l, o, "id") && f(u, i, "name") && f(u, i, "dataIndex") && f(u, i, "dataType") && (!s.filterForExposedEvent || s.filterForExposedEvent(e, t.otherQuery, n, i));
      function f(h, c, v, d) {
        return h[v] == null || c[d || v] === h[v];
      }
    }, r.prototype.afterTrigger = function() {
      this.eventInfo = null;
    }, r;
  }()
), dp = ["symbol", "symbolSize", "symbolRotate", "symbolOffset"], A_ = dp.concat(["symbolKeepAspect"]), hk = {
  createOnAllSeries: !0,
  // For legend.
  performRawSeries: !0,
  reset: function(r, e) {
    var t = r.getData();
    if (r.legendIcon && t.setVisual("legendIcon", r.legendIcon), !r.hasSymbolVisual)
      return;
    for (var a = {}, n = {}, i = !1, o = 0; o < dp.length; o++) {
      var s = dp[o], l = r.get(s);
      K(l) ? (i = !0, n[s] = l) : a[s] = l;
    }
    if (a.symbol = a.symbol || r.defaultSymbol, t.setVisual(V({
      legendIcon: r.legendIcon || a.symbol,
      symbolKeepAspect: r.get("symbolKeepAspect")
    }, a)), e.isSeriesFiltered(r))
      return;
    var u = _t(n);
    function f(h, c) {
      for (var v = r.getRawValue(c), d = r.getDataParams(c), p = 0; p < u.length; p++) {
        var g = u[p];
        h.setItemVisual(c, g, n[g](v, d));
      }
    }
    return {
      dataEach: i ? f : null
    };
  }
}, ck = {
  createOnAllSeries: !0,
  // For legend.
  performRawSeries: !0,
  reset: function(r, e) {
    if (!r.hasSymbolVisual || e.isSeriesFiltered(r))
      return;
    var t = r.getData();
    function a(n, i) {
      for (var o = n.getItemModel(i), s = 0; s < A_.length; s++) {
        var l = A_[s], u = o.getShallow(l, !0);
        u != null && n.setItemVisual(i, l, u);
      }
    }
    return {
      dataEach: t.hasItemOption ? a : null
    };
  }
};
function ry(r, e, t) {
  switch (t) {
    case "color":
      var a = r.getItemVisual(e, "style");
      return a[r.getVisual("drawType")];
    case "opacity":
      return r.getItemVisual(e, "style").opacity;
    case "symbol":
    case "symbolSize":
    case "liftZ":
      return r.getItemVisual(e, t);
    default:
      ({}).NODE_ENV !== "production" && console.warn("Unknown visual type " + t);
  }
}
function bl(r, e) {
  switch (e) {
    case "color":
      var t = r.getVisual("style");
      return t[r.getVisual("drawType")];
    case "opacity":
      return r.getVisual("style").opacity;
    case "symbol":
    case "symbolSize":
    case "liftZ":
      return r.getVisual(e);
    default:
      ({}).NODE_ENV !== "production" && console.warn("Unknown visual type " + e);
  }
}
function AC(r, e, t, a) {
  switch (t) {
    case "color":
      var n = r.ensureUniqueItemVisual(e, "style");
      n[r.getVisual("drawType")] = a, r.setItemVisual(e, "colorFromPalette", !1);
      break;
    case "opacity":
      r.ensureUniqueItemVisual(e, "style").opacity = a;
      break;
    case "symbol":
    case "symbolSize":
    case "liftZ":
      r.setItemVisual(e, t, a);
      break;
    default:
      ({}).NODE_ENV !== "production" && console.warn("Unknown visual type " + t);
  }
}
function MC(r, e) {
  function t(a, n) {
    var i = [];
    return a.eachComponent({
      mainType: "series",
      subType: r,
      query: n
    }, function(o) {
      i.push(o.seriesIndex);
    }), i;
  }
  M([[r + "ToggleSelect", "toggleSelect"], [r + "Select", "select"], [r + "UnSelect", "unselect"]], function(a) {
    e(a[0], function(n, i, o) {
      n = V({}, n), {}.NODE_ENV !== "production" && Kt(n.type, a[1]), o.dispatchAction(V(n, {
        type: a[1],
        seriesIndex: t(i, n)
      }));
    });
  });
}
function ki(r, e, t, a, n) {
  var i = r + e;
  t.isSilent(i) || ({}.NODE_ENV !== "production" && Ar("event " + i + " is deprecated."), a.eachComponent({
    mainType: "series",
    subType: "pie"
  }, function(o) {
    for (var s = o.seriesIndex, l = o.option.selectedMap, u = n.selected, f = 0; f < u.length; f++)
      if (u[f].seriesIndex === s) {
        var h = o.getData(), c = ci(h, n.fromActionPayload);
        t.trigger(i, {
          type: i,
          seriesId: o.id,
          name: z(c) ? h.getName(c[0]) : h.getName(c),
          selected: $(l) ? l : V({}, l)
        });
      }
  }));
}
function vk(r, e, t) {
  r.on("selectchanged", function(a) {
    var n = t.getModel();
    a.isFromClick ? (ki("map", "selectchanged", e, n, a), ki("pie", "selectchanged", e, n, a)) : a.fromAction === "select" ? (ki("map", "selected", e, n, a), ki("pie", "selected", e, n, a)) : a.fromAction === "unselect" && (ki("map", "unselected", e, n, a), ki("pie", "unselected", e, n, a));
  });
}
function Kn(r, e, t) {
  for (var a; r && !(e(r) && (a = r, t)); )
    r = r.__hostTarget || r.parent;
  return a;
}
var dk = Math.round(Math.random() * 9), pk = typeof Object.defineProperty == "function", gk = function() {
  function r() {
    this._id = "__ec_inner_" + dk++;
  }
  return r.prototype.get = function(e) {
    return this._guard(e)[this._id];
  }, r.prototype.set = function(e, t) {
    var a = this._guard(e);
    return pk ? Object.defineProperty(a, this._id, {
      value: t,
      enumerable: !1,
      configurable: !0
    }) : a[this._id] = t, this;
  }, r.prototype.delete = function(e) {
    return this.has(e) ? (delete this._guard(e)[this._id], !0) : !1;
  }, r.prototype.has = function(e) {
    return !!this._guard(e)[this._id];
  }, r.prototype._guard = function(e) {
    if (e !== Object(e))
      throw TypeError("Value of WeakMap is not a non-null object.");
    return e;
  }, r;
}();
const yk = gk;
var mk = mt.extend({
  type: "triangle",
  shape: {
    cx: 0,
    cy: 0,
    width: 0,
    height: 0
  },
  buildPath: function(r, e) {
    var t = e.cx, a = e.cy, n = e.width / 2, i = e.height / 2;
    r.moveTo(t, a - i), r.lineTo(t + n, a + i), r.lineTo(t - n, a + i), r.closePath();
  }
}), _k = mt.extend({
  type: "diamond",
  shape: {
    cx: 0,
    cy: 0,
    width: 0,
    height: 0
  },
  buildPath: function(r, e) {
    var t = e.cx, a = e.cy, n = e.width / 2, i = e.height / 2;
    r.moveTo(t, a - i), r.lineTo(t + n, a), r.lineTo(t, a + i), r.lineTo(t - n, a), r.closePath();
  }
}), Sk = mt.extend({
  type: "pin",
  shape: {
    // x, y on the cusp
    x: 0,
    y: 0,
    width: 0,
    height: 0
  },
  buildPath: function(r, e) {
    var t = e.x, a = e.y, n = e.width / 5 * 3, i = Math.max(n, e.height), o = n / 2, s = o * o / (i - o), l = a - i + o + s, u = Math.asin(s / o), f = Math.cos(u) * o, h = Math.sin(u), c = Math.cos(u), v = o * 0.6, d = o * 0.7;
    r.moveTo(t - f, l + s), r.arc(t, l, o, Math.PI - u, Math.PI * 2 + u), r.bezierCurveTo(t + f - h * v, l + s + c * v, t, a - d, t, a), r.bezierCurveTo(t, a - d, t - f + h * v, l + s + c * v, t - f, l + s), r.closePath();
  }
}), xk = mt.extend({
  type: "arrow",
  shape: {
    x: 0,
    y: 0,
    width: 0,
    height: 0
  },
  buildPath: function(r, e) {
    var t = e.height, a = e.width, n = e.x, i = e.y, o = a / 3 * 2;
    r.moveTo(n, i), r.lineTo(n + o, i + t), r.lineTo(n, i + t / 4 * 3), r.lineTo(n - o, i + t), r.lineTo(n, i), r.closePath();
  }
}), wk = {
  line: ue,
  rect: Tt,
  roundRect: Tt,
  square: Tt,
  circle: jr,
  diamond: _k,
  pin: Sk,
  arrow: xk,
  triangle: mk
}, bk = {
  line: function(r, e, t, a, n) {
    n.x1 = r, n.y1 = e + a / 2, n.x2 = r + t, n.y2 = e + a / 2;
  },
  rect: function(r, e, t, a, n) {
    n.x = r, n.y = e, n.width = t, n.height = a;
  },
  roundRect: function(r, e, t, a, n) {
    n.x = r, n.y = e, n.width = t, n.height = a, n.r = Math.min(t, a) / 4;
  },
  square: function(r, e, t, a, n) {
    var i = Math.min(t, a);
    n.x = r, n.y = e, n.width = i, n.height = i;
  },
  circle: function(r, e, t, a, n) {
    n.cx = r + t / 2, n.cy = e + a / 2, n.r = Math.min(t, a) / 2;
  },
  diamond: function(r, e, t, a, n) {
    n.cx = r + t / 2, n.cy = e + a / 2, n.width = t, n.height = a;
  },
  pin: function(r, e, t, a, n) {
    n.x = r + t / 2, n.y = e + a / 2, n.width = t, n.height = a;
  },
  arrow: function(r, e, t, a, n) {
    n.x = r + t / 2, n.y = e + a / 2, n.width = t, n.height = a;
  },
  triangle: function(r, e, t, a, n) {
    n.cx = r + t / 2, n.cy = e + a / 2, n.width = t, n.height = a;
  }
}, Af = {};
M(wk, function(r, e) {
  Af[e] = new r();
});
var Tk = mt.extend({
  type: "symbol",
  shape: {
    symbolType: "",
    x: 0,
    y: 0,
    width: 0,
    height: 0
  },
  calculateTextPosition: function(r, e, t) {
    var a = df(r, e, t), n = this.shape;
    return n && n.symbolType === "pin" && e.position === "inside" && (a.y = t.y + t.height * 0.4), a;
  },
  buildPath: function(r, e, t) {
    var a = e.symbolType;
    if (a !== "none") {
      var n = Af[a];
      n || (a = "rect", n = Af[a]), bk[a](e.x, e.y, e.width, e.height, n.shape), n.buildPath(r, n.shape, t);
    }
  }
});
function Dk(r, e) {
  if (this.type !== "image") {
    var t = this.style;
    this.__isEmptyBrush ? (t.stroke = r, t.fill = e || "#fff", t.lineWidth = 2) : this.shape.symbolType === "line" ? t.stroke = r : t.fill = r, this.markRedraw();
  }
}
function Qt(r, e, t, a, n, i, o) {
  var s = r.indexOf("empty") === 0;
  s && (r = r.substr(5, 1).toLowerCase() + r.substr(6));
  var l;
  return r.indexOf("image://") === 0 ? l = dD(r.slice(8), new ct(e, t, a, n), o ? "center" : "cover") : r.indexOf("path://") === 0 ? l = wh(r.slice(7), {}, new ct(e, t, a, n), o ? "center" : "cover") : l = new Tk({
    shape: {
      symbolType: r,
      x: e,
      y: t,
      width: a,
      height: n
    }
  }), l.__isEmptyBrush = s, l.setColor = Dk, i && l.setColor(i), l;
}
function Bo(r) {
  return z(r) || (r = [+r, +r]), [r[0] || 0, r[1] || 0];
}
function xi(r, e) {
  if (r != null)
    return z(r) || (r = [r, r]), [H(r[0], e[0]) || 0, H(ft(r[1], r[0]), e[1]) || 0];
}
function jn(r) {
  return isFinite(r);
}
function Ck(r, e, t) {
  var a = e.x == null ? 0 : e.x, n = e.x2 == null ? 1 : e.x2, i = e.y == null ? 0 : e.y, o = e.y2 == null ? 0 : e.y2;
  e.global || (a = a * t.width + t.x, n = n * t.width + t.x, i = i * t.height + t.y, o = o * t.height + t.y), a = jn(a) ? a : 0, n = jn(n) ? n : 1, i = jn(i) ? i : 0, o = jn(o) ? o : 0;
  var s = r.createLinearGradient(a, i, n, o);
  return s;
}
function Ak(r, e, t) {
  var a = t.width, n = t.height, i = Math.min(a, n), o = e.x == null ? 0.5 : e.x, s = e.y == null ? 0.5 : e.y, l = e.r == null ? 0.5 : e.r;
  e.global || (o = o * a + t.x, s = s * n + t.y, l = l * i), o = jn(o) ? o : 0.5, s = jn(s) ? s : 0.5, l = l >= 0 && jn(l) ? l : 0.5;
  var u = r.createRadialGradient(o, s, 0, o, s, l);
  return u;
}
function pp(r, e, t) {
  for (var a = e.type === "radial" ? Ak(r, e, t) : Ck(r, e, t), n = e.colorStops, i = 0; i < n.length; i++)
    a.addColorStop(n[i].offset, n[i].color);
  return a;
}
function Mk(r, e) {
  if (r === e || !r && !e)
    return !1;
  if (!r || !e || r.length !== e.length)
    return !0;
  for (var t = 0; t < r.length; t++)
    if (r[t] !== e[t])
      return !0;
  return !1;
}
function iu(r) {
  return parseInt(r, 10);
}
function ao(r, e, t) {
  var a = ["width", "height"][e], n = ["clientWidth", "clientHeight"][e], i = ["paddingLeft", "paddingTop"][e], o = ["paddingRight", "paddingBottom"][e];
  if (t[a] != null && t[a] !== "auto")
    return parseFloat(t[a]);
  var s = document.defaultView.getComputedStyle(r);
  return (r[n] || iu(s[a]) || iu(r.style[a])) - (iu(s[i]) || 0) - (iu(s[o]) || 0) | 0;
}
function Ik(r, e) {
  return !r || r === "solid" || !(e > 0) ? null : r === "dashed" ? [4 * e, 2 * e] : r === "dotted" ? [e] : At(r) ? [r] : z(r) ? r : null;
}
function ay(r) {
  var e = r.style, t = e.lineDash && e.lineWidth > 0 && Ik(e.lineDash, e.lineWidth), a = e.lineDashOffset;
  if (t) {
    var n = e.strokeNoScale && r.getLineScale ? r.getLineScale() : 1;
    n && n !== 1 && (t = G(t, function(i) {
      return i / n;
    }), a /= n);
  }
  return [t, a];
}
var Lk = new Kr(!0);
function Mf(r) {
  var e = r.stroke;
  return !(e == null || e === "none" || !(r.lineWidth > 0));
}
function M_(r) {
  return typeof r == "string" && r !== "none";
}
function If(r) {
  var e = r.fill;
  return e != null && e !== "none";
}
function I_(r, e) {
  if (e.fillOpacity != null && e.fillOpacity !== 1) {
    var t = r.globalAlpha;
    r.globalAlpha = e.fillOpacity * e.opacity, r.fill(), r.globalAlpha = t;
  } else
    r.fill();
}
function L_(r, e) {
  if (e.strokeOpacity != null && e.strokeOpacity !== 1) {
    var t = r.globalAlpha;
    r.globalAlpha = e.strokeOpacity * e.opacity, r.stroke(), r.globalAlpha = t;
  } else
    r.stroke();
}
function gp(r, e, t) {
  var a = Ag(e.image, e.__image, t);
  if (ph(a)) {
    var n = r.createPattern(a, e.repeat || "repeat");
    if (typeof DOMMatrix == "function" && n && n.setTransform) {
      var i = new DOMMatrix();
      i.translateSelf(e.x || 0, e.y || 0), i.rotateSelf(0, 0, (e.rotation || 0) * Bu), i.scaleSelf(e.scaleX || 1, e.scaleY || 1), n.setTransform(i);
    }
    return n;
  }
}
function Ek(r, e, t, a) {
  var n, i = Mf(t), o = If(t), s = t.strokePercent, l = s < 1, u = !e.path;
  (!e.silent || l) && u && e.createPathProxy();
  var f = e.path || Lk, h = e.__dirty;
  if (!a) {
    var c = t.fill, v = t.stroke, d = o && !!c.colorStops, p = i && !!v.colorStops, g = o && !!c.image, y = i && !!v.image, m = void 0, _ = void 0, S = void 0, w = void 0, x = void 0;
    (d || p) && (x = e.getBoundingRect()), d && (m = h ? pp(r, c, x) : e.__canvasFillGradient, e.__canvasFillGradient = m), p && (_ = h ? pp(r, v, x) : e.__canvasStrokeGradient, e.__canvasStrokeGradient = _), g && (S = h || !e.__canvasFillPattern ? gp(r, c, e) : e.__canvasFillPattern, e.__canvasFillPattern = S), y && (w = h || !e.__canvasStrokePattern ? gp(r, v, e) : e.__canvasStrokePattern, e.__canvasStrokePattern = S), d ? r.fillStyle = m : g && (S ? r.fillStyle = S : o = !1), p ? r.strokeStyle = _ : y && (w ? r.strokeStyle = w : i = !1);
  }
  var b = e.getGlobalScale();
  f.setScale(b[0], b[1], e.segmentIgnoreThreshold);
  var T, C;
  r.setLineDash && t.lineDash && (n = ay(e), T = n[0], C = n[1]);
  var D = !0;
  (u || h & Ki) && (f.setDPR(r.dpr), l ? f.setContext(null) : (f.setContext(r), D = !1), f.reset(), e.buildPath(f, e.shape, a), f.toStatic(), e.pathUpdated()), D && f.rebuildPath(r, l ? s : 1), T && (r.setLineDash(T), r.lineDashOffset = C), a || (t.strokeFirst ? (i && L_(r, t), o && I_(r, t)) : (o && I_(r, t), i && L_(r, t))), T && r.setLineDash([]);
}
function Pk(r, e, t) {
  var a = e.__image = Ag(t.image, e.__image, e, e.onload);
  if (!(!a || !ph(a))) {
    var n = t.x || 0, i = t.y || 0, o = e.getWidth(), s = e.getHeight(), l = a.width / a.height;
    if (o == null && s != null ? o = s * l : s == null && o != null ? s = o / l : o == null && s == null && (o = a.width, s = a.height), t.sWidth && t.sHeight) {
      var u = t.sx || 0, f = t.sy || 0;
      r.drawImage(a, u, f, t.sWidth, t.sHeight, n, i, o, s);
    } else if (t.sx && t.sy) {
      var u = t.sx, f = t.sy, h = o - u, c = s - f;
      r.drawImage(a, u, f, h, c, n, i, o, s);
    } else
      r.drawImage(a, n, i, o, s);
  }
}
function Rk(r, e, t) {
  var a, n = t.text;
  if (n != null && (n += ""), n) {
    r.font = t.font || ja, r.textAlign = t.textAlign, r.textBaseline = t.textBaseline;
    var i = void 0, o = void 0;
    r.setLineDash && t.lineDash && (a = ay(e), i = a[0], o = a[1]), i && (r.setLineDash(i), r.lineDashOffset = o), t.strokeFirst ? (Mf(t) && r.strokeText(n, t.x, t.y), If(t) && r.fillText(n, t.x, t.y)) : (If(t) && r.fillText(n, t.x, t.y), Mf(t) && r.strokeText(n, t.x, t.y)), i && r.setLineDash([]);
  }
}
var E_ = ["shadowBlur", "shadowOffsetX", "shadowOffsetY"], P_ = [
  ["lineCap", "butt"],
  ["lineJoin", "miter"],
  ["miterLimit", 10]
];
function IC(r, e, t, a, n) {
  var i = !1;
  if (!a && (t = t || {}, e === t))
    return !1;
  if (a || e.opacity !== t.opacity) {
    Ve(r, n), i = !0;
    var o = Math.max(Math.min(e.opacity, 1), 0);
    r.globalAlpha = isNaN(o) ? ri.opacity : o;
  }
  (a || e.blend !== t.blend) && (i || (Ve(r, n), i = !0), r.globalCompositeOperation = e.blend || ri.blend);
  for (var s = 0; s < E_.length; s++) {
    var l = E_[s];
    (a || e[l] !== t[l]) && (i || (Ve(r, n), i = !0), r[l] = r.dpr * (e[l] || 0));
  }
  return (a || e.shadowColor !== t.shadowColor) && (i || (Ve(r, n), i = !0), r.shadowColor = e.shadowColor || ri.shadowColor), i;
}
function R_(r, e, t, a, n) {
  var i = rl(e, n.inHover), o = a ? null : t && rl(t, n.inHover) || {};
  if (i === o)
    return !1;
  var s = IC(r, i, o, a, n);
  if ((a || i.fill !== o.fill) && (s || (Ve(r, n), s = !0), M_(i.fill) && (r.fillStyle = i.fill)), (a || i.stroke !== o.stroke) && (s || (Ve(r, n), s = !0), M_(i.stroke) && (r.strokeStyle = i.stroke)), (a || i.opacity !== o.opacity) && (s || (Ve(r, n), s = !0), r.globalAlpha = i.opacity == null ? 1 : i.opacity), e.hasStroke()) {
    var l = i.lineWidth, u = l / (i.strokeNoScale && e.getLineScale ? e.getLineScale() : 1);
    r.lineWidth !== u && (s || (Ve(r, n), s = !0), r.lineWidth = u);
  }
  for (var f = 0; f < P_.length; f++) {
    var h = P_[f], c = h[0];
    (a || i[c] !== o[c]) && (s || (Ve(r, n), s = !0), r[c] = i[c] || h[1]);
  }
  return s;
}
function Nk(r, e, t, a, n) {
  return IC(r, rl(e, n.inHover), t && rl(t, n.inHover), a, n);
}
function LC(r, e) {
  var t = e.transform, a = r.dpr || 1;
  t ? r.setTransform(a * t[0], a * t[1], a * t[2], a * t[3], a * t[4], a * t[5]) : r.setTransform(a, 0, 0, a, 0, 0);
}
function Ok(r, e, t) {
  for (var a = !1, n = 0; n < r.length; n++) {
    var i = r[n];
    a = a || i.isZeroArea(), LC(e, i), e.beginPath(), i.buildPath(e, i.shape), e.clip();
  }
  t.allClipped = a;
}
function kk(r, e) {
  return r && e ? r[0] !== e[0] || r[1] !== e[1] || r[2] !== e[2] || r[3] !== e[3] || r[4] !== e[4] || r[5] !== e[5] : !(!r && !e);
}
var N_ = 1, O_ = 2, k_ = 3, V_ = 4;
function Vk(r) {
  var e = If(r), t = Mf(r);
  return !(r.lineDash || !(+e ^ +t) || e && typeof r.fill != "string" || t && typeof r.stroke != "string" || r.strokePercent < 1 || r.strokeOpacity < 1 || r.fillOpacity < 1);
}
function Ve(r, e) {
  e.batchFill && r.fill(), e.batchStroke && r.stroke(), e.batchFill = "", e.batchStroke = "";
}
function rl(r, e) {
  return e && r.__hoverStyle || r.style;
}
function EC(r, e) {
  Jn(r, e, { inHover: !1, viewWidth: 0, viewHeight: 0 }, !0);
}
function Jn(r, e, t, a) {
  var n = e.transform;
  if (!e.shouldBePainted(t.viewWidth, t.viewHeight, !1, !1)) {
    e.__dirty &= ~$e, e.__isRendered = !1;
    return;
  }
  var i = e.__clipPaths, o = t.prevElClipPaths, s = !1, l = !1;
  if ((!o || Mk(i, o)) && (o && o.length && (Ve(r, t), r.restore(), l = s = !0, t.prevElClipPaths = null, t.allClipped = !1, t.prevEl = null), i && i.length && (Ve(r, t), r.save(), Ok(i, r, t), s = !0), t.prevElClipPaths = i), t.allClipped) {
    e.__isRendered = !1;
    return;
  }
  e.beforeBrush && e.beforeBrush(), e.innerBeforeBrush();
  var u = t.prevEl;
  u || (l = s = !0);
  var f = e instanceof mt && e.autoBatch && Vk(e.style);
  s || kk(n, u.transform) ? (Ve(r, t), LC(r, e)) : f || Ve(r, t);
  var h = rl(e, t.inHover);
  e instanceof mt ? (t.lastDrawType !== N_ && (l = !0, t.lastDrawType = N_), R_(r, e, u, l, t), (!f || !t.batchFill && !t.batchStroke) && r.beginPath(), Ek(r, e, h, f), f && (t.batchFill = h.fill || "", t.batchStroke = h.stroke || "")) : e instanceof Zs ? (t.lastDrawType !== k_ && (l = !0, t.lastDrawType = k_), R_(r, e, u, l, t), Rk(r, e, h)) : e instanceof ge ? (t.lastDrawType !== O_ && (l = !0, t.lastDrawType = O_), Nk(r, e, u, l, t), Pk(r, e, h)) : e.getTemporalDisplayables && (t.lastDrawType !== V_ && (l = !0, t.lastDrawType = V_), Bk(r, e, t)), f && a && Ve(r, t), e.innerAfterBrush(), e.afterBrush && e.afterBrush(), t.prevEl = e, e.__dirty = 0, e.__isRendered = !0;
}
function Bk(r, e, t) {
  var a = e.getDisplayables(), n = e.getTemporalDisplayables();
  r.save();
  var i = {
    prevElClipPaths: null,
    prevEl: null,
    allClipped: !1,
    viewWidth: t.viewWidth,
    viewHeight: t.viewHeight,
    inHover: t.inHover
  }, o, s;
  for (o = e.getCursor(), s = a.length; o < s; o++) {
    var l = a[o];
    l.beforeBrush && l.beforeBrush(), l.innerBeforeBrush(), Jn(r, l, i, o === s - 1), l.innerAfterBrush(), l.afterBrush && l.afterBrush(), i.prevEl = l;
  }
  for (var u = 0, f = n.length; u < f; u++) {
    var l = n[u];
    l.beforeBrush && l.beforeBrush(), l.innerBeforeBrush(), Jn(r, l, i, u === f - 1), l.innerAfterBrush(), l.afterBrush && l.afterBrush(), i.prevEl = l;
  }
  e.clearTemporalDisplayables(), e.notClear = !0, r.restore();
}
var Zc = new yk(), B_ = new pl(100), z_ = ["symbol", "symbolSize", "symbolKeepAspect", "color", "backgroundColor", "dashArrayX", "dashArrayY", "maxTileWidth", "maxTileHeight"];
function po(r, e) {
  if (r === "none")
    return null;
  var t = e.getDevicePixelRatio(), a = e.getZr(), n = a.painter.type === "svg";
  r.dirty && Zc.delete(r);
  var i = Zc.get(r);
  if (i)
    return i;
  var o = et(r, {
    symbol: "rect",
    symbolSize: 1,
    symbolKeepAspect: !0,
    color: "rgba(0, 0, 0, 0.2)",
    backgroundColor: null,
    dashArrayX: 5,
    dashArrayY: 5,
    rotation: 0,
    maxTileWidth: 512,
    maxTileHeight: 512
  });
  o.backgroundColor === "none" && (o.backgroundColor = null);
  var s = {
    repeat: "repeat"
  };
  return l(s), s.rotation = o.rotation, s.scaleX = s.scaleY = n ? 1 : 1 / t, Zc.set(r, s), r.dirty = !1, s;
  function l(u) {
    for (var f = [t], h = !0, c = 0; c < z_.length; ++c) {
      var v = o[z_[c]];
      if (v != null && !z(v) && !$(v) && !At(v) && typeof v != "boolean") {
        h = !1;
        break;
      }
      f.push(v);
    }
    var d;
    if (h) {
      d = f.join(",") + (n ? "-svg" : "");
      var p = B_.get(d);
      p && (n ? u.svgElement = p : u.image = p);
    }
    var g = RC(o.dashArrayX), y = zk(o.dashArrayY), m = PC(o.symbol), _ = Gk(g), S = NC(y), w = !n && Ja.createCanvas(), x = n && {
      tag: "g",
      attrs: {},
      key: "dcl",
      children: []
    }, b = C(), T;
    w && (w.width = b.width * t, w.height = b.height * t, T = w.getContext("2d")), D(), h && B_.put(d, w || x), u.image = w, u.svgElement = x, u.svgWidth = b.width, u.svgHeight = b.height;
    function C() {
      for (var A = 1, I = 0, L = _.length; I < L; ++I)
        A = jm(A, _[I]);
      for (var E = 1, I = 0, L = m.length; I < L; ++I)
        E = jm(E, m[I].length);
      A *= E;
      var P = S * _.length * m.length;
      if ({}.NODE_ENV !== "production") {
        var R = function(k) {
          console.warn("Calculated decal size is greater than " + k + " due to decal option settings so " + k + " is used for the decal size. Please consider changing the decal option to make a smaller decal or set " + k + " to be larger to avoid incontinuity.");
        };
        A > o.maxTileWidth && R("maxTileWidth"), P > o.maxTileHeight && R("maxTileHeight");
      }
      return {
        width: Math.max(1, Math.min(A, o.maxTileWidth)),
        height: Math.max(1, Math.min(P, o.maxTileHeight))
      };
    }
    function D() {
      T && (T.clearRect(0, 0, w.width, w.height), o.backgroundColor && (T.fillStyle = o.backgroundColor, T.fillRect(0, 0, w.width, w.height)));
      for (var A = 0, I = 0; I < y.length; ++I)
        A += y[I];
      if (A <= 0)
        return;
      for (var L = -S, E = 0, P = 0, R = 0; L < b.height; ) {
        if (E % 2 === 0) {
          for (var k = P / 2 % m.length, O = 0, B = 0, F = 0; O < b.width * 2; ) {
            for (var W = 0, I = 0; I < g[R].length; ++I)
              W += g[R][I];
            if (W <= 0)
              break;
            if (B % 2 === 0) {
              var Z = (1 - o.symbolSize) * 0.5, Q = O + g[R][B] * Z, tt = L + y[E] * Z, dt = g[R][B] * o.symbolSize, St = y[E] * o.symbolSize, pt = F / 2 % m[k].length;
              rt(Q, tt, dt, St, m[k][pt]);
            }
            O += g[R][B], ++F, ++B, B === g[R].length && (B = 0);
          }
          ++R, R === g.length && (R = 0);
        }
        L += y[E], ++P, ++E, E === y.length && (E = 0);
      }
      function rt(gt, st, q, lt, zt) {
        var wt = n ? 1 : t, Ut = Qt(zt, gt * wt, st * wt, q * wt, lt * wt, o.color, o.symbolKeepAspect);
        if (n) {
          var Ht = a.painter.renderOneToVNode(Ut);
          Ht && x.children.push(Ht);
        } else
          EC(T, Ut);
      }
    }
  }
}
function PC(r) {
  if (!r || r.length === 0)
    return [["rect"]];
  if ($(r))
    return [[r]];
  for (var e = !0, t = 0; t < r.length; ++t)
    if (!$(r[t])) {
      e = !1;
      break;
    }
  if (e)
    return PC([r]);
  for (var a = [], t = 0; t < r.length; ++t)
    $(r[t]) ? a.push([r[t]]) : a.push(r[t]);
  return a;
}
function RC(r) {
  if (!r || r.length === 0)
    return [[0, 0]];
  if (At(r)) {
    var e = Math.ceil(r);
    return [[e, e]];
  }
  for (var t = !0, a = 0; a < r.length; ++a)
    if (!At(r[a])) {
      t = !1;
      break;
    }
  if (t)
    return RC([r]);
  for (var n = [], a = 0; a < r.length; ++a)
    if (At(r[a])) {
      var e = Math.ceil(r[a]);
      n.push([e, e]);
    } else {
      var e = G(r[a], function(s) {
        return Math.ceil(s);
      });
      e.length % 2 === 1 ? n.push(e.concat(e)) : n.push(e);
    }
  return n;
}
function zk(r) {
  if (!r || typeof r == "object" && r.length === 0)
    return [0, 0];
  if (At(r)) {
    var e = Math.ceil(r);
    return [e, e];
  }
  var t = G(r, function(a) {
    return Math.ceil(a);
  });
  return r.length % 2 ? t.concat(t) : t;
}
function Gk(r) {
  return G(r, function(e) {
    return NC(e);
  });
}
function NC(r) {
  for (var e = 0, t = 0; t < r.length; ++t)
    e += r[t];
  return r.length % 2 === 1 ? e * 2 : e;
}
function Fk(r, e) {
  r.eachRawSeries(function(t) {
    if (!r.isSeriesFiltered(t)) {
      var a = t.getData();
      a.hasItemVisual() && a.each(function(o) {
        var s = a.getItemVisual(o, "decal");
        if (s) {
          var l = a.ensureUniqueItemVisual(o, "style");
          l.decal = po(s, e);
        }
      });
      var n = a.getVisual("decal");
      if (n) {
        var i = a.getVisual("style");
        i.decal = po(n, e);
      }
    }
  });
}
var Hk = new cr();
const mr = Hk;
var Lf = {};
function Wk(r, e) {
  ({}).NODE_ENV !== "production" && Lf[r] && ve("Already has an implementation of " + r + "."), Lf[r] = e;
}
function $k(r) {
  return {}.NODE_ENV !== "production" && (Lf[r] || ve("Implementation of " + r + " doesn't exists.")), Lf[r];
}
var Uk = 1, Yk = 800, Zk = 900, Xk = 1e3, qk = 2e3, Kk = 5e3, OC = 1e3, jk = 1100, ny = 2e3, kC = 3e3, Jk = 4e3, Nh = 4500, Qk = 4600, tV = 5e3, eV = 6e3, VC = 7e3, rV = {
  PROCESSOR: {
    FILTER: Xk,
    SERIES_FILTER: Yk,
    STATISTIC: Kk
  },
  VISUAL: {
    LAYOUT: OC,
    PROGRESSIVE_LAYOUT: jk,
    GLOBAL: ny,
    CHART: kC,
    POST_CHART_LAYOUT: Qk,
    COMPONENT: Jk,
    BRUSH: tV,
    CHART_ITEM: Nh,
    ARIA: eV,
    DECAL: VC
  }
}, _e = "__flagInMainProcess", Re = "__pendingUpdate", Xc = "__needsUpdateStatus", G_ = /^[a-zA-Z0-9_]+$/, qc = "__connectUpdateStatus", F_ = 0, aV = 1, nV = 2;
function BC(r) {
  return function() {
    for (var e = [], t = 0; t < arguments.length; t++)
      e[t] = arguments[t];
    if (this.isDisposed()) {
      We(this.id);
      return;
    }
    return GC(this, r, e);
  };
}
function zC(r) {
  return function() {
    for (var e = [], t = 0; t < arguments.length; t++)
      e[t] = arguments[t];
    return GC(this, r, e);
  };
}
function GC(r, e, t) {
  return t[0] = t[0] && t[0].toLowerCase(), cr.prototype[e].apply(r, t);
}
var FC = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return e;
  }(cr)
), HC = FC.prototype;
HC.on = zC("on");
HC.off = zC("off");
var Vi, Kc, ou, La, jc, Jc, Qc, Qo, ts, H_, W_, tv, $_, su, U_, WC, Xe, Y_, $C = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t, a, n) {
      var i = r.call(this, new fk()) || this;
      i._chartsViews = [], i._chartsMap = {}, i._componentsViews = [], i._componentsMap = {}, i._pendingActions = [], n = n || {}, $(a) && (a = UC[a]), i._dom = t;
      var o = "canvas", s = "auto", l = !1;
      if ({}.NODE_ENV !== "production") {
        var u = (
          /* eslint-disable-next-line */
          bt.hasGlobalWindow ? window : global
        );
        o = u.__ECHARTS__DEFAULT__RENDERER__ || o, s = ft(u.__ECHARTS__DEFAULT__COARSE_POINTER, s);
        var f = u.__ECHARTS__DEFAULT__USE_DIRTY_RECT__;
        l = f == null ? l : f;
      }
      var h = i._zr = Zm(t, {
        renderer: n.renderer || o,
        devicePixelRatio: n.devicePixelRatio,
        width: n.width,
        height: n.height,
        ssr: n.ssr,
        useDirtyRect: ft(n.useDirtyRect, l),
        useCoarsePointer: ft(n.useCoarsePointer, s),
        pointerSize: n.pointerSize
      });
      i._ssr = n.ssr, i._throttledZrFlush = ey(Y(h.flush, h), 17), a = at(a), a && jD(a, !0), i._theme = a, i._locale = pN(n.locale || DD), i._coordSysMgr = new Oo();
      var c = i._api = U_(i);
      function v(d, p) {
        return d.__prio - p.__prio;
      }
      return Fu(Pf, v), Fu(yp, v), i._scheduler = new DC(i, c, yp, Pf), i._messageCenter = new FC(), i._initEvents(), i.resize = Y(i.resize, i), h.animation.on("frame", i._onframe, i), H_(h, i), W_(h, i), of(i), i;
    }
    return e.prototype._onframe = function() {
      if (!this._disposed) {
        Y_(this);
        var t = this._scheduler;
        if (this[Re]) {
          var a = this[Re].silent;
          this[_e] = !0;
          try {
            Vi(this), La.update.call(this, null, this[Re].updateParams);
          } catch (l) {
            throw this[_e] = !1, this[Re] = null, l;
          }
          this._zr.flush(), this[_e] = !1, this[Re] = null, Qo.call(this, a), ts.call(this, a);
        } else if (t.unfinished) {
          var n = Uk, i = this._model, o = this._api;
          t.unfinished = !1;
          do {
            var s = +/* @__PURE__ */ new Date();
            t.performSeriesTasks(i), t.performDataProcessorTasks(i), Jc(this, i), t.performVisualTasks(i), su(this, this._model, o, "remain", {}), n -= +/* @__PURE__ */ new Date() - s;
          } while (n > 0 && t.unfinished);
          t.unfinished || this._zr.flush();
        }
      }
    }, e.prototype.getDom = function() {
      return this._dom;
    }, e.prototype.getId = function() {
      return this.id;
    }, e.prototype.getZr = function() {
      return this._zr;
    }, e.prototype.isSSR = function() {
      return this._ssr;
    }, e.prototype.setOption = function(t, a, n) {
      if (this[_e]) {
        ({}).NODE_ENV !== "production" && ve("`setOption` should not be called during main process.");
        return;
      }
      if (this._disposed) {
        We(this.id);
        return;
      }
      var i, o, s;
      if (j(a) && (n = a.lazyUpdate, i = a.silent, o = a.replaceMerge, s = a.transition, a = a.notMerge), this[_e] = !0, !this._model || a) {
        var l = new qN(this._api), u = this._theme, f = this._model = new XD();
        f.scheduler = this._scheduler, f.ssr = this._ssr, f.init(null, null, null, u, this._locale, l);
      }
      this._model.setOption(t, {
        replaceMerge: o
      }, mp);
      var h = {
        seriesTransition: s,
        optionChanged: !0
      };
      if (n)
        this[Re] = {
          silent: i,
          updateParams: h
        }, this[_e] = !1, this.getZr().wakeUp();
      else {
        try {
          Vi(this), La.update.call(this, null, h);
        } catch (c) {
          throw this[Re] = null, this[_e] = !1, c;
        }
        this._ssr || this._zr.flush(), this[Re] = null, this[_e] = !1, Qo.call(this, i), ts.call(this, i);
      }
    }, e.prototype.setTheme = function() {
      Ar("ECharts#setTheme() is DEPRECATED in ECharts 3.0");
    }, e.prototype.getModel = function() {
      return this._model;
    }, e.prototype.getOption = function() {
      return this._model && this._model.getOption();
    }, e.prototype.getWidth = function() {
      return this._zr.getWidth();
    }, e.prototype.getHeight = function() {
      return this._zr.getHeight();
    }, e.prototype.getDevicePixelRatio = function() {
      return this._zr.painter.dpr || bt.hasGlobalWindow && window.devicePixelRatio || 1;
    }, e.prototype.getRenderedCanvas = function(t) {
      return {}.NODE_ENV !== "production" && Kt("getRenderedCanvas", "renderToCanvas"), this.renderToCanvas(t);
    }, e.prototype.renderToCanvas = function(t) {
      t = t || {};
      var a = this._zr.painter;
      if ({}.NODE_ENV !== "production" && a.type !== "canvas")
        throw new Error("renderToCanvas can only be used in the canvas renderer.");
      return a.getRenderedCanvas({
        backgroundColor: t.backgroundColor || this._model.get("backgroundColor"),
        pixelRatio: t.pixelRatio || this.getDevicePixelRatio()
      });
    }, e.prototype.renderToSVGString = function(t) {
      t = t || {};
      var a = this._zr.painter;
      if ({}.NODE_ENV !== "production" && a.type !== "svg")
        throw new Error("renderToSVGString can only be used in the svg renderer.");
      return a.renderToString({
        useViewBox: t.useViewBox
      });
    }, e.prototype.getSvgDataURL = function() {
      if (bt.svgSupported) {
        var t = this._zr, a = t.storage.getDisplayList();
        return M(a, function(n) {
          n.stopAnimation(null, !0);
        }), t.painter.toDataURL();
      }
    }, e.prototype.getDataURL = function(t) {
      if (this._disposed) {
        We(this.id);
        return;
      }
      t = t || {};
      var a = t.excludeComponents, n = this._model, i = [], o = this;
      M(a, function(l) {
        n.eachComponent({
          mainType: l
        }, function(u) {
          var f = o._componentsMap[u.__viewId];
          f.group.ignore || (i.push(f), f.group.ignore = !0);
        });
      });
      var s = this._zr.painter.getType() === "svg" ? this.getSvgDataURL() : this.renderToCanvas(t).toDataURL("image/" + (t && t.type || "png"));
      return M(i, function(l) {
        l.group.ignore = !1;
      }), s;
    }, e.prototype.getConnectedDataURL = function(t) {
      if (this._disposed) {
        We(this.id);
        return;
      }
      var a = t.type === "svg", n = this.group, i = Math.min, o = Math.max, s = 1 / 0;
      if (Z_[n]) {
        var l = s, u = s, f = -s, h = -s, c = [], v = t && t.pixelRatio || this.getDevicePixelRatio();
        M(zs, function(_, S) {
          if (_.group === n) {
            var w = a ? _.getZr().painter.getSvgDom().innerHTML : _.renderToCanvas(at(t)), x = _.getDom().getBoundingClientRect();
            l = i(x.left, l), u = i(x.top, u), f = o(x.right, f), h = o(x.bottom, h), c.push({
              dom: w,
              left: x.left,
              top: x.top
            });
          }
        }), l *= v, u *= v, f *= v, h *= v;
        var d = f - l, p = h - u, g = Ja.createCanvas(), y = Zm(g, {
          renderer: a ? "svg" : "canvas"
        });
        if (y.resize({
          width: d,
          height: p
        }), a) {
          var m = "";
          return M(c, function(_) {
            var S = _.left - l, w = _.top - u;
            m += '<g transform="translate(' + S + "," + w + ')">' + _.dom + "</g>";
          }), y.painter.getSvgRoot().innerHTML = m, t.connectedBackgroundColor && y.painter.setBackgroundColor(t.connectedBackgroundColor), y.refreshImmediately(), y.painter.toDataURL();
        } else
          return t.connectedBackgroundColor && y.add(new Tt({
            shape: {
              x: 0,
              y: 0,
              width: d,
              height: p
            },
            style: {
              fill: t.connectedBackgroundColor
            }
          })), M(c, function(_) {
            var S = new ge({
              style: {
                x: _.left * v - l,
                y: _.top * v - u,
                image: _.dom
              }
            });
            y.add(S);
          }), y.refreshImmediately(), g.toDataURL("image/" + (t && t.type || "png"));
      } else
        return this.getDataURL(t);
    }, e.prototype.convertToPixel = function(t, a) {
      return jc(this, "convertToPixel", t, a);
    }, e.prototype.convertFromPixel = function(t, a) {
      return jc(this, "convertFromPixel", t, a);
    }, e.prototype.containPixel = function(t, a) {
      if (this._disposed) {
        We(this.id);
        return;
      }
      var n = this._model, i, o = Ps(n, t);
      return M(o, function(s, l) {
        l.indexOf("Models") >= 0 && M(s, function(u) {
          var f = u.coordinateSystem;
          if (f && f.containPoint)
            i = i || !!f.containPoint(a);
          else if (l === "seriesModels") {
            var h = this._chartsMap[u.__viewId];
            h && h.containPoint ? i = i || h.containPoint(a, u) : {}.NODE_ENV !== "production" && Ft(l + ": " + (h ? "The found component do not support containPoint." : "No view mapping to the found component."));
          } else
            ({}).NODE_ENV !== "production" && Ft(l + ": containPoint is not supported");
        }, this);
      }, this), !!i;
    }, e.prototype.getVisual = function(t, a) {
      var n = this._model, i = Ps(n, t, {
        defaultMainType: "series"
      }), o = i.seriesModel;
      ({}).NODE_ENV !== "production" && (o || Ft("There is no specified series model"));
      var s = o.getData(), l = i.hasOwnProperty("dataIndexInside") ? i.dataIndexInside : i.hasOwnProperty("dataIndex") ? s.indexOfRawIndex(i.dataIndex) : null;
      return l != null ? ry(s, l, a) : bl(s, a);
    }, e.prototype.getViewOfComponentModel = function(t) {
      return this._componentsMap[t.__viewId];
    }, e.prototype.getViewOfSeriesModel = function(t) {
      return this._chartsMap[t.__viewId];
    }, e.prototype._initEvents = function() {
      var t = this;
      M(iV, function(a) {
        var n = function(i) {
          var o = t.getModel(), s = i.target, l, u = a === "globalout";
          if (u ? l = {} : s && Kn(s, function(d) {
            var p = it(d);
            if (p && p.dataIndex != null) {
              var g = p.dataModel || o.getSeriesByIndex(p.seriesIndex);
              return l = g && g.getDataParams(p.dataIndex, p.dataType, s) || {}, !0;
            } else if (p.eventData)
              return l = V({}, p.eventData), !0;
          }, !0), l) {
            var f = l.componentType, h = l.componentIndex;
            (f === "markLine" || f === "markPoint" || f === "markArea") && (f = "series", h = l.seriesIndex);
            var c = f && h != null && o.getComponent(f, h), v = c && t[c.mainType === "series" ? "_chartsMap" : "_componentsMap"][c.__viewId];
            ({}).NODE_ENV !== "production" && !u && !(c && v) && Ft("model or view can not be found by params"), l.event = i, l.type = a, t._$eventProcessor.eventInfo = {
              targetEl: s,
              packedEvent: l,
              model: c,
              view: v
            }, t.trigger(a, l);
          }
        };
        n.zrEventfulCallAtLast = !0, t._zr.on(a, n, t);
      }), M(Bs, function(a, n) {
        t._messageCenter.on(n, function(i) {
          this.trigger(n, i);
        }, t);
      }), M(["selectchanged"], function(a) {
        t._messageCenter.on(a, function(n) {
          this.trigger(a, n);
        }, t);
      }), vk(this._messageCenter, this, this._api);
    }, e.prototype.isDisposed = function() {
      return this._disposed;
    }, e.prototype.clear = function() {
      if (this._disposed) {
        We(this.id);
        return;
      }
      this.setOption({
        series: []
      }, !0);
    }, e.prototype.dispose = function() {
      if (this._disposed) {
        We(this.id);
        return;
      }
      this._disposed = !0;
      var t = this.getDom();
      t && wT(this.getDom(), oy, "");
      var a = this, n = a._api, i = a._model;
      M(a._componentsViews, function(o) {
        o.dispose(i, n);
      }), M(a._chartsViews, function(o) {
        o.dispose(i, n);
      }), a._zr.dispose(), a._dom = a._model = a._chartsMap = a._componentsMap = a._chartsViews = a._componentsViews = a._scheduler = a._api = a._zr = a._throttledZrFlush = a._theme = a._coordSysMgr = a._messageCenter = null, delete zs[a.id];
    }, e.prototype.resize = function(t) {
      if (this[_e]) {
        ({}).NODE_ENV !== "production" && ve("`resize` should not be called during main process.");
        return;
      }
      if (this._disposed) {
        We(this.id);
        return;
      }
      this._zr.resize(t);
      var a = this._model;
      if (this._loadingFX && this._loadingFX.resize(), !!a) {
        var n = a.resetOption("media"), i = t && t.silent;
        this[Re] && (i == null && (i = this[Re].silent), n = !0, this[Re] = null), this[_e] = !0;
        try {
          n && Vi(this), La.update.call(this, {
            type: "resize",
            animation: V({
              // Disable animation
              duration: 0
            }, t && t.animation)
          });
        } catch (o) {
          throw this[_e] = !1, o;
        }
        this[_e] = !1, Qo.call(this, i), ts.call(this, i);
      }
    }, e.prototype.showLoading = function(t, a) {
      if (this._disposed) {
        We(this.id);
        return;
      }
      if (j(t) && (a = t, t = ""), t = t || "default", this.hideLoading(), !_p[t]) {
        ({}).NODE_ENV !== "production" && Ft("Loading effects " + t + " not exists.");
        return;
      }
      var n = _p[t](this._api, a), i = this._zr;
      this._loadingFX = n, i.add(n);
    }, e.prototype.hideLoading = function() {
      if (this._disposed) {
        We(this.id);
        return;
      }
      this._loadingFX && this._zr.remove(this._loadingFX), this._loadingFX = null;
    }, e.prototype.makeActionFromEvent = function(t) {
      var a = V({}, t);
      return a.type = Bs[t.type], a;
    }, e.prototype.dispatchAction = function(t, a) {
      if (this._disposed) {
        We(this.id);
        return;
      }
      if (j(a) || (a = {
        silent: !!a
      }), !!Ef[t.type] && this._model) {
        if (this[_e]) {
          this._pendingActions.push(t);
          return;
        }
        var n = a.silent;
        Qc.call(this, t, n);
        var i = a.flush;
        i ? this._zr.flush() : i !== !1 && bt.browser.weChat && this._throttledZrFlush(), Qo.call(this, n), ts.call(this, n);
      }
    }, e.prototype.updateLabelLayout = function() {
      mr.trigger("series:layoutlabels", this._model, this._api, {
        // Not adding series labels.
        // TODO
        updatedSeries: []
      });
    }, e.prototype.appendData = function(t) {
      if (this._disposed) {
        We(this.id);
        return;
      }
      var a = t.seriesIndex, n = this.getModel(), i = n.getSeriesByIndex(a);
      ({}).NODE_ENV !== "production" && J(t.data && i), i.appendData(t), this._scheduler.unfinished = !0, this.getZr().wakeUp();
    }, e.internalField = function() {
      Vi = function(h) {
        var c = h._scheduler;
        c.restorePipelines(h._model), c.prepareStageTasks(), Kc(h, !0), Kc(h, !1), c.plan();
      }, Kc = function(h, c) {
        for (var v = h._model, d = h._scheduler, p = c ? h._componentsViews : h._chartsViews, g = c ? h._componentsMap : h._chartsMap, y = h._zr, m = h._api, _ = 0; _ < p.length; _++)
          p[_].__alive = !1;
        c ? v.eachComponent(function(x, b) {
          x !== "series" && S(b);
        }) : v.eachSeries(S);
        function S(x) {
          var b = x.__requireNewView;
          x.__requireNewView = !1;
          var T = "_ec_" + x.id + "_" + x.type, C = !b && g[T];
          if (!C) {
            var D = Hr(x.type), A = c ? $t.getClass(D.main, D.sub) : (
              // FIXME:TS
              // (ChartView as ChartViewConstructor).getClass('series', classType.sub)
              // For backward compat, still support a chart type declared as only subType
              // like "liquidfill", but recommend "series.liquidfill"
              // But need a base class to make a type series.
              Vt.getClass(D.sub)
            );
            ({}).NODE_ENV !== "production" && J(A, D.sub + " does not exist."), C = new A(), C.init(v, m), g[T] = C, p.push(C), y.add(C.group);
          }
          x.__viewId = C.__id = T, C.__alive = !0, C.__model = x, C.group.__ecComponentInfo = {
            mainType: x.mainType,
            index: x.componentIndex
          }, !c && d.prepareView(C, x, v, m);
        }
        for (var _ = 0; _ < p.length; ) {
          var w = p[_];
          w.__alive ? _++ : (!c && w.renderTask.dispose(), y.remove(w.group), w.dispose(v, m), p.splice(_, 1), g[w.__id] === w && delete g[w.__id], w.__id = w.group.__ecComponentInfo = null);
        }
      }, ou = function(h, c, v, d, p) {
        var g = h._model;
        if (g.setUpdatePayload(v), !d) {
          M([].concat(h._componentsViews).concat(h._chartsViews), w);
          return;
        }
        var y = {};
        y[d + "Id"] = v[d + "Id"], y[d + "Index"] = v[d + "Index"], y[d + "Name"] = v[d + "Name"];
        var m = {
          mainType: d,
          query: y
        };
        p && (m.subType = p);
        var _ = v.excludeSeriesId, S;
        _ != null && (S = X(), M(Pt(_), function(x) {
          var b = re(x, null);
          b != null && S.set(b, !0);
        })), g && g.eachComponent(m, function(x) {
          var b = S && S.get(x.id) != null;
          if (!b)
            if (M0(v))
              if (x instanceof Gt)
                v.type === ai && !v.notBlur && !x.get(["emphasis", "disabled"]) && sR(x, v, h._api);
              else {
                var T = Pg(x.mainType, x.componentIndex, v.name, h._api), C = T.focusSelf, D = T.dispatchers;
                v.type === ai && C && !v.notBlur && Jd(x.mainType, x.componentIndex, h._api), D && M(D, function(A) {
                  v.type === ai ? ga(A) : ya(A);
                });
              }
            else
              tp(v) && x instanceof Gt && (fR(x, v, h._api), C0(x), Xe(h));
        }, h), g && g.eachComponent(m, function(x) {
          var b = S && S.get(x.id) != null;
          b || w(h[d === "series" ? "_chartsMap" : "_componentsMap"][x.__viewId]);
        }, h);
        function w(x) {
          x && x.__alive && x[c] && x[c](x.__model, g, h._api, v);
        }
      }, La = {
        prepareAndUpdate: function(h) {
          Vi(this), La.update.call(this, h, {
            // Needs to mark option changed if newOption is given.
            // It's from MagicType.
            // TODO If use a separate flag optionChanged in payload?
            optionChanged: h.newOption != null
          });
        },
        update: function(h, c) {
          var v = this._model, d = this._api, p = this._zr, g = this._coordSysMgr, y = this._scheduler;
          if (v) {
            v.setUpdatePayload(h), y.restoreData(v, h), y.performSeriesTasks(v), g.create(v, d), y.performDataProcessorTasks(v, h), Jc(this, v), g.update(v, d), t(v), y.performVisualTasks(v, h), tv(this, v, d, h, c);
            var m = v.get("backgroundColor") || "transparent", _ = v.get("darkMode");
            p.setBackgroundColor(m), _ != null && _ !== "auto" && p.setDarkMode(_), mr.trigger("afterupdate", v, d);
          }
        },
        updateTransform: function(h) {
          var c = this, v = this._model, d = this._api;
          if (v) {
            v.setUpdatePayload(h);
            var p = [];
            v.eachComponent(function(y, m) {
              if (y !== "series") {
                var _ = c.getViewOfComponentModel(m);
                if (_ && _.__alive)
                  if (_.updateTransform) {
                    var S = _.updateTransform(m, v, d, h);
                    S && S.update && p.push(_);
                  } else
                    p.push(_);
              }
            });
            var g = X();
            v.eachSeries(function(y) {
              var m = c._chartsMap[y.__viewId];
              if (m.updateTransform) {
                var _ = m.updateTransform(y, v, d, h);
                _ && _.update && g.set(y.uid, 1);
              } else
                g.set(y.uid, 1);
            }), t(v), this._scheduler.performVisualTasks(v, h, {
              setDirty: !0,
              dirtyMap: g
            }), su(this, v, d, h, {}, g), mr.trigger("afterupdate", v, d);
          }
        },
        updateView: function(h) {
          var c = this._model;
          c && (c.setUpdatePayload(h), Vt.markUpdateMethod(h, "updateView"), t(c), this._scheduler.performVisualTasks(c, h, {
            setDirty: !0
          }), tv(this, c, this._api, h, {}), mr.trigger("afterupdate", c, this._api));
        },
        updateVisual: function(h) {
          var c = this, v = this._model;
          v && (v.setUpdatePayload(h), v.eachSeries(function(d) {
            d.getData().clearAllVisual();
          }), Vt.markUpdateMethod(h, "updateVisual"), t(v), this._scheduler.performVisualTasks(v, h, {
            visualType: "visual",
            setDirty: !0
          }), v.eachComponent(function(d, p) {
            if (d !== "series") {
              var g = c.getViewOfComponentModel(p);
              g && g.__alive && g.updateVisual(p, v, c._api, h);
            }
          }), v.eachSeries(function(d) {
            var p = c._chartsMap[d.__viewId];
            p.updateVisual(d, v, c._api, h);
          }), mr.trigger("afterupdate", v, this._api));
        },
        updateLayout: function(h) {
          La.update.call(this, h);
        }
      }, jc = function(h, c, v, d) {
        if (h._disposed) {
          We(h.id);
          return;
        }
        for (var p = h._model, g = h._coordSysMgr.getCoordinateSystems(), y, m = Ps(p, v), _ = 0; _ < g.length; _++) {
          var S = g[_];
          if (S[c] && (y = S[c](p, m, d)) != null)
            return y;
        }
        ({}).NODE_ENV !== "production" && Ft("No coordinate system that supports " + c + " found by the given finder.");
      }, Jc = function(h, c) {
        var v = h._chartsMap, d = h._scheduler;
        c.eachSeries(function(p) {
          d.updateStreamModes(p, v[p.__viewId]);
        });
      }, Qc = function(h, c) {
        var v = this, d = this.getModel(), p = h.type, g = h.escapeConnect, y = Ef[p], m = y.actionInfo, _ = (m.update || "update").split(":"), S = _.pop(), w = _[0] != null && Hr(_[0]);
        this[_e] = !0;
        var x = [h], b = !1;
        h.batch && (b = !0, x = G(h.batch, function(E) {
          return E = et(V({}, E), h), E.batch = null, E;
        }));
        var T = [], C, D = tp(h), A = M0(h);
        if (A && XT(this._api), M(x, function(E) {
          if (C = y.action(E, v._model, v._api), C = C || V({}, E), C.type = m.event || C.type, T.push(C), A) {
            var P = Dg(h), R = P.queryOptionMap, k = P.mainTypeSpecified, O = k ? R.keys()[0] : "series";
            ou(v, S, E, O), Xe(v);
          } else
            D ? (ou(v, S, E, "series"), Xe(v)) : w && ou(v, S, E, w.main, w.sub);
        }), S !== "none" && !A && !D && !w)
          try {
            this[Re] ? (Vi(this), La.update.call(this, h), this[Re] = null) : La[S].call(this, h);
          } catch (E) {
            throw this[_e] = !1, E;
          }
        if (b ? C = {
          type: m.event || p,
          escapeConnect: g,
          batch: T
        } : C = T[0], this[_e] = !1, !c) {
          var I = this._messageCenter;
          if (I.trigger(C.type, C), D) {
            var L = {
              type: "selectchanged",
              escapeConnect: g,
              selected: hR(d),
              isFromClick: h.isFromClick || !1,
              fromAction: h.type,
              fromActionPayload: h
            };
            I.trigger(L.type, L);
          }
        }
      }, Qo = function(h) {
        for (var c = this._pendingActions; c.length; ) {
          var v = c.shift();
          Qc.call(this, v, h);
        }
      }, ts = function(h) {
        !h && this.trigger("updated");
      }, H_ = function(h, c) {
        h.on("rendered", function(v) {
          c.trigger("rendered", v), // Although zr is dirty if initial animation is not finished
          // and this checking is called on frame, we also check
          // animation finished for robustness.
          h.animation.isFinished() && !c[Re] && !c._scheduler.unfinished && !c._pendingActions.length && c.trigger("finished");
        });
      }, W_ = function(h, c) {
        h.on("mouseover", function(v) {
          var d = v.target, p = Kn(d, tn);
          p && (lR(p, v, c._api), Xe(c));
        }).on("mouseout", function(v) {
          var d = v.target, p = Kn(d, tn);
          p && (uR(p, v, c._api), Xe(c));
        }).on("click", function(v) {
          var d = v.target, p = Kn(d, function(m) {
            return it(m).dataIndex != null;
          }, !0);
          if (p) {
            var g = p.selected ? "unselect" : "select", y = it(p);
            c._api.dispatchAction({
              type: g,
              dataType: y.dataType,
              dataIndexInside: y.dataIndex,
              seriesIndex: y.seriesIndex,
              isFromClick: !0
            });
          }
        });
      };
      function t(h) {
        h.clearColorPalette(), h.eachSeries(function(c) {
          c.clearColorPalette();
        });
      }
      function a(h) {
        var c = [], v = [], d = !1;
        if (h.eachComponent(function(m, _) {
          var S = _.get("zlevel") || 0, w = _.get("z") || 0, x = _.getZLevelKey();
          d = d || !!x, (m === "series" ? v : c).push({
            zlevel: S,
            z: w,
            idx: _.componentIndex,
            type: m,
            key: x
          });
        }), d) {
          var p = c.concat(v), g, y;
          Fu(p, function(m, _) {
            return m.zlevel === _.zlevel ? m.z - _.z : m.zlevel - _.zlevel;
          }), M(p, function(m) {
            var _ = h.getComponent(m.type, m.idx), S = m.zlevel, w = m.key;
            g != null && (S = Math.max(g, S)), w ? (S === g && w !== y && S++, y = w) : y && (S === g && S++, y = ""), g = S, _.setZLevel(S);
          });
        }
      }
      tv = function(h, c, v, d, p) {
        a(c), $_(h, c, v, d, p), M(h._chartsViews, function(g) {
          g.__alive = !1;
        }), su(h, c, v, d, p), M(h._chartsViews, function(g) {
          g.__alive || g.remove(c, v);
        });
      }, $_ = function(h, c, v, d, p, g) {
        M(g || h._componentsViews, function(y) {
          var m = y.__model;
          u(m, y), y.render(m, c, v, d), s(m, y), f(m, y);
        });
      }, su = function(h, c, v, d, p, g) {
        var y = h._scheduler;
        p = V(p || {}, {
          updatedSeries: c.getSeries()
        }), mr.trigger("series:beforeupdate", c, v, p);
        var m = !1;
        c.eachSeries(function(_) {
          var S = h._chartsMap[_.__viewId];
          S.__alive = !0;
          var w = S.renderTask;
          y.updatePayload(w, d), u(_, S), g && g.get(_.uid) && w.dirty(), w.perform(y.getPerformArgs(w)) && (m = !0), S.group.silent = !!_.get("silent"), o(_, S), C0(_);
        }), y.unfinished = m || y.unfinished, mr.trigger("series:layoutlabels", c, v, p), mr.trigger("series:transition", c, v, p), c.eachSeries(function(_) {
          var S = h._chartsMap[_.__viewId];
          s(_, S), f(_, S);
        }), i(h, c), mr.trigger("series:afterupdate", c, v, p);
      }, Xe = function(h) {
        h[Xc] = !0, h.getZr().wakeUp();
      }, Y_ = function(h) {
        h[Xc] && (h.getZr().storage.traverse(function(c) {
          oo(c) || n(c);
        }), h[Xc] = !1);
      };
      function n(h) {
        for (var c = [], v = h.currentStates, d = 0; d < v.length; d++) {
          var p = v[d];
          p === "emphasis" || p === "blur" || p === "select" || c.push(p);
        }
        h.selected && h.states.select && c.push("select"), h.hoverState === mh && h.states.emphasis ? c.push("emphasis") : h.hoverState === ml && h.states.blur && c.push("blur"), h.useStates(c);
      }
      function i(h, c) {
        var v = h._zr, d = v.storage, p = 0;
        d.traverse(function(g) {
          g.isGroup || p++;
        }), p > c.get("hoverLayerThreshold") && !bt.node && !bt.worker && c.eachSeries(function(g) {
          if (!g.preventUsingHoverLayer) {
            var y = h._chartsMap[g.__viewId];
            y.__alive && y.eachRendered(function(m) {
              m.states.emphasis && (m.states.emphasis.hoverLayer = !0);
            });
          }
        });
      }
      function o(h, c) {
        var v = h.get("blendMode") || null;
        c.eachRendered(function(d) {
          d.isGroup || (d.style.blend = v);
        });
      }
      function s(h, c) {
        if (!h.preventAutoZ) {
          var v = h.get("z") || 0, d = h.get("zlevel") || 0;
          c.eachRendered(function(p) {
            return l(p, v, d, -1 / 0), !0;
          });
        }
      }
      function l(h, c, v, d) {
        var p = h.getTextContent(), g = h.getTextGuideLine(), y = h.isGroup;
        if (y)
          for (var m = h.childrenRef(), _ = 0; _ < m.length; _++)
            d = Math.max(l(m[_], c, v, d), d);
        else
          h.z = c, h.zlevel = v, d = Math.max(h.z2, d);
        if (p && (p.z = c, p.zlevel = v, isFinite(d) && (p.z2 = d + 2)), g) {
          var S = h.textGuideLineConfig;
          g.z = c, g.zlevel = v, isFinite(d) && (g.z2 = d + (S && S.showAbove ? 1 : -1));
        }
        return d;
      }
      function u(h, c) {
        c.eachRendered(function(v) {
          if (!oo(v)) {
            var d = v.getTextContent(), p = v.getTextGuideLine();
            v.stateTransition && (v.stateTransition = null), d && d.stateTransition && (d.stateTransition = null), p && p.stateTransition && (p.stateTransition = null), v.hasState() ? (v.prevStates = v.currentStates, v.clearStates()) : v.prevStates && (v.prevStates = null);
          }
        });
      }
      function f(h, c) {
        var v = h.getModel("stateAnimation"), d = h.isAnimationEnabled(), p = v.get("duration"), g = p > 0 ? {
          duration: p,
          delay: v.get("delay"),
          easing: v.get("easing")
          // additive: stateAnimationModel.get('additive')
        } : null;
        c.eachRendered(function(y) {
          if (y.states && y.states.emphasis) {
            if (oo(y))
              return;
            if (y instanceof mt && gR(y), y.__dirty) {
              var m = y.prevStates;
              m && y.useStates(m);
            }
            if (d) {
              y.stateTransition = g;
              var _ = y.getTextContent(), S = y.getTextGuideLine();
              _ && (_.stateTransition = g), S && (S.stateTransition = g);
            }
            y.__dirty && n(y);
          }
        });
      }
      U_ = function(h) {
        return new /** @class */
        (function(c) {
          N(v, c);
          function v() {
            return c !== null && c.apply(this, arguments) || this;
          }
          return v.prototype.getCoordinateSystems = function() {
            return h._coordSysMgr.getCoordinateSystems();
          }, v.prototype.getComponentByElement = function(d) {
            for (; d; ) {
              var p = d.__ecComponentInfo;
              if (p != null)
                return h._model.getComponent(p.mainType, p.index);
              d = d.parent;
            }
          }, v.prototype.enterEmphasis = function(d, p) {
            ga(d, p), Xe(h);
          }, v.prototype.leaveEmphasis = function(d, p) {
            ya(d, p), Xe(h);
          }, v.prototype.enterBlur = function(d) {
            $T(d), Xe(h);
          }, v.prototype.leaveBlur = function(d) {
            Eg(d), Xe(h);
          }, v.prototype.enterSelect = function(d) {
            UT(d), Xe(h);
          }, v.prototype.leaveSelect = function(d) {
            YT(d), Xe(h);
          }, v.prototype.getModel = function() {
            return h.getModel();
          }, v.prototype.getViewOfComponentModel = function(d) {
            return h.getViewOfComponentModel(d);
          }, v.prototype.getViewOfSeriesModel = function(d) {
            return h.getViewOfSeriesModel(d);
          }, v;
        }(qD))(h);
      }, WC = function(h) {
        function c(v, d) {
          for (var p = 0; p < v.length; p++) {
            var g = v[p];
            g[qc] = d;
          }
        }
        M(Bs, function(v, d) {
          h._messageCenter.on(d, function(p) {
            if (Z_[h.group] && h[qc] !== F_) {
              if (p && p.escapeConnect)
                return;
              var g = h.makeActionFromEvent(p), y = [];
              M(zs, function(m) {
                m !== h && m.group === h.group && y.push(m);
              }), c(y, F_), M(y, function(m) {
                m[qc] !== aV && m.dispatchAction(g);
              }), c(y, nV);
            }
          });
        });
      };
    }(), e;
  }(cr)
), iy = $C.prototype;
iy.on = BC("on");
iy.off = BC("off");
iy.one = function(r, e, t) {
  var a = this;
  Ar("ECharts#one is deprecated.");
  function n() {
    for (var i = [], o = 0; o < arguments.length; o++)
      i[o] = arguments[o];
    e && e.apply && e.apply(this, i), a.off(r, n);
  }
  this.on.call(this, r, n, t);
};
var iV = ["click", "dblclick", "mouseover", "mouseout", "mousemove", "mousedown", "mouseup", "globalout", "contextmenu"];
function We(r) {
  ({}).NODE_ENV !== "production" && Ft("Instance " + r + " has been disposed");
}
var Ef = {}, Bs = {}, yp = [], mp = [], Pf = [], UC = {}, _p = {}, zs = {}, Z_ = {}, oV = +/* @__PURE__ */ new Date() - 0, oy = "_echarts_instance_";
function sV(r, e, t) {
  var a = !(t && t.ssr);
  if (a) {
    if ({}.NODE_ENV !== "production" && !r)
      throw new Error("Initialize failed: invalid dom.");
    var n = lV(r);
    if (n)
      return {}.NODE_ENV !== "production" && Ft("There is a chart instance already initialized on the dom."), n;
    ({}).NODE_ENV !== "production" && fo(r) && r.nodeName.toUpperCase() !== "CANVAS" && (!r.clientWidth && (!t || t.width == null) || !r.clientHeight && (!t || t.height == null)) && Ft("Can't get DOM width or height. Please check dom.clientWidth and dom.clientHeight. They should not be 0.For example, you may need to call this in the callback of window.onload.");
  }
  var i = new $C(r, e, t);
  return i.id = "ec_" + oV++, zs[i.id] = i, a && wT(r, oy, i.id), WC(i), mr.trigger("afterinit", i), i;
}
function lV(r) {
  return zs[rP(r, oy)];
}
function YC(r, e) {
  UC[r] = e;
}
function ZC(r) {
  vt(mp, r) < 0 && mp.push(r);
}
function XC(r, e) {
  ly(yp, r, e, qk);
}
function uV(r) {
  sy("afterinit", r);
}
function fV(r) {
  sy("afterupdate", r);
}
function sy(r, e) {
  mr.on(r, e);
}
function Qr(r, e, t) {
  K(e) && (t = e, e = "");
  var a = j(r) ? r.type : [r, r = {
    event: e
  }][0];
  r.event = (r.event || a).toLowerCase(), e = r.event, !Bs[e] && (J(G_.test(a) && G_.test(e)), Ef[a] || (Ef[a] = {
    action: t,
    actionInfo: r
  }), Bs[e] = a);
}
function hV(r, e) {
  Oo.register(r, e);
}
function cV(r, e) {
  ly(Pf, r, e, OC, "layout");
}
function wi(r, e) {
  ly(Pf, r, e, kC, "visual");
}
var X_ = [];
function ly(r, e, t, a, n) {
  if ((K(e) || j(e)) && (t = e, e = a), {}.NODE_ENV !== "production") {
    if (isNaN(e) || e == null)
      throw new Error("Illegal priority");
    M(r, function(o) {
      J(o.__raw !== t);
    });
  }
  if (!(vt(X_, t) >= 0)) {
    X_.push(t);
    var i = DC.wrapStageHandler(t, n);
    i.__prio = e, i.__raw = t, r.push(i);
  }
}
function qC(r, e) {
  _p[r] = e;
}
function vV(r, e, t) {
  var a = $k("registerMap");
  a && a(r, e, t);
}
var dV = bO;
wi(ny, XO);
wi(Nh, qO);
wi(Nh, KO);
wi(ny, hk);
wi(Nh, ck);
wi(VC, Fk);
ZC(jD);
XC(Zk, aO);
qC("default", jO);
Qr({
  type: ai,
  event: ai,
  update: ai
}, Xt);
Qr({
  type: Yu,
  event: Yu,
  update: Yu
}, Xt);
Qr({
  type: Rs,
  event: Rs,
  update: Rs
}, Xt);
Qr({
  type: Zu,
  event: Zu,
  update: Zu
}, Xt);
Qr({
  type: Ns,
  event: Ns,
  update: Ns
}, Xt);
YC("light", lk);
YC("dark", uk);
var q_ = [], pV = {
  registerPreprocessor: ZC,
  registerProcessor: XC,
  registerPostInit: uV,
  registerPostUpdate: fV,
  registerUpdateLifecycle: sy,
  registerAction: Qr,
  registerCoordinateSystem: hV,
  registerLayout: cV,
  registerVisual: wi,
  registerTransform: dV,
  registerLoading: qC,
  registerMap: vV,
  registerImpl: Wk,
  PRIORITY: rV,
  ComponentModel: xt,
  ComponentView: $t,
  SeriesModel: Gt,
  ChartView: Vt,
  // TODO Use ComponentModel and SeriesModel instead of Constructor
  registerComponentModel: function(r) {
    xt.registerClass(r);
  },
  registerComponentView: function(r) {
    $t.registerClass(r);
  },
  registerSeriesModel: function(r) {
    Gt.registerClass(r);
  },
  registerChartView: function(r) {
    Vt.registerClass(r);
  },
  registerSubTypeDefaulter: function(r, e) {
    xt.registerSubTypeDefaulter(r, e);
  },
  registerPainter: function(r, e) {
    NE(r, e);
  }
};
function yt(r) {
  if (z(r)) {
    M(r, function(e) {
      yt(e);
    });
    return;
  }
  vt(q_, r) >= 0 || (q_.push(r), K(r) && (r = {
    install: r
  }), r.install(pV));
}
function es(r) {
  return r == null ? 0 : r.length || 1;
}
function K_(r) {
  return r;
}
var gV = (
  /** @class */
  function() {
    function r(e, t, a, n, i, o) {
      this._old = e, this._new = t, this._oldKeyGetter = a || K_, this._newKeyGetter = n || K_, this.context = i, this._diffModeMultiple = o === "multiple";
    }
    return r.prototype.add = function(e) {
      return this._add = e, this;
    }, r.prototype.update = function(e) {
      return this._update = e, this;
    }, r.prototype.updateManyToOne = function(e) {
      return this._updateManyToOne = e, this;
    }, r.prototype.updateOneToMany = function(e) {
      return this._updateOneToMany = e, this;
    }, r.prototype.updateManyToMany = function(e) {
      return this._updateManyToMany = e, this;
    }, r.prototype.remove = function(e) {
      return this._remove = e, this;
    }, r.prototype.execute = function() {
      this[this._diffModeMultiple ? "_executeMultiple" : "_executeOneToOne"]();
    }, r.prototype._executeOneToOne = function() {
      var e = this._old, t = this._new, a = {}, n = new Array(e.length), i = new Array(t.length);
      this._initIndexMap(e, null, n, "_oldKeyGetter"), this._initIndexMap(t, a, i, "_newKeyGetter");
      for (var o = 0; o < e.length; o++) {
        var s = n[o], l = a[s], u = es(l);
        if (u > 1) {
          var f = l.shift();
          l.length === 1 && (a[s] = l[0]), this._update && this._update(f, o);
        } else
          u === 1 ? (a[s] = null, this._update && this._update(l, o)) : this._remove && this._remove(o);
      }
      this._performRestAdd(i, a);
    }, r.prototype._executeMultiple = function() {
      var e = this._old, t = this._new, a = {}, n = {}, i = [], o = [];
      this._initIndexMap(e, a, i, "_oldKeyGetter"), this._initIndexMap(t, n, o, "_newKeyGetter");
      for (var s = 0; s < i.length; s++) {
        var l = i[s], u = a[l], f = n[l], h = es(u), c = es(f);
        if (h > 1 && c === 1)
          this._updateManyToOne && this._updateManyToOne(f, u), n[l] = null;
        else if (h === 1 && c > 1)
          this._updateOneToMany && this._updateOneToMany(f, u), n[l] = null;
        else if (h === 1 && c === 1)
          this._update && this._update(f, u), n[l] = null;
        else if (h > 1 && c > 1)
          this._updateManyToMany && this._updateManyToMany(f, u), n[l] = null;
        else if (h > 1)
          for (var v = 0; v < h; v++)
            this._remove && this._remove(u[v]);
        else
          this._remove && this._remove(u);
      }
      this._performRestAdd(o, n);
    }, r.prototype._performRestAdd = function(e, t) {
      for (var a = 0; a < e.length; a++) {
        var n = e[a], i = t[n], o = es(i);
        if (o > 1)
          for (var s = 0; s < o; s++)
            this._add && this._add(i[s]);
        else
          o === 1 && this._add && this._add(i);
        t[n] = null;
      }
    }, r.prototype._initIndexMap = function(e, t, a, n) {
      for (var i = this._diffModeMultiple, o = 0; o < e.length; o++) {
        var s = "_ec_" + this[n](e[o], o);
        if (i || (a[o] = s), !!t) {
          var l = t[s], u = es(l);
          u === 0 ? (t[s] = o, i && a.push(s)) : u === 1 ? t[s] = [l, o] : l.push(o);
        }
      }
    }, r;
  }()
);
const ma = gV;
var yV = (
  /** @class */
  function() {
    function r(e, t) {
      this._encode = e, this._schema = t;
    }
    return r.prototype.get = function() {
      return {
        // Do not generate full dimension name until fist used.
        fullDimensions: this._getFullDimensionNames(),
        encode: this._encode
      };
    }, r.prototype._getFullDimensionNames = function() {
      return this._cachedDimNames || (this._cachedDimNames = this._schema ? this._schema.makeOutputDimensionNames() : []), this._cachedDimNames;
    }, r;
  }()
);
function mV(r, e) {
  var t = {}, a = t.encode = {}, n = X(), i = [], o = [], s = {};
  M(r.dimensions, function(c) {
    var v = r.getDimensionInfo(c), d = v.coordDim;
    if (d) {
      ({}).NODE_ENV !== "production" && J(op.get(d) == null);
      var p = v.coordDimIndex;
      ev(a, d)[p] = c, v.isExtraCoord || (n.set(d, 1), _V(v.type) && (i[0] = c), ev(s, d)[p] = r.getDimensionIndex(v.name)), v.defaultTooltip && o.push(c);
    }
    op.each(function(g, y) {
      var m = ev(a, y), _ = v.otherDims[y];
      _ != null && _ !== !1 && (m[_] = v.name);
    });
  });
  var l = [], u = {};
  n.each(function(c, v) {
    var d = a[v];
    u[v] = d[0], l = l.concat(d);
  }), t.dataDimsOnCoord = l, t.dataDimIndicesOnCoord = G(l, function(c) {
    return r.getDimensionInfo(c).storeDimIndex;
  }), t.encodeFirstDimNotExtra = u;
  var f = a.label;
  f && f.length && (i = f.slice());
  var h = a.tooltip;
  return h && h.length ? o = h.slice() : o.length || (o = i.slice()), a.defaultedLabel = i, a.defaultedTooltip = o, t.userOutput = new yV(s, e), t;
}
function ev(r, e) {
  return r.hasOwnProperty(e) || (r[e] = []), r[e];
}
function Rf(r) {
  return r === "category" ? "ordinal" : r === "time" ? "time" : "float";
}
function _V(r) {
  return !(r === "ordinal" || r === "time");
}
var SV = (
  /** @class */
  function() {
    function r(e) {
      this.otherDims = {}, e != null && V(this, e);
    }
    return r;
  }()
);
const Ju = SV;
var xV = Dt(), wV = {
  float: "f",
  int: "i",
  ordinal: "o",
  number: "n",
  time: "t"
}, KC = (
  /** @class */
  function() {
    function r(e) {
      this.dimensions = e.dimensions, this._dimOmitted = e.dimensionOmitted, this.source = e.source, this._fullDimCount = e.fullDimensionCount, this._updateDimOmitted(e.dimensionOmitted);
    }
    return r.prototype.isDimensionOmitted = function() {
      return this._dimOmitted;
    }, r.prototype._updateDimOmitted = function(e) {
      this._dimOmitted = e, e && (this._dimNameMap || (this._dimNameMap = QC(this.source)));
    }, r.prototype.getSourceDimensionIndex = function(e) {
      return ft(this._dimNameMap.get(e), -1);
    }, r.prototype.getSourceDimension = function(e) {
      var t = this.source.dimensionsDefine;
      if (t)
        return t[e];
    }, r.prototype.makeStoreSchema = function() {
      for (var e = this._fullDimCount, t = QD(this.source), a = !tA(e), n = "", i = [], o = 0, s = 0; o < e; o++) {
        var l = void 0, u = void 0, f = void 0, h = this.dimensions[s];
        if (h && h.storeDimIndex === o)
          l = t ? h.name : null, u = h.type, f = h.ordinalMeta, s++;
        else {
          var c = this.getSourceDimension(o);
          c && (l = t ? c.name : null, u = c.type);
        }
        i.push({
          property: l,
          type: u,
          ordinalMeta: f
        }), t && l != null && (!h || !h.isCalculationCoord) && (n += a ? l.replace(/\`/g, "`1").replace(/\$/g, "`2") : l), n += "$", n += wV[u] || "f", f && (n += f.uid), n += "$";
      }
      var v = this.source, d = [v.seriesLayoutBy, v.startIndex, n].join("$$");
      return {
        dimensions: i,
        hash: d
      };
    }, r.prototype.makeOutputDimensionNames = function() {
      for (var e = [], t = 0, a = 0; t < this._fullDimCount; t++) {
        var n = void 0, i = this.dimensions[a];
        if (i && i.storeDimIndex === t)
          i.isCalculationCoord || (n = i.name), a++;
        else {
          var o = this.getSourceDimension(t);
          o && (n = o.name);
        }
        e.push(n);
      }
      return e;
    }, r.prototype.appendCalculationDimension = function(e) {
      this.dimensions.push(e), e.isCalculationCoord = !0, this._fullDimCount++, this._updateDimOmitted(!0);
    }, r;
  }()
);
function jC(r) {
  return r instanceof KC;
}
function JC(r) {
  for (var e = X(), t = 0; t < (r || []).length; t++) {
    var a = r[t], n = j(a) ? a.name : a;
    n != null && e.get(n) == null && e.set(n, t);
  }
  return e;
}
function QC(r) {
  var e = xV(r);
  return e.dimNameMap || (e.dimNameMap = JC(r.dimensionsDefine));
}
function tA(r) {
  return r > 30;
}
var rs = j, Ea = G, bV = typeof Int32Array > "u" ? Array : Int32Array, TV = "e\0\0", j_ = -1, DV = ["hasItemOption", "_nameList", "_idList", "_invertedIndicesMap", "_dimSummary", "userOutput", "_rawData", "_dimValueGetter", "_nameDimIdx", "_idDimIdx", "_nameRepeatCount"], CV = ["_approximateExtent"], J_, lu, as, Bi, rv, uu, av, AV = (
  /** @class */
  function() {
    function r(e, t) {
      this.type = "list", this._dimOmitted = !1, this._nameList = [], this._idList = [], this._visual = {}, this._layout = {}, this._itemVisuals = [], this._itemLayouts = [], this._graphicEls = [], this._approximateExtent = {}, this._calculationInfo = {}, this.hasItemOption = !1, this.TRANSFERABLE_METHODS = ["cloneShallow", "downSample", "lttbDownSample", "map"], this.CHANGABLE_METHODS = ["filterSelf", "selectRange"], this.DOWNSAMPLE_METHODS = ["downSample", "lttbDownSample"];
      var a, n = !1;
      jC(e) ? (a = e.dimensions, this._dimOmitted = e.isDimensionOmitted(), this._schema = e) : (n = !0, a = e), a = a || ["x", "y"];
      for (var i = {}, o = [], s = {}, l = !1, u = {}, f = 0; f < a.length; f++) {
        var h = a[f], c = $(h) ? new Ju({
          name: h
        }) : h instanceof Ju ? h : new Ju(h), v = c.name;
        c.type = c.type || "float", c.coordDim || (c.coordDim = v, c.coordDimIndex = 0);
        var d = c.otherDims = c.otherDims || {};
        o.push(v), i[v] = c, u[v] != null && (l = !0), c.createInvertedIndices && (s[v] = []), d.itemName === 0 && (this._nameDimIdx = f), d.itemId === 0 && (this._idDimIdx = f), {}.NODE_ENV !== "production" && J(n || c.storeDimIndex >= 0), n && (c.storeDimIndex = f);
      }
      if (this.dimensions = o, this._dimInfos = i, this._initGetDimensionInfo(l), this.hostModel = t, this._invertedIndicesMap = s, this._dimOmitted) {
        var p = this._dimIdxToName = X();
        M(o, function(g) {
          p.set(i[g].storeDimIndex, g);
        });
      }
    }
    return r.prototype.getDimension = function(e) {
      var t = this._recognizeDimIndex(e);
      if (t == null)
        return e;
      if (t = e, !this._dimOmitted)
        return this.dimensions[t];
      var a = this._dimIdxToName.get(t);
      if (a != null)
        return a;
      var n = this._schema.getSourceDimension(t);
      if (n)
        return n.name;
    }, r.prototype.getDimensionIndex = function(e) {
      var t = this._recognizeDimIndex(e);
      if (t != null)
        return t;
      if (e == null)
        return -1;
      var a = this._getDimInfo(e);
      return a ? a.storeDimIndex : this._dimOmitted ? this._schema.getSourceDimensionIndex(e) : -1;
    }, r.prototype._recognizeDimIndex = function(e) {
      if (At(e) || e != null && !isNaN(e) && !this._getDimInfo(e) && (!this._dimOmitted || this._schema.getSourceDimensionIndex(e) < 0))
        return +e;
    }, r.prototype._getStoreDimIndex = function(e) {
      var t = this.getDimensionIndex(e);
      if ({}.NODE_ENV !== "production" && t == null)
        throw new Error("Unknown dimension " + e);
      return t;
    }, r.prototype.getDimensionInfo = function(e) {
      return this._getDimInfo(this.getDimension(e));
    }, r.prototype._initGetDimensionInfo = function(e) {
      var t = this._dimInfos;
      this._getDimInfo = e ? function(a) {
        return t.hasOwnProperty(a) ? t[a] : void 0;
      } : function(a) {
        return t[a];
      };
    }, r.prototype.getDimensionsOnCoord = function() {
      return this._dimSummary.dataDimsOnCoord.slice();
    }, r.prototype.mapDimension = function(e, t) {
      var a = this._dimSummary;
      if (t == null)
        return a.encodeFirstDimNotExtra[e];
      var n = a.encode[e];
      return n ? n[t] : null;
    }, r.prototype.mapDimensionsAll = function(e) {
      var t = this._dimSummary, a = t.encode[e];
      return (a || []).slice();
    }, r.prototype.getStore = function() {
      return this._store;
    }, r.prototype.initData = function(e, t, a) {
      var n = this, i;
      if (e instanceof fp && (i = e), !i) {
        var o = this.dimensions, s = Xg(e) || xe(e) ? new tC(e, o.length) : e;
        i = new fp();
        var l = Ea(o, function(u) {
          return {
            type: n._dimInfos[u].type,
            property: u
          };
        });
        i.initData(s, l, a);
      }
      this._store = i, this._nameList = (t || []).slice(), this._idList = [], this._nameRepeatCount = {}, this._doInit(0, i.count()), this._dimSummary = mV(this, this._schema), this.userOutput = this._dimSummary.userOutput;
    }, r.prototype.appendData = function(e) {
      var t = this._store.appendData(e);
      this._doInit(t[0], t[1]);
    }, r.prototype.appendValues = function(e, t) {
      var a = this._store.appendValues(e, t.length), n = a.start, i = a.end, o = this._shouldMakeIdFromName();
      if (this._updateOrdinalMeta(), t)
        for (var s = n; s < i; s++) {
          var l = s - n;
          this._nameList[s] = t[l], o && av(this, s);
        }
    }, r.prototype._updateOrdinalMeta = function() {
      for (var e = this._store, t = this.dimensions, a = 0; a < t.length; a++) {
        var n = this._dimInfos[t[a]];
        n.ordinalMeta && e.collectOrdinalMeta(n.storeDimIndex, n.ordinalMeta);
      }
    }, r.prototype._shouldMakeIdFromName = function() {
      var e = this._store.getProvider();
      return this._idDimIdx == null && e.getSource().sourceFormat !== ha && !e.fillStorage;
    }, r.prototype._doInit = function(e, t) {
      if (!(e >= t)) {
        var a = this._store, n = a.getProvider();
        this._updateOrdinalMeta();
        var i = this._nameList, o = this._idList, s = n.getSource().sourceFormat, l = s === vr;
        if (l && !n.pure)
          for (var u = [], f = e; f < t; f++) {
            var h = n.getItem(f, u);
            if (!this.hasItemOption && WE(h) && (this.hasItemOption = !0), h) {
              var c = h.name;
              i[f] == null && c != null && (i[f] = re(c, null));
              var v = h.id;
              o[f] == null && v != null && (o[f] = re(v, null));
            }
          }
        if (this._shouldMakeIdFromName())
          for (var f = e; f < t; f++)
            av(this, f);
        J_(this);
      }
    }, r.prototype.getApproximateExtent = function(e) {
      return this._approximateExtent[e] || this._store.getDataExtent(this._getStoreDimIndex(e));
    }, r.prototype.setApproximateExtent = function(e, t) {
      t = this.getDimension(t), this._approximateExtent[t] = e.slice();
    }, r.prototype.getCalculationInfo = function(e) {
      return this._calculationInfo[e];
    }, r.prototype.setCalculationInfo = function(e, t) {
      rs(e) ? V(this._calculationInfo, e) : this._calculationInfo[e] = t;
    }, r.prototype.getName = function(e) {
      var t = this.getRawIndex(e), a = this._nameList[t];
      return a == null && this._nameDimIdx != null && (a = as(this, this._nameDimIdx, t)), a == null && (a = ""), a;
    }, r.prototype._getCategory = function(e, t) {
      var a = this._store.get(e, t), n = this._store.getOrdinalMeta(e);
      return n ? n.categories[a] : a;
    }, r.prototype.getId = function(e) {
      return lu(this, this.getRawIndex(e));
    }, r.prototype.count = function() {
      return this._store.count();
    }, r.prototype.get = function(e, t) {
      var a = this._store, n = this._dimInfos[e];
      if (n)
        return a.get(n.storeDimIndex, t);
    }, r.prototype.getByRawIndex = function(e, t) {
      var a = this._store, n = this._dimInfos[e];
      if (n)
        return a.getByRawIndex(n.storeDimIndex, t);
    }, r.prototype.getIndices = function() {
      return this._store.getIndices();
    }, r.prototype.getDataExtent = function(e) {
      return this._store.getDataExtent(this._getStoreDimIndex(e));
    }, r.prototype.getSum = function(e) {
      return this._store.getSum(this._getStoreDimIndex(e));
    }, r.prototype.getMedian = function(e) {
      return this._store.getMedian(this._getStoreDimIndex(e));
    }, r.prototype.getValues = function(e, t) {
      var a = this, n = this._store;
      return z(e) ? n.getValues(Ea(e, function(i) {
        return a._getStoreDimIndex(i);
      }), t) : n.getValues(e);
    }, r.prototype.hasValue = function(e) {
      for (var t = this._dimSummary.dataDimIndicesOnCoord, a = 0, n = t.length; a < n; a++)
        if (isNaN(this._store.get(t[a], e)))
          return !1;
      return !0;
    }, r.prototype.indexOfName = function(e) {
      for (var t = 0, a = this._store.count(); t < a; t++)
        if (this.getName(t) === e)
          return t;
      return -1;
    }, r.prototype.getRawIndex = function(e) {
      return this._store.getRawIndex(e);
    }, r.prototype.indexOfRawIndex = function(e) {
      return this._store.indexOfRawIndex(e);
    }, r.prototype.rawIndexOf = function(e, t) {
      var a = e && this._invertedIndicesMap[e];
      if ({}.NODE_ENV !== "production" && !a)
        throw new Error("Do not supported yet");
      var n = a[t];
      return n == null || isNaN(n) ? j_ : n;
    }, r.prototype.indicesOfNearest = function(e, t, a) {
      return this._store.indicesOfNearest(this._getStoreDimIndex(e), t, a);
    }, r.prototype.each = function(e, t, a) {
      K(e) && (a = t, t = e, e = []);
      var n = a || this, i = Ea(Bi(e), this._getStoreDimIndex, this);
      this._store.each(i, n ? Y(t, n) : t);
    }, r.prototype.filterSelf = function(e, t, a) {
      K(e) && (a = t, t = e, e = []);
      var n = a || this, i = Ea(Bi(e), this._getStoreDimIndex, this);
      return this._store = this._store.filter(i, n ? Y(t, n) : t), this;
    }, r.prototype.selectRange = function(e) {
      var t = this, a = {}, n = _t(e);
      return M(n, function(i) {
        var o = t._getStoreDimIndex(i);
        a[o] = e[i];
      }), this._store = this._store.selectRange(a), this;
    }, r.prototype.mapArray = function(e, t, a) {
      K(e) && (a = t, t = e, e = []), a = a || this;
      var n = [];
      return this.each(e, function() {
        n.push(t && t.apply(this, arguments));
      }, a), n;
    }, r.prototype.map = function(e, t, a, n) {
      var i = a || n || this, o = Ea(Bi(e), this._getStoreDimIndex, this), s = uu(this);
      return s._store = this._store.map(o, i ? Y(t, i) : t), s;
    }, r.prototype.modify = function(e, t, a, n) {
      var i = this, o = a || n || this;
      ({}).NODE_ENV !== "production" && M(Bi(e), function(l) {
        var u = i.getDimensionInfo(l);
        u.isCalculationCoord || console.error("Danger: only stack dimension can be modified");
      });
      var s = Ea(Bi(e), this._getStoreDimIndex, this);
      this._store.modify(s, o ? Y(t, o) : t);
    }, r.prototype.downSample = function(e, t, a, n) {
      var i = uu(this);
      return i._store = this._store.downSample(this._getStoreDimIndex(e), t, a, n), i;
    }, r.prototype.lttbDownSample = function(e, t) {
      var a = uu(this);
      return a._store = this._store.lttbDownSample(this._getStoreDimIndex(e), t), a;
    }, r.prototype.getRawDataItem = function(e) {
      return this._store.getRawDataItem(e);
    }, r.prototype.getItemModel = function(e) {
      var t = this.hostModel, a = this.getRawDataItem(e);
      return new kt(a, t, t && t.ecModel);
    }, r.prototype.diff = function(e) {
      var t = this;
      return new ma(e ? e.getStore().getIndices() : [], this.getStore().getIndices(), function(a) {
        return lu(e, a);
      }, function(a) {
        return lu(t, a);
      });
    }, r.prototype.getVisual = function(e) {
      var t = this._visual;
      return t && t[e];
    }, r.prototype.setVisual = function(e, t) {
      this._visual = this._visual || {}, rs(e) ? V(this._visual, e) : this._visual[e] = t;
    }, r.prototype.getItemVisual = function(e, t) {
      var a = this._itemVisuals[e], n = a && a[t];
      return n == null ? this.getVisual(t) : n;
    }, r.prototype.hasItemVisual = function() {
      return this._itemVisuals.length > 0;
    }, r.prototype.ensureUniqueItemVisual = function(e, t) {
      var a = this._itemVisuals, n = a[e];
      n || (n = a[e] = {});
      var i = n[t];
      return i == null && (i = this.getVisual(t), z(i) ? i = i.slice() : rs(i) && (i = V({}, i)), n[t] = i), i;
    }, r.prototype.setItemVisual = function(e, t, a) {
      var n = this._itemVisuals[e] || {};
      this._itemVisuals[e] = n, rs(t) ? V(n, t) : n[t] = a;
    }, r.prototype.clearAllVisual = function() {
      this._visual = {}, this._itemVisuals = [];
    }, r.prototype.setLayout = function(e, t) {
      rs(e) ? V(this._layout, e) : this._layout[e] = t;
    }, r.prototype.getLayout = function(e) {
      return this._layout[e];
    }, r.prototype.getItemLayout = function(e) {
      return this._itemLayouts[e];
    }, r.prototype.setItemLayout = function(e, t, a) {
      this._itemLayouts[e] = a ? V(this._itemLayouts[e] || {}, t) : t;
    }, r.prototype.clearItemLayouts = function() {
      this._itemLayouts.length = 0;
    }, r.prototype.setItemGraphicEl = function(e, t) {
      var a = this.hostModel && this.hostModel.seriesIndex;
      Kd(a, this.dataType, e, t), this._graphicEls[e] = t;
    }, r.prototype.getItemGraphicEl = function(e) {
      return this._graphicEls[e];
    }, r.prototype.eachItemGraphicEl = function(e, t) {
      M(this._graphicEls, function(a, n) {
        a && e && e.call(t, a, n);
      });
    }, r.prototype.cloneShallow = function(e) {
      return e || (e = new r(this._schema ? this._schema : Ea(this.dimensions, this._getDimInfo, this), this.hostModel)), rv(e, this), e._store = this._store, e;
    }, r.prototype.wrapMethod = function(e, t) {
      var a = this[e];
      K(a) && (this.__wrappedMethods = this.__wrappedMethods || [], this.__wrappedMethods.push(e), this[e] = function() {
        var n = a.apply(this, arguments);
        return t.apply(this, [n].concat(dg(arguments)));
      });
    }, r.internalField = function() {
      J_ = function(e) {
        var t = e._invertedIndicesMap;
        M(t, function(a, n) {
          var i = e._dimInfos[n], o = i.ordinalMeta, s = e._store;
          if (o) {
            a = t[n] = new bV(o.categories.length);
            for (var l = 0; l < a.length; l++)
              a[l] = j_;
            for (var l = 0; l < s.count(); l++)
              a[s.get(i.storeDimIndex, l)] = l;
          }
        });
      }, as = function(e, t, a) {
        return re(e._getCategory(t, a), null);
      }, lu = function(e, t) {
        var a = e._idList[t];
        return a == null && e._idDimIdx != null && (a = as(e, e._idDimIdx, t)), a == null && (a = TV + t), a;
      }, Bi = function(e) {
        return z(e) || (e = e != null ? [e] : []), e;
      }, uu = function(e) {
        var t = new r(e._schema ? e._schema : Ea(e.dimensions, e._getDimInfo, e), e.hostModel);
        return rv(t, e), t;
      }, rv = function(e, t) {
        M(DV.concat(t.__wrappedMethods || []), function(a) {
          t.hasOwnProperty(a) && (e[a] = t[a]);
        }), e.__wrappedMethods = t.__wrappedMethods, M(CV, function(a) {
          e[a] = at(t[a]);
        }), e._calculationInfo = V({}, t._calculationInfo);
      }, av = function(e, t) {
        var a = e._nameList, n = e._idList, i = e._nameDimIdx, o = e._idDimIdx, s = a[t], l = n[t];
        if (s == null && i != null && (a[t] = s = as(e, i, t)), l == null && o != null && (n[t] = l = as(e, o, t)), l == null && s != null) {
          var u = e._nameRepeatCount, f = u[s] = (u[s] || 0) + 1;
          l = s, f > 1 && (l += "__ec__" + f), n[t] = l;
        }
      };
    }(), r;
  }()
);
const Me = AV;
function Tl(r, e) {
  Xg(r) || (r = qg(r)), e = e || {};
  var t = e.coordDimensions || [], a = e.dimensionsDefine || r.dimensionsDefine || [], n = X(), i = [], o = IV(r, t, a, e.dimensionsCount), s = e.canOmitUnusedDimensions && tA(o), l = a === r.dimensionsDefine, u = l ? QC(r) : JC(a), f = e.encodeDefine;
  !f && e.encodeDefaulter && (f = e.encodeDefaulter(r, o));
  for (var h = X(f), c = new lC(o), v = 0; v < c.length; v++)
    c[v] = -1;
  function d(C) {
    var D = c[C];
    if (D < 0) {
      var A = a[C], I = j(A) ? A : {
        name: A
      }, L = new Ju(), E = I.name;
      E != null && u.get(E) != null && (L.name = L.displayName = E), I.type != null && (L.type = I.type), I.displayName != null && (L.displayName = I.displayName);
      var P = i.length;
      return c[C] = P, L.storeDimIndex = C, i.push(L), L;
    }
    return i[D];
  }
  if (!s)
    for (var v = 0; v < o; v++)
      d(v);
  h.each(function(C, D) {
    var A = Pt(C).slice();
    if (A.length === 1 && !$(A[0]) && A[0] < 0) {
      h.set(D, !1);
      return;
    }
    var I = h.set(D, []);
    M(A, function(L, E) {
      var P = $(L) ? u.get(L) : L;
      P != null && P < o && (I[E] = P, g(d(P), D, E));
    });
  });
  var p = 0;
  M(t, function(C) {
    var D, A, I, L;
    if ($(C))
      D = C, L = {};
    else {
      L = C, D = L.name;
      var E = L.ordinalMeta;
      L.ordinalMeta = null, L = V({}, L), L.ordinalMeta = E, A = L.dimsDef, I = L.otherDims, L.name = L.coordDim = L.coordDimIndex = L.dimsDef = L.otherDims = null;
    }
    var P = h.get(D);
    if (P !== !1) {
      if (P = Pt(P), !P.length)
        for (var R = 0; R < (A && A.length || 1); R++) {
          for (; p < o && d(p).coordDim != null; )
            p++;
          p < o && P.push(p++);
        }
      M(P, function(k, O) {
        var B = d(k);
        if (l && L.type != null && (B.type = L.type), g(et(B, L), D, O), B.name == null && A) {
          var F = A[O];
          !j(F) && (F = {
            name: F
          }), B.name = B.displayName = F.name, B.defaultTooltip = F.defaultTooltip;
        }
        I && et(B.otherDims, I);
      });
    }
  });
  function g(C, D, A) {
    op.get(D) != null ? C.otherDims[D] = A : (C.coordDim = D, C.coordDimIndex = A, n.set(D, !0));
  }
  var y = e.generateCoord, m = e.generateCoordCount, _ = m != null;
  m = y ? m || 1 : 0;
  var S = y || "value";
  function w(C) {
    C.name == null && (C.name = C.coordDim);
  }
  if (s)
    M(i, function(C) {
      w(C);
    }), i.sort(function(C, D) {
      return C.storeDimIndex - D.storeDimIndex;
    });
  else
    for (var x = 0; x < o; x++) {
      var b = d(x), T = b.coordDim;
      T == null && (b.coordDim = LV(S, n, _), b.coordDimIndex = 0, (!y || m <= 0) && (b.isExtraCoord = !0), m--), w(b), b.type == null && ($D(r, x) === fe.Must || b.isExtraCoord && (b.otherDims.itemName != null || b.otherDims.seriesName != null)) && (b.type = "ordinal");
    }
  return MV(i), new KC({
    source: r,
    dimensions: i,
    fullDimensionCount: o,
    dimensionOmitted: s
  });
}
function MV(r) {
  for (var e = X(), t = 0; t < r.length; t++) {
    var a = r[t], n = a.name, i = e.get(n) || 0;
    i > 0 && (a.name = n + (i - 1)), i++, e.set(n, i);
  }
}
function IV(r, e, t, a) {
  var n = Math.max(r.dimensionsDetectedCount || 1, e.length, t.length, a || 0);
  return M(e, function(i) {
    var o;
    j(i) && (o = i.dimsDef) && (n = Math.max(n, o.length));
  }), n;
}
function LV(r, e, t) {
  if (t || e.hasKey(r)) {
    for (var a = 0; e.hasKey(r + a); )
      a++;
    r += a;
  }
  return e.set(r, !0), r;
}
var EV = (
  /** @class */
  function() {
    function r(e) {
      this.coordSysDims = [], this.axisMap = X(), this.categoryAxisMap = X(), this.coordSysName = e;
    }
    return r;
  }()
);
function PV(r) {
  var e = r.get("coordinateSystem"), t = new EV(e), a = RV[e];
  if (a)
    return a(r, t, t.axisMap, t.categoryAxisMap), t;
}
var RV = {
  cartesian2d: function(r, e, t, a) {
    var n = r.getReferringComponents("xAxis", Jt).models[0], i = r.getReferringComponents("yAxis", Jt).models[0];
    if ({}.NODE_ENV !== "production") {
      if (!n)
        throw new Error('xAxis "' + jt(r.get("xAxisIndex"), r.get("xAxisId"), 0) + '" not found');
      if (!i)
        throw new Error('yAxis "' + jt(r.get("xAxisIndex"), r.get("yAxisId"), 0) + '" not found');
    }
    e.coordSysDims = ["x", "y"], t.set("x", n), t.set("y", i), zi(n) && (a.set("x", n), e.firstCategoryDimIndex = 0), zi(i) && (a.set("y", i), e.firstCategoryDimIndex == null && (e.firstCategoryDimIndex = 1));
  },
  singleAxis: function(r, e, t, a) {
    var n = r.getReferringComponents("singleAxis", Jt).models[0];
    if ({}.NODE_ENV !== "production" && !n)
      throw new Error("singleAxis should be specified.");
    e.coordSysDims = ["single"], t.set("single", n), zi(n) && (a.set("single", n), e.firstCategoryDimIndex = 0);
  },
  polar: function(r, e, t, a) {
    var n = r.getReferringComponents("polar", Jt).models[0], i = n.findAxisModel("radiusAxis"), o = n.findAxisModel("angleAxis");
    if ({}.NODE_ENV !== "production") {
      if (!o)
        throw new Error("angleAxis option not found");
      if (!i)
        throw new Error("radiusAxis option not found");
    }
    e.coordSysDims = ["radius", "angle"], t.set("radius", i), t.set("angle", o), zi(i) && (a.set("radius", i), e.firstCategoryDimIndex = 0), zi(o) && (a.set("angle", o), e.firstCategoryDimIndex == null && (e.firstCategoryDimIndex = 1));
  },
  geo: function(r, e, t, a) {
    e.coordSysDims = ["lng", "lat"];
  },
  parallel: function(r, e, t, a) {
    var n = r.ecModel, i = n.getComponent("parallel", r.get("parallelIndex")), o = e.coordSysDims = i.dimensions.slice();
    M(i.parallelAxisIndex, function(s, l) {
      var u = n.getComponent("parallelAxis", s), f = o[l];
      t.set(f, u), zi(u) && (a.set(f, u), e.firstCategoryDimIndex == null && (e.firstCategoryDimIndex = l));
    });
  }
};
function zi(r) {
  return r.get("type") === "category";
}
function NV(r, e, t) {
  t = t || {};
  var a = t.byIndex, n = t.stackedCoordDimension, i, o, s;
  OV(e) ? i = e : (o = e.schema, i = o.dimensions, s = e.store);
  var l = !!(r && r.get("stack")), u, f, h, c;
  if (M(i, function(m, _) {
    $(m) && (i[_] = m = {
      name: m
    }), l && !m.isExtraCoord && (!a && !u && m.ordinalMeta && (u = m), !f && m.type !== "ordinal" && m.type !== "time" && (!n || n === m.coordDim) && (f = m));
  }), f && !a && !u && (a = !0), f) {
    h = "__\0ecstackresult_" + r.id, c = "__\0ecstackedover_" + r.id, u && (u.createInvertedIndices = !0);
    var v = f.coordDim, d = f.type, p = 0;
    M(i, function(m) {
      m.coordDim === v && p++;
    });
    var g = {
      name: h,
      coordDim: v,
      coordDimIndex: p,
      type: d,
      isExtraCoord: !0,
      isCalculationCoord: !0,
      storeDimIndex: i.length
    }, y = {
      name: c,
      // This dimension contains stack base (generally, 0), so do not set it as
      // `stackedDimCoordDim` to avoid extent calculation, consider log scale.
      coordDim: c,
      coordDimIndex: p + 1,
      type: d,
      isExtraCoord: !0,
      isCalculationCoord: !0,
      storeDimIndex: i.length + 1
    };
    o ? (s && (g.storeDimIndex = s.ensureCalculationDimension(c, d), y.storeDimIndex = s.ensureCalculationDimension(h, d)), o.appendCalculationDimension(g), o.appendCalculationDimension(y)) : (i.push(g), i.push(y));
  }
  return {
    stackedDimension: f && f.name,
    stackedByDimension: u && u.name,
    isStackedByIndex: a,
    stackedOverDimension: c,
    stackResultDimension: h
  };
}
function OV(r) {
  return !jC(r.schema);
}
function an(r, e) {
  return !!e && e === r.getCalculationInfo("stackedDimension");
}
function eA(r, e) {
  return an(r, e) ? r.getCalculationInfo("stackResultDimension") : e;
}
function kV(r, e) {
  var t = r.get("coordinateSystem"), a = Oo.get(t), n;
  return e && e.coordSysDims && (n = G(e.coordSysDims, function(i) {
    var o = {
      name: i
    }, s = e.axisMap.get(i);
    if (s) {
      var l = s.get("type");
      o.type = Rf(l);
    }
    return o;
  })), n || (n = a && (a.getDimensionsInfo ? a.getDimensionsInfo() : a.dimensions.slice()) || ["x", "y"]), n;
}
function VV(r, e, t) {
  var a, n;
  return t && M(r, function(i, o) {
    var s = i.coordDim, l = t.categoryAxisMap.get(s);
    l && (a == null && (a = o), i.ordinalMeta = l.getOrdinalMeta(), e && (i.createInvertedIndices = !0)), i.otherDims.itemName != null && (n = !0);
  }), !n && a != null && (r[a].otherDims.itemName = 0), a;
}
function wa(r, e, t) {
  t = t || {};
  var a = e.getSourceManager(), n, i = !1;
  r ? (i = !0, n = qg(r)) : (n = a.getSource(), i = n.sourceFormat === vr);
  var o = PV(e), s = kV(e, o), l = t.useEncodeDefaulter, u = K(l) ? l : l ? ot(WD, s, e) : null, f = {
    coordDimensions: s,
    generateCoord: t.generateCoord,
    encodeDefine: e.getEncode(),
    encodeDefaulter: u,
    canOmitUnusedDimensions: !i
  }, h = Tl(n, f), c = VV(h.dimensions, t.createInvertedIndices, o), v = i ? null : a.getSharedDataStore(h), d = NV(e, {
    schema: h,
    store: v
  }), p = new Me(h, e);
  p.setCalculationInfo(d);
  var g = c != null && BV(n) ? function(y, m, _, S) {
    return S === c ? _ : this.defaultDimValueGetter(y, m, _, S);
  } : null;
  return p.hasItemOption = !1, p.initData(
    // Try to reuse the data store in sourceManager if using dataset.
    i ? n : v,
    null,
    g
  ), p;
}
function BV(r) {
  if (r.sourceFormat === vr) {
    var e = zV(r.data || []);
    return !z(Do(e));
  }
}
function zV(r) {
  for (var e = 0; e < r.length && r[e] == null; )
    e++;
  return r[e];
}
var rA = (
  /** @class */
  function() {
    function r(e) {
      this._setting = e || {}, this._extent = [1 / 0, -1 / 0];
    }
    return r.prototype.getSetting = function(e) {
      return this._setting[e];
    }, r.prototype.unionExtent = function(e) {
      var t = this._extent;
      e[0] < t[0] && (t[0] = e[0]), e[1] > t[1] && (t[1] = e[1]);
    }, r.prototype.unionExtentFromData = function(e, t) {
      this.unionExtent(e.getApproximateExtent(t));
    }, r.prototype.getExtent = function() {
      return this._extent.slice();
    }, r.prototype.setExtent = function(e, t) {
      var a = this._extent;
      isNaN(e) || (a[0] = e), isNaN(t) || (a[1] = t);
    }, r.prototype.isInExtentRange = function(e) {
      return this._extent[0] <= e && this._extent[1] >= e;
    }, r.prototype.isBlank = function() {
      return this._isBlank;
    }, r.prototype.setBlank = function(e) {
      this._isBlank = e;
    }, r;
  }()
);
dh(rA);
const ba = rA;
var GV = 0, FV = (
  /** @class */
  function() {
    function r(e) {
      this.categories = e.categories || [], this._needCollect = e.needCollect, this._deduplication = e.deduplication, this.uid = ++GV;
    }
    return r.createByAxisModel = function(e) {
      var t = e.option, a = t.data, n = a && G(a, HV);
      return new r({
        categories: n,
        needCollect: !n,
        // deduplication is default in axis.
        deduplication: t.dedplication !== !1
      });
    }, r.prototype.getOrdinal = function(e) {
      return this._getOrCreateMap().get(e);
    }, r.prototype.parseAndCollect = function(e) {
      var t, a = this._needCollect;
      if (!$(e) && !a)
        return e;
      if (a && !this._deduplication)
        return t = this.categories.length, this.categories[t] = e, t;
      var n = this._getOrCreateMap();
      return t = n.get(e), t == null && (a ? (t = this.categories.length, this.categories[t] = e, n.set(e, t)) : t = NaN), t;
    }, r.prototype._getOrCreateMap = function() {
      return this._map || (this._map = X(this.categories));
    }, r;
  }()
);
function HV(r) {
  return j(r) && r.value != null ? r.value : r + "";
}
const Sp = FV;
function WV(r) {
  var e = Math.pow(10, ch(Math.abs(r))), t = Math.abs(r / e);
  return t === 0 || t === 1 || t === 2 || t === 3 || t === 5;
}
function xp(r) {
  return r.type === "interval" || r.type === "log";
}
function $V(r, e, t, a) {
  var n = {}, i = r[1] - r[0], o = n.interval = pT(i / e, !0);
  t != null && o < t && (o = n.interval = t), a != null && o > a && (o = n.interval = a);
  var s = n.intervalPrecision = aA(o), l = n.niceTickExtent = [Yt(Math.ceil(r[0] / o) * o, s), Yt(Math.floor(r[1] / o) * o, s)];
  return UV(l, r), n;
}
function nv(r) {
  var e = Math.pow(10, ch(r)), t = r / e;
  return t ? t === 2 ? t = 3 : t === 3 ? t = 5 : t *= 2 : t = 1, Yt(t * e);
}
function aA(r) {
  return Fr(r) + 2;
}
function Q_(r, e, t) {
  r[e] = Math.max(Math.min(r[e], t[1]), t[0]);
}
function UV(r, e) {
  !isFinite(r[0]) && (r[0] = e[0]), !isFinite(r[1]) && (r[1] = e[1]), Q_(r, 0, e), Q_(r, 1, e), r[0] > r[1] && (r[0] = r[1]);
}
function Oh(r, e) {
  return r >= e[0] && r <= e[1];
}
function kh(r, e) {
  return e[1] === e[0] ? 0.5 : (r - e[0]) / (e[1] - e[0]);
}
function Vh(r, e) {
  return r * (e[1] - e[0]) + e[0];
}
var nA = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t) {
      var a = r.call(this, t) || this;
      a.type = "ordinal";
      var n = a.getSetting("ordinalMeta");
      return n || (n = new Sp({})), z(n) && (n = new Sp({
        categories: G(n, function(i) {
          return j(i) ? i.value : i;
        })
      })), a._ordinalMeta = n, a._extent = a.getSetting("extent") || [0, n.categories.length - 1], a;
    }
    return e.prototype.parse = function(t) {
      return t == null ? NaN : $(t) ? this._ordinalMeta.getOrdinal(t) : Math.round(t);
    }, e.prototype.contain = function(t) {
      return t = this.parse(t), Oh(t, this._extent) && this._ordinalMeta.categories[t] != null;
    }, e.prototype.normalize = function(t) {
      return t = this._getTickNumber(this.parse(t)), kh(t, this._extent);
    }, e.prototype.scale = function(t) {
      return t = Math.round(Vh(t, this._extent)), this.getRawOrdinalNumber(t);
    }, e.prototype.getTicks = function() {
      for (var t = [], a = this._extent, n = a[0]; n <= a[1]; )
        t.push({
          value: n
        }), n++;
      return t;
    }, e.prototype.getMinorTicks = function(t) {
    }, e.prototype.setSortInfo = function(t) {
      if (t == null) {
        this._ordinalNumbersByTick = this._ticksByOrdinalNumber = null;
        return;
      }
      for (var a = t.ordinalNumbers, n = this._ordinalNumbersByTick = [], i = this._ticksByOrdinalNumber = [], o = 0, s = this._ordinalMeta.categories.length, l = Math.min(s, a.length); o < l; ++o) {
        var u = a[o];
        n[o] = u, i[u] = o;
      }
      for (var f = 0; o < s; ++o) {
        for (; i[f] != null; )
          f++;
        n.push(f), i[f] = o;
      }
    }, e.prototype._getTickNumber = function(t) {
      var a = this._ticksByOrdinalNumber;
      return a && t >= 0 && t < a.length ? a[t] : t;
    }, e.prototype.getRawOrdinalNumber = function(t) {
      var a = this._ordinalNumbersByTick;
      return a && t >= 0 && t < a.length ? a[t] : t;
    }, e.prototype.getLabel = function(t) {
      if (!this.isBlank()) {
        var a = this.getRawOrdinalNumber(t.value), n = this._ordinalMeta.categories[a];
        return n == null ? "" : n + "";
      }
    }, e.prototype.count = function() {
      return this._extent[1] - this._extent[0] + 1;
    }, e.prototype.unionExtentFromData = function(t, a) {
      this.unionExtent(t.getApproximateExtent(a));
    }, e.prototype.isInExtentRange = function(t) {
      return t = this._getTickNumber(t), this._extent[0] <= t && this._extent[1] >= t;
    }, e.prototype.getOrdinalMeta = function() {
      return this._ordinalMeta;
    }, e.prototype.calcNiceTicks = function() {
    }, e.prototype.calcNiceExtent = function() {
    }, e.type = "ordinal", e;
  }(ba)
);
ba.registerClass(nA);
const uy = nA;
var Ln = Yt, iA = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = "interval", t._interval = 0, t._intervalPrecision = 2, t;
    }
    return e.prototype.parse = function(t) {
      return t;
    }, e.prototype.contain = function(t) {
      return Oh(t, this._extent);
    }, e.prototype.normalize = function(t) {
      return kh(t, this._extent);
    }, e.prototype.scale = function(t) {
      return Vh(t, this._extent);
    }, e.prototype.setExtent = function(t, a) {
      var n = this._extent;
      isNaN(t) || (n[0] = parseFloat(t)), isNaN(a) || (n[1] = parseFloat(a));
    }, e.prototype.unionExtent = function(t) {
      var a = this._extent;
      t[0] < a[0] && (a[0] = t[0]), t[1] > a[1] && (a[1] = t[1]), this.setExtent(a[0], a[1]);
    }, e.prototype.getInterval = function() {
      return this._interval;
    }, e.prototype.setInterval = function(t) {
      this._interval = t, this._niceExtent = this._extent.slice(), this._intervalPrecision = aA(t);
    }, e.prototype.getTicks = function(t) {
      var a = this._interval, n = this._extent, i = this._niceExtent, o = this._intervalPrecision, s = [];
      if (!a)
        return s;
      var l = 1e4;
      n[0] < i[0] && (t ? s.push({
        value: Ln(i[0] - a, o)
      }) : s.push({
        value: n[0]
      }));
      for (var u = i[0]; u <= i[1] && (s.push({
        value: u
      }), u = Ln(u + a, o), u !== s[s.length - 1].value); )
        if (s.length > l)
          return [];
      var f = s.length ? s[s.length - 1].value : i[1];
      return n[1] > f && (t ? s.push({
        value: Ln(f + a, o)
      }) : s.push({
        value: n[1]
      })), s;
    }, e.prototype.getMinorTicks = function(t) {
      for (var a = this.getTicks(!0), n = [], i = this.getExtent(), o = 1; o < a.length; o++) {
        for (var s = a[o], l = a[o - 1], u = 0, f = [], h = s.value - l.value, c = h / t; u < t - 1; ) {
          var v = Ln(l.value + (u + 1) * c);
          v > i[0] && v < i[1] && f.push(v), u++;
        }
        n.push(f);
      }
      return n;
    }, e.prototype.getLabel = function(t, a) {
      if (t == null)
        return "";
      var n = a && a.precision;
      n == null ? n = Fr(t.value) || 0 : n === "auto" && (n = this._intervalPrecision);
      var i = Ln(t.value, n, !0);
      return OD(i);
    }, e.prototype.calcNiceTicks = function(t, a, n) {
      t = t || 5;
      var i = this._extent, o = i[1] - i[0];
      if (isFinite(o)) {
        o < 0 && (o = -o, i.reverse());
        var s = $V(i, t, a, n);
        this._intervalPrecision = s.intervalPrecision, this._interval = s.interval, this._niceExtent = s.niceTickExtent;
      }
    }, e.prototype.calcNiceExtent = function(t) {
      var a = this._extent;
      if (a[0] === a[1])
        if (a[0] !== 0) {
          var n = Math.abs(a[0]);
          t.fixMax || (a[1] += n / 2), a[0] -= n / 2;
        } else
          a[1] = 1;
      var i = a[1] - a[0];
      isFinite(i) || (a[0] = 0, a[1] = 1), this.calcNiceTicks(t.splitNumber, t.minInterval, t.maxInterval);
      var o = this._interval;
      t.fixMin || (a[0] = Ln(Math.floor(a[0] / o) * o)), t.fixMax || (a[1] = Ln(Math.ceil(a[1] / o) * o));
    }, e.prototype.setNiceExtent = function(t, a) {
      this._niceExtent = [t, a];
    }, e.type = "interval", e;
  }(ba)
);
ba.registerClass(iA);
const nn = iA;
var oA = typeof Float32Array < "u", YV = oA ? Float32Array : Array;
function Wr(r) {
  return z(r) ? oA ? new Float32Array(r) : r : new YV(r);
}
var wp = "__ec_stack_";
function fy(r) {
  return r.get("stack") || wp + r.seriesIndex;
}
function hy(r) {
  return r.dim + r.index;
}
function ZV(r) {
  var e = [], t = r.axis, a = "axis0";
  if (t.type === "category") {
    for (var n = t.getBandWidth(), i = 0; i < r.count; i++)
      e.push(et({
        bandWidth: n,
        axisKey: a,
        stackId: wp + i
      }, r));
    for (var o = uA(e), s = [], i = 0; i < r.count; i++) {
      var l = o[a][wp + i];
      l.offsetCenter = l.offset + l.width / 2, s.push(l);
    }
    return s;
  }
}
function sA(r, e) {
  var t = [];
  return e.eachSeriesByType(r, function(a) {
    cA(a) && t.push(a);
  }), t;
}
function XV(r) {
  var e = {};
  M(r, function(l) {
    var u = l.coordinateSystem, f = u.getBaseAxis();
    if (!(f.type !== "time" && f.type !== "value"))
      for (var h = l.getData(), c = f.dim + "_" + f.index, v = h.getDimensionIndex(h.mapDimension(f.dim)), d = h.getStore(), p = 0, g = d.count(); p < g; ++p) {
        var y = d.get(v, p);
        e[c] ? e[c].push(y) : e[c] = [y];
      }
  });
  var t = {};
  for (var a in e)
    if (e.hasOwnProperty(a)) {
      var n = e[a];
      if (n) {
        n.sort(function(l, u) {
          return l - u;
        });
        for (var i = null, o = 1; o < n.length; ++o) {
          var s = n[o] - n[o - 1];
          s > 0 && (i = i === null ? s : Math.min(i, s));
        }
        t[a] = i;
      }
    }
  return t;
}
function lA(r) {
  var e = XV(r), t = [];
  return M(r, function(a) {
    var n = a.coordinateSystem, i = n.getBaseAxis(), o = i.getExtent(), s;
    if (i.type === "category")
      s = i.getBandWidth();
    else if (i.type === "value" || i.type === "time") {
      var l = i.dim + "_" + i.index, u = e[l], f = Math.abs(o[1] - o[0]), h = i.scale.getExtent(), c = Math.abs(h[1] - h[0]);
      s = u ? f / c * u : f;
    } else {
      var v = a.getData();
      s = Math.abs(o[1] - o[0]) / v.count();
    }
    var d = H(a.get("barWidth"), s), p = H(a.get("barMaxWidth"), s), g = H(
      // barMinWidth by default is 0.5 / 1 in cartesian. Because in value axis,
      // the auto-calculated bar width might be less than 0.5 / 1.
      a.get("barMinWidth") || (vA(a) ? 0.5 : 1),
      s
    ), y = a.get("barGap"), m = a.get("barCategoryGap");
    t.push({
      bandWidth: s,
      barWidth: d,
      barMaxWidth: p,
      barMinWidth: g,
      barGap: y,
      barCategoryGap: m,
      axisKey: hy(i),
      stackId: fy(a)
    });
  }), uA(t);
}
function uA(r) {
  var e = {};
  M(r, function(a, n) {
    var i = a.axisKey, o = a.bandWidth, s = e[i] || {
      bandWidth: o,
      remainedWidth: o,
      autoWidthCount: 0,
      categoryGap: null,
      gap: "20%",
      stacks: {}
    }, l = s.stacks;
    e[i] = s;
    var u = a.stackId;
    l[u] || s.autoWidthCount++, l[u] = l[u] || {
      width: 0,
      maxWidth: 0
    };
    var f = a.barWidth;
    f && !l[u].width && (l[u].width = f, f = Math.min(s.remainedWidth, f), s.remainedWidth -= f);
    var h = a.barMaxWidth;
    h && (l[u].maxWidth = h);
    var c = a.barMinWidth;
    c && (l[u].minWidth = c);
    var v = a.barGap;
    v != null && (s.gap = v);
    var d = a.barCategoryGap;
    d != null && (s.categoryGap = d);
  });
  var t = {};
  return M(e, function(a, n) {
    t[n] = {};
    var i = a.stacks, o = a.bandWidth, s = a.categoryGap;
    if (s == null) {
      var l = _t(i).length;
      s = Math.max(35 - l * 4, 15) + "%";
    }
    var u = H(s, o), f = H(a.gap, 1), h = a.remainedWidth, c = a.autoWidthCount, v = (h - u) / (c + (c - 1) * f);
    v = Math.max(v, 0), M(i, function(y) {
      var m = y.maxWidth, _ = y.minWidth;
      if (y.width) {
        var S = y.width;
        m && (S = Math.min(S, m)), _ && (S = Math.max(S, _)), y.width = S, h -= S + f * S, c--;
      } else {
        var S = v;
        m && m < S && (S = Math.min(m, h)), _ && _ > S && (S = _), S !== v && (y.width = S, h -= S + f * S, c--);
      }
    }), v = (h - u) / (c + (c - 1) * f), v = Math.max(v, 0);
    var d = 0, p;
    M(i, function(y, m) {
      y.width || (y.width = v), p = y, d += y.width * (1 + f);
    }), p && (d -= p.width * f);
    var g = -d / 2;
    M(i, function(y, m) {
      t[n][m] = t[n][m] || {
        bandWidth: o,
        offset: g,
        width: y.width
      }, g += y.width * (1 + f);
    });
  }), t;
}
function qV(r, e, t) {
  if (r && e) {
    var a = r[hy(e)];
    return a != null && t != null ? a[fy(t)] : a;
  }
}
function fA(r, e) {
  var t = sA(r, e), a = lA(t);
  M(t, function(n) {
    var i = n.getData(), o = n.coordinateSystem, s = o.getBaseAxis(), l = fy(n), u = a[hy(s)][l], f = u.offset, h = u.width;
    i.setLayout({
      bandWidth: u.bandWidth,
      offset: f,
      size: h
    });
  });
}
function hA(r) {
  return {
    seriesType: r,
    plan: ko(),
    reset: function(e) {
      if (cA(e)) {
        var t = e.getData(), a = e.coordinateSystem, n = a.getBaseAxis(), i = a.getOtherAxis(n), o = t.getDimensionIndex(t.mapDimension(i.dim)), s = t.getDimensionIndex(t.mapDimension(n.dim)), l = e.get("showBackground", !0), u = t.mapDimension(i.dim), f = t.getCalculationInfo("stackResultDimension"), h = an(t, u) && !!t.getCalculationInfo("stackedOnSeries"), c = i.isHorizontal(), v = KV(n, i), d = vA(e), p = e.get("barMinHeight") || 0, g = f && t.getDimensionIndex(f), y = t.getLayout("size"), m = t.getLayout("offset");
        return {
          progress: function(_, S) {
            for (var w = _.count, x = d && Wr(w * 3), b = d && l && Wr(w * 3), T = d && Wr(w), C = a.master.getRect(), D = c ? C.width : C.height, A, I = S.getStore(), L = 0; (A = _.next()) != null; ) {
              var E = I.get(h ? g : o, A), P = I.get(s, A), R = v, k = void 0;
              h && (k = +E - I.get(o, A));
              var O = void 0, B = void 0, F = void 0, W = void 0;
              if (c) {
                var Z = a.dataToPoint([E, P]);
                if (h) {
                  var Q = a.dataToPoint([k, P]);
                  R = Q[0];
                }
                O = R, B = Z[1] + m, F = Z[0] - R, W = y, Math.abs(F) < p && (F = (F < 0 ? -1 : 1) * p);
              } else {
                var Z = a.dataToPoint([P, E]);
                if (h) {
                  var Q = a.dataToPoint([P, k]);
                  R = Q[1];
                }
                O = Z[0] + m, B = R, F = y, W = Z[1] - R, Math.abs(W) < p && (W = (W <= 0 ? -1 : 1) * p);
              }
              d ? (x[L] = O, x[L + 1] = B, x[L + 2] = c ? F : W, b && (b[L] = c ? C.x : O, b[L + 1] = c ? B : C.y, b[L + 2] = D), T[A] = A) : S.setItemLayout(A, {
                x: O,
                y: B,
                width: F,
                height: W
              }), L += 3;
            }
            d && S.setLayout({
              largePoints: x,
              largeDataIndices: T,
              largeBackgroundPoints: b,
              valueAxisHorizontal: c
            });
          }
        };
      }
    }
  };
}
function cA(r) {
  return r.coordinateSystem && r.coordinateSystem.type === "cartesian2d";
}
function vA(r) {
  return r.pipelineContext && r.pipelineContext.large;
}
function KV(r, e) {
  return e.toGlobalCoord(e.dataToCoord(e.type === "log" ? 1 : 0));
}
var jV = function(r, e, t, a) {
  for (; t < a; ) {
    var n = t + a >>> 1;
    r[n][1] < e ? t = n + 1 : a = n;
  }
  return t;
}, dA = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t) {
      var a = r.call(this, t) || this;
      return a.type = "time", a;
    }
    return e.prototype.getLabel = function(t) {
      var a = this.getSetting("useUTC");
      return Dh(t.value, W0[mN(so(this._minLevelUnit))] || W0.second, a, this.getSetting("locale"));
    }, e.prototype.getFormattedLabel = function(t, a, n) {
      var i = this.getSetting("useUTC"), o = this.getSetting("locale");
      return _N(t, a, n, o, i);
    }, e.prototype.getTicks = function() {
      var t = this._interval, a = this._extent, n = [];
      if (!t)
        return n;
      n.push({
        value: a[0],
        level: 0
      });
      var i = this.getSetting("useUTC"), o = nB(this._minLevelUnit, this._approxInterval, i, a);
      return n = n.concat(o), n.push({
        value: a[1],
        level: 0
      }), n;
    }, e.prototype.calcNiceExtent = function(t) {
      var a = this._extent;
      if (a[0] === a[1] && (a[0] -= or, a[1] += or), a[1] === -1 / 0 && a[0] === 1 / 0) {
        var n = /* @__PURE__ */ new Date();
        a[1] = +new Date(n.getFullYear(), n.getMonth(), n.getDate()), a[0] = a[1] - or;
      }
      this.calcNiceTicks(t.splitNumber, t.minInterval, t.maxInterval);
    }, e.prototype.calcNiceTicks = function(t, a, n) {
      t = t || 10;
      var i = this._extent, o = i[1] - i[0];
      this._approxInterval = o / t, a != null && this._approxInterval < a && (this._approxInterval = a), n != null && this._approxInterval > n && (this._approxInterval = n);
      var s = fu.length, l = Math.min(jV(fu, this._approxInterval, 0, s), s - 1);
      this._interval = fu[l][1], this._minLevelUnit = fu[Math.max(l - 1, 0)][0];
    }, e.prototype.parse = function(t) {
      return At(t) ? t : +qr(t);
    }, e.prototype.contain = function(t) {
      return Oh(this.parse(t), this._extent);
    }, e.prototype.normalize = function(t) {
      return kh(this.parse(t), this._extent);
    }, e.prototype.scale = function(t) {
      return Vh(t, this._extent);
    }, e.type = "time", e;
  }(nn)
), fu = [
  // Format                           interval
  ["second", Fg],
  ["minute", Hg],
  ["hour", ks],
  ["quarter-day", ks * 6],
  ["half-day", ks * 12],
  ["day", or * 1.2],
  ["half-week", or * 3.5],
  ["week", or * 7],
  ["month", or * 31],
  ["quarter", or * 95],
  ["half-year", H0 / 2],
  ["year", H0]
  // 1Y
];
function JV(r, e, t, a) {
  var n = qr(e), i = qr(t), o = function(d) {
    return $0(n, d, a) === $0(i, d, a);
  }, s = function() {
    return o("year");
  }, l = function() {
    return s() && o("month");
  }, u = function() {
    return l() && o("day");
  }, f = function() {
    return u() && o("hour");
  }, h = function() {
    return f() && o("minute");
  }, c = function() {
    return h() && o("second");
  }, v = function() {
    return c() && o("millisecond");
  };
  switch (r) {
    case "year":
      return s();
    case "month":
      return l();
    case "day":
      return u();
    case "hour":
      return f();
    case "minute":
      return h();
    case "second":
      return c();
    case "millisecond":
      return v();
  }
}
function QV(r, e) {
  return r /= or, r > 16 ? 16 : r > 7.5 ? 7 : r > 3.5 ? 4 : r > 1.5 ? 2 : 1;
}
function tB(r) {
  var e = 30 * or;
  return r /= e, r > 6 ? 6 : r > 3 ? 3 : r > 2 ? 2 : 1;
}
function eB(r) {
  return r /= ks, r > 12 ? 12 : r > 6 ? 6 : r > 3.5 ? 4 : r > 2 ? 2 : 1;
}
function t1(r, e) {
  return r /= e ? Hg : Fg, r > 30 ? 30 : r > 20 ? 20 : r > 15 ? 15 : r > 10 ? 10 : r > 5 ? 5 : r > 2 ? 2 : 1;
}
function rB(r) {
  return pT(r, !0);
}
function aB(r, e, t) {
  var a = new Date(r);
  switch (so(e)) {
    case "year":
    case "month":
      a[ID(t)](0);
    case "day":
      a[LD(t)](1);
    case "hour":
      a[ED(t)](0);
    case "minute":
      a[PD(t)](0);
    case "second":
      a[RD(t)](0), a[ND(t)](0);
  }
  return a.getTime();
}
function nB(r, e, t, a) {
  var n = 1e4, i = AD, o = 0;
  function s(D, A, I, L, E, P, R) {
    for (var k = new Date(A), O = A, B = k[L](); O < I && O <= a[1]; )
      R.push({
        value: O
      }), B += D, k[E](B), O = k.getTime();
    R.push({
      value: O,
      notAdd: !0
    });
  }
  function l(D, A, I) {
    var L = [], E = !A.length;
    if (!JV(so(D), a[0], a[1], t)) {
      E && (A = [{
        // TODO Optimize. Not include so may ticks.
        value: aB(new Date(a[0]), D, t)
      }, {
        value: a[1]
      }]);
      for (var P = 0; P < A.length - 1; P++) {
        var R = A[P].value, k = A[P + 1].value;
        if (R !== k) {
          var O = void 0, B = void 0, F = void 0, W = !1;
          switch (D) {
            case "year":
              O = Math.max(1, Math.round(e / or / 365)), B = Wg(t), F = SN(t);
              break;
            case "half-year":
            case "quarter":
            case "month":
              O = tB(e), B = lo(t), F = ID(t);
              break;
            case "week":
            case "half-week":
            case "day":
              O = QV(e), B = Ch(t), F = LD(t), W = !0;
              break;
            case "half-day":
            case "quarter-day":
            case "hour":
              O = eB(e), B = js(t), F = ED(t);
              break;
            case "minute":
              O = t1(e, !0), B = Ah(t), F = PD(t);
              break;
            case "second":
              O = t1(e, !1), B = Mh(t), F = RD(t);
              break;
            case "millisecond":
              O = rB(e), B = Ih(t), F = ND(t);
              break;
          }
          s(O, R, k, B, F, W, L), D === "year" && I.length > 1 && P === 0 && I.unshift({
            value: I[0].value - O
          });
        }
      }
      for (var P = 0; P < L.length; P++)
        I.push(L[P]);
      return L;
    }
  }
  for (var u = [], f = [], h = 0, c = 0, v = 0; v < i.length && o++ < n; ++v) {
    var d = so(i[v]);
    if (yN(i[v])) {
      l(i[v], u[u.length - 1] || [], f);
      var p = i[v + 1] ? so(i[v + 1]) : null;
      if (d !== p) {
        if (f.length) {
          c = h, f.sort(function(D, A) {
            return D.value - A.value;
          });
          for (var g = [], y = 0; y < f.length; ++y) {
            var m = f[y].value;
            (y === 0 || f[y - 1].value !== m) && (g.push(f[y]), m >= a[0] && m <= a[1] && h++);
          }
          var _ = (a[1] - a[0]) / e;
          if (h > _ * 1.5 && c > _ / 1.5 || (u.push(g), h > _ || r === i[v]))
            break;
        }
        f = [];
      }
    }
  }
  ({}).NODE_ENV !== "production" && o >= n && Ft("Exceed safe limit.");
  for (var S = Et(G(u, function(D) {
    return Et(D, function(A) {
      return A.value >= a[0] && A.value <= a[1] && !A.notAdd;
    });
  }), function(D) {
    return D.length > 0;
  }), w = [], x = S.length - 1, v = 0; v < S.length; ++v)
    for (var b = S[v], T = 0; T < b.length; ++T)
      w.push({
        value: b[T].value,
        level: x - v
      });
  w.sort(function(D, A) {
    return D.value - A.value;
  });
  for (var C = [], v = 0; v < w.length; ++v)
    (v === 0 || w[v].value !== w[v - 1].value) && C.push(w[v]);
  return C;
}
ba.registerClass(dA);
const pA = dA;
var e1 = ba.prototype, Gs = nn.prototype, iB = Yt, oB = Math.floor, sB = Math.ceil, hu = Math.pow, pr = Math.log, cy = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = "log", t.base = 10, t._originalScale = new nn(), t._interval = 0, t;
    }
    return e.prototype.getTicks = function(t) {
      var a = this._originalScale, n = this._extent, i = a.getExtent(), o = Gs.getTicks.call(this, t);
      return G(o, function(s) {
        var l = s.value, u = Yt(hu(this.base, l));
        return u = l === n[0] && this._fixMin ? cu(u, i[0]) : u, u = l === n[1] && this._fixMax ? cu(u, i[1]) : u, {
          value: u
        };
      }, this);
    }, e.prototype.setExtent = function(t, a) {
      var n = pr(this.base);
      t = pr(Math.max(0, t)) / n, a = pr(Math.max(0, a)) / n, Gs.setExtent.call(this, t, a);
    }, e.prototype.getExtent = function() {
      var t = this.base, a = e1.getExtent.call(this);
      a[0] = hu(t, a[0]), a[1] = hu(t, a[1]);
      var n = this._originalScale, i = n.getExtent();
      return this._fixMin && (a[0] = cu(a[0], i[0])), this._fixMax && (a[1] = cu(a[1], i[1])), a;
    }, e.prototype.unionExtent = function(t) {
      this._originalScale.unionExtent(t);
      var a = this.base;
      t[0] = pr(t[0]) / pr(a), t[1] = pr(t[1]) / pr(a), e1.unionExtent.call(this, t);
    }, e.prototype.unionExtentFromData = function(t, a) {
      this.unionExtent(t.getApproximateExtent(a));
    }, e.prototype.calcNiceTicks = function(t) {
      t = t || 10;
      var a = this._extent, n = a[1] - a[0];
      if (!(n === 1 / 0 || n <= 0)) {
        var i = zE(n), o = t / n * i;
        for (o <= 0.5 && (i *= 10); !isNaN(i) && Math.abs(i) < 1 && Math.abs(i) > 0; )
          i *= 10;
        var s = [Yt(sB(a[0] / i) * i), Yt(oB(a[1] / i) * i)];
        this._interval = i, this._niceExtent = s;
      }
    }, e.prototype.calcNiceExtent = function(t) {
      Gs.calcNiceExtent.call(this, t), this._fixMin = t.fixMin, this._fixMax = t.fixMax;
    }, e.prototype.parse = function(t) {
      return t;
    }, e.prototype.contain = function(t) {
      return t = pr(t) / pr(this.base), Oh(t, this._extent);
    }, e.prototype.normalize = function(t) {
      return t = pr(t) / pr(this.base), kh(t, this._extent);
    }, e.prototype.scale = function(t) {
      return t = Vh(t, this._extent), hu(this.base, t);
    }, e.type = "log", e;
  }(ba)
), gA = cy.prototype;
gA.getMinorTicks = Gs.getMinorTicks;
gA.getLabel = Gs.getLabel;
function cu(r, e) {
  return iB(r, Fr(e));
}
ba.registerClass(cy);
const lB = cy;
var uB = (
  /** @class */
  function() {
    function r(e, t, a) {
      this._prepareParams(e, t, a);
    }
    return r.prototype._prepareParams = function(e, t, a) {
      a[1] < a[0] && (a = [NaN, NaN]), this._dataMin = a[0], this._dataMax = a[1];
      var n = this._isOrdinal = e.type === "ordinal";
      this._needCrossZero = e.type === "interval" && t.getNeedCrossZero && t.getNeedCrossZero();
      var i = this._modelMinRaw = t.get("min", !0);
      K(i) ? this._modelMinNum = vu(e, i({
        min: a[0],
        max: a[1]
      })) : i !== "dataMin" && (this._modelMinNum = vu(e, i));
      var o = this._modelMaxRaw = t.get("max", !0);
      if (K(o) ? this._modelMaxNum = vu(e, o({
        min: a[0],
        max: a[1]
      })) : o !== "dataMax" && (this._modelMaxNum = vu(e, o)), n)
        this._axisDataLen = t.getCategories().length;
      else {
        var s = t.get("boundaryGap"), l = z(s) ? s : [s || 0, s || 0];
        typeof l[0] == "boolean" || typeof l[1] == "boolean" ? ({}.NODE_ENV !== "production" && console.warn('Boolean type for boundaryGap is only allowed for ordinal axis. Please use string in percentage instead, e.g., "20%". Currently, boundaryGap is set to be 0.'), this._boundaryGapInner = [0, 0]) : this._boundaryGapInner = [Cr(l[0], 1), Cr(l[1], 1)];
      }
    }, r.prototype.calculate = function() {
      var e = this._isOrdinal, t = this._dataMin, a = this._dataMax, n = this._axisDataLen, i = this._boundaryGapInner, o = e ? null : a - t || Math.abs(t), s = this._modelMinRaw === "dataMin" ? t : this._modelMinNum, l = this._modelMaxRaw === "dataMax" ? a : this._modelMaxNum, u = s != null, f = l != null;
      s == null && (s = e ? n ? 0 : NaN : t - i[0] * o), l == null && (l = e ? n ? n - 1 : NaN : a + i[1] * o), (s == null || !isFinite(s)) && (s = NaN), (l == null || !isFinite(l)) && (l = NaN);
      var h = fi(s) || fi(l) || e && !n;
      this._needCrossZero && (s > 0 && l > 0 && !u && (s = 0), s < 0 && l < 0 && !f && (l = 0));
      var c = this._determinedMin, v = this._determinedMax;
      return c != null && (s = c, u = !0), v != null && (l = v, f = !0), {
        min: s,
        max: l,
        minFixed: u,
        maxFixed: f,
        isBlank: h
      };
    }, r.prototype.modifyDataMinMax = function(e, t) {
      ({}).NODE_ENV !== "production" && J(!this.frozen), this[hB[e]] = t;
    }, r.prototype.setDeterminedMinMax = function(e, t) {
      var a = fB[e];
      ({}).NODE_ENV !== "production" && J(!this.frozen && this[a] == null), this[a] = t;
    }, r.prototype.freeze = function() {
      this.frozen = !0;
    }, r;
  }()
), fB = {
  min: "_determinedMin",
  max: "_determinedMax"
}, hB = {
  min: "_dataMin",
  max: "_dataMax"
};
function yA(r, e, t) {
  var a = r.rawExtentInfo;
  return a || (a = new uB(r, e, t), r.rawExtentInfo = a, a);
}
function vu(r, e) {
  return e == null ? null : fi(e) ? NaN : r.parse(e);
}
function mA(r, e) {
  var t = r.type, a = yA(r, e, r.getExtent()).calculate();
  r.setBlank(a.isBlank);
  var n = a.min, i = a.max, o = e.ecModel;
  if (o && t === "time") {
    var s = sA("bar", o), l = !1;
    if (M(s, function(h) {
      l = l || h.getBaseAxis() === e.axis;
    }), l) {
      var u = lA(s), f = cB(n, i, e, u);
      n = f.min, i = f.max;
    }
  }
  return {
    extent: [n, i],
    // "fix" means "fixed", the value should not be
    // changed in the subsequent steps.
    fixMin: a.minFixed,
    fixMax: a.maxFixed
  };
}
function cB(r, e, t, a) {
  var n = t.axis.getExtent(), i = n[1] - n[0], o = qV(a, t.axis);
  if (o === void 0)
    return {
      min: r,
      max: e
    };
  var s = 1 / 0;
  M(o, function(v) {
    s = Math.min(v.offset, s);
  });
  var l = -1 / 0;
  M(o, function(v) {
    l = Math.max(v.offset + v.width, l);
  }), s = Math.abs(s), l = Math.abs(l);
  var u = s + l, f = e - r, h = 1 - (s + l) / i, c = f / h - f;
  return e += c * (l / u), r -= c * (s / u), {
    min: r,
    max: e
  };
}
function go(r, e) {
  var t = e, a = mA(r, t), n = a.extent, i = t.get("splitNumber");
  r instanceof lB && (r.base = t.get("logBase"));
  var o = r.type, s = t.get("interval"), l = o === "interval" || o === "time";
  r.setExtent(n[0], n[1]), r.calcNiceExtent({
    splitNumber: i,
    fixMin: a.fixMin,
    fixMax: a.fixMax,
    minInterval: l ? t.get("minInterval") : null,
    maxInterval: l ? t.get("maxInterval") : null
  }), s != null && r.setInterval && r.setInterval(s);
}
function Bh(r, e) {
  if (e = e || r.get("type"), e)
    switch (e) {
      case "category":
        return new uy({
          ordinalMeta: r.getOrdinalMeta ? r.getOrdinalMeta() : r.getCategories(),
          extent: [1 / 0, -1 / 0]
        });
      case "time":
        return new pA({
          locale: r.ecModel.getLocaleModel(),
          useUTC: r.ecModel.get("useUTC")
        });
      default:
        return new (ba.getClass(e) || nn)();
    }
}
function vB(r) {
  var e = r.scale.getExtent(), t = e[0], a = e[1];
  return !(t > 0 && a > 0 || t < 0 && a < 0);
}
function Dl(r) {
  var e = r.getLabelModel().get("formatter"), t = r.type === "category" ? r.scale.getExtent()[0] : null;
  return r.scale.type === "time" ? function(a) {
    return function(n, i) {
      return r.scale.getFormattedLabel(n, i, a);
    };
  }(e) : $(e) ? function(a) {
    return function(n) {
      var i = r.scale.getLabel(n), o = a.replace("{value}", i != null ? i : "");
      return o;
    };
  }(e) : K(e) ? function(a) {
    return function(n, i) {
      return t != null && (i = n.value - t), a(vy(r, n), i, n.level != null ? {
        level: n.level
      } : null);
    };
  }(e) : function(a) {
    return r.scale.getLabel(a);
  };
}
function vy(r, e) {
  return r.type === "category" ? r.scale.getLabel(e) : e.value;
}
function dB(r) {
  var e = r.model, t = r.scale;
  if (!(!e.get(["axisLabel", "show"]) || t.isBlank())) {
    var a, n, i = t.getExtent();
    t instanceof uy ? n = t.count() : (a = t.getTicks(), n = a.length);
    var o = r.getLabelModel(), s = Dl(r), l, u = 1;
    n > 40 && (u = Math.ceil(n / 40));
    for (var f = 0; f < n; f += u) {
      var h = a ? a[f] : {
        value: i[0] + f
      }, c = s(h, f), v = o.getTextRect(c), d = pB(v, o.get("rotate") || 0);
      l ? l.union(d) : l = d;
    }
    return l;
  }
}
function pB(r, e) {
  var t = e * Math.PI / 180, a = r.width, n = r.height, i = a * Math.abs(Math.cos(t)) + Math.abs(n * Math.sin(t)), o = a * Math.abs(Math.sin(t)) + Math.abs(n * Math.cos(t)), s = new ct(r.x, r.y, i, o);
  return s;
}
function dy(r) {
  var e = r.get("interval");
  return e == null ? "auto" : e;
}
function _A(r) {
  return r.type === "category" && dy(r.getLabelModel()) === 0;
}
function Nf(r, e) {
  var t = {};
  return M(r.mapDimensionsAll(e), function(a) {
    t[eA(r, a)] = !0;
  }), _t(t);
}
function gB(r, e, t) {
  e && M(Nf(e, t), function(a) {
    var n = e.getApproximateExtent(a);
    n[0] < r[0] && (r[0] = n[0]), n[1] > r[1] && (r[1] = n[1]);
  });
}
var Cl = (
  /** @class */
  function() {
    function r() {
    }
    return r.prototype.getNeedCrossZero = function() {
      var e = this.option;
      return !e.scale;
    }, r.prototype.getCoordSysModel = function() {
    }, r;
  }()
), yB = 1e-8;
function r1(r, e) {
  return Math.abs(r - e) < yB;
}
function Hn(r, e, t) {
  var a = 0, n = r[0];
  if (!n)
    return !1;
  for (var i = 1; i < r.length; i++) {
    var o = r[i];
    a += ia(n[0], n[1], o[0], o[1], e, t), n = o;
  }
  var s = r[0];
  return (!r1(n[0], s[0]) || !r1(n[1], s[1])) && (a += ia(n[0], n[1], s[0], s[1], e, t)), a !== 0;
}
var mB = [];
function iv(r, e) {
  for (var t = 0; t < r.length; t++)
    he(r[t], r[t], e);
}
function a1(r, e, t, a) {
  for (var n = 0; n < r.length; n++) {
    var i = r[n];
    a && (i = a.project(i)), i && isFinite(i[0]) && isFinite(i[1]) && (Ga(e, e, i), Fa(t, t, i));
  }
}
function _B(r) {
  for (var e = 0, t = 0, a = 0, n = r.length, i = r[n - 1][0], o = r[n - 1][1], s = 0; s < n; s++) {
    var l = r[s][0], u = r[s][1], f = i * u - l * o;
    e += f, t += (i + l) * f, a += (o + u) * f, i = l, o = u;
  }
  return e ? [t / e / 3, a / e / 3, e] : [r[0][0] || 0, r[0][1] || 0];
}
var SA = (
  /** @class */
  function() {
    function r(e) {
      this.name = e;
    }
    return r.prototype.setCenter = function(e) {
      this._center = e;
    }, r.prototype.getCenter = function() {
      var e = this._center;
      return e || (e = this._center = this.calcCenter()), e;
    }, r;
  }()
), n1 = (
  /** @class */
  function() {
    function r(e, t) {
      this.type = "polygon", this.exterior = e, this.interiors = t;
    }
    return r;
  }()
), i1 = (
  /** @class */
  function() {
    function r(e) {
      this.type = "linestring", this.points = e;
    }
    return r;
  }()
), xA = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t, a, n) {
      var i = r.call(this, t) || this;
      return i.type = "geoJSON", i.geometries = a, i._center = n && [n[0], n[1]], i;
    }
    return e.prototype.calcCenter = function() {
      for (var t = this.geometries, a, n = 0, i = 0; i < t.length; i++) {
        var o = t[i], s = o.exterior, l = s && s.length;
        l > n && (a = o, n = l);
      }
      if (a)
        return _B(a.exterior);
      var u = this.getBoundingRect();
      return [u.x + u.width / 2, u.y + u.height / 2];
    }, e.prototype.getBoundingRect = function(t) {
      var a = this._rect;
      if (a && !t)
        return a;
      var n = [1 / 0, 1 / 0], i = [-1 / 0, -1 / 0], o = this.geometries;
      return M(o, function(s) {
        s.type === "polygon" ? a1(s.exterior, n, i, t) : M(s.points, function(l) {
          a1(l, n, i, t);
        });
      }), isFinite(n[0]) && isFinite(n[1]) && isFinite(i[0]) && isFinite(i[1]) || (n[0] = n[1] = i[0] = i[1] = 0), a = new ct(n[0], n[1], i[0] - n[0], i[1] - n[1]), t || (this._rect = a), a;
    }, e.prototype.contain = function(t) {
      var a = this.getBoundingRect(), n = this.geometries;
      if (!a.contain(t[0], t[1]))
        return !1;
      t:
        for (var i = 0, o = n.length; i < o; i++) {
          var s = n[i];
          if (s.type === "polygon") {
            var l = s.exterior, u = s.interiors;
            if (Hn(l, t[0], t[1])) {
              for (var f = 0; f < (u ? u.length : 0); f++)
                if (Hn(u[f], t[0], t[1]))
                  continue t;
              return !0;
            }
          }
        }
      return !1;
    }, e.prototype.transformTo = function(t, a, n, i) {
      var o = this.getBoundingRect(), s = o.width / o.height;
      n ? i || (i = n / s) : n = s * i;
      for (var l = new ct(t, a, n, i), u = o.calculateTransform(l), f = this.geometries, h = 0; h < f.length; h++) {
        var c = f[h];
        c.type === "polygon" ? (iv(c.exterior, u), M(c.interiors, function(v) {
          iv(v, u);
        })) : M(c.points, function(v) {
          iv(v, u);
        });
      }
      o = this._rect, o.copy(l), this._center = [o.x + o.width / 2, o.y + o.height / 2];
    }, e.prototype.cloneShallow = function(t) {
      t == null && (t = this.name);
      var a = new e(t, this.geometries, this._center);
      return a._rect = this._rect, a.transformTo = null, a;
    }, e;
  }(SA)
), SB = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t, a) {
      var n = r.call(this, t) || this;
      return n.type = "geoSVG", n._elOnlyForCalculate = a, n;
    }
    return e.prototype.calcCenter = function() {
      for (var t = this._elOnlyForCalculate, a = t.getBoundingRect(), n = [a.x + a.width / 2, a.y + a.height / 2], i = uh(mB), o = t; o && !o.isGeoSVGGraphicRoot; )
        ua(i, o.getLocalTransform(), i), o = o.parent;
      return To(i, i), he(n, n, i), n;
    }, e;
  }(SA)
);
function xB(r) {
  if (!r.UTF8Encoding)
    return r;
  var e = r, t = e.UTF8Scale;
  t == null && (t = 1024);
  var a = e.features;
  return M(a, function(n) {
    var i = n.geometry, o = i.encodeOffsets, s = i.coordinates;
    if (o)
      switch (i.type) {
        case "LineString":
          i.coordinates = wA(s, o, t);
          break;
        case "Polygon":
          ov(s, o, t);
          break;
        case "MultiLineString":
          ov(s, o, t);
          break;
        case "MultiPolygon":
          M(s, function(l, u) {
            return ov(l, o[u], t);
          });
      }
  }), e.UTF8Encoding = !1, e;
}
function ov(r, e, t) {
  for (var a = 0; a < r.length; a++)
    r[a] = wA(r[a], e[a], t);
}
function wA(r, e, t) {
  for (var a = [], n = e[0], i = e[1], o = 0; o < r.length; o += 2) {
    var s = r.charCodeAt(o) - 64, l = r.charCodeAt(o + 1) - 64;
    s = s >> 1 ^ -(s & 1), l = l >> 1 ^ -(l & 1), s += n, l += i, n = s, i = l, a.push([s / t, l / t]);
  }
  return a;
}
function wB(r, e) {
  return r = xB(r), G(Et(r.features, function(t) {
    return t.geometry && t.properties && t.geometry.coordinates.length > 0;
  }), function(t) {
    var a = t.properties, n = t.geometry, i = [];
    switch (n.type) {
      case "Polygon":
        var o = n.coordinates;
        i.push(new n1(o[0], o.slice(1)));
        break;
      case "MultiPolygon":
        M(n.coordinates, function(l) {
          l[0] && i.push(new n1(l[0], l.slice(1)));
        });
        break;
      case "LineString":
        i.push(new i1([n.coordinates]));
        break;
      case "MultiLineString":
        i.push(new i1(n.coordinates));
    }
    var s = new xA(a[e || "name"], i, a.cp);
    return s.properties = a, s;
  });
}
var al = Dt();
function bB(r) {
  return r.type === "category" ? DB(r) : AB(r);
}
function TB(r, e) {
  return r.type === "category" ? CB(r, e) : {
    ticks: G(r.scale.getTicks(), function(t) {
      return t.value;
    })
  };
}
function DB(r) {
  var e = r.getLabelModel(), t = bA(r, e);
  return !e.get("show") || r.scale.isBlank() ? {
    labels: [],
    labelCategoryInterval: t.labelCategoryInterval
  } : t;
}
function bA(r, e) {
  var t = TA(r, "labels"), a = dy(e), n = DA(t, a);
  if (n)
    return n;
  var i, o;
  return K(a) ? i = MA(r, a) : (o = a === "auto" ? MB(r) : a, i = AA(r, o)), CA(t, a, {
    labels: i,
    labelCategoryInterval: o
  });
}
function CB(r, e) {
  var t = TA(r, "ticks"), a = dy(e), n = DA(t, a);
  if (n)
    return n;
  var i, o;
  if ((!e.get("show") || r.scale.isBlank()) && (i = []), K(a))
    i = MA(r, a, !0);
  else if (a === "auto") {
    var s = bA(r, r.getLabelModel());
    o = s.labelCategoryInterval, i = G(s.labels, function(l) {
      return l.tickValue;
    });
  } else
    o = a, i = AA(r, o, !0);
  return CA(t, a, {
    ticks: i,
    tickCategoryInterval: o
  });
}
function AB(r) {
  var e = r.scale.getTicks(), t = Dl(r);
  return {
    labels: G(e, function(a, n) {
      return {
        level: a.level,
        formattedLabel: t(a, n),
        rawLabel: r.scale.getLabel(a),
        tickValue: a.value
      };
    })
  };
}
function TA(r, e) {
  return al(r)[e] || (al(r)[e] = []);
}
function DA(r, e) {
  for (var t = 0; t < r.length; t++)
    if (r[t].key === e)
      return r[t].value;
}
function CA(r, e, t) {
  return r.push({
    key: e,
    value: t
  }), t;
}
function MB(r) {
  var e = al(r).autoInterval;
  return e != null ? e : al(r).autoInterval = r.calculateCategoryInterval();
}
function IB(r) {
  var e = LB(r), t = Dl(r), a = (e.axisRotate - e.labelRotate) / 180 * Math.PI, n = r.scale, i = n.getExtent(), o = n.count();
  if (i[1] - i[0] < 1)
    return 0;
  var s = 1;
  o > 40 && (s = Math.max(1, Math.floor(o / 40)));
  for (var l = i[0], u = r.dataToCoord(l + 1) - r.dataToCoord(l), f = Math.abs(u * Math.cos(a)), h = Math.abs(u * Math.sin(a)), c = 0, v = 0; l <= i[1]; l += s) {
    var d = 0, p = 0, g = gl(t({
      value: l
    }), e.font, "center", "top");
    d = g.width * 1.3, p = g.height * 1.3, c = Math.max(c, d, 7), v = Math.max(v, p, 7);
  }
  var y = c / f, m = v / h;
  isNaN(y) && (y = 1 / 0), isNaN(m) && (m = 1 / 0);
  var _ = Math.max(0, Math.floor(Math.min(y, m))), S = al(r.model), w = r.getExtent(), x = S.lastAutoInterval, b = S.lastTickCount;
  return x != null && b != null && Math.abs(x - _) <= 1 && Math.abs(b - o) <= 1 && x > _ && S.axisExtent0 === w[0] && S.axisExtent1 === w[1] ? _ = x : (S.lastTickCount = o, S.lastAutoInterval = _, S.axisExtent0 = w[0], S.axisExtent1 = w[1]), _;
}
function LB(r) {
  var e = r.getLabelModel();
  return {
    axisRotate: r.getRotate ? r.getRotate() : r.isHorizontal && !r.isHorizontal() ? 90 : 0,
    labelRotate: e.get("rotate") || 0,
    font: e.getFont()
  };
}
function AA(r, e, t) {
  var a = Dl(r), n = r.scale, i = n.getExtent(), o = r.getLabelModel(), s = [], l = Math.max((e || 0) + 1, 1), u = i[0], f = n.count();
  u !== 0 && l > 1 && f / l > 2 && (u = Math.round(Math.ceil(u / l) * l));
  var h = _A(r), c = o.get("showMinLabel") || h, v = o.get("showMaxLabel") || h;
  c && u !== i[0] && p(i[0]);
  for (var d = u; d <= i[1]; d += l)
    p(d);
  v && d - l !== i[1] && p(i[1]);
  function p(g) {
    var y = {
      value: g
    };
    s.push(t ? g : {
      formattedLabel: a(y),
      rawLabel: n.getLabel(y),
      tickValue: g
    });
  }
  return s;
}
function MA(r, e, t) {
  var a = r.scale, n = Dl(r), i = [];
  return M(a.getTicks(), function(o) {
    var s = a.getLabel(o), l = o.value;
    e(o.value, s) && i.push(t ? l : {
      formattedLabel: n(o),
      rawLabel: s,
      tickValue: l
    });
  }), i;
}
var o1 = [0, 1], EB = (
  /** @class */
  function() {
    function r(e, t, a) {
      this.onBand = !1, this.inverse = !1, this.dim = e, this.scale = t, this._extent = a || [0, 0];
    }
    return r.prototype.contain = function(e) {
      var t = this._extent, a = Math.min(t[0], t[1]), n = Math.max(t[0], t[1]);
      return e >= a && e <= n;
    }, r.prototype.containData = function(e) {
      return this.scale.contain(e);
    }, r.prototype.getExtent = function() {
      return this._extent.slice();
    }, r.prototype.getPixelPrecision = function(e) {
      return vT(e || this.scale.getExtent(), this._extent);
    }, r.prototype.setExtent = function(e, t) {
      var a = this._extent;
      a[0] = e, a[1] = t;
    }, r.prototype.dataToCoord = function(e, t) {
      var a = this._extent, n = this.scale;
      return e = n.normalize(e), this.onBand && n.type === "ordinal" && (a = a.slice(), s1(a, n.count())), Lt(e, o1, a, t);
    }, r.prototype.coordToData = function(e, t) {
      var a = this._extent, n = this.scale;
      this.onBand && n.type === "ordinal" && (a = a.slice(), s1(a, n.count()));
      var i = Lt(e, a, o1, t);
      return this.scale.scale(i);
    }, r.prototype.pointToData = function(e, t) {
    }, r.prototype.getTicksCoords = function(e) {
      e = e || {};
      var t = e.tickModel || this.getTickModel(), a = TB(this, t), n = a.ticks, i = G(n, function(s) {
        return {
          coord: this.dataToCoord(this.scale.type === "ordinal" ? this.scale.getRawOrdinalNumber(s) : s),
          tickValue: s
        };
      }, this), o = t.get("alignWithLabel");
      return PB(this, i, o, e.clamp), i;
    }, r.prototype.getMinorTicksCoords = function() {
      if (this.scale.type === "ordinal")
        return [];
      var e = this.model.getModel("minorTick"), t = e.get("splitNumber");
      t > 0 && t < 100 || (t = 5);
      var a = this.scale.getMinorTicks(t), n = G(a, function(i) {
        return G(i, function(o) {
          return {
            coord: this.dataToCoord(o),
            tickValue: o
          };
        }, this);
      }, this);
      return n;
    }, r.prototype.getViewLabels = function() {
      return bB(this).labels;
    }, r.prototype.getLabelModel = function() {
      return this.model.getModel("axisLabel");
    }, r.prototype.getTickModel = function() {
      return this.model.getModel("axisTick");
    }, r.prototype.getBandWidth = function() {
      var e = this._extent, t = this.scale.getExtent(), a = t[1] - t[0] + (this.onBand ? 1 : 0);
      a === 0 && (a = 1);
      var n = Math.abs(e[1] - e[0]);
      return Math.abs(n) / a;
    }, r.prototype.calculateCategoryInterval = function() {
      return IB(this);
    }, r;
  }()
);
function s1(r, e) {
  var t = r[1] - r[0], a = e, n = t / a / 2;
  r[0] += n, r[1] -= n;
}
function PB(r, e, t, a) {
  var n = e.length;
  if (!r.onBand || t || !n)
    return;
  var i = r.getExtent(), o, s;
  if (n === 1)
    e[0].coord = i[0], o = e[1] = {
      coord: i[1]
    };
  else {
    var l = e[n - 1].tickValue - e[0].tickValue, u = (e[n - 1].coord - e[0].coord) / l;
    M(e, function(v) {
      v.coord -= u / 2;
    });
    var f = r.scale.getExtent();
    s = 1 + f[1] - e[n - 1].tickValue, o = {
      coord: e[n - 1].coord + u * s
    }, e.push(o);
  }
  var h = i[0] > i[1];
  c(e[0].coord, i[0]) && (a ? e[0].coord = i[0] : e.shift()), a && c(i[0], e[0].coord) && e.unshift({
    coord: i[0]
  }), c(i[1], o.coord) && (a ? o.coord = i[1] : e.pop()), a && c(o.coord, i[1]) && e.push({
    coord: i[1]
  });
  function c(v, d) {
    return v = Yt(v), d = Yt(d), h ? v > d : v < d;
  }
}
const Lr = EB;
var ns = Math.PI * 2, En = Kr.CMD, RB = ["top", "right", "bottom", "left"];
function NB(r, e, t, a, n) {
  var i = t.width, o = t.height;
  switch (r) {
    case "top":
      a.set(t.x + i / 2, t.y - e), n.set(0, -1);
      break;
    case "bottom":
      a.set(t.x + i / 2, t.y + o + e), n.set(0, 1);
      break;
    case "left":
      a.set(t.x - e, t.y + o / 2), n.set(-1, 0);
      break;
    case "right":
      a.set(t.x + i + e, t.y + o / 2), n.set(1, 0);
      break;
  }
}
function OB(r, e, t, a, n, i, o, s, l) {
  o -= r, s -= e;
  var u = Math.sqrt(o * o + s * s);
  o /= u, s /= u;
  var f = o * t + r, h = s * t + e;
  if (Math.abs(a - n) % ns < 1e-4)
    return l[0] = f, l[1] = h, u - t;
  if (i) {
    var c = a;
    a = xr(n), n = xr(c);
  } else
    a = xr(a), n = xr(n);
  a > n && (n += ns);
  var v = Math.atan2(s, o);
  if (v < 0 && (v += ns), v >= a && v <= n || v + ns >= a && v + ns <= n)
    return l[0] = f, l[1] = h, u - t;
  var d = t * Math.cos(a) + r, p = t * Math.sin(a) + e, g = t * Math.cos(n) + r, y = t * Math.sin(n) + e, m = (d - o) * (d - o) + (p - s) * (p - s), _ = (g - o) * (g - o) + (y - s) * (y - s);
  return m < _ ? (l[0] = d, l[1] = p, Math.sqrt(m)) : (l[0] = g, l[1] = y, Math.sqrt(_));
}
function Of(r, e, t, a, n, i, o, s) {
  var l = n - r, u = i - e, f = t - r, h = a - e, c = Math.sqrt(f * f + h * h);
  f /= c, h /= c;
  var v = l * f + u * h, d = v / c;
  s && (d = Math.min(Math.max(d, 0), 1)), d *= c;
  var p = o[0] = r + d * f, g = o[1] = e + d * h;
  return Math.sqrt((p - n) * (p - n) + (g - i) * (g - i));
}
function IA(r, e, t, a, n, i, o) {
  t < 0 && (r = r + t, t = -t), a < 0 && (e = e + a, a = -a);
  var s = r + t, l = e + a, u = o[0] = Math.min(Math.max(n, r), s), f = o[1] = Math.min(Math.max(i, e), l);
  return Math.sqrt((u - n) * (u - n) + (f - i) * (f - i));
}
var _r = [];
function kB(r, e, t) {
  var a = IA(e.x, e.y, e.width, e.height, r.x, r.y, _r);
  return t.set(_r[0], _r[1]), a;
}
function VB(r, e, t) {
  for (var a = 0, n = 0, i = 0, o = 0, s, l, u = 1 / 0, f = e.data, h = r.x, c = r.y, v = 0; v < f.length; ) {
    var d = f[v++];
    v === 1 && (a = f[v], n = f[v + 1], i = a, o = n);
    var p = u;
    switch (d) {
      case En.M:
        i = f[v++], o = f[v++], a = i, n = o;
        break;
      case En.L:
        p = Of(a, n, f[v], f[v + 1], h, c, _r, !0), a = f[v++], n = f[v++];
        break;
      case En.C:
        p = Zb(a, n, f[v++], f[v++], f[v++], f[v++], f[v], f[v + 1], h, c, _r), a = f[v++], n = f[v++];
        break;
      case En.Q:
        p = qb(a, n, f[v++], f[v++], f[v], f[v + 1], h, c, _r), a = f[v++], n = f[v++];
        break;
      case En.A:
        var g = f[v++], y = f[v++], m = f[v++], _ = f[v++], S = f[v++], w = f[v++];
        v += 1;
        var x = !!(1 - f[v++]);
        s = Math.cos(S) * m + g, l = Math.sin(S) * _ + y, v <= 1 && (i = s, o = l);
        var b = (h - g) * _ / m + g;
        p = OB(g, y, _, S, S + w, x, b, c, _r), a = Math.cos(S + w) * m + g, n = Math.sin(S + w) * _ + y;
        break;
      case En.R:
        i = a = f[v++], o = n = f[v++];
        var T = f[v++], C = f[v++];
        p = IA(i, o, T, C, h, c, _r);
        break;
      case En.Z:
        p = Of(a, n, i, o, h, c, _r, !0), a = i, n = o;
        break;
    }
    p < u && (u = p, t.set(_r[0], _r[1]));
  }
  return u;
}
var wr = new ut(), Nt = new ut(), Zt = new ut(), $r = new ut(), Gr = new ut();
function l1(r, e) {
  if (r) {
    var t = r.getTextGuideLine(), a = r.getTextContent();
    if (a && t) {
      var n = r.textGuideLineConfig || {}, i = [[0, 0], [0, 0], [0, 0]], o = n.candidates || RB, s = a.getBoundingRect().clone();
      s.applyTransform(a.getComputedTransform());
      var l = 1 / 0, u = n.anchor, f = r.getComputedTransform(), h = f && To([], f), c = e.get("length2") || 0;
      u && Zt.copy(u);
      for (var v = 0; v < o.length; v++) {
        var d = o[v];
        NB(d, 0, s, wr, $r), ut.scaleAndAdd(Nt, wr, $r, c), Nt.transform(h);
        var p = r.getBoundingRect(), g = u ? u.distance(Nt) : r instanceof mt ? VB(Nt, r.path, Zt) : kB(Nt, p, Zt);
        g < l && (l = g, Nt.transform(f), Zt.transform(f), Zt.toArray(i[0]), Nt.toArray(i[1]), wr.toArray(i[2]));
      }
      LA(i, e.get("minTurnAngle")), t.setShape({
        points: i
      });
    }
  }
}
var kf = [], Ae = new ut();
function LA(r, e) {
  if (e <= 180 && e > 0) {
    e = e / 180 * Math.PI, wr.fromArray(r[0]), Nt.fromArray(r[1]), Zt.fromArray(r[2]), ut.sub($r, wr, Nt), ut.sub(Gr, Zt, Nt);
    var t = $r.len(), a = Gr.len();
    if (!(t < 1e-3 || a < 1e-3)) {
      $r.scale(1 / t), Gr.scale(1 / a);
      var n = $r.dot(Gr), i = Math.cos(e);
      if (i < n) {
        var o = Of(Nt.x, Nt.y, Zt.x, Zt.y, wr.x, wr.y, kf, !1);
        Ae.fromArray(kf), Ae.scaleAndAdd(Gr, o / Math.tan(Math.PI - e));
        var s = Zt.x !== Nt.x ? (Ae.x - Nt.x) / (Zt.x - Nt.x) : (Ae.y - Nt.y) / (Zt.y - Nt.y);
        if (isNaN(s))
          return;
        s < 0 ? ut.copy(Ae, Nt) : s > 1 && ut.copy(Ae, Zt), Ae.toArray(r[1]);
      }
    }
  }
}
function BB(r, e, t) {
  if (t <= 180 && t > 0) {
    t = t / 180 * Math.PI, wr.fromArray(r[0]), Nt.fromArray(r[1]), Zt.fromArray(r[2]), ut.sub($r, Nt, wr), ut.sub(Gr, Zt, Nt);
    var a = $r.len(), n = Gr.len();
    if (!(a < 1e-3 || n < 1e-3)) {
      $r.scale(1 / a), Gr.scale(1 / n);
      var i = $r.dot(e), o = Math.cos(t);
      if (i < o) {
        var s = Of(Nt.x, Nt.y, Zt.x, Zt.y, wr.x, wr.y, kf, !1);
        Ae.fromArray(kf);
        var l = Math.PI / 2, u = Math.acos(Gr.dot(e)), f = l + u - t;
        if (f >= l)
          ut.copy(Ae, Zt);
        else {
          Ae.scaleAndAdd(Gr, s / Math.tan(Math.PI / 2 - f));
          var h = Zt.x !== Nt.x ? (Ae.x - Nt.x) / (Zt.x - Nt.x) : (Ae.y - Nt.y) / (Zt.y - Nt.y);
          if (isNaN(h))
            return;
          h < 0 ? ut.copy(Ae, Nt) : h > 1 && ut.copy(Ae, Zt);
        }
        Ae.toArray(r[1]);
      }
    }
  }
}
function u1(r, e, t, a) {
  var n = t === "normal", i = n ? r : r.ensureState(t);
  i.ignore = e;
  var o = a.get("smooth");
  o && o === !0 && (o = 0.3), i.shape = i.shape || {}, o > 0 && (i.shape.smooth = o);
  var s = a.getModel("lineStyle").getLineStyle();
  n ? r.useStyle(s) : i.style = s;
}
function zB(r, e) {
  var t = e.smooth, a = e.points;
  if (a)
    if (r.moveTo(a[0][0], a[0][1]), t > 0 && a.length >= 3) {
      var n = za(a[0], a[1]), i = za(a[1], a[2]);
      if (!n || !i) {
        r.lineTo(a[1][0], a[1][1]), r.lineTo(a[2][0], a[2][1]);
        return;
      }
      var o = Math.min(n, i) * t, s = Gu([], a[1], a[0], o / n), l = Gu([], a[1], a[2], o / i), u = Gu([], s, l, 0.5);
      r.bezierCurveTo(s[0], s[1], s[0], s[1], u[0], u[1]), r.bezierCurveTo(l[0], l[1], l[0], l[1], a[2][0], a[2][1]);
    } else
      for (var f = 1; f < a.length; f++)
        r.lineTo(a[f][0], a[f][1]);
}
function py(r, e, t) {
  var a = r.getTextGuideLine(), n = r.getTextContent();
  if (!n) {
    a && r.removeTextGuideLine();
    return;
  }
  for (var i = e.normal, o = i.get("show"), s = n.ignore, l = 0; l < Xs.length; l++) {
    var u = Xs[l], f = e[u], h = u === "normal";
    if (f) {
      var c = f.get("show"), v = h ? s : ft(n.states[u] && n.states[u].ignore, s);
      if (v || !ft(c, o)) {
        var d = h ? a : a && a.states[u];
        d && (d.ignore = !0);
        continue;
      }
      a || (a = new Fe(), r.setTextGuideLine(a), !h && (s || !o) && u1(a, !0, "normal", e.normal), r.stateProxy && (a.stateProxy = r.stateProxy)), u1(a, !1, u, f);
    }
  }
  if (a) {
    et(a.style, t), a.style.fill = null;
    var p = i.get("showAbove"), g = r.textGuideLineConfig = r.textGuideLineConfig || {};
    g.showAbove = p || !1, a.buildPath = zB;
  }
}
function gy(r, e) {
  e = e || "labelLine";
  for (var t = {
    normal: r.getModel(e)
  }, a = 0; a < Le.length; a++) {
    var n = Le[a];
    t[n] = r.getModel([n, e]);
  }
  return t;
}
function EA(r) {
  for (var e = [], t = 0; t < r.length; t++) {
    var a = r[t];
    if (!a.defaultAttr.ignore) {
      var n = a.label, i = n.getComputedTransform(), o = n.getBoundingRect(), s = !i || i[1] < 1e-5 && i[2] < 1e-5, l = n.style.margin || 0, u = o.clone();
      u.applyTransform(i), u.x -= l / 2, u.y -= l / 2, u.width += l, u.height += l;
      var f = s ? new mf(o, i) : null;
      e.push({
        label: n,
        labelLine: a.labelLine,
        rect: u,
        localRect: o,
        obb: f,
        priority: a.priority,
        defaultAttr: a.defaultAttr,
        layoutOption: a.computedLayoutOption,
        axisAligned: s,
        transform: i
      });
    }
  }
  return e;
}
function PA(r, e, t, a, n, i) {
  var o = r.length;
  if (o < 2)
    return;
  r.sort(function(T, C) {
    return T.rect[e] - C.rect[e];
  });
  for (var s = 0, l, u = !1, f = 0, h = 0; h < o; h++) {
    var c = r[h], v = c.rect;
    l = v[e] - s, l < 0 && (v[e] -= l, c.label[e] -= l, u = !0);
    var d = Math.max(-l, 0);
    f += d, s = v[e] + v[t];
  }
  f > 0 && i && w(-f / o, 0, o);
  var p = r[0], g = r[o - 1], y, m;
  _(), y < 0 && x(-y, 0.8), m < 0 && x(m, 0.8), _(), S(y, m, 1), S(m, y, -1), _(), y < 0 && b(-y), m < 0 && b(m);
  function _() {
    y = p.rect[e] - a, m = n - g.rect[e] - g.rect[t];
  }
  function S(T, C, D) {
    if (T < 0) {
      var A = Math.min(C, -T);
      if (A > 0) {
        w(A * D, 0, o);
        var I = A + T;
        I < 0 && x(-I * D, 1);
      } else
        x(-T * D, 1);
    }
  }
  function w(T, C, D) {
    T !== 0 && (u = !0);
    for (var A = C; A < D; A++) {
      var I = r[A], L = I.rect;
      L[e] += T, I.label[e] += T;
    }
  }
  function x(T, C) {
    for (var D = [], A = 0, I = 1; I < o; I++) {
      var L = r[I - 1].rect, E = Math.max(r[I].rect[e] - L[e] - L[t], 0);
      D.push(E), A += E;
    }
    if (A) {
      var P = Math.min(Math.abs(T) / A, C);
      if (T > 0)
        for (var I = 0; I < o - 1; I++) {
          var R = D[I] * P;
          w(R, 0, I + 1);
        }
      else
        for (var I = o - 1; I > 0; I--) {
          var R = D[I - 1] * P;
          w(-R, I, o);
        }
    }
  }
  function b(T) {
    var C = T < 0 ? -1 : 1;
    T = Math.abs(T);
    for (var D = Math.ceil(T / (o - 1)), A = 0; A < o - 1; A++)
      if (C > 0 ? w(D, 0, A + 1) : w(-D, o - A - 1, o), T -= D, T <= 0)
        return;
  }
  return u;
}
function GB(r, e, t, a) {
  return PA(r, "x", "width", e, t, a);
}
function RA(r, e, t, a) {
  return PA(r, "y", "height", e, t, a);
}
function NA(r) {
  var e = [];
  r.sort(function(p, g) {
    return g.priority - p.priority;
  });
  var t = new ct(0, 0, 0, 0);
  function a(p) {
    if (!p.ignore) {
      var g = p.ensureState("emphasis");
      g.ignore == null && (g.ignore = !1);
    }
    p.ignore = !0;
  }
  for (var n = 0; n < r.length; n++) {
    var i = r[n], o = i.axisAligned, s = i.localRect, l = i.transform, u = i.label, f = i.labelLine;
    t.copy(i.rect), t.width -= 0.1, t.height -= 0.1, t.x += 0.05, t.y += 0.05;
    for (var h = i.obb, c = !1, v = 0; v < e.length; v++) {
      var d = e[v];
      if (t.intersect(d.rect)) {
        if (o && d.axisAligned) {
          c = !0;
          break;
        }
        if (d.obb || (d.obb = new mf(d.localRect, d.transform)), h || (h = new mf(s, l)), h.intersect(d.obb)) {
          c = !0;
          break;
        }
      }
    }
    c ? (a(u), f && a(f)) : (u.attr("ignore", i.defaultAttr.ignore), f && f.attr("ignore", i.defaultAttr.labelGuideIgnore), e.push(i));
  }
}
function FB(r) {
  if (r) {
    for (var e = [], t = 0; t < r.length; t++)
      e.push(r[t].slice());
    return e;
  }
}
function HB(r, e) {
  var t = r.label, a = e && e.getTextGuideLine();
  return {
    dataIndex: r.dataIndex,
    dataType: r.dataType,
    seriesIndex: r.seriesModel.seriesIndex,
    text: r.label.style.text,
    rect: r.hostRect,
    labelRect: r.rect,
    // x: labelAttr.x,
    // y: labelAttr.y,
    align: t.style.align,
    verticalAlign: t.style.verticalAlign,
    labelLinePoints: FB(a && a.shape.points)
  };
}
var f1 = ["align", "verticalAlign", "width", "height", "fontSize"], be = new oa(), sv = Dt(), WB = Dt();
function du(r, e, t) {
  for (var a = 0; a < t.length; a++) {
    var n = t[a];
    e[n] != null && (r[n] = e[n]);
  }
}
var pu = ["x", "y", "rotation"], $B = (
  /** @class */
  function() {
    function r() {
      this._labelList = [], this._chartViewList = [];
    }
    return r.prototype.clearLabels = function() {
      this._labelList = [], this._chartViewList = [];
    }, r.prototype._addLabel = function(e, t, a, n, i) {
      var o = n.style, s = n.__hostTarget, l = s.textConfig || {}, u = n.getComputedTransform(), f = n.getBoundingRect().plain();
      ct.applyTransform(f, f, u), u ? be.setLocalTransform(u) : (be.x = be.y = be.rotation = be.originX = be.originY = 0, be.scaleX = be.scaleY = 1), be.rotation = xr(be.rotation);
      var h = n.__hostTarget, c;
      if (h) {
        c = h.getBoundingRect().plain();
        var v = h.getComputedTransform();
        ct.applyTransform(c, c, v);
      }
      var d = c && h.getTextGuideLine();
      this._labelList.push({
        label: n,
        labelLine: d,
        seriesModel: a,
        dataIndex: e,
        dataType: t,
        layoutOption: i,
        computedLayoutOption: null,
        rect: f,
        hostRect: c,
        // Label with lower priority will be hidden when overlapped
        // Use rect size as default priority
        priority: c ? c.width * c.height : 0,
        // Save default label attributes.
        // For restore if developers want get back to default value in callback.
        defaultAttr: {
          ignore: n.ignore,
          labelGuideIgnore: d && d.ignore,
          x: be.x,
          y: be.y,
          scaleX: be.scaleX,
          scaleY: be.scaleY,
          rotation: be.rotation,
          style: {
            x: o.x,
            y: o.y,
            align: o.align,
            verticalAlign: o.verticalAlign,
            width: o.width,
            height: o.height,
            fontSize: o.fontSize
          },
          cursor: n.cursor,
          attachedPos: l.position,
          attachedRot: l.rotation
        }
      });
    }, r.prototype.addLabelsOfSeries = function(e) {
      var t = this;
      this._chartViewList.push(e);
      var a = e.__model, n = a.get("labelLayout");
      (K(n) || _t(n).length) && e.group.traverse(function(i) {
        if (i.ignore)
          return !0;
        var o = i.getTextContent(), s = it(i);
        o && !o.disableLabelLayout && t._addLabel(s.dataIndex, s.dataType, a, o, n);
      });
    }, r.prototype.updateLayoutConfig = function(e) {
      var t = e.getWidth(), a = e.getHeight();
      function n(_, S) {
        return function() {
          l1(_, S);
        };
      }
      for (var i = 0; i < this._labelList.length; i++) {
        var o = this._labelList[i], s = o.label, l = s.__hostTarget, u = o.defaultAttr, f = void 0;
        K(o.layoutOption) ? f = o.layoutOption(HB(o, l)) : f = o.layoutOption, f = f || {}, o.computedLayoutOption = f;
        var h = Math.PI / 180;
        l && l.setTextConfig({
          // Force to set local false.
          local: !1,
          // Ignore position and rotation config on the host el if x or y is changed.
          position: f.x != null || f.y != null ? null : u.attachedPos,
          // Ignore rotation config on the host el if rotation is changed.
          rotation: f.rotate != null ? f.rotate * h : u.attachedRot,
          offset: [f.dx || 0, f.dy || 0]
        });
        var c = !1;
        if (f.x != null ? (s.x = H(f.x, t), s.setStyle("x", 0), c = !0) : (s.x = u.x, s.setStyle("x", u.style.x)), f.y != null ? (s.y = H(f.y, a), s.setStyle("y", 0), c = !0) : (s.y = u.y, s.setStyle("y", u.style.y)), f.labelLinePoints) {
          var v = l.getTextGuideLine();
          v && (v.setShape({
            points: f.labelLinePoints
          }), c = !1);
        }
        var d = sv(s);
        d.needsUpdateLabelLine = c, s.rotation = f.rotate != null ? f.rotate * h : u.rotation, s.scaleX = u.scaleX, s.scaleY = u.scaleY;
        for (var p = 0; p < f1.length; p++) {
          var g = f1[p];
          s.setStyle(g, f[g] != null ? f[g] : u.style[g]);
        }
        if (f.draggable) {
          if (s.draggable = !0, s.cursor = "move", l) {
            var y = o.seriesModel;
            if (o.dataIndex != null) {
              var m = o.seriesModel.getData(o.dataType);
              y = m.getItemModel(o.dataIndex);
            }
            s.on("drag", n(l, y.getModel("labelLine")));
          }
        } else
          s.off("drag"), s.cursor = u.cursor;
      }
    }, r.prototype.layout = function(e) {
      var t = e.getWidth(), a = e.getHeight(), n = EA(this._labelList), i = Et(n, function(l) {
        return l.layoutOption.moveOverlap === "shiftX";
      }), o = Et(n, function(l) {
        return l.layoutOption.moveOverlap === "shiftY";
      });
      GB(i, 0, t), RA(o, 0, a);
      var s = Et(n, function(l) {
        return l.layoutOption.hideOverlap;
      });
      NA(s);
    }, r.prototype.processLabelsOverall = function() {
      var e = this;
      M(this._chartViewList, function(t) {
        var a = t.__model, n = t.ignoreLabelLineUpdate, i = a.isAnimationEnabled();
        t.group.traverse(function(o) {
          if (o.ignore && !o.forceLabelAnimation)
            return !0;
          var s = !n, l = o.getTextContent();
          !s && l && (s = sv(l).needsUpdateLabelLine), s && e._updateLabelLine(o, a), i && e._animateLabels(o, a);
        });
      });
    }, r.prototype._updateLabelLine = function(e, t) {
      var a = e.getTextContent(), n = it(e), i = n.dataIndex;
      if (a && i != null) {
        var o = t.getData(n.dataType), s = o.getItemModel(i), l = {}, u = o.getItemVisual(i, "style");
        if (u) {
          var f = o.getVisual("drawType");
          l.stroke = u[f];
        }
        var h = s.getModel("labelLine");
        py(e, gy(s), l), l1(e, h);
      }
    }, r.prototype._animateLabels = function(e, t) {
      var a = e.getTextContent(), n = e.getTextGuideLine();
      if (a && (e.forceLabelAnimation || !a.ignore && !a.invisible && !e.disableLabelAnimation && !oo(e))) {
        var i = sv(a), o = i.oldLayout, s = it(e), l = s.dataIndex, u = {
          x: a.x,
          y: a.y,
          rotation: a.rotation
        }, f = t.getData(s.dataType);
        if (o) {
          a.attr(o);
          var c = e.prevStates;
          c && (vt(c, "select") >= 0 && a.attr(i.oldLayoutSelect), vt(c, "emphasis") >= 0 && a.attr(i.oldLayoutEmphasis)), Mt(a, u, t, l);
        } else if (a.attr(u), !Io(a).valueAnimation) {
          var h = ft(a.style.opacity, 1);
          a.style.opacity = 0, Bt(a, {
            style: {
              opacity: h
            }
          }, t, l);
        }
        if (i.oldLayout = u, a.states.select) {
          var v = i.oldLayoutSelect = {};
          du(v, u, pu), du(v, a.states.select, pu);
        }
        if (a.states.emphasis) {
          var d = i.oldLayoutEmphasis = {};
          du(d, u, pu), du(d, a.states.emphasis, pu);
        }
        wD(a, l, f, t, t);
      }
      if (n && !n.ignore && !n.invisible) {
        var i = WB(n), o = i.oldLayout, p = {
          points: n.shape.points
        };
        o ? (n.attr({
          shape: o
        }), Mt(n, {
          shape: p
        }, t)) : (n.setShape(p), n.style.strokePercent = 0, Bt(n, {
          style: {
            strokePercent: 1
          }
        }, t)), i.oldLayout = p;
      }
    }, r;
  }()
);
const UB = $B;
var lv = Dt();
function YB(r) {
  r.registerUpdateLifecycle("series:beforeupdate", function(e, t, a) {
    var n = lv(t).labelManager;
    n || (n = lv(t).labelManager = new UB()), n.clearLabels();
  }), r.registerUpdateLifecycle("series:layoutlabels", function(e, t, a) {
    var n = lv(t).labelManager;
    a.updatedSeries.forEach(function(i) {
      n.addLabelsOfSeries(t.getViewOfSeriesModel(i));
    }), n.updateLayoutConfig(t), n.layout(t), n.processLabelsOverall();
  });
}
var uv = Math.sin, fv = Math.cos, OA = Math.PI, Pn = Math.PI * 2, ZB = 180 / OA, XB = function() {
  function r() {
  }
  return r.prototype.reset = function(e) {
    this._start = !0, this._d = [], this._str = "", this._p = Math.pow(10, e || 4);
  }, r.prototype.moveTo = function(e, t) {
    this._add("M", e, t);
  }, r.prototype.lineTo = function(e, t) {
    this._add("L", e, t);
  }, r.prototype.bezierCurveTo = function(e, t, a, n, i, o) {
    this._add("C", e, t, a, n, i, o);
  }, r.prototype.quadraticCurveTo = function(e, t, a, n) {
    this._add("Q", e, t, a, n);
  }, r.prototype.arc = function(e, t, a, n, i, o) {
    this.ellipse(e, t, a, a, 0, n, i, o);
  }, r.prototype.ellipse = function(e, t, a, n, i, o, s, l) {
    var u = s - o, f = !l, h = Math.abs(u), c = $a(h - Pn) || (f ? u >= Pn : -u >= Pn), v = u > 0 ? u % Pn : u % Pn + Pn, d = !1;
    c ? d = !0 : $a(h) ? d = !1 : d = v >= OA == !!f;
    var p = e + a * fv(o), g = t + n * uv(o);
    this._start && this._add("M", p, g);
    var y = Math.round(i * ZB);
    if (c) {
      var m = 1 / this._p, _ = (f ? 1 : -1) * (Pn - m);
      this._add("A", a, n, y, 1, +f, e + a * fv(o + _), t + n * uv(o + _)), m > 0.01 && this._add("A", a, n, y, 0, +f, p, g);
    } else {
      var S = e + a * fv(s), w = t + n * uv(s);
      this._add("A", a, n, y, +d, +f, S, w);
    }
  }, r.prototype.rect = function(e, t, a, n) {
    this._add("M", e, t), this._add("l", a, 0), this._add("l", 0, n), this._add("l", -a, 0), this._add("Z");
  }, r.prototype.closePath = function() {
    this._d.length > 0 && this._add("Z");
  }, r.prototype._add = function(e, t, a, n, i, o, s, l, u) {
    for (var f = [], h = this._p, c = 1; c < arguments.length; c++) {
      var v = arguments[c];
      if (isNaN(v)) {
        this._invalid = !0;
        return;
      }
      f.push(Math.round(v * h) / h);
    }
    this._d.push(e + f.join(" ")), this._start = e === "Z";
  }, r.prototype.generateStr = function() {
    this._str = this._invalid ? "" : this._d.join(""), this._d = [];
  }, r.prototype.getStr = function() {
    return this._str;
  }, r;
}();
const kA = XB;
var Fs = "none", qB = Math.round;
function KB(r) {
  var e = r.fill;
  return e != null && e !== Fs;
}
function jB(r) {
  var e = r.stroke;
  return e != null && e !== Fs;
}
var bp = ["lineCap", "miterLimit", "lineJoin"], JB = G(bp, function(r) {
  return "stroke-" + r.toLowerCase();
});
function QB(r, e, t, a) {
  var n = e.opacity == null ? 1 : e.opacity;
  if (t instanceof ge) {
    r("opacity", n);
    return;
  }
  if (KB(e)) {
    var i = Ys(e.fill);
    r("fill", i.color);
    var o = e.fillOpacity != null ? e.fillOpacity * i.opacity * n : i.opacity * n;
    (a || o < 1) && r("fill-opacity", o);
  } else
    r("fill", Fs);
  if (jB(e)) {
    var s = Ys(e.stroke);
    r("stroke", s.color);
    var l = e.strokeNoScale ? t.getLineScale() : 1, u = l ? (e.lineWidth || 0) / l : 0, f = e.strokeOpacity != null ? e.strokeOpacity * s.opacity * n : s.opacity * n, h = e.strokeFirst;
    if ((a || u !== 1) && r("stroke-width", u), (a || h) && r("paint-order", h ? "stroke" : "fill"), (a || f < 1) && r("stroke-opacity", f), e.lineDash) {
      var c = ay(t), v = c[0], d = c[1];
      v && (d = qB(d || 0), r("stroke-dasharray", v.join(",")), (d || a) && r("stroke-dashoffset", d));
    } else
      a && r("stroke-dasharray", Fs);
    for (var p = 0; p < bp.length; p++) {
      var g = bp[p];
      if (a || e[g] !== gf[g]) {
        var y = e[g] || gf[g];
        y && r(JB[p], y);
      }
    }
  } else
    a && r("stroke", Fs);
}
var VA = "http://www.w3.org/2000/svg", BA = "http://www.w3.org/1999/xlink", tz = "http://www.w3.org/2000/xmlns/", ez = "http://www.w3.org/XML/1998/namespace";
function zA(r) {
  return document.createElementNS(VA, r);
}
function ie(r, e, t, a, n) {
  return {
    tag: r,
    attrs: t || {},
    children: a,
    text: n,
    key: e
  };
}
function rz(r, e) {
  var t = [];
  if (e)
    for (var a in e) {
      var n = e[a], i = a;
      n !== !1 && (n !== !0 && n != null && (i += '="' + n + '"'), t.push(i));
    }
  return "<" + r + " " + t.join(" ") + ">";
}
function az(r) {
  return "</" + r + ">";
}
function yy(r, e) {
  e = e || {};
  var t = e.newline ? "\n" : "";
  function a(n) {
    var i = n.children, o = n.tag, s = n.attrs, l = n.text;
    return rz(o, s) + (o !== "style" ? Ne(l) : l || "") + (i ? "" + t + G(i, function(u) {
      return a(u);
    }).join(t) + t : "") + az(o);
  }
  return a(r);
}
function nz(r, e, t) {
  t = t || {};
  var a = t.newline ? "\n" : "", n = " {" + a, i = a + "}", o = G(_t(r), function(l) {
    return l + n + G(_t(r[l]), function(u) {
      return u + ":" + r[l][u] + ";";
    }).join(a) + i;
  }).join(a), s = G(_t(e), function(l) {
    return "@keyframes " + l + n + G(_t(e[l]), function(u) {
      return u + n + G(_t(e[l][u]), function(f) {
        var h = e[l][u][f];
        return f === "d" && (h = 'path("' + h + '")'), f + ":" + h + ";";
      }).join(a) + i;
    }).join(a) + i;
  }).join(a);
  return !o && !s ? "" : ["<![CDATA[", o, s, "]]>"].join(a);
}
function Tp(r) {
  return {
    zrId: r,
    shadowCache: {},
    patternCache: {},
    gradientCache: {},
    clipPathCache: {},
    defs: {},
    cssNodes: {},
    cssAnims: {},
    cssClassIdx: 0,
    cssAnimIdx: 0,
    shadowIdx: 0,
    gradientIdx: 0,
    patternIdx: 0,
    clipPathIdx: 0
  };
}
function h1(r, e, t, a) {
  return ie("svg", "root", {
    width: r,
    height: e,
    xmlns: VA,
    "xmlns:xlink": BA,
    version: "1.1",
    baseProfile: "full",
    viewBox: a ? "0 0 " + r + " " + e : !1
  }, t);
}
var c1 = {
  cubicIn: "0.32,0,0.67,0",
  cubicOut: "0.33,1,0.68,1",
  cubicInOut: "0.65,0,0.35,1",
  quadraticIn: "0.11,0,0.5,0",
  quadraticOut: "0.5,1,0.89,1",
  quadraticInOut: "0.45,0,0.55,1",
  quarticIn: "0.5,0,0.75,0",
  quarticOut: "0.25,1,0.5,1",
  quarticInOut: "0.76,0,0.24,1",
  quinticIn: "0.64,0,0.78,0",
  quinticOut: "0.22,1,0.36,1",
  quinticInOut: "0.83,0,0.17,1",
  sinusoidalIn: "0.12,0,0.39,0",
  sinusoidalOut: "0.61,1,0.88,1",
  sinusoidalInOut: "0.37,0,0.63,1",
  exponentialIn: "0.7,0,0.84,0",
  exponentialOut: "0.16,1,0.3,1",
  exponentialInOut: "0.87,0,0.13,1",
  circularIn: "0.55,0,1,0.45",
  circularOut: "0,0.55,0.45,1",
  circularInOut: "0.85,0,0.15,1"
}, kn = "transform-origin";
function iz(r, e, t) {
  var a = V({}, r.shape);
  V(a, e), r.buildPath(t, a);
  var n = new kA();
  return n.reset(rT(r)), t.rebuildPath(n, 1), n.generateStr(), n.getStr();
}
function oz(r, e) {
  var t = e.originX, a = e.originY;
  (t || a) && (r[kn] = t + "px " + a + "px");
}
var sz = {
  fill: "fill",
  opacity: "opacity",
  lineWidth: "stroke-width",
  lineDashOffset: "stroke-dashoffset"
};
function GA(r, e) {
  var t = e.zrId + "-ani-" + e.cssAnimIdx++;
  return e.cssAnims[t] = r, t;
}
function lz(r, e, t) {
  var a = r.shape.paths, n = {}, i, o;
  if (M(a, function(l) {
    var u = Tp(t.zrId);
    u.animation = !0, zh(l, {}, u, !0);
    var f = u.cssAnims, h = u.cssNodes, c = _t(f), v = c.length;
    if (v) {
      o = c[v - 1];
      var d = f[o];
      for (var p in d) {
        var g = d[p];
        n[p] = n[p] || { d: "" }, n[p].d += g.d || "";
      }
      for (var y in h) {
        var m = h[y].animation;
        m.indexOf(o) >= 0 && (i = m);
      }
    }
  }), !!i) {
    e.d = !1;
    var s = GA(n, t);
    return i.replace(o, s);
  }
}
function v1(r) {
  return $(r) ? c1[r] ? "cubic-bezier(" + c1[r] + ")" : _g(r) ? r : "" : "";
}
function zh(r, e, t, a) {
  var n = r.animators, i = n.length, o = [];
  if (r instanceof kg) {
    var s = lz(r, e, t);
    if (s)
      o.push(s);
    else if (!i)
      return;
  } else if (!i)
    return;
  for (var l = {}, u = 0; u < i; u++) {
    var f = n[u], h = [f.getMaxTime() / 1e3 + "s"], c = v1(f.getClip().easing), v = f.getDelay();
    c ? h.push(c) : h.push("linear"), v && h.push(v / 1e3 + "s"), f.getLoop() && h.push("infinite");
    var d = h.join(" ");
    l[d] = l[d] || [d, []], l[d][1].push(f);
  }
  function p(m) {
    var _ = m[1], S = _.length, w = {}, x = {}, b = {}, T = "animation-timing-function";
    function C(rt, gt, st) {
      for (var q = rt.getTracks(), lt = rt.getMaxTime(), zt = 0; zt < q.length; zt++) {
        var wt = q[zt];
        if (wt.needsAnimate()) {
          var Ut = wt.keyframes, Ht = wt.propName;
          if (st && (Ht = st(Ht)), Ht)
            for (var ye = 0; ye < Ut.length; ye++) {
              var ta = Ut[ye], Ee = Math.round(ta.time / lt * 100) + "%", Ol = v1(ta.easing), Ta = ta.rawValue;
              ($(Ta) || At(Ta)) && (gt[Ee] = gt[Ee] || {}, gt[Ee][Ht] = ta.rawValue, Ol && (gt[Ee][T] = Ol));
            }
        }
      }
    }
    for (var D = 0; D < S; D++) {
      var A = _[D], I = A.targetName;
      I ? I === "shape" && C(A, x) : !a && C(A, w);
    }
    for (var L in w) {
      var E = {};
      sT(E, r), V(E, w[L]);
      var P = aT(E), R = w[L][T];
      b[L] = P ? {
        transform: P
      } : {}, oz(b[L], E), R && (b[L][T] = R);
    }
    var k, O = !0;
    for (var L in x) {
      b[L] = b[L] || {};
      var B = !k, R = x[L][T];
      B && (k = new Kr());
      var F = k.len();
      k.reset(), b[L].d = iz(r, x[L], k);
      var W = k.len();
      if (!B && F !== W) {
        O = !1;
        break;
      }
      R && (b[L][T] = R);
    }
    if (!O)
      for (var L in b)
        delete b[L].d;
    if (!a)
      for (var D = 0; D < S; D++) {
        var A = _[D], I = A.targetName;
        I === "style" && C(A, b, function(q) {
          return sz[q];
        });
      }
    for (var Z = _t(b), Q = !0, tt, D = 1; D < Z.length; D++) {
      var dt = Z[D - 1], St = Z[D];
      if (b[dt][kn] !== b[St][kn]) {
        Q = !1;
        break;
      }
      tt = b[dt][kn];
    }
    if (Q && tt) {
      for (var L in b)
        b[L][kn] && delete b[L][kn];
      e[kn] = tt;
    }
    if (Et(Z, function(rt) {
      return _t(b[rt]).length > 0;
    }).length) {
      var pt = GA(b, t);
      return pt + " " + m[0] + " both";
    }
  }
  for (var g in l) {
    var s = p(l[g]);
    s && o.push(s);
  }
  if (o.length) {
    var y = t.zrId + "-cls-" + t.cssClassIdx++;
    t.cssNodes["." + y] = {
      animation: o.join(",")
    }, e.class = y;
  }
}
var nl = Math.round;
function FA(r) {
  return r && $(r.src);
}
function HA(r) {
  return r && K(r.toDataURL);
}
function my(r, e, t, a) {
  QB(function(n, i) {
    var o = n === "fill" || n === "stroke";
    o && eT(i) ? $A(e, r, n, a) : o && Sg(i) ? UA(t, r, n, a) : r[n] = i;
  }, e, t, !1), pz(t, r, a);
}
function d1(r) {
  return $a(r[0] - 1) && $a(r[1]) && $a(r[2]) && $a(r[3] - 1);
}
function uz(r) {
  return $a(r[4]) && $a(r[5]);
}
function _y(r, e, t) {
  if (e && !(uz(e) && d1(e))) {
    var a = t ? 10 : 1e4;
    r.transform = d1(e) ? "translate(" + nl(e[4] * a) / a + " " + nl(e[5] * a) / a + ")" : eE(e);
  }
}
function p1(r, e, t) {
  for (var a = r.points, n = [], i = 0; i < a.length; i++)
    n.push(nl(a[i][0] * t) / t), n.push(nl(a[i][1] * t) / t);
  e.points = n.join(" ");
}
function g1(r) {
  return !r.smooth;
}
function fz(r) {
  var e = G(r, function(t) {
    return typeof t == "string" ? [t, t] : t;
  });
  return function(t, a, n) {
    for (var i = 0; i < e.length; i++) {
      var o = e[i], s = t[o[0]];
      s != null && (a[o[1]] = nl(s * n) / n);
    }
  };
}
var hz = {
  circle: [fz(["cx", "cy", "r"])],
  polyline: [p1, g1],
  polygon: [p1, g1]
};
function cz(r) {
  for (var e = r.animators, t = 0; t < e.length; t++)
    if (e[t].targetName === "shape")
      return !0;
  return !1;
}
function WA(r, e) {
  var t = r.style, a = r.shape, n = hz[r.type], i = {}, o = e.animation, s = "path", l = r.style.strokePercent, u = e.compress && rT(r) || 4;
  if (n && !e.willUpdate && !(n[1] && !n[1](a)) && !(o && cz(r)) && !(l < 1)) {
    s = r.type;
    var f = Math.pow(10, u);
    n[0](a, i, f);
  } else {
    var h = !r.path || r.shapeChanged();
    r.path || r.createPathProxy();
    var c = r.path;
    h && (c.beginPath(), r.buildPath(c, r.shape), r.pathUpdated());
    var v = c.getVersion(), d = r, p = d.__svgPathBuilder;
    (d.__svgPathVersion !== v || !p || l !== d.__svgPathStrokePercent) && (p || (p = d.__svgPathBuilder = new kA()), p.reset(u), c.rebuildPath(p, l), p.generateStr(), d.__svgPathVersion = v, d.__svgPathStrokePercent = l), i.d = p.getStr();
  }
  return _y(i, r.transform), my(i, t, r, e), e.animation && zh(r, i, e), ie(s, r.id + "", i);
}
function vz(r, e) {
  var t = r.style, a = t.image;
  if (a && !$(a) && (FA(a) ? a = a.src : HA(a) && (a = a.toDataURL())), !!a) {
    var n = t.x || 0, i = t.y || 0, o = t.width, s = t.height, l = {
      href: a,
      width: o,
      height: s
    };
    return n && (l.x = n), i && (l.y = i), _y(l, r.transform), my(l, t, r, e), e.animation && zh(r, l, e), ie("image", r.id + "", l);
  }
}
function dz(r, e) {
  var t = r.style, a = t.text;
  if (a != null && (a += ""), !(!a || isNaN(t.x) || isNaN(t.y))) {
    var n = t.font || ja, i = t.x || 0, o = aE(t.y || 0, hh(n), t.textBaseline), s = rE[t.textAlign] || t.textAlign, l = {
      "dominant-baseline": "central",
      "text-anchor": s
    };
    if (zT(t)) {
      var u = "", f = t.fontStyle, h = BT(t.fontSize);
      if (!parseFloat(h))
        return;
      var c = t.fontFamily || Ib, v = t.fontWeight;
      u += "font-size:" + h + ";font-family:" + c + ";", f && f !== "normal" && (u += "font-style:" + f + ";"), v && v !== "normal" && (u += "font-weight:" + v + ";"), l.style = u;
    } else
      l.style = "font: " + n;
    return a.match(/\s/) && (l["xml:space"] = "preserve"), i && (l.x = i), o && (l.y = o), _y(l, r.transform), my(l, t, r, e), e.animation && zh(r, l, e), ie("text", r.id + "", l, void 0, a);
  }
}
function y1(r, e) {
  if (r instanceof mt)
    return WA(r, e);
  if (r instanceof ge)
    return vz(r, e);
  if (r instanceof Zs)
    return dz(r, e);
}
function pz(r, e, t) {
  var a = r.style;
  if (nE(a)) {
    var n = iE(r), i = t.shadowCache, o = i[n];
    if (!o) {
      var s = r.getGlobalScale(), l = s[0], u = s[1];
      if (!l || !u)
        return;
      var f = a.shadowOffsetX || 0, h = a.shadowOffsetY || 0, c = a.shadowBlur, v = Ys(a.shadowColor), d = v.opacity, p = v.color, g = c / 2 / l, y = c / 2 / u, m = g + " " + y;
      o = t.zrId + "-s" + t.shadowIdx++, t.defs[o] = ie("filter", o, {
        id: o,
        x: "-100%",
        y: "-100%",
        width: "300%",
        height: "300%"
      }, [
        ie("feDropShadow", "", {
          dx: f / l,
          dy: h / u,
          stdDeviation: m,
          "flood-color": p,
          "flood-opacity": d
        })
      ]), i[n] = o;
    }
    e.filter = fh(o);
  }
}
function $A(r, e, t, a) {
  var n = r[t], i, o = {
    gradientUnits: n.global ? "userSpaceOnUse" : "objectBoundingBox"
  };
  if (Qb(n))
    i = "linearGradient", o.x1 = n.x, o.y1 = n.y, o.x2 = n.x2, o.y2 = n.y2;
  else if (tT(n))
    i = "radialGradient", o.cx = ft(n.x, 0.5), o.cy = ft(n.y, 0.5), o.r = ft(n.r, 0.5);
  else {
    ({}).NODE_ENV !== "production" && br("Illegal gradient type.");
    return;
  }
  for (var s = n.colorStops, l = [], u = 0, f = s.length; u < f; ++u) {
    var h = kd(s[u].offset) * 100 + "%", c = s[u].color, v = Ys(c), d = v.color, p = v.opacity, g = {
      offset: h
    };
    g["stop-color"] = d, p < 1 && (g["stop-opacity"] = p), l.push(ie("stop", u + "", g));
  }
  var y = ie(i, "", o, l), m = yy(y), _ = a.gradientCache, S = _[m];
  S || (S = a.zrId + "-g" + a.gradientIdx++, _[m] = S, o.id = S, a.defs[S] = ie(i, S, o, l)), e[t] = fh(S);
}
function UA(r, e, t, a) {
  var n = r.style[t], i = r.getBoundingRect(), o = {}, s = n.repeat, l = s === "no-repeat", u = s === "repeat-x", f = s === "repeat-y", h;
  if (Jb(n)) {
    var c = n.imageWidth, v = n.imageHeight, d = void 0, p = n.image;
    if ($(p) ? d = p : FA(p) ? d = p.src : HA(p) && (d = p.toDataURL()), typeof Image > "u") {
      var g = "Image width/height must been given explictly in svg-ssr renderer.";
      J(c, g), J(v, g);
    } else if (c == null || v == null) {
      var y = function(D, A) {
        if (D) {
          var I = D.elm, L = c || A.width, E = v || A.height;
          D.tag === "pattern" && (u ? (E = 1, L /= i.width) : f && (L = 1, E /= i.height)), D.attrs.width = L, D.attrs.height = E, I && (I.setAttribute("width", L), I.setAttribute("height", E));
        }
      }, m = Ag(d, null, r, function(D) {
        l || y(x, D), y(h, D);
      });
      m && m.width && m.height && (c = c || m.width, v = v || m.height);
    }
    h = ie("image", "img", {
      href: d,
      width: c,
      height: v
    }), o.width = c, o.height = v;
  } else
    n.svgElement && (h = at(n.svgElement), o.width = n.svgWidth, o.height = n.svgHeight);
  if (h) {
    var _, S;
    l ? _ = S = 1 : u ? (S = 1, _ = o.width / i.width) : f ? (_ = 1, S = o.height / i.height) : o.patternUnits = "userSpaceOnUse", _ != null && !isNaN(_) && (o.width = _), S != null && !isNaN(S) && (o.height = S);
    var w = aT(n);
    w && (o.patternTransform = w);
    var x = ie("pattern", "", o, [h]), b = yy(x), T = a.patternCache, C = T[b];
    C || (C = a.zrId + "-p" + a.patternIdx++, T[b] = C, o.id = C, x = a.defs[C] = ie("pattern", C, o, [h])), e[t] = fh(C);
  }
}
function gz(r, e, t) {
  var a = t.clipPathCache, n = t.defs, i = a[r.id];
  if (!i) {
    i = t.zrId + "-c" + t.clipPathIdx++;
    var o = {
      id: i
    };
    a[r.id] = i, n[i] = ie("clipPath", i, o, [WA(r, t)]);
  }
  e["clip-path"] = fh(i);
}
function m1(r) {
  return document.createTextNode(r);
}
function Wn(r, e, t) {
  r.insertBefore(e, t);
}
function _1(r, e) {
  r.removeChild(e);
}
function S1(r, e) {
  r.appendChild(e);
}
function YA(r) {
  return r.parentNode;
}
function ZA(r) {
  return r.nextSibling;
}
function hv(r, e) {
  r.textContent = e;
}
var x1 = 58, yz = 120, mz = ie("", "");
function Dp(r) {
  return r === void 0;
}
function Br(r) {
  return r !== void 0;
}
function _z(r, e, t) {
  for (var a = {}, n = e; n <= t; ++n) {
    var i = r[n].key;
    i !== void 0 && ({}.NODE_ENV !== "production" && a[i] != null && console.error("Duplicate key " + i), a[i] = n);
  }
  return a;
}
function bs(r, e) {
  var t = r.key === e.key, a = r.tag === e.tag;
  return a && t;
}
function il(r) {
  var e, t = r.children, a = r.tag;
  if (Br(a)) {
    var n = r.elm = zA(a);
    if (Sy(mz, r), z(t))
      for (e = 0; e < t.length; ++e) {
        var i = t[e];
        i != null && S1(n, il(i));
      }
    else
      Br(r.text) && !j(r.text) && S1(n, m1(r.text));
  } else
    r.elm = m1(r.text);
  return r.elm;
}
function XA(r, e, t, a, n) {
  for (; a <= n; ++a) {
    var i = t[a];
    i != null && Wn(r, il(i), e);
  }
}
function Vf(r, e, t, a) {
  for (; t <= a; ++t) {
    var n = e[t];
    if (n != null)
      if (Br(n.tag)) {
        var i = YA(n.elm);
        _1(i, n.elm);
      } else
        _1(r, n.elm);
  }
}
function Sy(r, e) {
  var t, a = e.elm, n = r && r.attrs || {}, i = e.attrs || {};
  if (n !== i) {
    for (t in i) {
      var o = i[t], s = n[t];
      s !== o && (o === !0 ? a.setAttribute(t, "") : o === !1 ? a.removeAttribute(t) : t.charCodeAt(0) !== yz ? a.setAttribute(t, o) : t === "xmlns:xlink" || t === "xmlns" ? a.setAttributeNS(tz, t, o) : t.charCodeAt(3) === x1 ? a.setAttributeNS(ez, t, o) : t.charCodeAt(5) === x1 ? a.setAttributeNS(BA, t, o) : a.setAttribute(t, o));
    }
    for (t in n)
      t in i || a.removeAttribute(t);
  }
}
function Sz(r, e, t) {
  for (var a = 0, n = 0, i = e.length - 1, o = e[0], s = e[i], l = t.length - 1, u = t[0], f = t[l], h, c, v, d; a <= i && n <= l; )
    o == null ? o = e[++a] : s == null ? s = e[--i] : u == null ? u = t[++n] : f == null ? f = t[--l] : bs(o, u) ? (Ji(o, u), o = e[++a], u = t[++n]) : bs(s, f) ? (Ji(s, f), s = e[--i], f = t[--l]) : bs(o, f) ? (Ji(o, f), Wn(r, o.elm, ZA(s.elm)), o = e[++a], f = t[--l]) : bs(s, u) ? (Ji(s, u), Wn(r, s.elm, o.elm), s = e[--i], u = t[++n]) : (Dp(h) && (h = _z(e, a, i)), c = h[u.key], Dp(c) ? Wn(r, il(u), o.elm) : (v = e[c], v.tag !== u.tag ? Wn(r, il(u), o.elm) : (Ji(v, u), e[c] = void 0, Wn(r, v.elm, o.elm))), u = t[++n]);
  (a <= i || n <= l) && (a > i ? (d = t[l + 1] == null ? null : t[l + 1].elm, XA(r, d, t, n, l)) : Vf(r, e, a, i));
}
function Ji(r, e) {
  var t = e.elm = r.elm, a = r.children, n = e.children;
  r !== e && (Sy(r, e), Dp(e.text) ? Br(a) && Br(n) ? a !== n && Sz(t, a, n) : Br(n) ? (Br(r.text) && hv(t, ""), XA(t, null, n, 0, n.length - 1)) : Br(a) ? Vf(t, a, 0, a.length - 1) : Br(r.text) && hv(t, "") : r.text !== e.text && (Br(a) && Vf(t, a, 0, a.length - 1), hv(t, e.text)));
}
function xz(r, e) {
  if (bs(r, e))
    Ji(r, e);
  else {
    var t = r.elm, a = YA(t);
    il(e), a !== null && (Wn(a, e.elm, ZA(t)), Vf(a, [r], 0, 0));
  }
  return e;
}
var wz = 0, bz = function() {
  function r(e, t, a) {
    if (this.type = "svg", this.refreshHover = w1("refreshHover"), this.configLayer = w1("configLayer"), this.storage = t, this._opts = a = V({}, a), this.root = e, this._id = "zr" + wz++, this._oldVNode = h1(a.width, a.height), e && !a.ssr) {
      var n = this._viewport = document.createElement("div");
      n.style.cssText = "position:relative;overflow:hidden";
      var i = this._svgDom = this._oldVNode.elm = zA("svg");
      Sy(null, this._oldVNode), n.appendChild(i), e.appendChild(n);
    }
    this.resize(a.width, a.height);
  }
  return r.prototype.getType = function() {
    return this.type;
  }, r.prototype.getViewportRoot = function() {
    return this._viewport;
  }, r.prototype.getViewportRootOffset = function() {
    var e = this.getViewportRoot();
    if (e)
      return {
        offsetLeft: e.offsetLeft || 0,
        offsetTop: e.offsetTop || 0
      };
  }, r.prototype.getSvgDom = function() {
    return this._svgDom;
  }, r.prototype.refresh = function() {
    if (this.root) {
      var e = this.renderToVNode({
        willUpdate: !0
      });
      e.attrs.style = "position:absolute;left:0;top:0;user-select:none", xz(this._oldVNode, e), this._oldVNode = e;
    }
  }, r.prototype.renderOneToVNode = function(e) {
    return y1(e, Tp(this._id));
  }, r.prototype.renderToVNode = function(e) {
    e = e || {};
    var t = this.storage.getDisplayList(!0), a = this._width, n = this._height, i = Tp(this._id);
    i.animation = e.animation, i.willUpdate = e.willUpdate, i.compress = e.compress;
    var o = [], s = this._bgVNode = Tz(a, n, this._backgroundColor, i);
    s && o.push(s);
    var l = e.compress ? null : this._mainVNode = ie("g", "main", {}, []);
    this._paintList(t, i, l ? l.children : o), l && o.push(l);
    var u = G(_t(i.defs), function(c) {
      return i.defs[c];
    });
    if (u.length && o.push(ie("defs", "defs", {}, u)), e.animation) {
      var f = nz(i.cssNodes, i.cssAnims, { newline: !0 });
      if (f) {
        var h = ie("style", "stl", {}, [], f);
        o.push(h);
      }
    }
    return h1(a, n, o, e.useViewBox);
  }, r.prototype.renderToString = function(e) {
    return e = e || {}, yy(this.renderToVNode({
      animation: ft(e.cssAnimation, !0),
      willUpdate: !1,
      compress: !0,
      useViewBox: ft(e.useViewBox, !0)
    }), { newline: !0 });
  }, r.prototype.setBackgroundColor = function(e) {
    this._backgroundColor = e;
  }, r.prototype.getSvgRoot = function() {
    return this._mainVNode && this._mainVNode.elm;
  }, r.prototype._paintList = function(e, t, a) {
    for (var n = e.length, i = [], o = 0, s, l, u = 0, f = 0; f < n; f++) {
      var h = e[f];
      if (!h.invisible) {
        var c = h.__clipPaths, v = c && c.length || 0, d = l && l.length || 0, p = void 0;
        for (p = Math.max(v - 1, d - 1); p >= 0 && !(c && l && c[p] === l[p]); p--)
          ;
        for (var g = d - 1; g > p; g--)
          o--, s = i[o - 1];
        for (var y = p + 1; y < v; y++) {
          var m = {};
          gz(c[y], m, t);
          var _ = ie("g", "clip-g-" + u++, m, []);
          (s ? s.children : a).push(_), i[o++] = _, s = _;
        }
        l = c;
        var S = y1(h, t);
        S && (s ? s.children : a).push(S);
      }
    }
  }, r.prototype.resize = function(e, t) {
    var a = this._opts, n = this.root, i = this._viewport;
    if (e != null && (a.width = e), t != null && (a.height = t), n && i && (i.style.display = "none", e = ao(n, 0, a), t = ao(n, 1, a), i.style.display = ""), this._width !== e || this._height !== t) {
      if (this._width = e, this._height = t, i) {
        var o = i.style;
        o.width = e + "px", o.height = t + "px";
      }
      if (Sg(this._backgroundColor))
        this.refresh();
      else {
        var s = this._svgDom;
        s && (s.setAttribute("width", e), s.setAttribute("height", t));
        var l = this._bgVNode && this._bgVNode.elm;
        l && (l.setAttribute("width", e), l.setAttribute("height", t));
      }
    }
  }, r.prototype.getWidth = function() {
    return this._width;
  }, r.prototype.getHeight = function() {
    return this._height;
  }, r.prototype.dispose = function() {
    this.root && (this.root.innerHTML = ""), this._svgDom = this._viewport = this.storage = this._oldVNode = this._bgVNode = this._mainVNode = null;
  }, r.prototype.clear = function() {
    this._svgDom && (this._svgDom.innerHTML = null), this._oldVNode = null;
  }, r.prototype.toDataURL = function(e) {
    var t = this.renderToString(), a = "data:image/svg+xml;";
    return e ? (t = sE(t), t && a + "base64," + t) : a + "charset=UTF-8," + encodeURIComponent(t);
  }, r;
}();
function w1(r) {
  return function() {
    ({}).NODE_ENV !== "production" && br('In SVG mode painter not support method "' + r + '"');
  };
}
function Tz(r, e, t, a) {
  var n;
  if (t && t !== "none")
    if (n = ie("rect", "bg", {
      width: r,
      height: e,
      x: "0",
      y: "0",
      id: "0"
    }), eT(t))
      $A({ fill: t }, n.attrs, "fill", a);
    else if (Sg(t))
      UA({
        style: {
          fill: t
        },
        dirty: Xt,
        getBoundingRect: function() {
          return { width: r, height: e };
        }
      }, n.attrs, "fill", a);
    else {
      var i = Ys(t), o = i.color, s = i.opacity;
      n.attrs.fill = o, s < 1 && (n.attrs["fill-opacity"] = s);
    }
  return n;
}
const Dz = bz;
function Cz(r) {
  r.registerPainter("svg", Dz);
}
function b1(r, e, t) {
  var a = Ja.createCanvas(), n = e.getWidth(), i = e.getHeight(), o = a.style;
  return o && (o.position = "absolute", o.left = "0", o.top = "0", o.width = n + "px", o.height = i + "px", a.setAttribute("data-zr-dom-id", r)), a.width = n * t, a.height = i * t, a;
}
var Az = function(r) {
  N(e, r);
  function e(t, a, n) {
    var i = r.call(this) || this;
    i.motionBlur = !1, i.lastFrameAlpha = 0.7, i.dpr = 1, i.virtual = !1, i.config = {}, i.incremental = !1, i.zlevel = 0, i.maxRepaintRectCount = 5, i.__dirty = !0, i.__firstTimePaint = !0, i.__used = !1, i.__drawIndex = 0, i.__startIndex = 0, i.__endIndex = 0, i.__prevStartIndex = null, i.__prevEndIndex = null;
    var o;
    n = n || vf, typeof t == "string" ? o = b1(t, a, n) : j(t) && (o = t, t = o.id), i.id = t, i.dom = o;
    var s = o.style;
    return s && (kb(o), o.onselectstart = function() {
      return !1;
    }, s.padding = "0", s.margin = "0", s.borderWidth = "0"), i.painter = a, i.dpr = n, i;
  }
  return e.prototype.getElementCount = function() {
    return this.__endIndex - this.__startIndex;
  }, e.prototype.afterBrush = function() {
    this.__prevStartIndex = this.__startIndex, this.__prevEndIndex = this.__endIndex;
  }, e.prototype.initContext = function() {
    this.ctx = this.dom.getContext("2d"), this.ctx.dpr = this.dpr;
  }, e.prototype.setUnpainted = function() {
    this.__firstTimePaint = !0;
  }, e.prototype.createBackBuffer = function() {
    var t = this.dpr;
    this.domBack = b1("back-" + this.id, this.painter, t), this.ctxBack = this.domBack.getContext("2d"), t !== 1 && this.ctxBack.scale(t, t);
  }, e.prototype.createRepaintRects = function(t, a, n, i) {
    if (this.__firstTimePaint)
      return this.__firstTimePaint = !1, null;
    var o = [], s = this.maxRepaintRectCount, l = !1, u = new ct(0, 0, 0, 0);
    function f(m) {
      if (!(!m.isFinite() || m.isZero()))
        if (o.length === 0) {
          var _ = new ct(0, 0, 0, 0);
          _.copy(m), o.push(_);
        } else {
          for (var S = !1, w = 1 / 0, x = 0, b = 0; b < o.length; ++b) {
            var T = o[b];
            if (T.intersect(m)) {
              var C = new ct(0, 0, 0, 0);
              C.copy(T), C.union(m), o[b] = C, S = !0;
              break;
            } else if (l) {
              u.copy(m), u.union(T);
              var D = m.width * m.height, A = T.width * T.height, I = u.width * u.height, L = I - D - A;
              L < w && (w = L, x = b);
            }
          }
          if (l && (o[x].union(m), S = !0), !S) {
            var _ = new ct(0, 0, 0, 0);
            _.copy(m), o.push(_);
          }
          l || (l = o.length >= s);
        }
    }
    for (var h = this.__startIndex; h < this.__endIndex; ++h) {
      var c = t[h];
      if (c) {
        var v = c.shouldBePainted(n, i, !0, !0), d = c.__isRendered && (c.__dirty & $e || !v) ? c.getPrevPaintRect() : null;
        d && f(d);
        var p = v && (c.__dirty & $e || !c.__isRendered) ? c.getPaintRect() : null;
        p && f(p);
      }
    }
    for (var h = this.__prevStartIndex; h < this.__prevEndIndex; ++h) {
      var c = a[h], v = c.shouldBePainted(n, i, !0, !0);
      if (c && (!v || !c.__zr) && c.__isRendered) {
        var d = c.getPrevPaintRect();
        d && f(d);
      }
    }
    var g;
    do {
      g = !1;
      for (var h = 0; h < o.length; ) {
        if (o[h].isZero()) {
          o.splice(h, 1);
          continue;
        }
        for (var y = h + 1; y < o.length; )
          o[h].intersect(o[y]) ? (g = !0, o[h].union(o[y]), o.splice(y, 1)) : y++;
        h++;
      }
    } while (g);
    return this._paintRects = o, o;
  }, e.prototype.debugGetPaintRects = function() {
    return (this._paintRects || []).slice();
  }, e.prototype.resize = function(t, a) {
    var n = this.dpr, i = this.dom, o = i.style, s = this.domBack;
    o && (o.width = t + "px", o.height = a + "px"), i.width = t * n, i.height = a * n, s && (s.width = t * n, s.height = a * n, n !== 1 && this.ctxBack.scale(n, n));
  }, e.prototype.clear = function(t, a, n) {
    var i = this.dom, o = this.ctx, s = i.width, l = i.height;
    a = a || this.clearColor;
    var u = this.motionBlur && !t, f = this.lastFrameAlpha, h = this.dpr, c = this;
    u && (this.domBack || this.createBackBuffer(), this.ctxBack.globalCompositeOperation = "copy", this.ctxBack.drawImage(i, 0, 0, s / h, l / h));
    var v = this.domBack;
    function d(p, g, y, m) {
      if (o.clearRect(p, g, y, m), a && a !== "transparent") {
        var _ = void 0;
        if (sh(a)) {
          var S = a.global || a.__width === y && a.__height === m;
          _ = S && a.__canvasGradient || pp(o, a, {
            x: 0,
            y: 0,
            width: y,
            height: m
          }), a.__canvasGradient = _, a.__width = y, a.__height = m;
        } else
          l2(a) && (a.scaleX = a.scaleX || h, a.scaleY = a.scaleY || h, _ = gp(o, a, {
            dirty: function() {
              c.setUnpainted(), c.__painter.refresh();
            }
          }));
        o.save(), o.fillStyle = _ || a, o.fillRect(p, g, y, m), o.restore();
      }
      u && (o.save(), o.globalAlpha = f, o.drawImage(v, p, g, y, m), o.restore());
    }
    !n || u ? d(0, 0, s, l) : n.length && M(n, function(p) {
      d(p.x * h, p.y * h, p.width * h, p.height * h);
    });
  }, e;
}(cr);
const cv = Az;
var T1 = 1e5, Rn = 314159, gu = 0.01, Mz = 1e-3;
function Iz(r) {
  return r ? r.__builtin__ ? !0 : !(typeof r.resize != "function" || typeof r.refresh != "function") : !1;
}
function Lz(r, e) {
  var t = document.createElement("div");
  return t.style.cssText = [
    "position:relative",
    "width:" + r + "px",
    "height:" + e + "px",
    "padding:0",
    "margin:0",
    "border-width:0"
  ].join(";") + ";", t;
}
var Ez = function() {
  function r(e, t, a, n) {
    this.type = "canvas", this._zlevelList = [], this._prevDisplayList = [], this._layers = {}, this._layerConfig = {}, this._needsManuallyCompositing = !1, this.type = "canvas";
    var i = !e.nodeName || e.nodeName.toUpperCase() === "CANVAS";
    this._opts = a = V({}, a || {}), this.dpr = a.devicePixelRatio || vf, this._singleCanvas = i, this.root = e;
    var o = e.style;
    o && (kb(e), e.innerHTML = ""), this.storage = t;
    var s = this._zlevelList;
    this._prevDisplayList = [];
    var l = this._layers;
    if (i) {
      var f = e, h = f.width, c = f.height;
      a.width != null && (h = a.width), a.height != null && (c = a.height), this.dpr = a.devicePixelRatio || 1, f.width = h * this.dpr, f.height = c * this.dpr, this._width = h, this._height = c;
      var v = new cv(f, this, this.dpr);
      v.__builtin__ = !0, v.initContext(), l[Rn] = v, v.zlevel = Rn, s.push(Rn), this._domRoot = e;
    } else {
      this._width = ao(e, 0, a), this._height = ao(e, 1, a);
      var u = this._domRoot = Lz(this._width, this._height);
      e.appendChild(u);
    }
  }
  return r.prototype.getType = function() {
    return "canvas";
  }, r.prototype.isSingleCanvas = function() {
    return this._singleCanvas;
  }, r.prototype.getViewportRoot = function() {
    return this._domRoot;
  }, r.prototype.getViewportRootOffset = function() {
    var e = this.getViewportRoot();
    if (e)
      return {
        offsetLeft: e.offsetLeft || 0,
        offsetTop: e.offsetTop || 0
      };
  }, r.prototype.refresh = function(e) {
    var t = this.storage.getDisplayList(!0), a = this._prevDisplayList, n = this._zlevelList;
    this._redrawId = Math.random(), this._paintList(t, a, e, this._redrawId);
    for (var i = 0; i < n.length; i++) {
      var o = n[i], s = this._layers[o];
      if (!s.__builtin__ && s.refresh) {
        var l = i === 0 ? this._backgroundColor : null;
        s.refresh(l);
      }
    }
    return this._opts.useDirtyRect && (this._prevDisplayList = t.slice()), this;
  }, r.prototype.refreshHover = function() {
    this._paintHoverList(this.storage.getDisplayList(!1));
  }, r.prototype._paintHoverList = function(e) {
    var t = e.length, a = this._hoverlayer;
    if (a && a.clear(), !!t) {
      for (var n = {
        inHover: !0,
        viewWidth: this._width,
        viewHeight: this._height
      }, i, o = 0; o < t; o++) {
        var s = e[o];
        s.__inHover && (a || (a = this._hoverlayer = this.getLayer(T1)), i || (i = a.ctx, i.save()), Jn(i, s, n, o === t - 1));
      }
      i && i.restore();
    }
  }, r.prototype.getHoverLayer = function() {
    return this.getLayer(T1);
  }, r.prototype.paintOne = function(e, t) {
    EC(e, t);
  }, r.prototype._paintList = function(e, t, a, n) {
    if (this._redrawId === n) {
      a = a || !1, this._updateLayerStatus(e);
      var i = this._doPaintList(e, t, a), o = i.finished, s = i.needsRefreshHover;
      if (this._needsManuallyCompositing && this._compositeManually(), s && this._paintHoverList(e), o)
        this.eachLayer(function(u) {
          u.afterBrush && u.afterBrush();
        });
      else {
        var l = this;
        Ed(function() {
          l._paintList(e, t, a, n);
        });
      }
    }
  }, r.prototype._compositeManually = function() {
    var e = this.getLayer(Rn).ctx, t = this._domRoot.width, a = this._domRoot.height;
    e.clearRect(0, 0, t, a), this.eachBuiltinLayer(function(n) {
      n.virtual && e.drawImage(n.dom, 0, 0, t, a);
    });
  }, r.prototype._doPaintList = function(e, t, a) {
    for (var n = this, i = [], o = this._opts.useDirtyRect, s = 0; s < this._zlevelList.length; s++) {
      var l = this._zlevelList[s], u = this._layers[l];
      u.__builtin__ && u !== this._hoverlayer && (u.__dirty || a) && i.push(u);
    }
    for (var f = !0, h = !1, c = function(p) {
      var g = i[p], y = g.ctx, m = o && g.createRepaintRects(e, t, v._width, v._height), _ = a ? g.__startIndex : g.__drawIndex, S = !a && g.incremental && Date.now, w = S && Date.now(), x = g.zlevel === v._zlevelList[0] ? v._backgroundColor : null;
      if (g.__startIndex === g.__endIndex)
        g.clear(!1, x, m);
      else if (_ === g.__startIndex) {
        var b = e[_];
        (!b.incremental || !b.notClear || a) && g.clear(!1, x, m);
      }
      _ === -1 && (console.error("For some unknown reason. drawIndex is -1"), _ = g.__startIndex);
      var T, C = function(L) {
        var E = {
          inHover: !1,
          allClipped: !1,
          prevEl: null,
          viewWidth: n._width,
          viewHeight: n._height
        };
        for (T = _; T < g.__endIndex; T++) {
          var P = e[T];
          if (P.__inHover && (h = !0), n._doPaintEl(P, g, o, L, E, T === g.__endIndex - 1), S) {
            var R = Date.now() - w;
            if (R > 15)
              break;
          }
        }
        E.prevElClipPaths && y.restore();
      };
      if (m)
        if (m.length === 0)
          T = g.__endIndex;
        else
          for (var D = v.dpr, A = 0; A < m.length; ++A) {
            var I = m[A];
            y.save(), y.beginPath(), y.rect(I.x * D, I.y * D, I.width * D, I.height * D), y.clip(), C(I), y.restore();
          }
      else
        y.save(), C(), y.restore();
      g.__drawIndex = T, g.__drawIndex < g.__endIndex && (f = !1);
    }, v = this, d = 0; d < i.length; d++)
      c(d);
    return bt.wxa && M(this._layers, function(p) {
      p && p.ctx && p.ctx.draw && p.ctx.draw();
    }), {
      finished: f,
      needsRefreshHover: h
    };
  }, r.prototype._doPaintEl = function(e, t, a, n, i, o) {
    var s = t.ctx;
    if (a) {
      var l = e.getPaintRect();
      (!n || l && l.intersect(n)) && (Jn(s, e, i, o), e.setPrevPaintRect(l));
    } else
      Jn(s, e, i, o);
  }, r.prototype.getLayer = function(e, t) {
    this._singleCanvas && !this._needsManuallyCompositing && (e = Rn);
    var a = this._layers[e];
    return a || (a = new cv("zr_" + e, this, this.dpr), a.zlevel = e, a.__builtin__ = !0, this._layerConfig[e] ? ht(a, this._layerConfig[e], !0) : this._layerConfig[e - gu] && ht(a, this._layerConfig[e - gu], !0), t && (a.virtual = t), this.insertLayer(e, a), a.initContext()), a;
  }, r.prototype.insertLayer = function(e, t) {
    var a = this._layers, n = this._zlevelList, i = n.length, o = this._domRoot, s = null, l = -1;
    if (a[e]) {
      ({}).NODE_ENV !== "production" && br("ZLevel " + e + " has been used already");
      return;
    }
    if (!Iz(t)) {
      ({}).NODE_ENV !== "production" && br("Layer of zlevel " + e + " is not valid");
      return;
    }
    if (i > 0 && e > n[0]) {
      for (l = 0; l < i - 1 && !(n[l] < e && n[l + 1] > e); l++)
        ;
      s = a[n[l]];
    }
    if (n.splice(l + 1, 0, e), a[e] = t, !t.virtual)
      if (s) {
        var u = s.dom;
        u.nextSibling ? o.insertBefore(t.dom, u.nextSibling) : o.appendChild(t.dom);
      } else
        o.firstChild ? o.insertBefore(t.dom, o.firstChild) : o.appendChild(t.dom);
    t.__painter = this;
  }, r.prototype.eachLayer = function(e, t) {
    for (var a = this._zlevelList, n = 0; n < a.length; n++) {
      var i = a[n];
      e.call(t, this._layers[i], i);
    }
  }, r.prototype.eachBuiltinLayer = function(e, t) {
    for (var a = this._zlevelList, n = 0; n < a.length; n++) {
      var i = a[n], o = this._layers[i];
      o.__builtin__ && e.call(t, o, i);
    }
  }, r.prototype.eachOtherLayer = function(e, t) {
    for (var a = this._zlevelList, n = 0; n < a.length; n++) {
      var i = a[n], o = this._layers[i];
      o.__builtin__ || e.call(t, o, i);
    }
  }, r.prototype.getLayers = function() {
    return this._layers;
  }, r.prototype._updateLayerStatus = function(e) {
    this.eachBuiltinLayer(function(h, c) {
      h.__dirty = h.__used = !1;
    });
    function t(h) {
      i && (i.__endIndex !== h && (i.__dirty = !0), i.__endIndex = h);
    }
    if (this._singleCanvas)
      for (var a = 1; a < e.length; a++) {
        var n = e[a];
        if (n.zlevel !== e[a - 1].zlevel || n.incremental) {
          this._needsManuallyCompositing = !0;
          break;
        }
      }
    var i = null, o = 0, s, l;
    for (l = 0; l < e.length; l++) {
      var n = e[l], u = n.zlevel, f = void 0;
      s !== u && (s = u, o = 0), n.incremental ? (f = this.getLayer(u + Mz, this._needsManuallyCompositing), f.incremental = !0, o = 1) : f = this.getLayer(u + (o > 0 ? gu : 0), this._needsManuallyCompositing), f.__builtin__ || br("ZLevel " + u + " has been used by unkown layer " + f.id), f !== i && (f.__used = !0, f.__startIndex !== l && (f.__dirty = !0), f.__startIndex = l, f.incremental ? f.__drawIndex = -1 : f.__drawIndex = l, t(l), i = f), n.__dirty & $e && !n.__inHover && (f.__dirty = !0, f.incremental && f.__drawIndex < 0 && (f.__drawIndex = l));
    }
    t(l), this.eachBuiltinLayer(function(h, c) {
      !h.__used && h.getElementCount() > 0 && (h.__dirty = !0, h.__startIndex = h.__endIndex = h.__drawIndex = 0), h.__dirty && h.__drawIndex < 0 && (h.__drawIndex = h.__startIndex);
    });
  }, r.prototype.clear = function() {
    return this.eachBuiltinLayer(this._clearLayer), this;
  }, r.prototype._clearLayer = function(e) {
    e.clear();
  }, r.prototype.setBackgroundColor = function(e) {
    this._backgroundColor = e, M(this._layers, function(t) {
      t.setUnpainted();
    });
  }, r.prototype.configLayer = function(e, t) {
    if (t) {
      var a = this._layerConfig;
      a[e] ? ht(a[e], t, !0) : a[e] = t;
      for (var n = 0; n < this._zlevelList.length; n++) {
        var i = this._zlevelList[n];
        if (i === e || i === e + gu) {
          var o = this._layers[i];
          ht(o, a[e], !0);
        }
      }
    }
  }, r.prototype.delLayer = function(e) {
    var t = this._layers, a = this._zlevelList, n = t[e];
    n && (n.dom.parentNode.removeChild(n.dom), delete t[e], a.splice(vt(a, e), 1));
  }, r.prototype.resize = function(e, t) {
    if (this._domRoot.style) {
      var a = this._domRoot;
      a.style.display = "none";
      var n = this._opts, i = this.root;
      if (e != null && (n.width = e), t != null && (n.height = t), e = ao(i, 0, n), t = ao(i, 1, n), a.style.display = "", this._width !== e || t !== this._height) {
        a.style.width = e + "px", a.style.height = t + "px";
        for (var o in this._layers)
          this._layers.hasOwnProperty(o) && this._layers[o].resize(e, t);
        this.refresh(!0);
      }
      this._width = e, this._height = t;
    } else {
      if (e == null || t == null)
        return;
      this._width = e, this._height = t, this.getLayer(Rn).resize(e, t);
    }
    return this;
  }, r.prototype.clearLayer = function(e) {
    var t = this._layers[e];
    t && t.clear();
  }, r.prototype.dispose = function() {
    this.root.innerHTML = "", this.root = this.storage = this._domRoot = this._layers = null;
  }, r.prototype.getRenderedCanvas = function(e) {
    if (e = e || {}, this._singleCanvas && !this._compositeManually)
      return this._layers[Rn].dom;
    var t = new cv("image", this, e.pixelRatio || this.dpr);
    t.initContext(), t.clear(!1, e.backgroundColor || this._backgroundColor);
    var a = t.ctx;
    if (e.pixelRatio <= this.dpr) {
      this.refresh();
      var n = t.dom.width, i = t.dom.height;
      this.eachLayer(function(h) {
        h.__builtin__ ? a.drawImage(h.dom, 0, 0, n, i) : h.renderToCanvas && (a.save(), h.renderToCanvas(a), a.restore());
      });
    } else
      for (var o = {
        inHover: !1,
        viewWidth: this._width,
        viewHeight: this._height
      }, s = this.storage.getDisplayList(!0), l = 0, u = s.length; l < u; l++) {
        var f = s[l];
        Jn(a, f, o, l === u - 1);
      }
    return t.dom;
  }, r.prototype.getWidth = function() {
    return this._width;
  }, r.prototype.getHeight = function() {
    return this._height;
  }, r;
}();
const Pz = Ez;
function Rz(r) {
  r.registerPainter("canvas", Pz);
}
var Nz = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t.hasSymbolVisual = !0, t;
    }
    return e.prototype.getInitialData = function(t) {
      if ({}.NODE_ENV !== "production") {
        var a = t.coordinateSystem;
        if (a !== "polar" && a !== "cartesian2d")
          throw new Error("Line not support coordinateSystem besides cartesian and polar");
      }
      return wa(null, this, {
        useEncodeDefaulter: !0
      });
    }, e.prototype.getLegendIcon = function(t) {
      var a = new nt(), n = Qt("line", 0, t.itemHeight / 2, t.itemWidth, 0, t.lineStyle.stroke, !1);
      a.add(n), n.setStyle(t.lineStyle);
      var i = this.getData().getVisual("symbol"), o = this.getData().getVisual("symbolRotate"), s = i === "none" ? "circle" : i, l = t.itemHeight * 0.8, u = Qt(s, (t.itemWidth - l) / 2, (t.itemHeight - l) / 2, l, l, t.itemStyle.fill);
      a.add(u), u.setStyle(t.itemStyle);
      var f = t.iconRotate === "inherit" ? o : t.iconRotate || 0;
      return u.rotation = f * Math.PI / 180, u.setOrigin([t.itemWidth / 2, t.itemHeight / 2]), s.indexOf("empty") > -1 && (u.style.stroke = u.style.fill, u.style.fill = "#fff", u.style.lineWidth = 2), a;
    }, e.type = "series.line", e.dependencies = ["grid", "polar"], e.defaultOption = {
      // zlevel: 0,
      z: 3,
      coordinateSystem: "cartesian2d",
      legendHoverLink: !0,
      clip: !0,
      label: {
        position: "top"
      },
      // itemStyle: {
      // },
      endLabel: {
        show: !1,
        valueAnimation: !0,
        distance: 8
      },
      lineStyle: {
        width: 2,
        type: "solid"
      },
      emphasis: {
        scale: !0
      },
      // areaStyle: {
      // origin of areaStyle. Valid values:
      // `'auto'/null/undefined`: from axisLine to data
      // `'start'`: from min to data
      // `'end'`: from data to max
      // origin: 'auto'
      // },
      // false, 'start', 'end', 'middle'
      step: !1,
      // Disabled if step is true
      smooth: !1,
      smoothMonotone: null,
      symbol: "emptyCircle",
      symbolSize: 4,
      symbolRotate: null,
      showSymbol: !0,
      // `false`: follow the label interval strategy.
      // `true`: show all symbols.
      // `'auto'`: If possible, show all symbols, otherwise
      //           follow the label interval strategy.
      showAllSymbol: "auto",
      // Whether to connect break point.
      connectNulls: !1,
      // Sampling for large data. Can be: 'average', 'max', 'min', 'sum', 'lttb'.
      sampling: "none",
      animationEasing: "linear",
      // Disable progressive
      progressive: 0,
      hoverLayerThreshold: 1 / 0,
      universalTransition: {
        divideShape: "clone"
      },
      triggerLineEvent: !1
    }, e;
  }(Gt)
);
const Oz = Nz;
function yo(r, e) {
  var t = r.mapDimensionsAll("defaultedLabel"), a = t.length;
  if (a === 1) {
    var n = vo(r, e, t[0]);
    return n != null ? n + "" : null;
  } else if (a) {
    for (var i = [], o = 0; o < t.length; o++)
      i.push(vo(r, e, t[o]));
    return i.join(" ");
  }
}
function qA(r, e) {
  var t = r.mapDimensionsAll("defaultedLabel");
  if (!z(e))
    return e + "";
  for (var a = [], n = 0; n < t.length; n++) {
    var i = r.getDimensionIndex(t[n]);
    i >= 0 && a.push(e[i]);
  }
  return a.join(" ");
}
var kz = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t, a, n, i) {
      var o = r.call(this) || this;
      return o.updateData(t, a, n, i), o;
    }
    return e.prototype._createSymbol = function(t, a, n, i, o) {
      this.removeAll();
      var s = Qt(t, -1, -1, 2, 2, null, o);
      s.attr({
        z2: 100,
        culling: !0,
        scaleX: i[0] / 2,
        scaleY: i[1] / 2
      }), s.drift = Vz, this._symbolType = t, this.add(s);
    }, e.prototype.stopSymbolAnimation = function(t) {
      this.childAt(0).stopAnimation(null, t);
    }, e.prototype.getSymbolType = function() {
      return this._symbolType;
    }, e.prototype.getSymbolPath = function() {
      return this.childAt(0);
    }, e.prototype.highlight = function() {
      ga(this.childAt(0));
    }, e.prototype.downplay = function() {
      ya(this.childAt(0));
    }, e.prototype.setZ = function(t, a) {
      var n = this.childAt(0);
      n.zlevel = t, n.z = a;
    }, e.prototype.setDraggable = function(t, a) {
      var n = this.childAt(0);
      n.draggable = t, n.cursor = !a && t ? "move" : n.cursor;
    }, e.prototype.updateData = function(t, a, n, i) {
      this.silent = !1;
      var o = t.getItemVisual(a, "symbol") || "circle", s = t.hostModel, l = e.getSymbolSize(t, a), u = o !== this._symbolType, f = i && i.disableAnimation;
      if (u) {
        var h = t.getItemVisual(a, "symbolKeepAspect");
        this._createSymbol(o, t, a, l, h);
      } else {
        var c = this.childAt(0);
        c.silent = !1;
        var v = {
          scaleX: l[0] / 2,
          scaleY: l[1] / 2
        };
        f ? c.attr(v) : Mt(c, v, s, a), Mr(c);
      }
      if (this._updateCommon(t, a, l, n, i), u) {
        var c = this.childAt(0);
        if (!f) {
          var v = {
            scaleX: this._sizeX,
            scaleY: this._sizeY,
            style: {
              // Always fadeIn. Because it has fadeOut animation when symbol is removed..
              opacity: c.style.opacity
            }
          };
          c.scaleX = c.scaleY = 0, c.style.opacity = 0, Bt(c, v, s, a);
        }
      }
      f && this.childAt(0).stopAnimation("leave");
    }, e.prototype._updateCommon = function(t, a, n, i, o) {
      var s = this.childAt(0), l = t.hostModel, u, f, h, c, v, d, p, g, y;
      if (i && (u = i.emphasisItemStyle, f = i.blurItemStyle, h = i.selectItemStyle, c = i.focus, v = i.blurScope, p = i.labelStatesModels, g = i.hoverScale, y = i.cursorStyle, d = i.emphasisDisabled), !i || t.hasItemOption) {
        var m = i && i.itemModel ? i.itemModel : t.getItemModel(a), _ = m.getModel("emphasis");
        u = _.getModel("itemStyle").getItemStyle(), h = m.getModel(["select", "itemStyle"]).getItemStyle(), f = m.getModel(["blur", "itemStyle"]).getItemStyle(), c = _.get("focus"), v = _.get("blurScope"), d = _.get("disabled"), p = oe(m), g = _.getShallow("scale"), y = m.getShallow("cursor");
      }
      var S = t.getItemVisual(a, "symbolRotate");
      s.attr("rotation", (S || 0) * Math.PI / 180 || 0);
      var w = xi(t.getItemVisual(a, "symbolOffset"), n);
      w && (s.x = w[0], s.y = w[1]), y && s.attr("cursor", y);
      var x = t.getItemVisual(a, "style"), b = x.fill;
      if (s instanceof ge) {
        var T = s.style;
        s.useStyle(V({
          // TODO other properties like x, y ?
          image: T.image,
          x: T.x,
          y: T.y,
          width: T.width,
          height: T.height
        }, x));
      } else
        s.__isEmptyBrush ? s.useStyle(V({}, x)) : s.useStyle(x), s.style.decal = null, s.setColor(b, o && o.symbolInnerColor), s.style.strokeNoScale = !0;
      var C = t.getItemVisual(a, "liftZ"), D = this._z2;
      C != null ? D == null && (this._z2 = s.z2, s.z2 += C) : D != null && (s.z2 = D, this._z2 = null);
      var A = o && o.useNameLabel;
      pe(s, p, {
        labelFetcher: l,
        labelDataIndex: a,
        defaultText: I,
        inheritColor: b,
        defaultOpacity: x.opacity
      });
      function I(P) {
        return A ? t.getName(P) : yo(t, P);
      }
      this._sizeX = n[0] / 2, this._sizeY = n[1] / 2;
      var L = s.ensureState("emphasis");
      L.style = u, s.ensureState("select").style = h, s.ensureState("blur").style = f;
      var E = g == null || g === !0 ? Math.max(1.1, 3 / this._sizeY) : isFinite(g) && g > 0 ? +g : 1;
      L.scaleX = this._sizeX * E, L.scaleY = this._sizeY * E, this.setSymbolScale(1), Wt(this, c, v, d);
    }, e.prototype.setSymbolScale = function(t) {
      this.scaleX = this.scaleY = t;
    }, e.prototype.fadeOut = function(t, a, n) {
      var i = this.childAt(0), o = it(this).dataIndex, s = n && n.animation;
      if (this.silent = i.silent = !0, n && n.fadeLabel) {
        var l = i.getTextContent();
        l && en(l, {
          style: {
            opacity: 0
          }
        }, a, {
          dataIndex: o,
          removeOpt: s,
          cb: function() {
            i.removeTextContent();
          }
        });
      } else
        i.removeTextContent();
      en(i, {
        style: {
          opacity: 0
        },
        scaleX: 0,
        scaleY: 0
      }, a, {
        dataIndex: o,
        cb: t,
        removeOpt: s
      });
    }, e.getSymbolSize = function(t, a) {
      return Bo(t.getItemVisual(a, "symbolSize"));
    }, e;
  }(nt)
);
function Vz(r, e) {
  this.parent.drift(r, e);
}
const Al = kz;
function vv(r, e, t, a) {
  return e && !isNaN(e[0]) && !isNaN(e[1]) && !(a.isIgnore && a.isIgnore(t)) && !(a.clipShape && !a.clipShape.contain(e[0], e[1])) && r.getItemVisual(t, "symbol") !== "none";
}
function D1(r) {
  return r != null && !j(r) && (r = {
    isIgnore: r
  }), r || {};
}
function C1(r) {
  var e = r.hostModel, t = e.getModel("emphasis");
  return {
    emphasisItemStyle: t.getModel("itemStyle").getItemStyle(),
    blurItemStyle: e.getModel(["blur", "itemStyle"]).getItemStyle(),
    selectItemStyle: e.getModel(["select", "itemStyle"]).getItemStyle(),
    focus: t.get("focus"),
    blurScope: t.get("blurScope"),
    emphasisDisabled: t.get("disabled"),
    hoverScale: t.get("scale"),
    labelStatesModels: oe(e),
    cursorStyle: e.get("cursor")
  };
}
var Bz = (
  /** @class */
  function() {
    function r(e) {
      this.group = new nt(), this._SymbolCtor = e || Al;
    }
    return r.prototype.updateData = function(e, t) {
      this._progressiveEls = null, t = D1(t);
      var a = this.group, n = e.hostModel, i = this._data, o = this._SymbolCtor, s = t.disableAnimation, l = C1(e), u = {
        disableAnimation: s
      }, f = t.getSymbolPoint || function(h) {
        return e.getItemLayout(h);
      };
      i || a.removeAll(), e.diff(i).add(function(h) {
        var c = f(h);
        if (vv(e, c, h, t)) {
          var v = new o(e, h, l, u);
          v.setPosition(c), e.setItemGraphicEl(h, v), a.add(v);
        }
      }).update(function(h, c) {
        var v = i.getItemGraphicEl(c), d = f(h);
        if (!vv(e, d, h, t)) {
          a.remove(v);
          return;
        }
        var p = e.getItemVisual(h, "symbol") || "circle", g = v && v.getSymbolType && v.getSymbolType();
        if (!v || g && g !== p)
          a.remove(v), v = new o(e, h, l, u), v.setPosition(d);
        else {
          v.updateData(e, h, l, u);
          var y = {
            x: d[0],
            y: d[1]
          };
          s ? v.attr(y) : Mt(v, y, n);
        }
        a.add(v), e.setItemGraphicEl(h, v);
      }).remove(function(h) {
        var c = i.getItemGraphicEl(h);
        c && c.fadeOut(function() {
          a.remove(c);
        }, n);
      }).execute(), this._getSymbolPoint = f, this._data = e;
    }, r.prototype.updateLayout = function() {
      var e = this, t = this._data;
      t && t.eachItemGraphicEl(function(a, n) {
        var i = e._getSymbolPoint(n);
        a.setPosition(i), a.markRedraw();
      });
    }, r.prototype.incrementalPrepareUpdate = function(e) {
      this._seriesScope = C1(e), this._data = null, this.group.removeAll();
    }, r.prototype.incrementalUpdate = function(e, t, a) {
      this._progressiveEls = [], a = D1(a);
      function n(l) {
        l.isGroup || (l.incremental = !0, l.ensureState("emphasis").hoverLayer = !0);
      }
      for (var i = e.start; i < e.end; i++) {
        var o = t.getItemLayout(i);
        if (vv(t, o, i, a)) {
          var s = new this._SymbolCtor(t, i, this._seriesScope);
          s.traverse(n), s.setPosition(o), this.group.add(s), t.setItemGraphicEl(i, s), this._progressiveEls.push(s);
        }
      }
    }, r.prototype.eachRendered = function(e) {
      un(this._progressiveEls || this.group, e);
    }, r.prototype.remove = function(e) {
      var t = this.group, a = this._data;
      a && e ? a.eachItemGraphicEl(function(n) {
        n.fadeOut(function() {
          t.remove(n);
        }, a.hostModel);
      }) : t.removeAll();
    }, r;
  }()
);
const Ml = Bz;
function KA(r, e, t) {
  var a = r.getBaseAxis(), n = r.getOtherAxis(a), i = zz(n, t), o = a.dim, s = n.dim, l = e.mapDimension(s), u = e.mapDimension(o), f = s === "x" || s === "radius" ? 1 : 0, h = G(r.dimensions, function(d) {
    return e.mapDimension(d);
  }), c = !1, v = e.getCalculationInfo("stackResultDimension");
  return an(
    e,
    h[0]
    /* , dims[1] */
  ) && (c = !0, h[0] = v), an(
    e,
    h[1]
    /* , dims[0] */
  ) && (c = !0, h[1] = v), {
    dataDimsForPoint: h,
    valueStart: i,
    valueAxisDim: s,
    baseAxisDim: o,
    stacked: !!c,
    valueDim: l,
    baseDim: u,
    baseDataOffset: f,
    stackedOverDimension: e.getCalculationInfo("stackedOverDimension")
  };
}
function zz(r, e) {
  var t = 0, a = r.scale.getExtent();
  return e === "start" ? t = a[0] : e === "end" ? t = a[1] : At(e) && !isNaN(e) ? t = e : a[0] > 0 ? t = a[0] : a[1] < 0 && (t = a[1]), t;
}
function jA(r, e, t, a) {
  var n = NaN;
  r.stacked && (n = t.get(t.getCalculationInfo("stackedOverDimension"), a)), isNaN(n) && (n = r.valueStart);
  var i = r.baseDataOffset, o = [];
  return o[i] = t.get(r.baseDim, a), o[1 - i] = n, e.dataToPoint(o);
}
function Gz(r, e) {
  var t = [];
  return e.diff(r).add(function(a) {
    t.push({
      cmd: "+",
      idx: a
    });
  }).update(function(a, n) {
    t.push({
      cmd: "=",
      idx: n,
      idx1: a
    });
  }).remove(function(a) {
    t.push({
      cmd: "-",
      idx: a
    });
  }).execute(), t;
}
function Fz(r, e, t, a, n, i, o, s) {
  for (var l = Gz(r, e), u = [], f = [], h = [], c = [], v = [], d = [], p = [], g = KA(n, e, o), y = r.getLayout("points") || [], m = e.getLayout("points") || [], _ = 0; _ < l.length; _++) {
    var S = l[_], w = !0, x = void 0, b = void 0;
    switch (S.cmd) {
      case "=":
        x = S.idx * 2, b = S.idx1 * 2;
        var T = y[x], C = y[x + 1], D = m[b], A = m[b + 1];
        (isNaN(T) || isNaN(C)) && (T = D, C = A), u.push(T, C), f.push(D, A), h.push(t[x], t[x + 1]), c.push(a[b], a[b + 1]), p.push(e.getRawIndex(S.idx1));
        break;
      case "+":
        var I = S.idx, L = g.dataDimsForPoint, E = n.dataToPoint([e.get(L[0], I), e.get(L[1], I)]);
        b = I * 2, u.push(E[0], E[1]), f.push(m[b], m[b + 1]);
        var P = jA(g, n, e, I);
        h.push(P[0], P[1]), c.push(a[b], a[b + 1]), p.push(e.getRawIndex(I));
        break;
      case "-":
        w = !1;
    }
    w && (v.push(S), d.push(d.length));
  }
  d.sort(function(dt, St) {
    return p[dt] - p[St];
  });
  for (var R = u.length, k = Wr(R), O = Wr(R), B = Wr(R), F = Wr(R), W = [], _ = 0; _ < d.length; _++) {
    var Z = d[_], Q = _ * 2, tt = Z * 2;
    k[Q] = u[tt], k[Q + 1] = u[tt + 1], O[Q] = f[tt], O[Q + 1] = f[tt + 1], B[Q] = h[tt], B[Q + 1] = h[tt + 1], F[Q] = c[tt], F[Q + 1] = c[tt + 1], W[_] = v[Z];
  }
  return {
    current: k,
    next: O,
    stackedOnCurrent: B,
    stackedOnNext: F,
    status: W
  };
}
var Pa = Math.min, Ra = Math.max;
function si(r, e) {
  return isNaN(r) || isNaN(e);
}
function Cp(r, e, t, a, n, i, o, s, l) {
  for (var u, f, h, c, v, d, p = t, g = 0; g < a; g++) {
    var y = e[p * 2], m = e[p * 2 + 1];
    if (p >= n || p < 0)
      break;
    if (si(y, m)) {
      if (l) {
        p += i;
        continue;
      }
      break;
    }
    if (p === t)
      r[i > 0 ? "moveTo" : "lineTo"](y, m), h = y, c = m;
    else {
      var _ = y - u, S = m - f;
      if (_ * _ + S * S < 0.5) {
        p += i;
        continue;
      }
      if (o > 0) {
        for (var w = p + i, x = e[w * 2], b = e[w * 2 + 1]; x === y && b === m && g < a; )
          g++, w += i, p += i, x = e[w * 2], b = e[w * 2 + 1], y = e[p * 2], m = e[p * 2 + 1], _ = y - u, S = m - f;
        var T = g + 1;
        if (l)
          for (; si(x, b) && T < a; )
            T++, w += i, x = e[w * 2], b = e[w * 2 + 1];
        var C = 0.5, D = 0, A = 0, I = void 0, L = void 0;
        if (T >= a || si(x, b))
          v = y, d = m;
        else {
          D = x - u, A = b - f;
          var E = y - u, P = x - y, R = m - f, k = b - m, O = void 0, B = void 0;
          if (s === "x") {
            O = Math.abs(E), B = Math.abs(P);
            var F = D > 0 ? 1 : -1;
            v = y - F * O * o, d = m, I = y + F * B * o, L = m;
          } else if (s === "y") {
            O = Math.abs(R), B = Math.abs(k);
            var W = A > 0 ? 1 : -1;
            v = y, d = m - W * O * o, I = y, L = m + W * B * o;
          } else
            O = Math.sqrt(E * E + R * R), B = Math.sqrt(P * P + k * k), C = B / (B + O), v = y - D * o * (1 - C), d = m - A * o * (1 - C), I = y + D * o * C, L = m + A * o * C, I = Pa(I, Ra(x, y)), L = Pa(L, Ra(b, m)), I = Ra(I, Pa(x, y)), L = Ra(L, Pa(b, m)), D = I - y, A = L - m, v = y - D * O / B, d = m - A * O / B, v = Pa(v, Ra(u, y)), d = Pa(d, Ra(f, m)), v = Ra(v, Pa(u, y)), d = Ra(d, Pa(f, m)), D = y - v, A = m - d, I = y + D * B / O, L = m + A * B / O;
        }
        r.bezierCurveTo(h, c, v, d, y, m), h = I, c = L;
      } else
        r.lineTo(y, m);
    }
    u = y, f = m, p += i;
  }
  return g;
}
var JA = (
  /** @class */
  function() {
    function r() {
      this.smooth = 0, this.smoothConstraint = !0;
    }
    return r;
  }()
), Hz = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t) {
      var a = r.call(this, t) || this;
      return a.type = "ec-polyline", a;
    }
    return e.prototype.getDefaultStyle = function() {
      return {
        stroke: "#000",
        fill: null
      };
    }, e.prototype.getDefaultShape = function() {
      return new JA();
    }, e.prototype.buildPath = function(t, a) {
      var n = a.points, i = 0, o = n.length / 2;
      if (a.connectNulls) {
        for (; o > 0 && si(n[o * 2 - 2], n[o * 2 - 1]); o--)
          ;
        for (; i < o && si(n[i * 2], n[i * 2 + 1]); i++)
          ;
      }
      for (; i < o; )
        i += Cp(t, n, i, o, o, 1, a.smooth, a.smoothMonotone, a.connectNulls) + 1;
    }, e.prototype.getPointOn = function(t, a) {
      this.path || (this.createPathProxy(), this.buildPath(this.path, this.shape));
      for (var n = this.path, i = n.data, o = Kr.CMD, s, l, u = a === "x", f = [], h = 0; h < i.length; ) {
        var c = i[h++], v = void 0, d = void 0, p = void 0, g = void 0, y = void 0, m = void 0, _ = void 0;
        switch (c) {
          case o.M:
            s = i[h++], l = i[h++];
            break;
          case o.L:
            if (v = i[h++], d = i[h++], _ = u ? (t - s) / (v - s) : (t - l) / (d - l), _ <= 1 && _ >= 0) {
              var S = u ? (d - l) * _ + l : (v - s) * _ + s;
              return u ? [t, S] : [S, t];
            }
            s = v, l = d;
            break;
          case o.C:
            v = i[h++], d = i[h++], p = i[h++], g = i[h++], y = i[h++], m = i[h++];
            var w = u ? uf(s, v, p, y, t, f) : uf(l, d, g, m, t, f);
            if (w > 0)
              for (var x = 0; x < w; x++) {
                var b = f[x];
                if (b <= 1 && b >= 0) {
                  var S = u ? ne(l, d, g, m, b) : ne(s, v, p, y, b);
                  return u ? [t, S] : [S, t];
                }
              }
            s = y, l = m;
            break;
        }
      }
    }, e;
  }(mt)
), Wz = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return e;
  }(JA)
), QA = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t) {
      var a = r.call(this, t) || this;
      return a.type = "ec-polygon", a;
    }
    return e.prototype.getDefaultShape = function() {
      return new Wz();
    }, e.prototype.buildPath = function(t, a) {
      var n = a.points, i = a.stackedOnPoints, o = 0, s = n.length / 2, l = a.smoothMonotone;
      if (a.connectNulls) {
        for (; s > 0 && si(n[s * 2 - 2], n[s * 2 - 1]); s--)
          ;
        for (; o < s && si(n[o * 2], n[o * 2 + 1]); o++)
          ;
      }
      for (; o < s; ) {
        var u = Cp(t, n, o, s, s, 1, a.smooth, l, a.connectNulls);
        Cp(t, i, o + u - 1, u, s, -1, a.stackedOnSmooth, l, a.connectNulls), o += u + 1, t.closePath();
      }
    }, e;
  }(mt)
);
function tM(r, e, t, a, n) {
  var i = r.getArea(), o = i.x, s = i.y, l = i.width, u = i.height, f = t.get(["lineStyle", "width"]) || 2;
  o -= f / 2, s -= f / 2, l += f, u += f, o = Math.floor(o), l = Math.round(l);
  var h = new Tt({
    shape: {
      x: o,
      y: s,
      width: l,
      height: u
    }
  });
  if (e) {
    var c = r.getBaseAxis(), v = c.isHorizontal(), d = c.inverse;
    v ? (d && (h.shape.x += l), h.shape.width = 0) : (d || (h.shape.y += u), h.shape.height = 0);
    var p = K(n) ? function(g) {
      n(g, h);
    } : null;
    Bt(h, {
      shape: {
        width: l,
        height: u,
        x: o,
        y: s
      }
    }, t, null, a, p);
  }
  return h;
}
function eM(r, e, t) {
  var a = r.getArea(), n = Yt(a.r0, 1), i = Yt(a.r, 1), o = new ze({
    shape: {
      cx: Yt(r.cx, 1),
      cy: Yt(r.cy, 1),
      r0: n,
      r: i,
      startAngle: a.startAngle,
      endAngle: a.endAngle,
      clockwise: a.clockwise
    }
  });
  if (e) {
    var s = r.getBaseAxis().dim === "angle";
    s ? o.shape.endAngle = a.startAngle : o.shape.r = n, Bt(o, {
      shape: {
        endAngle: a.endAngle,
        r: i
      }
    }, t);
  }
  return o;
}
function Gh(r, e, t, a, n) {
  if (r) {
    if (r.type === "polar")
      return eM(r, e, t);
    if (r.type === "cartesian2d")
      return tM(r, e, t, a, n);
  } else
    return null;
  return null;
}
function bi(r, e) {
  return r.type === e;
}
function A1(r, e) {
  if (r.length === e.length) {
    for (var t = 0; t < r.length; t++)
      if (r[t] !== e[t])
        return;
    return !0;
  }
}
function M1(r) {
  for (var e = 1 / 0, t = 1 / 0, a = -1 / 0, n = -1 / 0, i = 0; i < r.length; ) {
    var o = r[i++], s = r[i++];
    isNaN(o) || (e = Math.min(o, e), a = Math.max(o, a)), isNaN(s) || (t = Math.min(s, t), n = Math.max(s, n));
  }
  return [[e, t], [a, n]];
}
function I1(r, e) {
  var t = M1(r), a = t[0], n = t[1], i = M1(e), o = i[0], s = i[1];
  return Math.max(Math.abs(a[0] - o[0]), Math.abs(a[1] - o[1]), Math.abs(n[0] - s[0]), Math.abs(n[1] - s[1]));
}
function L1(r) {
  return At(r) ? r : r ? 0.5 : 0;
}
function $z(r, e, t) {
  if (!t.valueDim)
    return [];
  for (var a = e.count(), n = Wr(a * 2), i = 0; i < a; i++) {
    var o = jA(t, r, e, i);
    n[i * 2] = o[0], n[i * 2 + 1] = o[1];
  }
  return n;
}
function Na(r, e, t, a) {
  var n = e.getBaseAxis(), i = n.dim === "x" || n.dim === "radius" ? 0 : 1, o = [], s = 0, l = [], u = [], f = [], h = [];
  if (a) {
    for (s = 0; s < r.length; s += 2)
      !isNaN(r[s]) && !isNaN(r[s + 1]) && h.push(r[s], r[s + 1]);
    r = h;
  }
  for (s = 0; s < r.length - 2; s += 2)
    switch (f[0] = r[s + 2], f[1] = r[s + 3], u[0] = r[s], u[1] = r[s + 1], o.push(u[0], u[1]), t) {
      case "end":
        l[i] = f[i], l[1 - i] = u[1 - i], o.push(l[0], l[1]);
        break;
      case "middle":
        var c = (u[i] + f[i]) / 2, v = [];
        l[i] = v[i] = c, l[1 - i] = u[1 - i], v[1 - i] = f[1 - i], o.push(l[0], l[1]), o.push(v[0], v[1]);
        break;
      default:
        l[i] = u[i], l[1 - i] = f[1 - i], o.push(l[0], l[1]);
    }
  return o.push(r[s++], r[s++]), o;
}
function Uz(r, e) {
  var t = [], a = r.length, n, i;
  function o(f, h, c) {
    var v = f.coord, d = (c - v) / (h.coord - v), p = tE(d, [f.color, h.color]);
    return {
      coord: c,
      color: p
    };
  }
  for (var s = 0; s < a; s++) {
    var l = r[s], u = l.coord;
    if (u < 0)
      n = l;
    else if (u > e) {
      i ? t.push(o(i, l, e)) : n && t.push(o(n, l, 0), o(n, l, e));
      break;
    } else
      n && (t.push(o(n, l, 0)), n = null), t.push(l), i = l;
  }
  return t;
}
function Yz(r, e, t) {
  var a = r.getVisual("visualMeta");
  if (!(!a || !a.length || !r.count())) {
    if (e.type !== "cartesian2d") {
      ({}).NODE_ENV !== "production" && console.warn("Visual map on line style is only supported on cartesian2d.");
      return;
    }
    for (var n, i, o = a.length - 1; o >= 0; o--) {
      var s = r.getDimensionInfo(a[o].dimension);
      if (n = s && s.coordDim, n === "x" || n === "y") {
        i = a[o];
        break;
      }
    }
    if (!i) {
      ({}).NODE_ENV !== "production" && console.warn("Visual map on line style only support x or y dimension.");
      return;
    }
    var l = e.getAxis(n), u = G(i.stops, function(_) {
      return {
        coord: l.toGlobalCoord(l.dataToCoord(_.value)),
        color: _.color
      };
    }), f = u.length, h = i.outerColors.slice();
    f && u[0].coord > u[f - 1].coord && (u.reverse(), h.reverse());
    var c = Uz(u, n === "x" ? t.getWidth() : t.getHeight()), v = c.length;
    if (!v && f)
      return u[0].coord < 0 ? h[1] ? h[1] : u[f - 1].color : h[0] ? h[0] : u[0].color;
    var d = 10, p = c[0].coord - d, g = c[v - 1].coord + d, y = g - p;
    if (y < 1e-3)
      return "transparent";
    M(c, function(_) {
      _.offset = (_.coord - p) / y;
    }), c.push({
      // NOTE: inRangeStopLen may still be 0 if stoplen is zero.
      offset: v ? c[v - 1].offset : 0.5,
      color: h[1] || "transparent"
    }), c.unshift({
      offset: v ? c[0].offset : 0.5,
      color: h[0] || "transparent"
    });
    var m = new _l(0, 0, 0, 0, c, !0);
    return m[n] = p, m[n + "2"] = g, m;
  }
}
function Zz(r, e, t) {
  var a = r.get("showAllSymbol"), n = a === "auto";
  if (!(a && !n)) {
    var i = t.getAxesByScale("ordinal")[0];
    if (i && !(n && Xz(i, e))) {
      var o = e.mapDimension(i.dim), s = {};
      return M(i.getViewLabels(), function(l) {
        var u = i.scale.getRawOrdinalNumber(l.tickValue);
        s[u] = 1;
      }), function(l) {
        return !s.hasOwnProperty(e.get(o, l));
      };
    }
  }
}
function Xz(r, e) {
  var t = r.getExtent(), a = Math.abs(t[1] - t[0]) / r.scale.count();
  isNaN(a) && (a = 0);
  for (var n = e.count(), i = Math.max(1, Math.round(n / 5)), o = 0; o < n; o += i)
    if (Al.getSymbolSize(
      e,
      o
      // Only for cartesian, where `isHorizontal` exists.
    )[r.isHorizontal() ? 1 : 0] * 1.5 > a)
      return !1;
  return !0;
}
function qz(r, e) {
  return isNaN(r) || isNaN(e);
}
function Kz(r) {
  for (var e = r.length / 2; e > 0 && qz(r[e * 2 - 2], r[e * 2 - 1]); e--)
    ;
  return e - 1;
}
function E1(r, e) {
  return [r[e * 2], r[e * 2 + 1]];
}
function jz(r, e, t) {
  for (var a = r.length / 2, n = t === "x" ? 0 : 1, i, o, s = 0, l = -1, u = 0; u < a; u++)
    if (o = r[u * 2 + n], !(isNaN(o) || isNaN(r[u * 2 + 1 - n]))) {
      if (u === 0) {
        i = o;
        continue;
      }
      if (i <= e && o >= e || i >= e && o <= e) {
        l = u;
        break;
      }
      s = u, i = o;
    }
  return {
    range: [s, l],
    t: (e - i) / (o - i)
  };
}
function rM(r) {
  if (r.get(["endLabel", "show"]))
    return !0;
  for (var e = 0; e < Le.length; e++)
    if (r.get([Le[e], "endLabel", "show"]))
      return !0;
  return !1;
}
function dv(r, e, t, a) {
  if (bi(e, "cartesian2d")) {
    var n = a.getModel("endLabel"), i = n.get("valueAnimation"), o = a.getData(), s = {
      lastFrameIndex: 0
    }, l = rM(a) ? function(v, d) {
      r._endLabelOnDuring(v, d, o, s, i, n, e);
    } : null, u = e.getBaseAxis().isHorizontal(), f = tM(e, t, a, function() {
      var v = r._endLabel;
      v && t && s.originalX != null && v.attr({
        x: s.originalX,
        y: s.originalY
      });
    }, l);
    if (!a.get("clip", !0)) {
      var h = f.shape, c = Math.max(h.width, h.height);
      u ? (h.y -= c, h.height += c * 2) : (h.x -= c, h.width += c * 2);
    }
    return l && l(1, f), f;
  } else
    return {}.NODE_ENV !== "production" && a.get(["endLabel", "show"]) && console.warn("endLabel is not supported for lines in polar systems."), eM(e, t, a);
}
function Jz(r, e) {
  var t = e.getBaseAxis(), a = t.isHorizontal(), n = t.inverse, i = a ? n ? "right" : "left" : "center", o = a ? "middle" : n ? "top" : "bottom";
  return {
    normal: {
      align: r.get("align") || i,
      verticalAlign: r.get("verticalAlign") || o
    }
  };
}
var Qz = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return e.prototype.init = function() {
      var t = new nt(), a = new Ml();
      this.group.add(a.group), this._symbolDraw = a, this._lineGroup = t;
    }, e.prototype.render = function(t, a, n) {
      var i = this, o = t.coordinateSystem, s = this.group, l = t.getData(), u = t.getModel("lineStyle"), f = t.getModel("areaStyle"), h = l.getLayout("points") || [], c = o.type === "polar", v = this._coordSys, d = this._symbolDraw, p = this._polyline, g = this._polygon, y = this._lineGroup, m = !a.ssr && t.isAnimationEnabled(), _ = !f.isEmpty(), S = f.get("origin"), w = KA(o, l, S), x = _ && $z(o, l, w), b = t.get("showSymbol"), T = t.get("connectNulls"), C = b && !c && Zz(t, l, o), D = this._data;
      D && D.eachItemGraphicEl(function(St, pt) {
        St.__temp && (s.remove(St), D.setItemGraphicEl(pt, null));
      }), b || d.remove(), s.add(y);
      var A = c ? !1 : t.get("step"), I;
      o && o.getArea && t.get("clip", !0) && (I = o.getArea(), I.width != null ? (I.x -= 0.1, I.y -= 0.1, I.width += 0.2, I.height += 0.2) : I.r0 && (I.r0 -= 0.5, I.r += 0.5)), this._clipShapeForSymbol = I;
      var L = Yz(l, o, n) || l.getVisual("style")[l.getVisual("drawType")];
      if (!(p && v.type === o.type && A === this._step))
        b && d.updateData(l, {
          isIgnore: C,
          clipShape: I,
          disableAnimation: !0,
          getSymbolPoint: function(St) {
            return [h[St * 2], h[St * 2 + 1]];
          }
        }), m && this._initSymbolLabelAnimation(l, o, I), A && (h = Na(h, o, A, T), x && (x = Na(x, o, A, T))), p = this._newPolyline(h), _ ? g = this._newPolygon(h, x) : g && (y.remove(g), g = this._polygon = null), c || this._initOrUpdateEndLabel(t, o, pi(L)), y.setClipPath(dv(this, o, !0, t));
      else {
        _ && !g ? g = this._newPolygon(h, x) : g && !_ && (y.remove(g), g = this._polygon = null), c || this._initOrUpdateEndLabel(t, o, pi(L));
        var E = y.getClipPath();
        if (E) {
          var P = dv(this, o, !1, t);
          Bt(E, {
            shape: P.shape
          }, t);
        } else
          y.setClipPath(dv(this, o, !0, t));
        b && d.updateData(l, {
          isIgnore: C,
          clipShape: I,
          disableAnimation: !0,
          getSymbolPoint: function(St) {
            return [h[St * 2], h[St * 2 + 1]];
          }
        }), (!A1(this._stackedOnPoints, x) || !A1(this._points, h)) && (m ? this._doUpdateAnimation(l, x, o, n, A, S, T) : (A && (h = Na(h, o, A, T), x && (x = Na(x, o, A, T))), p.setShape({
          points: h
        }), g && g.setShape({
          points: h,
          stackedOnPoints: x
        })));
      }
      var R = t.getModel("emphasis"), k = R.get("focus"), O = R.get("blurScope"), B = R.get("disabled");
      if (p.useStyle(et(
        // Use color in lineStyle first
        u.getLineStyle(),
        {
          fill: "none",
          stroke: L,
          lineJoin: "bevel"
        }
      )), de(p, t, "lineStyle"), p.style.lineWidth > 0 && t.get(["emphasis", "lineStyle", "width"]) === "bolder") {
        var F = p.getState("emphasis").style;
        F.lineWidth = +p.style.lineWidth + 1;
      }
      it(p).seriesIndex = t.seriesIndex, Wt(p, k, O, B);
      var W = L1(t.get("smooth")), Z = t.get("smoothMonotone");
      if (p.setShape({
        smooth: W,
        smoothMonotone: Z,
        connectNulls: T
      }), g) {
        var Q = l.getCalculationInfo("stackedOnSeries"), tt = 0;
        g.useStyle(et(f.getAreaStyle(), {
          fill: L,
          opacity: 0.7,
          lineJoin: "bevel",
          decal: l.getVisual("style").decal
        })), Q && (tt = L1(Q.get("smooth"))), g.setShape({
          smooth: W,
          stackedOnSmooth: tt,
          smoothMonotone: Z,
          connectNulls: T
        }), de(g, t, "areaStyle"), it(g).seriesIndex = t.seriesIndex, Wt(g, k, O, B);
      }
      var dt = function(St) {
        i._changePolyState(St);
      };
      l.eachItemGraphicEl(function(St) {
        St && (St.onHoverStateChange = dt);
      }), this._polyline.onHoverStateChange = dt, this._data = l, this._coordSys = o, this._stackedOnPoints = x, this._points = h, this._step = A, this._valueOrigin = S, t.get("triggerLineEvent") && (this.packEventData(t, p), g && this.packEventData(t, g));
    }, e.prototype.packEventData = function(t, a) {
      it(a).eventData = {
        componentType: "series",
        componentSubType: "line",
        componentIndex: t.componentIndex,
        seriesIndex: t.seriesIndex,
        seriesName: t.name,
        seriesType: "line"
      };
    }, e.prototype.highlight = function(t, a, n, i) {
      var o = t.getData(), s = ci(o, i);
      if (this._changePolyState("emphasis"), !(s instanceof Array) && s != null && s >= 0) {
        var l = o.getLayout("points"), u = o.getItemGraphicEl(s);
        if (!u) {
          var f = l[s * 2], h = l[s * 2 + 1];
          if (isNaN(f) || isNaN(h) || this._clipShapeForSymbol && !this._clipShapeForSymbol.contain(f, h))
            return;
          var c = t.get("zlevel") || 0, v = t.get("z") || 0;
          u = new Al(o, s), u.x = f, u.y = h, u.setZ(c, v);
          var d = u.getSymbolPath().getTextContent();
          d && (d.zlevel = c, d.z = v, d.z2 = this._polyline.z2 + 1), u.__temp = !0, o.setItemGraphicEl(s, u), u.stopSymbolAnimation(!0), this.group.add(u);
        }
        u.highlight();
      } else
        Vt.prototype.highlight.call(this, t, a, n, i);
    }, e.prototype.downplay = function(t, a, n, i) {
      var o = t.getData(), s = ci(o, i);
      if (this._changePolyState("normal"), s != null && s >= 0) {
        var l = o.getItemGraphicEl(s);
        l && (l.__temp ? (o.setItemGraphicEl(s, null), this.group.remove(l)) : l.downplay());
      } else
        Vt.prototype.downplay.call(this, t, a, n, i);
    }, e.prototype._changePolyState = function(t) {
      var a = this._polygon;
      yf(this._polyline, t), a && yf(a, t);
    }, e.prototype._newPolyline = function(t) {
      var a = this._polyline;
      return a && this._lineGroup.remove(a), a = new Hz({
        shape: {
          points: t
        },
        segmentIgnoreThreshold: 2,
        z2: 10
      }), this._lineGroup.add(a), this._polyline = a, a;
    }, e.prototype._newPolygon = function(t, a) {
      var n = this._polygon;
      return n && this._lineGroup.remove(n), n = new QA({
        shape: {
          points: t,
          stackedOnPoints: a
        },
        segmentIgnoreThreshold: 2
      }), this._lineGroup.add(n), this._polygon = n, n;
    }, e.prototype._initSymbolLabelAnimation = function(t, a, n) {
      var i, o, s = a.getBaseAxis(), l = s.inverse;
      a.type === "cartesian2d" ? (i = s.isHorizontal(), o = !1) : a.type === "polar" && (i = s.dim === "angle", o = !0);
      var u = t.hostModel, f = u.get("animationDuration");
      K(f) && (f = f(null));
      var h = u.get("animationDelay") || 0, c = K(h) ? h(null) : h;
      t.eachItemGraphicEl(function(v, d) {
        var p = v;
        if (p) {
          var g = [v.x, v.y], y = void 0, m = void 0, _ = void 0;
          if (n)
            if (o) {
              var S = n, w = a.pointToCoord(g);
              i ? (y = S.startAngle, m = S.endAngle, _ = -w[1] / 180 * Math.PI) : (y = S.r0, m = S.r, _ = w[0]);
            } else {
              var x = n;
              i ? (y = x.x, m = x.x + x.width, _ = v.x) : (y = x.y + x.height, m = x.y, _ = v.y);
            }
          var b = m === y ? 0 : (_ - y) / (m - y);
          l && (b = 1 - b);
          var T = K(h) ? h(d) : f * b + c, C = p.getSymbolPath(), D = C.getTextContent();
          p.attr({
            scaleX: 0,
            scaleY: 0
          }), p.animateTo({
            scaleX: 1,
            scaleY: 1
          }, {
            duration: 200,
            setToFinal: !0,
            delay: T
          }), D && D.animateFrom({
            style: {
              opacity: 0
            }
          }, {
            duration: 300,
            delay: T
          }), C.disableLabelAnimation = !0;
        }
      });
    }, e.prototype._initOrUpdateEndLabel = function(t, a, n) {
      var i = t.getModel("endLabel");
      if (rM(t)) {
        var o = t.getData(), s = this._polyline, l = o.getLayout("points");
        if (!l) {
          s.removeTextContent(), this._endLabel = null;
          return;
        }
        var u = this._endLabel;
        u || (u = this._endLabel = new Ct({
          z2: 200
          // should be higher than item symbol
        }), u.ignoreClip = !0, s.setTextContent(this._endLabel), s.disableLabelAnimation = !0);
        var f = Kz(l);
        f >= 0 && (pe(s, oe(t, "endLabel"), {
          inheritColor: n,
          labelFetcher: t,
          labelDataIndex: f,
          defaultText: function(h, c, v) {
            return v != null ? qA(o, v) : yo(o, h);
          },
          enableTextSetter: !0
        }, Jz(i, a)), s.textConfig.position = null);
      } else
        this._endLabel && (this._polyline.removeTextContent(), this._endLabel = null);
    }, e.prototype._endLabelOnDuring = function(t, a, n, i, o, s, l) {
      var u = this._endLabel, f = this._polyline;
      if (u) {
        t < 1 && i.originalX == null && (i.originalX = u.x, i.originalY = u.y);
        var h = n.getLayout("points"), c = n.hostModel, v = c.get("connectNulls"), d = s.get("precision"), p = s.get("distance") || 0, g = l.getBaseAxis(), y = g.isHorizontal(), m = g.inverse, _ = a.shape, S = m ? y ? _.x : _.y + _.height : y ? _.x + _.width : _.y, w = (y ? p : 0) * (m ? -1 : 1), x = (y ? 0 : -p) * (m ? -1 : 1), b = y ? "x" : "y", T = jz(h, S, b), C = T.range, D = C[1] - C[0], A = void 0;
        if (D >= 1) {
          if (D > 1 && !v) {
            var I = E1(h, C[0]);
            u.attr({
              x: I[0] + w,
              y: I[1] + x
            }), o && (A = c.getRawValue(C[0]));
          } else {
            var I = f.getPointOn(S, b);
            I && u.attr({
              x: I[0] + w,
              y: I[1] + x
            });
            var L = c.getRawValue(C[0]), E = c.getRawValue(C[1]);
            o && (A = bT(n, d, L, E, T.t));
          }
          i.lastFrameIndex = C[0];
        } else {
          var P = t === 1 || i.lastFrameIndex > 0 ? C[0] : 0, I = E1(h, P);
          o && (A = c.getRawValue(P)), u.attr({
            x: I[0] + w,
            y: I[1] + x
          });
        }
        if (o) {
          var R = Io(u);
          typeof R.setLabelText == "function" && R.setLabelText(A);
        }
      }
    }, e.prototype._doUpdateAnimation = function(t, a, n, i, o, s, l) {
      var u = this._polyline, f = this._polygon, h = t.hostModel, c = Fz(this._data, t, this._stackedOnPoints, a, this._coordSys, n, this._valueOrigin), v = c.current, d = c.stackedOnCurrent, p = c.next, g = c.stackedOnNext;
      if (o && (v = Na(c.current, n, o, l), d = Na(c.stackedOnCurrent, n, o, l), p = Na(c.next, n, o, l), g = Na(c.stackedOnNext, n, o, l)), I1(v, p) > 3e3 || f && I1(d, g) > 3e3) {
        u.stopAnimation(), u.setShape({
          points: p
        }), f && (f.stopAnimation(), f.setShape({
          points: p,
          stackedOnPoints: g
        }));
        return;
      }
      u.shape.__points = c.current, u.shape.points = v;
      var y = {
        shape: {
          points: p
        }
      };
      c.current !== v && (y.shape.__points = c.next), u.stopAnimation(), Mt(u, y, h), f && (f.setShape({
        // Reuse the points with polyline.
        points: v,
        stackedOnPoints: d
      }), f.stopAnimation(), Mt(f, {
        shape: {
          stackedOnPoints: g
        }
      }, h), u.shape.points !== f.shape.points && (f.shape.points = u.shape.points));
      for (var m = [], _ = c.status, S = 0; S < _.length; S++) {
        var w = _[S].cmd;
        if (w === "=") {
          var x = t.getItemGraphicEl(_[S].idx1);
          x && m.push({
            el: x,
            ptIdx: S
            // Index of points
          });
        }
      }
      u.animators && u.animators.length && u.animators[0].during(function() {
        f && f.dirtyShape();
        for (var b = u.shape.__points, T = 0; T < m.length; T++) {
          var C = m[T].el, D = m[T].ptIdx * 2;
          C.x = b[D], C.y = b[D + 1], C.markRedraw();
        }
      });
    }, e.prototype.remove = function(t) {
      var a = this.group, n = this._data;
      this._lineGroup.removeAll(), this._symbolDraw.remove(!0), n && n.eachItemGraphicEl(function(i, o) {
        i.__temp && (a.remove(i), n.setItemGraphicEl(o, null));
      }), this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._endLabel = this._data = null;
    }, e.type = "line", e;
  }(Vt)
);
const t5 = Qz;
function Il(r, e) {
  return {
    seriesType: r,
    plan: ko(),
    reset: function(t) {
      var a = t.getData(), n = t.coordinateSystem, i = t.pipelineContext, o = e || i.large;
      if (n) {
        var s = G(n.dimensions, function(v) {
          return a.mapDimension(v);
        }).slice(0, 2), l = s.length, u = a.getCalculationInfo("stackResultDimension");
        an(a, s[0]) && (s[0] = u), an(a, s[1]) && (s[1] = u);
        var f = a.getStore(), h = a.getDimensionIndex(s[0]), c = a.getDimensionIndex(s[1]);
        return l && {
          progress: function(v, d) {
            for (var p = v.end - v.start, g = o && Wr(p * l), y = [], m = [], _ = v.start, S = 0; _ < v.end; _++) {
              var w = void 0;
              if (l === 1) {
                var x = f.get(h, _);
                w = n.dataToPoint(x, null, m);
              } else
                y[0] = f.get(h, _), y[1] = f.get(c, _), w = n.dataToPoint(y, null, m);
              o ? (g[S++] = w[0], g[S++] = w[1]) : d.setItemLayout(_, w.slice());
            }
            o && d.setLayout("points", g);
          }
        };
      }
    }
  };
}
var e5 = {
  average: function(r) {
    for (var e = 0, t = 0, a = 0; a < r.length; a++)
      isNaN(r[a]) || (e += r[a], t++);
    return t === 0 ? NaN : e / t;
  },
  sum: function(r) {
    for (var e = 0, t = 0; t < r.length; t++)
      e += r[t] || 0;
    return e;
  },
  max: function(r) {
    for (var e = -1 / 0, t = 0; t < r.length; t++)
      r[t] > e && (e = r[t]);
    return isFinite(e) ? e : NaN;
  },
  min: function(r) {
    for (var e = 1 / 0, t = 0; t < r.length; t++)
      r[t] < e && (e = r[t]);
    return isFinite(e) ? e : NaN;
  },
  // TODO
  // Median
  nearest: function(r) {
    return r[0];
  }
}, r5 = function(r) {
  return Math.round(r.length / 2);
};
function aM(r) {
  return {
    seriesType: r,
    // FIXME:TS never used, so comment it
    // modifyOutputEnd: true,
    reset: function(e, t, a) {
      var n = e.getData(), i = e.get("sampling"), o = e.coordinateSystem, s = n.count();
      if (s > 10 && o.type === "cartesian2d" && i) {
        var l = o.getBaseAxis(), u = o.getOtherAxis(l), f = l.getExtent(), h = a.getDevicePixelRatio(), c = Math.abs(f[1] - f[0]) * (h || 1), v = Math.round(s / c);
        if (isFinite(v) && v > 1) {
          i === "lttb" && e.setData(n.lttbDownSample(n.mapDimension(u.dim), 1 / v));
          var d = void 0;
          $(i) ? d = e5[i] : K(i) && (d = i), d && e.setData(n.downSample(n.mapDimension(u.dim), 1 / v, d, r5));
        }
      }
    }
  };
}
function a5(r) {
  r.registerChartView(t5), r.registerSeriesModel(Oz), r.registerLayout(Il("line", !0)), r.registerVisual({
    seriesType: "line",
    reset: function(e) {
      var t = e.getData(), a = e.getModel("lineStyle").getLineStyle();
      a && !a.stroke && (a.stroke = t.getVisual("style").fill), t.setVisual("legendLineStyle", a);
    }
  }), r.registerProcessor(r.PRIORITY.PROCESSOR.STATISTIC, aM("line"));
}
var nM = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.getInitialData = function(t, a) {
      return wa(null, this, {
        useEncodeDefaulter: !0
      });
    }, e.prototype.getMarkerPosition = function(t, a, n) {
      var i = this.coordinateSystem;
      if (i && i.clampData) {
        var o = i.clampData(t), s = i.dataToPoint(o);
        if (n)
          M(i.getAxes(), function(c, v) {
            if (c.type === "category" && a != null) {
              var d = c.getTicksCoords(), p = o[v], g = a[v] === "x1" || a[v] === "y1";
              if (g && (p += 1), d.length < 2)
                return;
              if (d.length === 2) {
                s[v] = c.toGlobalCoord(c.getExtent()[g ? 1 : 0]);
                return;
              }
              for (var y = void 0, m = void 0, _ = 1, S = 0; S < d.length; S++) {
                var w = d[S].coord, x = S === d.length - 1 ? d[S - 1].tickValue + _ : d[S].tickValue;
                if (x === p) {
                  m = w;
                  break;
                } else if (x < p)
                  y = w;
                else if (y != null && x > p) {
                  m = (w + y) / 2;
                  break;
                }
                S === 1 && (_ = x - d[0].tickValue);
              }
              m == null && (y ? y && (m = d[d.length - 1].coord) : m = d[0].coord), s[v] = c.toGlobalCoord(m);
            }
          });
        else {
          var l = this.getData(), u = l.getLayout("offset"), f = l.getLayout("size"), h = i.getBaseAxis().isHorizontal() ? 0 : 1;
          s[h] += u + f / 2;
        }
        return s;
      }
      return [NaN, NaN];
    }, e.type = "series.__base_bar__", e.defaultOption = {
      // zlevel: 0,
      z: 2,
      coordinateSystem: "cartesian2d",
      legendHoverLink: !0,
      // stack: null
      // Cartesian coordinate system
      // xAxisIndex: 0,
      // yAxisIndex: 0,
      barMinHeight: 0,
      barMinAngle: 0,
      // cursor: null,
      large: !1,
      largeThreshold: 400,
      progressive: 3e3,
      progressiveChunkMode: "mod"
    }, e;
  }(Gt)
);
Gt.registerClass(nM);
const Bf = nM;
var n5 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.getInitialData = function() {
      return wa(null, this, {
        useEncodeDefaulter: !0,
        createInvertedIndices: !!this.get("realtimeSort", !0) || null
      });
    }, e.prototype.getProgressive = function() {
      return this.get("large") ? this.get("progressive") : !1;
    }, e.prototype.getProgressiveThreshold = function() {
      var t = this.get("progressiveThreshold"), a = this.get("largeThreshold");
      return a > t && (t = a), t;
    }, e.prototype.brushSelector = function(t, a, n) {
      return n.rect(a.getItemLayout(t));
    }, e.type = "series.bar", e.dependencies = ["grid", "polar"], e.defaultOption = fn(Bf.defaultOption, {
      // If clipped
      // Only available on cartesian2d
      clip: !0,
      roundCap: !1,
      showBackground: !1,
      backgroundStyle: {
        color: "rgba(180, 180, 180, 0.2)",
        borderColor: null,
        borderWidth: 0,
        borderType: "solid",
        borderRadius: 0,
        shadowBlur: 0,
        shadowColor: null,
        shadowOffsetX: 0,
        shadowOffsetY: 0,
        opacity: 1
      },
      select: {
        itemStyle: {
          borderColor: "#212121"
        }
      },
      realtimeSort: !1
    }), e;
  }(Bf)
);
const i5 = n5;
var o5 = (
  /** @class */
  function() {
    function r() {
      this.cx = 0, this.cy = 0, this.r0 = 0, this.r = 0, this.startAngle = 0, this.endAngle = Math.PI * 2, this.clockwise = !0;
    }
    return r;
  }()
), s5 = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t) {
      var a = r.call(this, t) || this;
      return a.type = "sausage", a;
    }
    return e.prototype.getDefaultShape = function() {
      return new o5();
    }, e.prototype.buildPath = function(t, a) {
      var n = a.cx, i = a.cy, o = Math.max(a.r0 || 0, 0), s = Math.max(a.r, 0), l = (s - o) * 0.5, u = o + l, f = a.startAngle, h = a.endAngle, c = a.clockwise, v = Math.PI * 2, d = c ? h - f < v : f - h < v;
      d || (f = h - (c ? v : -v));
      var p = Math.cos(f), g = Math.sin(f), y = Math.cos(h), m = Math.sin(h);
      d ? (t.moveTo(p * o + n, g * o + i), t.arc(p * u + n, g * u + i, l, -Math.PI + f, f, !c)) : t.moveTo(p * s + n, g * s + i), t.arc(n, i, s, f, h, !c), t.arc(y * u + n, m * u + i, l, h - Math.PI * 2, h - Math.PI, !c), o !== 0 && t.arc(n, i, o, h, f, c);
    }, e;
  }(mt)
);
const zf = s5;
function l5(r, e) {
  e = e || {};
  var t = e.isRoundCap;
  return function(a, n, i) {
    var o = n.position;
    if (!o || o instanceof Array)
      return df(a, n, i);
    var s = r(o), l = n.distance != null ? n.distance : 5, u = this.shape, f = u.cx, h = u.cy, c = u.r, v = u.r0, d = (c + v) / 2, p = u.startAngle, g = u.endAngle, y = (p + g) / 2, m = t ? Math.abs(c - v) / 2 : 0, _ = Math.cos, S = Math.sin, w = f + c * _(p), x = h + c * S(p), b = "left", T = "top";
    switch (s) {
      case "startArc":
        w = f + (v - l) * _(y), x = h + (v - l) * S(y), b = "center", T = "top";
        break;
      case "insideStartArc":
        w = f + (v + l) * _(y), x = h + (v + l) * S(y), b = "center", T = "bottom";
        break;
      case "startAngle":
        w = f + d * _(p) + yu(p, l + m, !1), x = h + d * S(p) + mu(p, l + m, !1), b = "right", T = "middle";
        break;
      case "insideStartAngle":
        w = f + d * _(p) + yu(p, -l + m, !1), x = h + d * S(p) + mu(p, -l + m, !1), b = "left", T = "middle";
        break;
      case "middle":
        w = f + d * _(y), x = h + d * S(y), b = "center", T = "middle";
        break;
      case "endArc":
        w = f + (c + l) * _(y), x = h + (c + l) * S(y), b = "center", T = "bottom";
        break;
      case "insideEndArc":
        w = f + (c - l) * _(y), x = h + (c - l) * S(y), b = "center", T = "top";
        break;
      case "endAngle":
        w = f + d * _(g) + yu(g, l + m, !0), x = h + d * S(g) + mu(g, l + m, !0), b = "left", T = "middle";
        break;
      case "insideEndAngle":
        w = f + d * _(g) + yu(g, -l + m, !0), x = h + d * S(g) + mu(g, -l + m, !0), b = "right", T = "middle";
        break;
      default:
        return df(a, n, i);
    }
    return a = a || {}, a.x = w, a.y = x, a.align = b, a.verticalAlign = T, a;
  };
}
function u5(r, e, t, a) {
  if (At(a)) {
    r.setTextConfig({
      rotation: a
    });
    return;
  } else if (z(e)) {
    r.setTextConfig({
      rotation: 0
    });
    return;
  }
  var n = r.shape, i = n.clockwise ? n.startAngle : n.endAngle, o = n.clockwise ? n.endAngle : n.startAngle, s = (i + o) / 2, l, u = t(e);
  switch (u) {
    case "startArc":
    case "insideStartArc":
    case "middle":
    case "insideEndArc":
    case "endArc":
      l = s;
      break;
    case "startAngle":
    case "insideStartAngle":
      l = i;
      break;
    case "endAngle":
    case "insideEndAngle":
      l = o;
      break;
    default:
      r.setTextConfig({
        rotation: 0
      });
      return;
  }
  var f = Math.PI * 1.5 - l;
  u === "middle" && f > Math.PI / 2 && f < Math.PI * 1.5 && (f -= Math.PI), r.setTextConfig({
    rotation: f
  });
}
function yu(r, e, t) {
  return e * Math.sin(r) * (t ? -1 : 1);
}
function mu(r, e, t) {
  return e * Math.cos(r) * (t ? 1 : -1);
}
function Qn(r, e, t) {
  var a = r.get("borderRadius");
  if (a == null)
    return t ? {
      cornerRadius: 0
    } : null;
  z(a) || (a = [a, a, a, a]);
  var n = Math.abs(e.r || 0 - e.r0 || 0);
  return {
    cornerRadius: G(a, function(i) {
      return Cr(i, n);
    })
  };
}
var pv = Math.max, gv = Math.min;
function f5(r, e) {
  var t = r.getArea && r.getArea();
  if (bi(r, "cartesian2d")) {
    var a = r.getBaseAxis();
    if (a.type !== "category" || !a.onBand) {
      var n = e.getLayout("bandWidth");
      a.isHorizontal() ? (t.x -= n, t.width += n * 2) : (t.y -= n, t.height += n * 2);
    }
  }
  return t;
}
var h5 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r.call(this) || this;
      return t.type = e.type, t._isFirstFrame = !0, t;
    }
    return e.prototype.render = function(t, a, n, i) {
      this._model = t, this._removeOnRenderedListener(n), this._updateDrawMode(t);
      var o = t.get("coordinateSystem");
      o === "cartesian2d" || o === "polar" ? (this._progressiveEls = null, this._isLargeDraw ? this._renderLarge(t, a, n) : this._renderNormal(t, a, n, i)) : {}.NODE_ENV !== "production" && Ft("Only cartesian2d and polar supported for bar.");
    }, e.prototype.incrementalPrepareRender = function(t) {
      this._clear(), this._updateDrawMode(t), this._updateLargeClip(t);
    }, e.prototype.incrementalRender = function(t, a) {
      this._progressiveEls = [], this._incrementalRenderLarge(t, a);
    }, e.prototype.eachRendered = function(t) {
      un(this._progressiveEls || this.group, t);
    }, e.prototype._updateDrawMode = function(t) {
      var a = t.pipelineContext.large;
      (this._isLargeDraw == null || a !== this._isLargeDraw) && (this._isLargeDraw = a, this._clear());
    }, e.prototype._renderNormal = function(t, a, n, i) {
      var o = this.group, s = t.getData(), l = this._data, u = t.coordinateSystem, f = u.getBaseAxis(), h;
      u.type === "cartesian2d" ? h = f.isHorizontal() : u.type === "polar" && (h = f.dim === "angle");
      var c = t.isAnimationEnabled() ? t : null, v = c5(t, u);
      v && this._enableRealtimeSort(v, s, n);
      var d = t.get("clip", !0) || v, p = f5(u, s);
      o.removeClipPath();
      var g = t.get("roundCap", !0), y = t.get("showBackground", !0), m = t.getModel("backgroundStyle"), _ = m.get("borderRadius") || 0, S = [], w = this._backgroundEls, x = i && i.isInitSort, b = i && i.type === "changeAxisOrder";
      function T(A) {
        var I = _u[u.type](s, A), L = _5(u, h, I);
        return L.useStyle(m.getItemStyle()), u.type === "cartesian2d" ? L.setShape("r", _) : L.setShape("cornerRadius", _), S[A] = L, L;
      }
      s.diff(l).add(function(A) {
        var I = s.getItemModel(A), L = _u[u.type](s, A, I);
        if (y && T(A), !(!s.hasValue(A) || !k1[u.type](L))) {
          var E = !1;
          d && (E = P1[u.type](p, L));
          var P = R1[u.type](t, s, A, L, h, c, f.model, !1, g);
          v && (P.forceLabelAnimation = !0), V1(P, s, A, I, L, t, h, u.type === "polar"), x ? P.attr({
            shape: L
          }) : v ? N1(v, c, P, L, A, h, !1, !1) : Bt(P, {
            shape: L
          }, t, A), s.setItemGraphicEl(A, P), o.add(P), P.ignore = E;
        }
      }).update(function(A, I) {
        var L = s.getItemModel(A), E = _u[u.type](s, A, L);
        if (y) {
          var P = void 0;
          w.length === 0 ? P = T(I) : (P = w[I], P.useStyle(m.getItemStyle()), u.type === "cartesian2d" ? P.setShape("r", _) : P.setShape("cornerRadius", _), S[A] = P);
          var R = _u[u.type](s, A), k = oM(h, R, u);
          Mt(P, {
            shape: k
          }, c, A);
        }
        var O = l.getItemGraphicEl(I);
        if (!s.hasValue(A) || !k1[u.type](E)) {
          o.remove(O);
          return;
        }
        var B = !1;
        if (d && (B = P1[u.type](p, E), B && o.remove(O)), O ? Mr(O) : O = R1[u.type](t, s, A, E, h, c, f.model, !!O, g), v && (O.forceLabelAnimation = !0), b) {
          var F = O.getTextContent();
          if (F) {
            var W = Io(F);
            W.prevValue != null && (W.prevValue = W.value);
          }
        } else
          V1(O, s, A, L, E, t, h, u.type === "polar");
        x ? O.attr({
          shape: E
        }) : v ? N1(v, c, O, E, A, h, !0, b) : Mt(O, {
          shape: E
        }, t, A, null), s.setItemGraphicEl(A, O), O.ignore = B, o.add(O);
      }).remove(function(A) {
        var I = l.getItemGraphicEl(A);
        I && qs(I, t, A);
      }).execute();
      var C = this._backgroundGroup || (this._backgroundGroup = new nt());
      C.removeAll();
      for (var D = 0; D < S.length; ++D)
        C.add(S[D]);
      o.add(C), this._backgroundEls = S, this._data = s;
    }, e.prototype._renderLarge = function(t, a, n) {
      this._clear(), z1(t, this.group), this._updateLargeClip(t);
    }, e.prototype._incrementalRenderLarge = function(t, a) {
      this._removeBackground(), z1(a, this.group, this._progressiveEls, !0);
    }, e.prototype._updateLargeClip = function(t) {
      var a = t.get("clip", !0) && Gh(t.coordinateSystem, !1, t), n = this.group;
      a ? n.setClipPath(a) : n.removeClipPath();
    }, e.prototype._enableRealtimeSort = function(t, a, n) {
      var i = this;
      if (a.count()) {
        var o = t.baseAxis;
        if (this._isFirstFrame)
          this._dispatchInitSort(a, t, n), this._isFirstFrame = !1;
        else {
          var s = function(l) {
            var u = a.getItemGraphicEl(l), f = u && u.shape;
            return f && // The result should be consistent with the initial sort by data value.
            // Do not support the case that both positive and negative exist.
            Math.abs(o.isHorizontal() ? f.height : f.width) || 0;
          };
          this._onRendered = function() {
            i._updateSortWithinSameData(a, s, o, n);
          }, n.getZr().on("rendered", this._onRendered);
        }
      }
    }, e.prototype._dataSort = function(t, a, n) {
      var i = [];
      return t.each(t.mapDimension(a.dim), function(o, s) {
        var l = n(s);
        l = l == null ? NaN : l, i.push({
          dataIndex: s,
          mappedValue: l,
          ordinalNumber: o
        });
      }), i.sort(function(o, s) {
        return s.mappedValue - o.mappedValue;
      }), {
        ordinalNumbers: G(i, function(o) {
          return o.ordinalNumber;
        })
      };
    }, e.prototype._isOrderChangedWithinSameData = function(t, a, n) {
      for (var i = n.scale, o = t.mapDimension(n.dim), s = Number.MAX_VALUE, l = 0, u = i.getOrdinalMeta().categories.length; l < u; ++l) {
        var f = t.rawIndexOf(o, i.getRawOrdinalNumber(l)), h = f < 0 ? Number.MIN_VALUE : a(t.indexOfRawIndex(f));
        if (h > s)
          return !0;
        s = h;
      }
      return !1;
    }, e.prototype._isOrderDifferentInView = function(t, a) {
      for (var n = a.scale, i = n.getExtent(), o = Math.max(0, i[0]), s = Math.min(i[1], n.getOrdinalMeta().categories.length - 1); o <= s; ++o)
        if (t.ordinalNumbers[o] !== n.getRawOrdinalNumber(o))
          return !0;
    }, e.prototype._updateSortWithinSameData = function(t, a, n, i) {
      if (this._isOrderChangedWithinSameData(t, a, n)) {
        var o = this._dataSort(t, n, a);
        this._isOrderDifferentInView(o, n) && (this._removeOnRenderedListener(i), i.dispatchAction({
          type: "changeAxisOrder",
          componentType: n.dim + "Axis",
          axisId: n.index,
          sortInfo: o
        }));
      }
    }, e.prototype._dispatchInitSort = function(t, a, n) {
      var i = a.baseAxis, o = this._dataSort(t, i, function(s) {
        return t.get(t.mapDimension(a.otherAxis.dim), s);
      });
      n.dispatchAction({
        type: "changeAxisOrder",
        componentType: i.dim + "Axis",
        isInitSort: !0,
        axisId: i.index,
        sortInfo: o
      });
    }, e.prototype.remove = function(t, a) {
      this._clear(this._model), this._removeOnRenderedListener(a);
    }, e.prototype.dispose = function(t, a) {
      this._removeOnRenderedListener(a);
    }, e.prototype._removeOnRenderedListener = function(t) {
      this._onRendered && (t.getZr().off("rendered", this._onRendered), this._onRendered = null);
    }, e.prototype._clear = function(t) {
      var a = this.group, n = this._data;
      t && t.isAnimationEnabled() && n && !this._isLargeDraw ? (this._removeBackground(), this._backgroundEls = [], n.eachItemGraphicEl(function(i) {
        qs(i, t, it(i).dataIndex);
      })) : a.removeAll(), this._data = null, this._isFirstFrame = !0;
    }, e.prototype._removeBackground = function() {
      this.group.remove(this._backgroundGroup), this._backgroundGroup = null;
    }, e.type = "bar", e;
  }(Vt)
), P1 = {
  cartesian2d: function(r, e) {
    var t = e.width < 0 ? -1 : 1, a = e.height < 0 ? -1 : 1;
    t < 0 && (e.x += e.width, e.width = -e.width), a < 0 && (e.y += e.height, e.height = -e.height);
    var n = r.x + r.width, i = r.y + r.height, o = pv(e.x, r.x), s = gv(e.x + e.width, n), l = pv(e.y, r.y), u = gv(e.y + e.height, i), f = s < o, h = u < l;
    return e.x = f && o > n ? s : o, e.y = h && l > i ? u : l, e.width = f ? 0 : s - o, e.height = h ? 0 : u - l, t < 0 && (e.x += e.width, e.width = -e.width), a < 0 && (e.y += e.height, e.height = -e.height), f || h;
  },
  polar: function(r, e) {
    var t = e.r0 <= e.r ? 1 : -1;
    if (t < 0) {
      var a = e.r;
      e.r = e.r0, e.r0 = a;
    }
    var n = gv(e.r, r.r), i = pv(e.r0, r.r0);
    e.r = n, e.r0 = i;
    var o = n - i < 0;
    if (t < 0) {
      var a = e.r;
      e.r = e.r0, e.r0 = a;
    }
    return o;
  }
}, R1 = {
  cartesian2d: function(r, e, t, a, n, i, o, s, l) {
    var u = new Tt({
      shape: V({}, a),
      z2: 1
    });
    if (u.__dataIndex = t, u.name = "item", i) {
      var f = u.shape, h = n ? "height" : "width";
      f[h] = 0;
    }
    return u;
  },
  polar: function(r, e, t, a, n, i, o, s, l) {
    var u = !n && l ? zf : ze, f = new u({
      shape: a,
      z2: 1
    });
    f.name = "item";
    var h = iM(n);
    if (f.calculateTextPosition = l5(h, {
      isRoundCap: u === zf
    }), i) {
      var c = f.shape, v = n ? "r" : "endAngle", d = {};
      c[v] = n ? a.r0 : a.startAngle, d[v] = a[v], (s ? Mt : Bt)(f, {
        shape: d
        // __value: typeof dataValue === 'string' ? parseInt(dataValue, 10) : dataValue
      }, i);
    }
    return f;
  }
};
function c5(r, e) {
  var t = r.get("realtimeSort", !0), a = e.getBaseAxis();
  if ({}.NODE_ENV !== "production" && t && (a.type !== "category" && Ft("`realtimeSort` will not work because this bar series is not based on a category axis."), e.type !== "cartesian2d" && Ft("`realtimeSort` will not work because this bar series is not on cartesian2d.")), t && a.type === "category" && e.type === "cartesian2d")
    return {
      baseAxis: a,
      otherAxis: e.getOtherAxis(a)
    };
}
function N1(r, e, t, a, n, i, o, s) {
  var l, u;
  i ? (u = {
    x: a.x,
    width: a.width
  }, l = {
    y: a.y,
    height: a.height
  }) : (u = {
    y: a.y,
    height: a.height
  }, l = {
    x: a.x,
    width: a.width
  }), s || (o ? Mt : Bt)(t, {
    shape: l
  }, e, n, null);
  var f = e ? r.baseAxis.model : null;
  (o ? Mt : Bt)(t, {
    shape: u
  }, f, n);
}
function O1(r, e) {
  for (var t = 0; t < e.length; t++)
    if (!isFinite(r[e[t]]))
      return !0;
  return !1;
}
var v5 = ["x", "y", "width", "height"], d5 = ["cx", "cy", "r", "startAngle", "endAngle"], k1 = {
  cartesian2d: function(r) {
    return !O1(r, v5);
  },
  polar: function(r) {
    return !O1(r, d5);
  }
}, _u = {
  // itemModel is only used to get borderWidth, which is not needed
  // when calculating bar background layout.
  cartesian2d: function(r, e, t) {
    var a = r.getItemLayout(e), n = t ? g5(t, a) : 0, i = a.width > 0 ? 1 : -1, o = a.height > 0 ? 1 : -1;
    return {
      x: a.x + i * n / 2,
      y: a.y + o * n / 2,
      width: a.width - i * n,
      height: a.height - o * n
    };
  },
  polar: function(r, e, t) {
    var a = r.getItemLayout(e);
    return {
      cx: a.cx,
      cy: a.cy,
      r0: a.r0,
      r: a.r,
      startAngle: a.startAngle,
      endAngle: a.endAngle,
      clockwise: a.clockwise
    };
  }
};
function p5(r) {
  return r.startAngle != null && r.endAngle != null && r.startAngle === r.endAngle;
}
function iM(r) {
  return function(e) {
    var t = e ? "Arc" : "Angle";
    return function(a) {
      switch (a) {
        case "start":
        case "insideStart":
        case "end":
        case "insideEnd":
          return a + t;
        default:
          return a;
      }
    };
  }(r);
}
function V1(r, e, t, a, n, i, o, s) {
  var l = e.getItemVisual(t, "style");
  if (s) {
    if (!i.get("roundCap")) {
      var f = r.shape, h = Qn(a.getModel("itemStyle"), f, !0);
      V(f, h), r.setShape(f);
    }
  } else {
    var u = a.get(["itemStyle", "borderRadius"]) || 0;
    r.setShape("r", u);
  }
  r.useStyle(l);
  var c = a.getShallow("cursor");
  c && r.attr("cursor", c);
  var v = s ? o ? n.r >= n.r0 ? "endArc" : "startArc" : n.endAngle >= n.startAngle ? "endAngle" : "startAngle" : o ? n.height >= 0 ? "bottom" : "top" : n.width >= 0 ? "right" : "left", d = oe(a);
  pe(r, d, {
    labelFetcher: i,
    labelDataIndex: t,
    defaultText: yo(i.getData(), t),
    inheritColor: l.fill,
    defaultOpacity: l.opacity,
    defaultOutsidePosition: v
  });
  var p = r.getTextContent();
  if (s && p) {
    var g = a.get(["label", "position"]);
    r.textConfig.inside = g === "middle" ? !0 : null, u5(r, g === "outside" ? v : g, iM(o), a.get(["label", "rotate"]));
  }
  xD(p, d, i.getRawValue(t), function(m) {
    return qA(e, m);
  });
  var y = a.getModel(["emphasis"]);
  Wt(r, y.get("focus"), y.get("blurScope"), y.get("disabled")), de(r, a), p5(n) && (r.style.fill = "none", r.style.stroke = "none", M(r.states, function(m) {
    m.style && (m.style.fill = m.style.stroke = "none");
  }));
}
function g5(r, e) {
  var t = r.get(["itemStyle", "borderColor"]);
  if (!t || t === "none")
    return 0;
  var a = r.get(["itemStyle", "borderWidth"]) || 0, n = isNaN(e.width) ? Number.MAX_VALUE : Math.abs(e.width), i = isNaN(e.height) ? Number.MAX_VALUE : Math.abs(e.height);
  return Math.min(a, n, i);
}
var y5 = (
  /** @class */
  function() {
    function r() {
    }
    return r;
  }()
), B1 = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t) {
      var a = r.call(this, t) || this;
      return a.type = "largeBar", a;
    }
    return e.prototype.getDefaultShape = function() {
      return new y5();
    }, e.prototype.buildPath = function(t, a) {
      for (var n = a.points, i = this.baseDimIdx, o = 1 - this.baseDimIdx, s = [], l = [], u = this.barWidth, f = 0; f < n.length; f += 3)
        l[i] = u, l[o] = n[f + 2], s[i] = n[f + i], s[o] = n[f + o], t.rect(s[0], s[1], l[0], l[1]);
    }, e;
  }(mt)
);
function z1(r, e, t, a) {
  var n = r.getData(), i = n.getLayout("valueAxisHorizontal") ? 1 : 0, o = n.getLayout("largeDataIndices"), s = n.getLayout("size"), l = r.getModel("backgroundStyle"), u = n.getLayout("largeBackgroundPoints");
  if (u) {
    var f = new B1({
      shape: {
        points: u
      },
      incremental: !!a,
      silent: !0,
      z2: 0
    });
    f.baseDimIdx = i, f.largeDataIndices = o, f.barWidth = s, f.useStyle(l.getItemStyle()), e.add(f), t && t.push(f);
  }
  var h = new B1({
    shape: {
      points: n.getLayout("largePoints")
    },
    incremental: !!a,
    ignoreCoarsePointer: !0,
    z2: 1
  });
  h.baseDimIdx = i, h.largeDataIndices = o, h.barWidth = s, e.add(h), h.useStyle(n.getVisual("style")), it(h).seriesIndex = r.seriesIndex, r.get("silent") || (h.on("mousedown", G1), h.on("mousemove", G1)), t && t.push(h);
}
var G1 = ey(function(r) {
  var e = this, t = m5(e, r.offsetX, r.offsetY);
  it(e).dataIndex = t >= 0 ? t : null;
}, 30, !1);
function m5(r, e, t) {
  for (var a = r.baseDimIdx, n = 1 - a, i = r.shape.points, o = r.largeDataIndices, s = [], l = [], u = r.barWidth, f = 0, h = i.length / 3; f < h; f++) {
    var c = f * 3;
    if (l[a] = u, l[n] = i[c + 2], s[a] = i[c + a], s[n] = i[c + n], l[n] < 0 && (s[n] += l[n], l[n] = -l[n]), e >= s[0] && e <= s[0] + l[0] && t >= s[1] && t <= s[1] + l[1])
      return o[f];
  }
  return -1;
}
function oM(r, e, t) {
  if (bi(t, "cartesian2d")) {
    var a = e, n = t.getArea();
    return {
      x: r ? a.x : n.x,
      y: r ? n.y : a.y,
      width: r ? a.width : n.width,
      height: r ? n.height : a.height
    };
  } else {
    var n = t.getArea(), i = e;
    return {
      cx: n.cx,
      cy: n.cy,
      r0: r ? n.r0 : i.r0,
      r: r ? n.r : i.r,
      startAngle: r ? i.startAngle : 0,
      endAngle: r ? i.endAngle : Math.PI * 2
    };
  }
}
function _5(r, e, t) {
  var a = r.type === "polar" ? ze : Tt;
  return new a({
    shape: oM(e, t, r),
    silent: !0,
    z2: 0
  });
}
const S5 = h5;
function x5(r) {
  r.registerChartView(S5), r.registerSeriesModel(i5), r.registerLayout(r.PRIORITY.VISUAL.LAYOUT, ot(fA, "bar")), r.registerLayout(r.PRIORITY.VISUAL.PROGRESSIVE_LAYOUT, hA("bar")), r.registerProcessor(r.PRIORITY.PROCESSOR.STATISTIC, aM("bar")), r.registerAction({
    type: "changeAxisOrder",
    event: "changeAxisOrder",
    update: "update"
  }, function(e, t) {
    var a = e.componentType || "series";
    t.eachComponent({
      mainType: a,
      query: e
    }, function(n) {
      e.sortInfo && n.axis.setCategorySortInfo(e.sortInfo);
    });
  });
}
var Su = Math.PI * 2, F1 = Math.PI / 180;
function sM(r, e) {
  return ae(r.getBoxLayoutParams(), {
    width: e.getWidth(),
    height: e.getHeight()
  });
}
function lM(r, e) {
  var t = sM(r, e), a = r.get("center"), n = r.get("radius");
  z(n) || (n = [0, n]);
  var i = H(t.width, e.getWidth()), o = H(t.height, e.getHeight()), s = Math.min(i, o), l = H(n[0], s / 2), u = H(n[1], s / 2), f, h, c = r.coordinateSystem;
  if (c) {
    var v = c.dataToPoint(a);
    f = v[0] || 0, h = v[1] || 0;
  } else
    z(a) || (a = [a, a]), f = H(a[0], i) + t.x, h = H(a[1], o) + t.y;
  return {
    cx: f,
    cy: h,
    r0: l,
    r: u
  };
}
function w5(r, e, t) {
  e.eachSeriesByType(r, function(a) {
    var n = a.getData(), i = n.mapDimension("value"), o = sM(a, t), s = lM(a, t), l = s.cx, u = s.cy, f = s.r, h = s.r0, c = -a.get("startAngle") * F1, v = a.get("minAngle") * F1, d = 0;
    n.each(i, function(D) {
      !isNaN(D) && d++;
    });
    var p = n.getSum(i), g = Math.PI / (p || d) * 2, y = a.get("clockwise"), m = a.get("roseType"), _ = a.get("stillShowZeroSum"), S = n.getDataExtent(i);
    S[0] = 0;
    var w = Su, x = 0, b = c, T = y ? 1 : -1;
    if (n.setLayout({
      viewRect: o,
      r: f
    }), n.each(i, function(D, A) {
      var I;
      if (isNaN(D)) {
        n.setItemLayout(A, {
          angle: NaN,
          startAngle: NaN,
          endAngle: NaN,
          clockwise: y,
          cx: l,
          cy: u,
          r0: h,
          r: m ? NaN : f
        });
        return;
      }
      m !== "area" ? I = p === 0 && _ ? g : D * g : I = Su / d, I < v ? (I = v, w -= v) : x += D;
      var L = b + T * I;
      n.setItemLayout(A, {
        angle: I,
        startAngle: b,
        endAngle: L,
        clockwise: y,
        cx: l,
        cy: u,
        r0: h,
        r: m ? Lt(D, S, [h, f]) : f
      }), b = L;
    }), w < Su && d)
      if (w <= 1e-3) {
        var C = Su / d;
        n.each(i, function(D, A) {
          if (!isNaN(D)) {
            var I = n.getItemLayout(A);
            I.angle = C, I.startAngle = c + T * A * C, I.endAngle = c + T * (A + 1) * C;
          }
        });
      } else
        g = w / x, b = c, n.each(i, function(D, A) {
          if (!isNaN(D)) {
            var I = n.getItemLayout(A), L = I.angle === v ? v : D * g;
            I.startAngle = b, I.endAngle = b + T * L, b += T * L;
          }
        });
  });
}
function Ll(r) {
  return {
    seriesType: r,
    reset: function(e, t) {
      var a = t.findComponents({
        mainType: "legend"
      });
      if (!(!a || !a.length)) {
        var n = e.getData();
        n.filterSelf(function(i) {
          for (var o = n.getName(i), s = 0; s < a.length; s++)
            if (!a[s].isSelected(o))
              return !1;
          return !0;
        });
      }
    }
  };
}
var b5 = Math.PI / 180;
function H1(r, e, t, a, n, i, o, s, l, u) {
  if (r.length < 2)
    return;
  function f(p) {
    for (var g = p.rB, y = g * g, m = 0; m < p.list.length; m++) {
      var _ = p.list[m], S = Math.abs(_.label.y - t), w = a + _.len, x = w * w, b = Math.sqrt((1 - Math.abs(S * S / y)) * x), T = e + (b + _.len2) * n, C = T - _.label.x, D = _.targetTextWidth - C * n;
      uM(_, D, !0), _.label.x = T;
    }
  }
  function h(p) {
    for (var g = {
      list: [],
      maxY: 0
    }, y = {
      list: [],
      maxY: 0
    }, m = 0; m < p.length; m++)
      if (p[m].labelAlignTo === "none") {
        var _ = p[m], S = _.label.y > t ? y : g, w = Math.abs(_.label.y - t);
        if (w >= S.maxY) {
          var x = _.label.x - e - _.len2 * n, b = a + _.len, T = Math.abs(x) < b ? Math.sqrt(w * w / (1 - x * x / b / b)) : b;
          S.rB = T, S.maxY = w;
        }
        S.list.push(_);
      }
    f(g), f(y);
  }
  for (var c = r.length, v = 0; v < c; v++)
    if (r[v].position === "outer" && r[v].labelAlignTo === "labelLine") {
      var d = r[v].label.x - u;
      r[v].linePoints[1][0] += d, r[v].label.x = u;
    }
  RA(r, l, l + o) && h(r);
}
function T5(r, e, t, a, n, i, o, s) {
  for (var l = [], u = [], f = Number.MAX_VALUE, h = -Number.MAX_VALUE, c = 0; c < r.length; c++) {
    var v = r[c].label;
    yv(r[c]) || (v.x < e ? (f = Math.min(f, v.x), l.push(r[c])) : (h = Math.max(h, v.x), u.push(r[c])));
  }
  for (var c = 0; c < r.length; c++) {
    var d = r[c];
    if (!yv(d) && d.linePoints) {
      if (d.labelStyleWidth != null)
        continue;
      var v = d.label, p = d.linePoints, g = void 0;
      d.labelAlignTo === "edge" ? v.x < e ? g = p[2][0] - d.labelDistance - o - d.edgeDistance : g = o + n - d.edgeDistance - p[2][0] - d.labelDistance : d.labelAlignTo === "labelLine" ? v.x < e ? g = f - o - d.bleedMargin : g = o + n - h - d.bleedMargin : v.x < e ? g = v.x - o - d.bleedMargin : g = o + n - v.x - d.bleedMargin, d.targetTextWidth = g, uM(d, g);
    }
  }
  H1(u, e, t, a, 1, n, i, o, s, h), H1(l, e, t, a, -1, n, i, o, s, f);
  for (var c = 0; c < r.length; c++) {
    var d = r[c];
    if (!yv(d) && d.linePoints) {
      var v = d.label, p = d.linePoints, y = d.labelAlignTo === "edge", m = v.style.padding, _ = m ? m[1] + m[3] : 0, S = v.style.backgroundColor ? 0 : _, w = d.rect.width + S, x = p[1][0] - p[2][0];
      y ? v.x < e ? p[2][0] = o + d.edgeDistance + w + d.labelDistance : p[2][0] = o + n - d.edgeDistance - w - d.labelDistance : (v.x < e ? p[2][0] = v.x + d.labelDistance : p[2][0] = v.x - d.labelDistance, p[1][0] = p[2][0] + x), p[1][1] = p[2][1] = v.y;
    }
  }
}
function uM(r, e, t) {
  if (t === void 0 && (t = !1), r.labelStyleWidth == null) {
    var a = r.label, n = a.style, i = r.rect, o = n.backgroundColor, s = n.padding, l = s ? s[1] + s[3] : 0, u = n.overflow, f = i.width + (o ? 0 : l);
    if (e < f || t) {
      var h = i.height;
      if (u && u.match("break")) {
        a.setStyle("backgroundColor", null), a.setStyle("width", e - l);
        var c = a.getBoundingRect();
        a.setStyle("width", Math.ceil(c.width)), a.setStyle("backgroundColor", o);
      } else {
        var v = e - l, d = e < f ? v : (
          // Current available width is enough, but the text may have
          // already been wrapped with a smaller available width.
          t ? v > r.unconstrainedWidth ? null : v : (
            // Current available width is enough, so no need to
            // constrain.
            null
          )
        );
        a.setStyle("width", d);
      }
      var p = a.getBoundingRect();
      i.width = p.width;
      var g = (a.style.margin || 0) + 2.1;
      i.height = p.height + g, i.y -= (i.height - h) / 2;
    }
  }
}
function yv(r) {
  return r.position === "center";
}
function D5(r) {
  var e = r.getData(), t = [], a, n, i = !1, o = (r.get("minShowLabelAngle") || 0) * b5, s = e.getLayout("viewRect"), l = e.getLayout("r"), u = s.width, f = s.x, h = s.y, c = s.height;
  function v(x) {
    x.ignore = !0;
  }
  function d(x) {
    if (!x.ignore)
      return !0;
    for (var b in x.states)
      if (x.states[b].ignore === !1)
        return !0;
    return !1;
  }
  e.each(function(x) {
    var b = e.getItemGraphicEl(x), T = b.shape, C = b.getTextContent(), D = b.getTextGuideLine(), A = e.getItemModel(x), I = A.getModel("label"), L = I.get("position") || A.get(["emphasis", "label", "position"]), E = I.get("distanceToLabelLine"), P = I.get("alignTo"), R = H(I.get("edgeDistance"), u), k = I.get("bleedMargin"), O = A.getModel("labelLine"), B = O.get("length");
    B = H(B, u);
    var F = O.get("length2");
    if (F = H(F, u), Math.abs(T.endAngle - T.startAngle) < o) {
      M(C.states, v), C.ignore = !0, D && (M(D.states, v), D.ignore = !0);
      return;
    }
    if (d(C)) {
      var W = (T.startAngle + T.endAngle) / 2, Z = Math.cos(W), Q = Math.sin(W), tt, dt, St, pt;
      a = T.cx, n = T.cy;
      var rt = L === "inside" || L === "inner";
      if (L === "center")
        tt = T.cx, dt = T.cy, pt = "center";
      else {
        var gt = (rt ? (T.r + T.r0) / 2 * Z : T.r * Z) + a, st = (rt ? (T.r + T.r0) / 2 * Q : T.r * Q) + n;
        if (tt = gt + Z * 3, dt = st + Q * 3, !rt) {
          var q = gt + Z * (B + l - T.r), lt = st + Q * (B + l - T.r), zt = q + (Z < 0 ? -1 : 1) * F, wt = lt;
          P === "edge" ? tt = Z < 0 ? f + R : f + u - R : tt = zt + (Z < 0 ? -E : E), dt = wt, St = [[gt, st], [q, lt], [zt, wt]];
        }
        pt = rt ? "center" : P === "edge" ? Z > 0 ? "right" : "left" : Z > 0 ? "left" : "right";
      }
      var Ut = Math.PI, Ht = 0, ye = I.get("rotate");
      if (At(ye))
        Ht = ye * (Ut / 180);
      else if (L === "center")
        Ht = 0;
      else if (ye === "radial" || ye === !0) {
        var ta = Z < 0 ? -W + Ut : -W;
        Ht = ta;
      } else if (ye === "tangential" && L !== "outside" && L !== "outer") {
        var Ee = Math.atan2(Z, Q);
        Ee < 0 && (Ee = Ut * 2 + Ee);
        var Ol = Q > 0;
        Ol && (Ee = Ut + Ee), Ht = Ee - Ut;
      }
      if (i = !!Ht, C.x = tt, C.y = dt, C.rotation = Ht, C.setStyle({
        verticalAlign: "middle"
      }), rt) {
        C.setStyle({
          align: pt
        });
        var Xh = C.states.select;
        Xh && (Xh.x += C.x, Xh.y += C.y);
      } else {
        var Ta = C.getBoundingRect().clone();
        Ta.applyTransform(C.getComputedTransform());
        var mm = (C.style.margin || 0) + 2.1;
        Ta.y -= mm / 2, Ta.height += mm, t.push({
          label: C,
          labelLine: D,
          position: L,
          len: B,
          len2: F,
          minTurnAngle: O.get("minTurnAngle"),
          maxSurfaceAngle: O.get("maxSurfaceAngle"),
          surfaceNormal: new ut(Z, Q),
          linePoints: St,
          textAlign: pt,
          labelDistance: E,
          labelAlignTo: P,
          edgeDistance: R,
          bleedMargin: k,
          rect: Ta,
          unconstrainedWidth: Ta.width,
          labelStyleWidth: C.style.width
        });
      }
      b.setTextConfig({
        inside: rt
      });
    }
  }), !i && r.get("avoidLabelOverlap") && T5(t, a, n, l, u, c, f, h);
  for (var p = 0; p < t.length; p++) {
    var g = t[p], y = g.label, m = g.labelLine, _ = isNaN(y.x) || isNaN(y.y);
    if (y) {
      y.setStyle({
        align: g.textAlign
      }), _ && (M(y.states, v), y.ignore = !0);
      var S = y.states.select;
      S && (S.x += y.x, S.y += y.y);
    }
    if (m) {
      var w = g.linePoints;
      _ || !w ? (M(m.states, v), m.ignore = !0) : (LA(w, g.minTurnAngle), BB(w, g.surfaceNormal, g.maxSurfaceAngle), m.setShape({
        points: w
      }), y.__hostTarget.textGuideLineConfig = {
        anchor: new ut(w[0][0], w[0][1])
      });
    }
  }
}
var C5 = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t, a, n) {
      var i = r.call(this) || this;
      i.z2 = 2;
      var o = new Ct();
      return i.setTextContent(o), i.updateData(t, a, n, !0), i;
    }
    return e.prototype.updateData = function(t, a, n, i) {
      var o = this, s = t.hostModel, l = t.getItemModel(a), u = l.getModel("emphasis"), f = t.getItemLayout(a), h = V(Qn(l.getModel("itemStyle"), f, !0), f);
      if (isNaN(h.startAngle)) {
        o.setShape(h);
        return;
      }
      if (i) {
        o.setShape(h);
        var c = s.getShallow("animationType");
        s.ecModel.ssr ? (Bt(o, {
          scaleX: 0,
          scaleY: 0
        }, s, {
          dataIndex: a,
          isFrom: !0
        }), o.originX = h.cx, o.originY = h.cy) : c === "scale" ? (o.shape.r = f.r0, Bt(o, {
          shape: {
            r: f.r
          }
        }, s, a)) : n != null ? (o.setShape({
          startAngle: n,
          endAngle: n
        }), Bt(o, {
          shape: {
            startAngle: f.startAngle,
            endAngle: f.endAngle
          }
        }, s, a)) : (o.shape.endAngle = f.startAngle, Mt(o, {
          shape: {
            endAngle: f.endAngle
          }
        }, s, a));
      } else
        Mr(o), Mt(o, {
          shape: h
        }, s, a);
      o.useStyle(t.getItemVisual(a, "style")), de(o, l);
      var v = (f.startAngle + f.endAngle) / 2, d = s.get("selectedOffset"), p = Math.cos(v) * d, g = Math.sin(v) * d, y = l.getShallow("cursor");
      y && o.attr("cursor", y), this._updateLabel(s, t, a), o.ensureState("emphasis").shape = V({
        r: f.r + (u.get("scale") && u.get("scaleSize") || 0)
      }, Qn(u.getModel("itemStyle"), f)), V(o.ensureState("select"), {
        x: p,
        y: g,
        shape: Qn(l.getModel(["select", "itemStyle"]), f)
      }), V(o.ensureState("blur"), {
        shape: Qn(l.getModel(["blur", "itemStyle"]), f)
      });
      var m = o.getTextGuideLine(), _ = o.getTextContent();
      m && V(m.ensureState("select"), {
        x: p,
        y: g
      }), V(_.ensureState("select"), {
        x: p,
        y: g
      }), Wt(this, u.get("focus"), u.get("blurScope"), u.get("disabled"));
    }, e.prototype._updateLabel = function(t, a, n) {
      var i = this, o = a.getItemModel(n), s = o.getModel("labelLine"), l = a.getItemVisual(n, "style"), u = l && l.fill, f = l && l.opacity;
      pe(i, oe(o), {
        labelFetcher: a.hostModel,
        labelDataIndex: n,
        inheritColor: u,
        defaultOpacity: f,
        defaultText: t.getFormattedLabel(n, "normal") || a.getName(n)
      });
      var h = i.getTextContent();
      i.setTextConfig({
        // reset position, rotation
        position: null,
        rotation: null
      }), h.attr({
        z2: 10
      });
      var c = t.get(["label", "position"]);
      if (c !== "outside" && c !== "outer")
        i.removeTextGuideLine();
      else {
        var v = this.getTextGuideLine();
        v || (v = new Fe(), this.setTextGuideLine(v)), py(this, gy(o), {
          stroke: u,
          opacity: lr(s.get(["lineStyle", "opacity"]), f, 1)
        });
      }
    }, e;
  }(ze)
), A5 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.ignoreLabelLineUpdate = !0, t;
    }
    return e.prototype.render = function(t, a, n, i) {
      var o = t.getData(), s = this._data, l = this.group, u;
      if (!s && o.count() > 0) {
        for (var f = o.getItemLayout(0), h = 1; isNaN(f && f.startAngle) && h < o.count(); ++h)
          f = o.getItemLayout(h);
        f && (u = f.startAngle);
      }
      if (this._emptyCircleSector && l.remove(this._emptyCircleSector), o.count() === 0 && t.get("showEmptyCircle")) {
        var c = new ze({
          shape: lM(t, n)
        });
        c.useStyle(t.getModel("emptyCircleStyle").getItemStyle()), this._emptyCircleSector = c, l.add(c);
      }
      o.diff(s).add(function(v) {
        var d = new C5(o, v, u);
        o.setItemGraphicEl(v, d), l.add(d);
      }).update(function(v, d) {
        var p = s.getItemGraphicEl(d);
        p.updateData(o, v, u), p.off("click"), l.add(p), o.setItemGraphicEl(v, p);
      }).remove(function(v) {
        var d = s.getItemGraphicEl(v);
        qs(d, t, v);
      }).execute(), D5(t), t.get("animationTypeUpdate") !== "expansion" && (this._data = o);
    }, e.prototype.dispose = function() {
    }, e.prototype.containPoint = function(t, a) {
      var n = a.getData(), i = n.getItemLayout(0);
      if (i) {
        var o = t[0] - i.cx, s = t[1] - i.cy, l = Math.sqrt(o * o + s * s);
        return l <= i.r && l >= i.r0;
      }
    }, e.type = "pie", e;
  }(Vt)
);
const M5 = A5;
function zo(r, e, t) {
  e = z(e) && {
    coordDimensions: e
  } || V({
    encodeDefine: r.getEncode()
  }, e);
  var a = r.getSource(), n = Tl(a, e).dimensions, i = new Me(n, r);
  return i.initData(a, t), i;
}
var I5 = (
  /** @class */
  function() {
    function r(e, t) {
      this._getDataWithEncodedVisual = e, this._getRawData = t;
    }
    return r.prototype.getAllNames = function() {
      var e = this._getRawData();
      return e.mapArray(e.getName);
    }, r.prototype.containName = function(e) {
      var t = this._getRawData();
      return t.indexOfName(e) >= 0;
    }, r.prototype.indexOfName = function(e) {
      var t = this._getDataWithEncodedVisual();
      return t.indexOfName(e);
    }, r.prototype.getItemVisual = function(e, t) {
      var a = this._getDataWithEncodedVisual();
      return a.getItemVisual(e, t);
    }, r;
  }()
);
const El = I5;
var L5 = Dt(), E5 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return e.prototype.init = function(t) {
      r.prototype.init.apply(this, arguments), this.legendVisualProvider = new El(Y(this.getData, this), Y(this.getRawData, this)), this._defaultLabelLine(t);
    }, e.prototype.mergeOption = function() {
      r.prototype.mergeOption.apply(this, arguments);
    }, e.prototype.getInitialData = function() {
      return zo(this, {
        coordDimensions: ["value"],
        encodeDefaulter: ot(Ug, this)
      });
    }, e.prototype.getDataParams = function(t) {
      var a = this.getData(), n = L5(a), i = n.seats;
      if (!i) {
        var o = [];
        a.each(a.mapDimension("value"), function(l) {
          o.push(l);
        }), i = n.seats = kE(o, a.hostModel.get("percentPrecision"));
      }
      var s = r.prototype.getDataParams.call(this, t);
      return s.percent = i[t] || 0, s.$vars.push("percent"), s;
    }, e.prototype._defaultLabelLine = function(t) {
      hi(t, "labelLine", ["show"]);
      var a = t.labelLine, n = t.emphasis.labelLine;
      a.show = a.show && t.label.show, n.show = n.show && t.emphasis.label.show;
    }, e.type = "series.pie", e.defaultOption = {
      // zlevel: 0,
      z: 2,
      legendHoverLink: !0,
      colorBy: "data",
      // 默认全局居中
      center: ["50%", "50%"],
      radius: [0, "75%"],
      // 默认顺时针
      clockwise: !0,
      startAngle: 90,
      // 最小角度改为0
      minAngle: 0,
      // If the angle of a sector less than `minShowLabelAngle`,
      // the label will not be displayed.
      minShowLabelAngle: 0,
      // 选中时扇区偏移量
      selectedOffset: 10,
      // 选择模式，默认关闭，可选single，multiple
      // selectedMode: false,
      // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）
      // roseType: null,
      percentPrecision: 2,
      // If still show when all data zero.
      stillShowZeroSum: !0,
      // cursor: null,
      left: 0,
      top: 0,
      right: 0,
      bottom: 0,
      width: null,
      height: null,
      label: {
        // color: 'inherit',
        // If rotate around circle
        rotate: 0,
        show: !0,
        overflow: "truncate",
        // 'outer', 'inside', 'center'
        position: "outer",
        // 'none', 'labelLine', 'edge'. Works only when position is 'outer'
        alignTo: "none",
        // Closest distance between label and chart edge.
        // Works only position is 'outer' and alignTo is 'edge'.
        edgeDistance: "25%",
        // Works only position is 'outer' and alignTo is not 'edge'.
        bleedMargin: 10,
        // Distance between text and label line.
        distanceToLabelLine: 5
        // formatter: 标签文本格式器，同 tooltip.formatter，不支持异步回调
        // 默认使用全局文本样式，详见 textStyle
        // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数
      },
      // Enabled when label.normal.position is 'outer'
      labelLine: {
        show: !0,
        // 引导线两段中的第一段长度
        length: 15,
        // 引导线两段中的第二段长度
        length2: 15,
        smooth: !1,
        minTurnAngle: 90,
        maxSurfaceAngle: 90,
        lineStyle: {
          // color: 各异,
          width: 1,
          type: "solid"
        }
      },
      itemStyle: {
        borderWidth: 1,
        borderJoin: "round"
      },
      showEmptyCircle: !0,
      emptyCircleStyle: {
        color: "lightgray",
        opacity: 1
      },
      labelLayout: {
        // Hide the overlapped label.
        hideOverlap: !0
      },
      emphasis: {
        scale: !0,
        scaleSize: 5
      },
      // If use strategy to avoid label overlapping
      avoidLabelOverlap: !0,
      // Animation type. Valid values: expansion, scale
      animationType: "expansion",
      animationDuration: 1e3,
      // Animation type when update. Valid values: transition, expansion
      animationTypeUpdate: "transition",
      animationEasingUpdate: "cubicInOut",
      animationDurationUpdate: 500,
      animationEasing: "cubicInOut"
    }, e;
  }(Gt)
);
const P5 = E5;
function R5(r) {
  return {
    seriesType: r,
    reset: function(e, t) {
      var a = e.getData();
      a.filterSelf(function(n) {
        var i = a.mapDimension("value"), o = a.get(i, n);
        return !(At(o) && !isNaN(o) && o < 0);
      });
    }
  };
}
function N5(r) {
  r.registerChartView(M5), r.registerSeriesModel(P5), MC("pie", r.registerAction), r.registerLayout(ot(w5, "pie")), r.registerProcessor(Ll("pie")), r.registerProcessor(R5("pie"));
}
var O5 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t.hasSymbolVisual = !0, t;
    }
    return e.prototype.getInitialData = function(t, a) {
      return wa(null, this, {
        useEncodeDefaulter: !0
      });
    }, e.prototype.getProgressive = function() {
      var t = this.option.progressive;
      return t == null ? this.option.large ? 5e3 : this.get("progressive") : t;
    }, e.prototype.getProgressiveThreshold = function() {
      var t = this.option.progressiveThreshold;
      return t == null ? this.option.large ? 1e4 : this.get("progressiveThreshold") : t;
    }, e.prototype.brushSelector = function(t, a, n) {
      return n.point(a.getItemLayout(t));
    }, e.prototype.getZLevelKey = function() {
      return this.getData().count() > this.getProgressiveThreshold() ? this.id : "";
    }, e.type = "series.scatter", e.dependencies = ["grid", "polar", "geo", "singleAxis", "calendar"], e.defaultOption = {
      coordinateSystem: "cartesian2d",
      // zlevel: 0,
      z: 2,
      legendHoverLink: !0,
      symbolSize: 10,
      // symbolRotate: null,  // 图形旋转控制
      large: !1,
      // Available when large is true
      largeThreshold: 2e3,
      // cursor: null,
      itemStyle: {
        opacity: 0.8
        // color: 各异
      },
      emphasis: {
        scale: !0
      },
      // If clip the overflow graphics
      // Works on cartesian / polar series
      clip: !0,
      select: {
        itemStyle: {
          borderColor: "#212121"
        }
      },
      universalTransition: {
        divideShape: "clone"
      }
      // progressive: null
    }, e;
  }(Gt)
);
const k5 = O5;
var fM = 4, V5 = (
  /** @class */
  function() {
    function r() {
    }
    return r;
  }()
), B5 = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t) {
      var a = r.call(this, t) || this;
      return a._off = 0, a.hoverDataIdx = -1, a;
    }
    return e.prototype.getDefaultShape = function() {
      return new V5();
    }, e.prototype.reset = function() {
      this.notClear = !1, this._off = 0;
    }, e.prototype.buildPath = function(t, a) {
      var n = a.points, i = a.size, o = this.symbolProxy, s = o.shape, l = t.getContext ? t.getContext() : t, u = l && i[0] < fM, f = this.softClipShape, h;
      if (u) {
        this._ctx = l;
        return;
      }
      for (this._ctx = null, h = this._off; h < n.length; ) {
        var c = n[h++], v = n[h++];
        isNaN(c) || isNaN(v) || f && !f.contain(c, v) || (s.x = c - i[0] / 2, s.y = v - i[1] / 2, s.width = i[0], s.height = i[1], o.buildPath(t, s, !0));
      }
      this.incremental && (this._off = h, this.notClear = !0);
    }, e.prototype.afterBrush = function() {
      var t = this.shape, a = t.points, n = t.size, i = this._ctx, o = this.softClipShape, s;
      if (i) {
        for (s = this._off; s < a.length; ) {
          var l = a[s++], u = a[s++];
          isNaN(l) || isNaN(u) || o && !o.contain(l, u) || i.fillRect(l - n[0] / 2, u - n[1] / 2, n[0], n[1]);
        }
        this.incremental && (this._off = s, this.notClear = !0);
      }
    }, e.prototype.findDataIndex = function(t, a) {
      for (var n = this.shape, i = n.points, o = n.size, s = Math.max(o[0], 4), l = Math.max(o[1], 4), u = i.length / 2 - 1; u >= 0; u--) {
        var f = u * 2, h = i[f] - s / 2, c = i[f + 1] - l / 2;
        if (t >= h && a >= c && t <= h + s && a <= c + l)
          return u;
      }
      return -1;
    }, e.prototype.contain = function(t, a) {
      var n = this.transformCoordToLocal(t, a), i = this.getBoundingRect();
      if (t = n[0], a = n[1], i.contain(t, a)) {
        var o = this.hoverDataIdx = this.findDataIndex(t, a);
        return o >= 0;
      }
      return this.hoverDataIdx = -1, !1;
    }, e.prototype.getBoundingRect = function() {
      var t = this._rect;
      if (!t) {
        for (var a = this.shape, n = a.points, i = a.size, o = i[0], s = i[1], l = 1 / 0, u = 1 / 0, f = -1 / 0, h = -1 / 0, c = 0; c < n.length; ) {
          var v = n[c++], d = n[c++];
          l = Math.min(v, l), f = Math.max(v, f), u = Math.min(d, u), h = Math.max(d, h);
        }
        t = this._rect = new ct(l - o / 2, u - s / 2, f - l + o, h - u + s);
      }
      return t;
    }, e;
  }(mt)
), z5 = (
  /** @class */
  function() {
    function r() {
      this.group = new nt();
    }
    return r.prototype.updateData = function(e, t) {
      this._clear();
      var a = this._create();
      a.setShape({
        points: e.getLayout("points")
      }), this._setCommon(a, e, t);
    }, r.prototype.updateLayout = function(e) {
      var t = e.getLayout("points");
      this.group.eachChild(function(a) {
        if (a.startIndex != null) {
          var n = (a.endIndex - a.startIndex) * 2, i = a.startIndex * 4 * 2;
          t = new Float32Array(t.buffer, i, n);
        }
        a.setShape("points", t), a.reset();
      });
    }, r.prototype.incrementalPrepareUpdate = function(e) {
      this._clear();
    }, r.prototype.incrementalUpdate = function(e, t, a) {
      var n = this._newAdded[0], i = t.getLayout("points"), o = n && n.shape.points;
      if (o && o.length < 2e4) {
        var s = o.length, l = new Float32Array(s + i.length);
        l.set(o), l.set(i, s), n.endIndex = e.end, n.setShape({
          points: l
        });
      } else {
        this._newAdded = [];
        var u = this._create();
        u.startIndex = e.start, u.endIndex = e.end, u.incremental = !0, u.setShape({
          points: i
        }), this._setCommon(u, t, a);
      }
    }, r.prototype.eachRendered = function(e) {
      this._newAdded[0] && e(this._newAdded[0]);
    }, r.prototype._create = function() {
      var e = new B5({
        cursor: "default"
      });
      return e.ignoreCoarsePointer = !0, this.group.add(e), this._newAdded.push(e), e;
    }, r.prototype._setCommon = function(e, t, a) {
      var n = t.hostModel;
      a = a || {};
      var i = t.getVisual("symbolSize");
      e.setShape("size", i instanceof Array ? i : [i, i]), e.softClipShape = a.clipShape || null, e.symbolProxy = Qt(t.getVisual("symbol"), 0, 0, 0, 0), e.setColor = e.symbolProxy.setColor;
      var o = e.shape.size[0] < fM;
      e.useStyle(
        // Draw shadow when doing fillRect is extremely slow.
        n.getModel("itemStyle").getItemStyle(o ? ["color", "shadowBlur", "shadowColor"] : ["color"])
      );
      var s = t.getVisual("style"), l = s && s.fill;
      l && e.setColor(l);
      var u = it(e);
      u.seriesIndex = n.seriesIndex, e.on("mousemove", function(f) {
        u.dataIndex = null;
        var h = e.hoverDataIdx;
        h >= 0 && (u.dataIndex = h + (e.startIndex || 0));
      });
    }, r.prototype.remove = function() {
      this._clear();
    }, r.prototype._clear = function() {
      this._newAdded = [], this.group.removeAll();
    }, r;
  }()
);
const G5 = z5;
var F5 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, a, n) {
      var i = t.getData(), o = this._updateSymbolDraw(i, t);
      o.updateData(i, {
        // TODO
        // If this parameter should be a shape or a bounding volume
        // shape will be more general.
        // But bounding volume like bounding rect will be much faster in the contain calculation
        clipShape: this._getClipShape(t)
      }), this._finished = !0;
    }, e.prototype.incrementalPrepareRender = function(t, a, n) {
      var i = t.getData(), o = this._updateSymbolDraw(i, t);
      o.incrementalPrepareUpdate(i), this._finished = !1;
    }, e.prototype.incrementalRender = function(t, a, n) {
      this._symbolDraw.incrementalUpdate(t, a.getData(), {
        clipShape: this._getClipShape(a)
      }), this._finished = t.end === a.getData().count();
    }, e.prototype.updateTransform = function(t, a, n) {
      var i = t.getData();
      if (this.group.dirty(), !this._finished || i.count() > 1e4)
        return {
          update: !0
        };
      var o = Il("").reset(t, a, n);
      o.progress && o.progress({
        start: 0,
        end: i.count(),
        count: i.count()
      }, i), this._symbolDraw.updateLayout(i);
    }, e.prototype.eachRendered = function(t) {
      this._symbolDraw && this._symbolDraw.eachRendered(t);
    }, e.prototype._getClipShape = function(t) {
      var a = t.coordinateSystem, n = a && a.getArea && a.getArea();
      return t.get("clip", !0) ? n : null;
    }, e.prototype._updateSymbolDraw = function(t, a) {
      var n = this._symbolDraw, i = a.pipelineContext, o = i.large;
      return (!n || o !== this._isLargeDraw) && (n && n.remove(), n = this._symbolDraw = o ? new G5() : new Ml(), this._isLargeDraw = o, this.group.removeAll()), this.group.add(n.group), n;
    }, e.prototype.remove = function(t, a) {
      this._symbolDraw && this._symbolDraw.remove(!0), this._symbolDraw = null;
    }, e.prototype.dispose = function() {
    }, e.type = "scatter", e;
  }(Vt)
);
const H5 = F5;
var W5 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return e.type = "grid", e.dependencies = ["xAxis", "yAxis"], e.layoutMode = "box", e.defaultOption = {
      show: !1,
      // zlevel: 0,
      z: 0,
      left: "10%",
      top: 60,
      right: "10%",
      bottom: 70,
      // If grid size contain label
      containLabel: !1,
      // width: {totalWidth} - left - right,
      // height: {totalHeight} - top - bottom,
      backgroundColor: "rgba(0,0,0,0)",
      borderWidth: 1,
      borderColor: "#ccc"
    }, e;
  }(xt)
);
const $5 = W5;
var Ap = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return e.prototype.getCoordSysModel = function() {
      return this.getReferringComponents("grid", Jt).models[0];
    }, e.type = "cartesian2dAxis", e;
  }(xt)
);
te(Ap, Cl);
var hM = {
  show: !0,
  // zlevel: 0,
  z: 0,
  // Inverse the axis.
  inverse: !1,
  // Axis name displayed.
  name: "",
  // 'start' | 'middle' | 'end'
  nameLocation: "end",
  // By degree. By default auto rotate by nameLocation.
  nameRotate: null,
  nameTruncate: {
    maxWidth: null,
    ellipsis: "...",
    placeholder: "."
  },
  // Use global text style by default.
  nameTextStyle: {},
  // The gap between axisName and axisLine.
  nameGap: 15,
  // Default `false` to support tooltip.
  silent: !1,
  // Default `false` to avoid legacy user event listener fail.
  triggerEvent: !1,
  tooltip: {
    show: !1
  },
  axisPointer: {},
  axisLine: {
    show: !0,
    onZero: !0,
    onZeroAxisIndex: null,
    lineStyle: {
      color: "#6E7079",
      width: 1,
      type: "solid"
    },
    // The arrow at both ends the the axis.
    symbol: ["none", "none"],
    symbolSize: [10, 15]
  },
  axisTick: {
    show: !0,
    // Whether axisTick is inside the grid or outside the grid.
    inside: !1,
    // The length of axisTick.
    length: 5,
    lineStyle: {
      width: 1
    }
  },
  axisLabel: {
    show: !0,
    // Whether axisLabel is inside the grid or outside the grid.
    inside: !1,
    rotate: 0,
    // true | false | null/undefined (auto)
    showMinLabel: null,
    // true | false | null/undefined (auto)
    showMaxLabel: null,
    margin: 8,
    // formatter: null,
    fontSize: 12
  },
  splitLine: {
    show: !0,
    lineStyle: {
      color: ["#E0E6F1"],
      width: 1,
      type: "solid"
    }
  },
  splitArea: {
    show: !1,
    areaStyle: {
      color: ["rgba(250,250,250,0.2)", "rgba(210,219,238,0.2)"]
    }
  }
}, U5 = ht({
  // The gap at both ends of the axis. For categoryAxis, boolean.
  boundaryGap: !0,
  // Set false to faster category collection.
  deduplication: null,
  // splitArea: {
  // show: false
  // },
  splitLine: {
    show: !1
  },
  axisTick: {
    // If tick is align with label when boundaryGap is true
    alignWithLabel: !1,
    interval: "auto"
  },
  axisLabel: {
    interval: "auto"
  }
}, hM), xy = ht({
  boundaryGap: [0, 0],
  axisLine: {
    // Not shown when other axis is categoryAxis in cartesian
    show: "auto"
  },
  axisTick: {
    // Not shown when other axis is categoryAxis in cartesian
    show: "auto"
  },
  // TODO
  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]
  splitNumber: 5,
  minorTick: {
    // Minor tick, not available for cateogry axis.
    show: !1,
    // Split number of minor ticks. The value should be in range of (0, 100)
    splitNumber: 5,
    // Length of minor tick
    length: 3,
    // Line style
    lineStyle: {
      // Default to be same with axisTick
    }
  },
  minorSplitLine: {
    show: !1,
    lineStyle: {
      color: "#F4F7FD",
      width: 1
    }
  }
}, hM), Y5 = ht({
  splitNumber: 6,
  axisLabel: {
    // To eliminate labels that are not nice
    showMinLabel: !1,
    showMaxLabel: !1,
    rich: {
      primary: {
        fontWeight: "bold"
      }
    }
  },
  splitLine: {
    show: !1
  }
}, xy), Z5 = et({
  logBase: 10
}, xy);
const cM = {
  category: U5,
  value: xy,
  time: Y5,
  log: Z5
};
var X5 = {
  value: 1,
  category: 1,
  time: 1,
  log: 1
};
function mo(r, e, t, a) {
  M(X5, function(n, i) {
    var o = ht(ht({}, cM[i], !0), a, !0), s = (
      /** @class */
      function(l) {
        N(u, l);
        function u() {
          var f = l !== null && l.apply(this, arguments) || this;
          return f.type = e + "Axis." + i, f;
        }
        return u.prototype.mergeDefaultAndTheme = function(f, h) {
          var c = Js(this), v = c ? Po(f) : {}, d = h.getTheme();
          ht(f, d.get(i + "Axis")), ht(f, this.getDefaultOption()), f.type = W1(f), c && rn(f, v, c);
        }, u.prototype.optionUpdated = function() {
          var f = this.option;
          f.type === "category" && (this.__ordinalMeta = Sp.createByAxisModel(this));
        }, u.prototype.getCategories = function(f) {
          var h = this.option;
          if (h.type === "category")
            return f ? h.data : this.__ordinalMeta.categories;
        }, u.prototype.getOrdinalMeta = function() {
          return this.__ordinalMeta;
        }, u.type = e + "Axis." + i, u.defaultOption = o, u;
      }(t)
    );
    r.registerComponentModel(s);
  }), r.registerSubTypeDefaulter(e + "Axis", W1);
}
function W1(r) {
  return r.type || (r.data ? "category" : "value");
}
var q5 = (
  /** @class */
  function() {
    function r(e) {
      this.type = "cartesian", this._dimList = [], this._axes = {}, this.name = e || "";
    }
    return r.prototype.getAxis = function(e) {
      return this._axes[e];
    }, r.prototype.getAxes = function() {
      return G(this._dimList, function(e) {
        return this._axes[e];
      }, this);
    }, r.prototype.getAxesByScale = function(e) {
      return e = e.toLowerCase(), Et(this.getAxes(), function(t) {
        return t.scale.type === e;
      });
    }, r.prototype.addAxis = function(e) {
      var t = e.dim;
      this._axes[t] = e, this._dimList.push(t);
    }, r;
  }()
);
const K5 = q5;
var Mp = ["x", "y"];
function $1(r) {
  return r.type === "interval" || r.type === "time";
}
var j5 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = "cartesian2d", t.dimensions = Mp, t;
    }
    return e.prototype.calcAffineTransform = function() {
      this._transform = this._invTransform = null;
      var t = this.getAxis("x").scale, a = this.getAxis("y").scale;
      if (!(!$1(t) || !$1(a))) {
        var n = t.getExtent(), i = a.getExtent(), o = this.dataToPoint([n[0], i[0]]), s = this.dataToPoint([n[1], i[1]]), l = n[1] - n[0], u = i[1] - i[0];
        if (!(!l || !u)) {
          var f = (s[0] - o[0]) / l, h = (s[1] - o[1]) / u, c = o[0] - n[0] * f, v = o[1] - i[0] * h, d = this._transform = [f, 0, 0, h, c, v];
          this._invTransform = To([], d);
        }
      }
    }, e.prototype.getBaseAxis = function() {
      return this.getAxesByScale("ordinal")[0] || this.getAxesByScale("time")[0] || this.getAxis("x");
    }, e.prototype.containPoint = function(t) {
      var a = this.getAxis("x"), n = this.getAxis("y");
      return a.contain(a.toLocalCoord(t[0])) && n.contain(n.toLocalCoord(t[1]));
    }, e.prototype.containData = function(t) {
      return this.getAxis("x").containData(t[0]) && this.getAxis("y").containData(t[1]);
    }, e.prototype.containZone = function(t, a) {
      var n = this.dataToPoint(t), i = this.dataToPoint(a), o = this.getArea(), s = new ct(n[0], n[1], i[0] - n[0], i[1] - n[1]);
      return o.intersect(s);
    }, e.prototype.dataToPoint = function(t, a, n) {
      n = n || [];
      var i = t[0], o = t[1];
      if (this._transform && i != null && isFinite(i) && o != null && isFinite(o))
        return he(n, t, this._transform);
      var s = this.getAxis("x"), l = this.getAxis("y");
      return n[0] = s.toGlobalCoord(s.dataToCoord(i, a)), n[1] = l.toGlobalCoord(l.dataToCoord(o, a)), n;
    }, e.prototype.clampData = function(t, a) {
      var n = this.getAxis("x").scale, i = this.getAxis("y").scale, o = n.getExtent(), s = i.getExtent(), l = n.parse(t[0]), u = i.parse(t[1]);
      return a = a || [], a[0] = Math.min(Math.max(Math.min(o[0], o[1]), l), Math.max(o[0], o[1])), a[1] = Math.min(Math.max(Math.min(s[0], s[1]), u), Math.max(s[0], s[1])), a;
    }, e.prototype.pointToData = function(t, a) {
      var n = [];
      if (this._invTransform)
        return he(n, t, this._invTransform);
      var i = this.getAxis("x"), o = this.getAxis("y");
      return n[0] = i.coordToData(i.toLocalCoord(t[0]), a), n[1] = o.coordToData(o.toLocalCoord(t[1]), a), n;
    }, e.prototype.getOtherAxis = function(t) {
      return this.getAxis(t.dim === "x" ? "y" : "x");
    }, e.prototype.getArea = function() {
      var t = this.getAxis("x").getGlobalExtent(), a = this.getAxis("y").getGlobalExtent(), n = Math.min(t[0], t[1]), i = Math.min(a[0], a[1]), o = Math.max(t[0], t[1]) - n, s = Math.max(a[0], a[1]) - i;
      return new ct(n, i, o, s);
    }, e;
  }(K5)
), J5 = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t, a, n, i, o) {
      var s = r.call(this, t, a, n) || this;
      return s.index = 0, s.type = i || "value", s.position = o || "bottom", s;
    }
    return e.prototype.isHorizontal = function() {
      var t = this.position;
      return t === "top" || t === "bottom";
    }, e.prototype.getGlobalExtent = function(t) {
      var a = this.getExtent();
      return a[0] = this.toGlobalCoord(a[0]), a[1] = this.toGlobalCoord(a[1]), t && a[0] > a[1] && a.reverse(), a;
    }, e.prototype.pointToData = function(t, a) {
      return this.coordToData(this.toLocalCoord(t[this.dim === "x" ? 0 : 1]), a);
    }, e.prototype.setCategorySortInfo = function(t) {
      if (this.type !== "category")
        return !1;
      this.model.option.categorySortInfo = t, this.scale.setSortInfo(t);
    }, e;
  }(Lr)
);
const Q5 = J5;
function Ip(r, e, t) {
  t = t || {};
  var a = r.coordinateSystem, n = e.axis, i = {}, o = n.getAxesOnZeroOf()[0], s = n.position, l = o ? "onZero" : s, u = n.dim, f = a.getRect(), h = [f.x, f.x + f.width, f.y, f.y + f.height], c = {
    left: 0,
    right: 1,
    top: 0,
    bottom: 1,
    onZero: 2
  }, v = e.get("offset") || 0, d = u === "x" ? [h[2] - v, h[3] + v] : [h[0] - v, h[1] + v];
  if (o) {
    var p = o.toGlobalCoord(o.dataToCoord(0));
    d[c.onZero] = Math.max(Math.min(p, d[1]), d[0]);
  }
  i.position = [u === "y" ? d[c[l]] : h[0], u === "x" ? d[c[l]] : h[3]], i.rotation = Math.PI / 2 * (u === "x" ? 0 : 1);
  var g = {
    top: -1,
    bottom: 1,
    left: -1,
    right: 1
  };
  i.labelDirection = i.tickDirection = i.nameDirection = g[s], i.labelOffset = o ? d[c[s]] - d[c.onZero] : 0, e.get(["axisTick", "inside"]) && (i.tickDirection = -i.tickDirection), jt(t.labelInside, e.get(["axisLabel", "inside"])) && (i.labelDirection = -i.labelDirection);
  var y = e.get(["axisLabel", "rotate"]);
  return i.labelRotate = l === "top" ? -y : y, i.z2 = 1, i;
}
function U1(r) {
  return r.get("coordinateSystem") === "cartesian2d";
}
function Y1(r) {
  var e = {
    xAxisModel: null,
    yAxisModel: null
  };
  return M(e, function(t, a) {
    var n = a.replace(/Model$/, ""), i = r.getReferringComponents(n, Jt).models[0];
    if ({}.NODE_ENV !== "production" && !i)
      throw new Error(n + ' "' + lr(r.get(n + "Index"), r.get(n + "Id"), 0) + '" not found');
    e[a] = i;
  }), e;
}
var mv = Math.log;
function vM(r, e, t) {
  var a = nn.prototype, n = a.getTicks.call(t), i = a.getTicks.call(t, !0), o = n.length - 1, s = a.getInterval.call(t), l = mA(r, e), u = l.extent, f = l.fixMin, h = l.fixMax;
  if (r.type === "log") {
    var c = mv(r.base);
    u = [mv(u[0]) / c, mv(u[1]) / c];
  }
  r.setExtent(u[0], u[1]), r.calcNiceExtent({
    splitNumber: o,
    fixMin: f,
    fixMax: h
  });
  var v = a.getExtent.call(r);
  f && (u[0] = v[0]), h && (u[1] = v[1]);
  var d = a.getInterval.call(r), p = u[0], g = u[1];
  if (f && h)
    d = (g - p) / o;
  else if (f)
    for (g = u[0] + d * o; g < u[1] && isFinite(g) && isFinite(u[1]); )
      d = nv(d), g = u[0] + d * o;
  else if (h)
    for (p = u[1] - d * o; p > u[0] && isFinite(p) && isFinite(u[0]); )
      d = nv(d), p = u[1] - d * o;
  else {
    var y = r.getTicks().length - 1;
    y > o && (d = nv(d));
    var m = d * o;
    g = Math.ceil(u[1] / d) * d, p = Yt(g - m), p < 0 && u[0] >= 0 ? (p = 0, g = Yt(m)) : g > 0 && u[1] <= 0 && (g = 0, p = -Yt(m));
  }
  var _ = (n[0].value - i[0].value) / s, S = (n[o].value - i[o].value) / s;
  if (a.setExtent.call(r, p + d * _, g + d * S), a.setInterval.call(r, d), (_ || S) && a.setNiceExtent.call(r, p + d, g - d), {}.NODE_ENV !== "production") {
    var w = a.getTicks.call(r);
    w[1] && (!WV(d) || Ud(w[1].value) > Ud(d)) && Ft(
      // eslint-disable-next-line
      "The ticks may be not readable when set min: " + e.get("min") + ", max: " + e.get("max") + " and alignTicks: true"
    );
  }
}
var tG = (
  /** @class */
  function() {
    function r(e, t, a) {
      this.type = "grid", this._coordsMap = {}, this._coordsList = [], this._axesMap = {}, this._axesList = [], this.axisPointerEnabled = !0, this.dimensions = Mp, this._initCartesian(e, t, a), this.model = e;
    }
    return r.prototype.getRect = function() {
      return this._rect;
    }, r.prototype.update = function(e, t) {
      var a = this._axesMap;
      this._updateScale(e, this.model);
      function n(o) {
        var s, l = _t(o), u = l.length;
        if (u) {
          for (var f = [], h = u - 1; h >= 0; h--) {
            var c = +l[h], v = o[c], d = v.model, p = v.scale;
            // Only value and log axis without interval support alignTicks.
            xp(p) && d.get("alignTicks") && d.get("interval") == null ? f.push(v) : (go(p, d), xp(p) && (s = v));
          }
          f.length && (s || (s = f.pop(), go(s.scale, s.model)), M(f, function(g) {
            vM(g.scale, g.model, s.scale);
          }));
        }
      }
      n(a.x), n(a.y);
      var i = {};
      M(a.x, function(o) {
        Z1(a, "y", o, i);
      }), M(a.y, function(o) {
        Z1(a, "x", o, i);
      }), this.resize(this.model, t);
    }, r.prototype.resize = function(e, t, a) {
      var n = e.getBoxLayoutParams(), i = !a && e.get("containLabel"), o = ae(n, {
        width: t.getWidth(),
        height: t.getHeight()
      });
      this._rect = o;
      var s = this._axesList;
      l(), i && (M(s, function(u) {
        if (!u.model.get(["axisLabel", "inside"])) {
          var f = dB(u);
          if (f) {
            var h = u.isHorizontal() ? "height" : "width", c = u.model.get(["axisLabel", "margin"]);
            o[h] -= f[h] + c, u.position === "top" ? o.y += f.height + c : u.position === "left" && (o.x += f.width + c);
          }
        }
      }), l()), M(this._coordsList, function(u) {
        u.calcAffineTransform();
      });
      function l() {
        M(s, function(u) {
          var f = u.isHorizontal(), h = f ? [0, o.width] : [0, o.height], c = u.inverse ? 1 : 0;
          u.setExtent(h[c], h[1 - c]), eG(u, f ? o.x : o.y);
        });
      }
    }, r.prototype.getAxis = function(e, t) {
      var a = this._axesMap[e];
      if (a != null)
        return a[t || 0];
    }, r.prototype.getAxes = function() {
      return this._axesList.slice();
    }, r.prototype.getCartesian = function(e, t) {
      if (e != null && t != null) {
        var a = "x" + e + "y" + t;
        return this._coordsMap[a];
      }
      j(e) && (t = e.yAxisIndex, e = e.xAxisIndex);
      for (var n = 0, i = this._coordsList; n < i.length; n++)
        if (i[n].getAxis("x").index === e || i[n].getAxis("y").index === t)
          return i[n];
    }, r.prototype.getCartesians = function() {
      return this._coordsList.slice();
    }, r.prototype.convertToPixel = function(e, t, a) {
      var n = this._findConvertTarget(t);
      return n.cartesian ? n.cartesian.dataToPoint(a) : n.axis ? n.axis.toGlobalCoord(n.axis.dataToCoord(a)) : null;
    }, r.prototype.convertFromPixel = function(e, t, a) {
      var n = this._findConvertTarget(t);
      return n.cartesian ? n.cartesian.pointToData(a) : n.axis ? n.axis.coordToData(n.axis.toLocalCoord(a)) : null;
    }, r.prototype._findConvertTarget = function(e) {
      var t = e.seriesModel, a = e.xAxisModel || t && t.getReferringComponents("xAxis", Jt).models[0], n = e.yAxisModel || t && t.getReferringComponents("yAxis", Jt).models[0], i = e.gridModel, o = this._coordsList, s, l;
      if (t)
        s = t.coordinateSystem, vt(o, s) < 0 && (s = null);
      else if (a && n)
        s = this.getCartesian(a.componentIndex, n.componentIndex);
      else if (a)
        l = this.getAxis("x", a.componentIndex);
      else if (n)
        l = this.getAxis("y", n.componentIndex);
      else if (i) {
        var u = i.coordinateSystem;
        u === this && (s = this._coordsList[0]);
      }
      return {
        cartesian: s,
        axis: l
      };
    }, r.prototype.containPoint = function(e) {
      var t = this._coordsList[0];
      if (t)
        return t.containPoint(e);
    }, r.prototype._initCartesian = function(e, t, a) {
      var n = this, i = this, o = {
        left: !1,
        right: !1,
        top: !1,
        bottom: !1
      }, s = {
        x: {},
        y: {}
      }, l = {
        x: 0,
        y: 0
      };
      if (t.eachComponent("xAxis", u("x"), this), t.eachComponent("yAxis", u("y"), this), !l.x || !l.y) {
        this._axesMap = {}, this._axesList = [];
        return;
      }
      this._axesMap = s, M(s.x, function(f, h) {
        M(s.y, function(c, v) {
          var d = "x" + h + "y" + v, p = new j5(d);
          p.master = n, p.model = e, n._coordsMap[d] = p, n._coordsList.push(p), p.addAxis(f), p.addAxis(c);
        });
      });
      function u(f) {
        return function(h, c) {
          if (_v(h, e)) {
            var v = h.get("position");
            f === "x" ? v !== "top" && v !== "bottom" && (v = o.bottom ? "top" : "bottom") : v !== "left" && v !== "right" && (v = o.left ? "right" : "left"), o[v] = !0;
            var d = new Q5(f, Bh(h), [0, 0], h.get("type"), v), p = d.type === "category";
            d.onBand = p && h.get("boundaryGap"), d.inverse = h.get("inverse"), h.axis = d, d.model = h, d.grid = i, d.index = c, i._axesList.push(d), s[f][c] = d, l[f]++;
          }
        };
      }
    }, r.prototype._updateScale = function(e, t) {
      M(this._axesList, function(n) {
        if (n.scale.setExtent(1 / 0, -1 / 0), n.type === "category") {
          var i = n.model.get("categorySortInfo");
          n.scale.setSortInfo(i);
        }
      }), e.eachSeries(function(n) {
        if (U1(n)) {
          var i = Y1(n), o = i.xAxisModel, s = i.yAxisModel;
          if (!_v(o, t) || !_v(s, t))
            return;
          var l = this.getCartesian(o.componentIndex, s.componentIndex), u = n.getData(), f = l.getAxis("x"), h = l.getAxis("y");
          a(u, f), a(u, h);
        }
      }, this);
      function a(n, i) {
        M(Nf(n, i.dim), function(o) {
          i.scale.unionExtentFromData(n, o);
        });
      }
    }, r.prototype.getTooltipAxes = function(e) {
      var t = [], a = [];
      return M(this.getCartesians(), function(n) {
        var i = e != null && e !== "auto" ? n.getAxis(e) : n.getBaseAxis(), o = n.getOtherAxis(i);
        vt(t, i) < 0 && t.push(i), vt(a, o) < 0 && a.push(o);
      }), {
        baseAxes: t,
        otherAxes: a
      };
    }, r.create = function(e, t) {
      var a = [];
      return e.eachComponent("grid", function(n, i) {
        var o = new r(n, e, t);
        o.name = "grid_" + i, o.resize(n, t, !0), n.coordinateSystem = o, a.push(o);
      }), e.eachSeries(function(n) {
        if (U1(n)) {
          var i = Y1(n), o = i.xAxisModel, s = i.yAxisModel, l = o.getCoordSysModel();
          if ({}.NODE_ENV !== "production") {
            if (!l)
              throw new Error('Grid "' + lr(o.get("gridIndex"), o.get("gridId"), 0) + '" not found');
            if (o.getCoordSysModel() !== s.getCoordSysModel())
              throw new Error("xAxis and yAxis must use the same grid");
          }
          var u = l.coordinateSystem;
          n.coordinateSystem = u.getCartesian(o.componentIndex, s.componentIndex);
        }
      }), a;
    }, r.dimensions = Mp, r;
  }()
);
function _v(r, e) {
  return r.getCoordSysModel() === e;
}
function Z1(r, e, t, a) {
  t.getAxesOnZeroOf = function() {
    return i ? [i] : [];
  };
  var n = r[e], i, o = t.model, s = o.get(["axisLine", "onZero"]), l = o.get(["axisLine", "onZeroAxisIndex"]);
  if (!s)
    return;
  if (l != null)
    X1(n[l]) && (i = n[l]);
  else
    for (var u in n)
      if (n.hasOwnProperty(u) && X1(n[u]) && !a[f(n[u])]) {
        i = n[u];
        break;
      }
  i && (a[f(i)] = !0);
  function f(h) {
    return h.dim + "_" + h.index;
  }
}
function X1(r) {
  return r && r.type !== "category" && r.type !== "time" && vB(r);
}
function eG(r, e) {
  var t = r.getExtent(), a = t[0] + t[1];
  r.toGlobalCoord = r.dim === "x" ? function(n) {
    return n + e;
  } : function(n) {
    return a - n + e;
  }, r.toLocalCoord = r.dim === "x" ? function(n) {
    return n - e;
  } : function(n) {
    return a - n + e;
  };
}
const rG = tG;
var Ua = Math.PI, li = (
  /** @class */
  function() {
    function r(e, t) {
      this.group = new nt(), this.opt = t, this.axisModel = e, et(t, {
        labelOffset: 0,
        nameDirection: 1,
        tickDirection: 1,
        labelDirection: 1,
        silent: !0,
        handleAutoShown: function() {
          return !0;
        }
      });
      var a = new nt({
        x: t.position[0],
        y: t.position[1],
        rotation: t.rotation
      });
      a.updateTransform(), this._transformGroup = a;
    }
    return r.prototype.hasBuilder = function(e) {
      return !!q1[e];
    }, r.prototype.add = function(e) {
      q1[e](this.opt, this.axisModel, this.group, this._transformGroup);
    }, r.prototype.getGroup = function() {
      return this.group;
    }, r.innerTextLayout = function(e, t, a) {
      var n = dT(t - e), i, o;
      return pf(n) ? (o = a > 0 ? "top" : "bottom", i = "center") : pf(n - Ua) ? (o = a > 0 ? "bottom" : "top", i = "center") : (o = "middle", n > 0 && n < Ua ? i = a > 0 ? "right" : "left" : i = a > 0 ? "left" : "right"), {
        rotation: n,
        textAlign: i,
        textVerticalAlign: o
      };
    }, r.makeAxisEventDataBase = function(e) {
      var t = {
        componentType: e.mainType,
        componentIndex: e.componentIndex
      };
      return t[e.mainType + "Index"] = e.componentIndex, t;
    }, r.isLabelSilent = function(e) {
      var t = e.get("tooltip");
      return e.get("silent") || !(e.get("triggerEvent") || t && t.show);
    }, r;
  }()
), q1 = {
  axisLine: function(r, e, t, a) {
    var n = e.get(["axisLine", "show"]);
    if (n === "auto" && r.handleAutoShown && (n = r.handleAutoShown("axisLine")), !!n) {
      var i = e.axis.getExtent(), o = a.transform, s = [i[0], 0], l = [i[1], 0], u = s[0] > l[0];
      o && (he(s, s, o), he(l, l, o));
      var f = V({
        lineCap: "round"
      }, e.getModel(["axisLine", "lineStyle"]).getLineStyle()), h = new ue({
        shape: {
          x1: s[0],
          y1: s[1],
          x2: l[0],
          y2: l[1]
        },
        style: f,
        strokeContainThreshold: r.strokeContainThreshold || 5,
        silent: !0,
        z2: 1
      });
      co(h.shape, h.style.lineWidth), h.anid = "line", t.add(h);
      var c = e.get(["axisLine", "symbol"]);
      if (c != null) {
        var v = e.get(["axisLine", "symbolSize"]);
        $(c) && (c = [c, c]), ($(v) || At(v)) && (v = [v, v]);
        var d = xi(e.get(["axisLine", "symbolOffset"]) || 0, v), p = v[0], g = v[1];
        M([{
          rotate: r.rotation + Math.PI / 2,
          offset: d[0],
          r: 0
        }, {
          rotate: r.rotation - Math.PI / 2,
          offset: d[1],
          r: Math.sqrt((s[0] - l[0]) * (s[0] - l[0]) + (s[1] - l[1]) * (s[1] - l[1]))
        }], function(y, m) {
          if (c[m] !== "none" && c[m] != null) {
            var _ = Qt(c[m], -p / 2, -g / 2, p, g, f.stroke, !0), S = y.r + y.offset, w = u ? l : s;
            _.attr({
              rotation: y.rotate,
              x: w[0] + S * Math.cos(r.rotation),
              y: w[1] - S * Math.sin(r.rotation),
              silent: !0,
              z2: 11
            }), t.add(_);
          }
        });
      }
    }
  },
  axisTickLabel: function(r, e, t, a) {
    var n = iG(t, a, e, r), i = sG(t, a, e, r);
    if (nG(e, i, n), oG(t, a, e, r.tickDirection), e.get(["axisLabel", "hideOverlap"])) {
      var o = EA(G(i, function(s) {
        return {
          label: s,
          priority: s.z2,
          defaultAttr: {
            ignore: s.ignore
          }
        };
      }));
      NA(o);
    }
  },
  axisName: function(r, e, t, a) {
    var n = jt(r.axisName, e.get("name"));
    if (n) {
      var i = e.get("nameLocation"), o = r.nameDirection, s = e.getModel("nameTextStyle"), l = e.get("nameGap") || 0, u = e.axis.getExtent(), f = u[0] > u[1] ? -1 : 1, h = [
        i === "start" ? u[0] - f * l : i === "end" ? u[1] + f * l : (u[0] + u[1]) / 2,
        // Reuse labelOffset.
        j1(i) ? r.labelOffset + o * l : 0
      ], c, v = e.get("nameRotate");
      v != null && (v = v * Ua / 180);
      var d;
      j1(i) ? c = li.innerTextLayout(
        r.rotation,
        v != null ? v : r.rotation,
        // Adapt to axis.
        o
      ) : (c = aG(r.rotation, i, v || 0, u), d = r.axisNameAvailableWidth, d != null && (d = Math.abs(d / Math.sin(c.rotation)), !isFinite(d) && (d = null)));
      var p = s.getFont(), g = e.get("nameTruncate", !0) || {}, y = g.ellipsis, m = jt(r.nameTruncateMaxWidth, g.maxWidth, d), _ = new Ct({
        x: h[0],
        y: h[1],
        rotation: c.rotation,
        silent: li.isLabelSilent(e),
        style: Ot(s, {
          text: n,
          font: p,
          overflow: "truncate",
          width: m,
          ellipsis: y,
          fill: s.getTextColor() || e.get(["axisLine", "lineStyle", "color"]),
          align: s.get("align") || c.textAlign,
          verticalAlign: s.get("verticalAlign") || c.textVerticalAlign
        }),
        z2: 1
      });
      if (Mo({
        el: _,
        componentModel: e,
        itemName: n
      }), _.__fullText = n, _.anid = "name", e.get("triggerEvent")) {
        var S = li.makeAxisEventDataBase(e);
        S.targetType = "axisName", S.name = n, it(_).eventData = S;
      }
      a.add(_), _.updateTransform(), t.add(_), _.decomposeTransform();
    }
  }
};
function aG(r, e, t, a) {
  var n = dT(t - r), i, o, s = a[0] > a[1], l = e === "start" && !s || e !== "start" && s;
  return pf(n - Ua / 2) ? (o = l ? "bottom" : "top", i = "center") : pf(n - Ua * 1.5) ? (o = l ? "top" : "bottom", i = "center") : (o = "middle", n < Ua * 1.5 && n > Ua / 2 ? i = l ? "left" : "right" : i = l ? "right" : "left"), {
    rotation: n,
    textAlign: i,
    textVerticalAlign: o
  };
}
function nG(r, e, t) {
  if (!_A(r.axis)) {
    var a = r.get(["axisLabel", "showMinLabel"]), n = r.get(["axisLabel", "showMaxLabel"]);
    e = e || [], t = t || [];
    var i = e[0], o = e[1], s = e[e.length - 1], l = e[e.length - 2], u = t[0], f = t[1], h = t[t.length - 1], c = t[t.length - 2];
    a === !1 ? (qe(i), qe(u)) : K1(i, o) && (a ? (qe(o), qe(f)) : (qe(i), qe(u))), n === !1 ? (qe(s), qe(h)) : K1(l, s) && (n ? (qe(l), qe(c)) : (qe(s), qe(h)));
  }
}
function qe(r) {
  r && (r.ignore = !0);
}
function K1(r, e) {
  var t = r && r.getBoundingRect().clone(), a = e && e.getBoundingRect().clone();
  if (!(!t || !a)) {
    var n = uh([]);
    return _i(n, n, -r.rotation), t.applyTransform(ua([], n, r.getLocalTransform())), a.applyTransform(ua([], n, e.getLocalTransform())), t.intersect(a);
  }
}
function j1(r) {
  return r === "middle" || r === "center";
}
function dM(r, e, t, a, n) {
  for (var i = [], o = [], s = [], l = 0; l < r.length; l++) {
    var u = r[l].coord;
    o[0] = u, o[1] = 0, s[0] = u, s[1] = t, e && (he(o, o, e), he(s, s, e));
    var f = new ue({
      shape: {
        x1: o[0],
        y1: o[1],
        x2: s[0],
        y2: s[1]
      },
      style: a,
      z2: 2,
      autoBatch: !0,
      silent: !0
    });
    co(f.shape, f.style.lineWidth), f.anid = n + "_" + r[l].tickValue, i.push(f);
  }
  return i;
}
function iG(r, e, t, a) {
  var n = t.axis, i = t.getModel("axisTick"), o = i.get("show");
  if (o === "auto" && a.handleAutoShown && (o = a.handleAutoShown("axisTick")), !(!o || n.scale.isBlank())) {
    for (var s = i.getModel("lineStyle"), l = a.tickDirection * i.get("length"), u = n.getTicksCoords(), f = dM(u, e.transform, l, et(s.getLineStyle(), {
      stroke: t.get(["axisLine", "lineStyle", "color"])
    }), "ticks"), h = 0; h < f.length; h++)
      r.add(f[h]);
    return f;
  }
}
function oG(r, e, t, a) {
  var n = t.axis, i = t.getModel("minorTick");
  if (!(!i.get("show") || n.scale.isBlank())) {
    var o = n.getMinorTicksCoords();
    if (o.length)
      for (var s = i.getModel("lineStyle"), l = a * i.get("length"), u = et(s.getLineStyle(), et(t.getModel("axisTick").getLineStyle(), {
        stroke: t.get(["axisLine", "lineStyle", "color"])
      })), f = 0; f < o.length; f++)
        for (var h = dM(o[f], e.transform, l, u, "minorticks_" + f), c = 0; c < h.length; c++)
          r.add(h[c]);
  }
}
function sG(r, e, t, a) {
  var n = t.axis, i = jt(a.axisLabelShow, t.get(["axisLabel", "show"]));
  if (!(!i || n.scale.isBlank())) {
    var o = t.getModel("axisLabel"), s = o.get("margin"), l = n.getViewLabels(), u = (jt(a.labelRotate, o.get("rotate")) || 0) * Ua / 180, f = li.innerTextLayout(a.rotation, u, a.labelDirection), h = t.getCategories && t.getCategories(!0), c = [], v = li.isLabelSilent(t), d = t.get("triggerEvent");
    return M(l, function(p, g) {
      var y = n.scale.type === "ordinal" ? n.scale.getRawOrdinalNumber(p.tickValue) : p.tickValue, m = p.formattedLabel, _ = p.rawLabel, S = o;
      if (h && h[y]) {
        var w = h[y];
        j(w) && w.textStyle && (S = new kt(w.textStyle, o, t.ecModel));
      }
      var x = S.getTextColor() || t.get(["axisLine", "lineStyle", "color"]), b = n.dataToCoord(y), T = new Ct({
        x: b,
        y: a.labelOffset + a.labelDirection * s,
        rotation: f.rotation,
        silent: v,
        z2: 10 + (p.level || 0),
        style: Ot(S, {
          text: m,
          align: S.getShallow("align", !0) || f.textAlign,
          verticalAlign: S.getShallow("verticalAlign", !0) || S.getShallow("baseline", !0) || f.textVerticalAlign,
          fill: K(x) ? x(
            // (1) In category axis with data zoom, tick is not the original
            // index of axis.data. So tick should not be exposed to user
            // in category axis.
            // (2) Compatible with previous version, which always use formatted label as
            // input. But in interval scale the formatted label is like '223,445', which
            // maked user replace ','. So we modify it to return original val but remain
            // it as 'string' to avoid error in replacing.
            n.type === "category" ? _ : n.type === "value" ? y + "" : y,
            g
          ) : x
        })
      });
      if (T.anid = "label_" + y, d) {
        var C = li.makeAxisEventDataBase(t);
        C.targetType = "axisLabel", C.value = _, C.tickIndex = g, n.type === "category" && (C.dataIndex = y), it(T).eventData = C;
      }
      e.add(T), T.updateTransform(), c.push(T), r.add(T), T.decomposeTransform();
    }), c;
  }
}
const _a = li;
function lG(r, e) {
  var t = {
    /**
     * key: makeKey(axis.model)
     * value: {
     *      axis,
     *      coordSys,
     *      axisPointerModel,
     *      triggerTooltip,
     *      triggerEmphasis,
     *      involveSeries,
     *      snap,
     *      seriesModels,
     *      seriesDataCount
     * }
     */
    axesInfo: {},
    seriesInvolved: !1,
    /**
     * key: makeKey(coordSys.model)
     * value: Object: key makeKey(axis.model), value: axisInfo
     */
    coordSysAxesInfo: {},
    coordSysMap: {}
  };
  return uG(t, r, e), t.seriesInvolved && hG(t, r), t;
}
function uG(r, e, t) {
  var a = e.getComponent("tooltip"), n = e.getComponent("axisPointer"), i = n.get("link", !0) || [], o = [];
  M(t.getCoordinateSystems(), function(s) {
    if (!s.axisPointerEnabled)
      return;
    var l = ol(s.model), u = r.coordSysAxesInfo[l] = {};
    r.coordSysMap[l] = s;
    var f = s.model, h = f.getModel("tooltip", a);
    if (M(s.getAxes(), ot(p, !1, null)), s.getTooltipAxes && a && h.get("show")) {
      var c = h.get("trigger") === "axis", v = h.get(["axisPointer", "type"]) === "cross", d = s.getTooltipAxes(h.get(["axisPointer", "axis"]));
      (c || v) && M(d.baseAxes, ot(p, v ? "cross" : !0, c)), v && M(d.otherAxes, ot(p, "cross", !1));
    }
    function p(g, y, m) {
      var _ = m.model.getModel("axisPointer", n), S = _.get("show");
      if (!(!S || S === "auto" && !g && !Lp(_))) {
        y == null && (y = _.get("triggerTooltip")), _ = g ? fG(m, h, n, e, g, y) : _;
        var w = _.get("snap"), x = _.get("triggerEmphasis"), b = ol(m.model), T = y || w || m.type === "category", C = r.axesInfo[b] = {
          key: b,
          axis: m,
          coordSys: s,
          axisPointerModel: _,
          triggerTooltip: y,
          triggerEmphasis: x,
          involveSeries: T,
          snap: w,
          useHandle: Lp(_),
          seriesModels: [],
          linkGroup: null
        };
        u[b] = C, r.seriesInvolved = r.seriesInvolved || T;
        var D = cG(i, m);
        if (D != null) {
          var A = o[D] || (o[D] = {
            axesInfo: {}
          });
          A.axesInfo[b] = C, A.mapper = i[D].mapper, C.linkGroup = A;
        }
      }
    }
  });
}
function fG(r, e, t, a, n, i) {
  var o = e.getModel("axisPointer"), s = ["type", "snap", "lineStyle", "shadowStyle", "label", "animation", "animationDurationUpdate", "animationEasingUpdate", "z"], l = {};
  M(s, function(c) {
    l[c] = at(o.get(c));
  }), l.snap = r.type !== "category" && !!i, o.get("type") === "cross" && (l.type = "line");
  var u = l.label || (l.label = {});
  if (u.show == null && (u.show = !1), n === "cross") {
    var f = o.get(["label", "show"]);
    if (u.show = f != null ? f : !0, !i) {
      var h = l.lineStyle = o.get("crossStyle");
      h && et(u, h.textStyle);
    }
  }
  return r.model.getModel("axisPointer", new kt(l, t, a));
}
function hG(r, e) {
  e.eachSeries(function(t) {
    var a = t.coordinateSystem, n = t.get(["tooltip", "trigger"], !0), i = t.get(["tooltip", "show"], !0);
    !a || n === "none" || n === !1 || n === "item" || i === !1 || t.get(["axisPointer", "show"], !0) === !1 || M(r.coordSysAxesInfo[ol(a.model)], function(o) {
      var s = o.axis;
      a.getAxis(s.dim) === s && (o.seriesModels.push(t), o.seriesDataCount == null && (o.seriesDataCount = 0), o.seriesDataCount += t.getData().count());
    });
  });
}
function cG(r, e) {
  for (var t = e.model, a = e.dim, n = 0; n < r.length; n++) {
    var i = r[n] || {};
    if (Sv(i[a + "AxisId"], t.id) || Sv(i[a + "AxisIndex"], t.componentIndex) || Sv(i[a + "AxisName"], t.name))
      return n;
  }
}
function Sv(r, e) {
  return r === "all" || z(r) && vt(r, e) >= 0 || r === e;
}
function vG(r) {
  var e = wy(r);
  if (e) {
    var t = e.axisPointerModel, a = e.axis.scale, n = t.option, i = t.get("status"), o = t.get("value");
    o != null && (o = a.parse(o));
    var s = Lp(t);
    i == null && (n.status = s ? "show" : "hide");
    var l = a.getExtent().slice();
    l[0] > l[1] && l.reverse(), // Pick a value on axis when initializing.
    (o == null || o > l[1]) && (o = l[1]), o < l[0] && (o = l[0]), n.value = o, s && (n.status = e.axis.scale.isBlank() ? "hide" : "show");
  }
}
function wy(r) {
  var e = (r.ecModel.getComponent("axisPointer") || {}).coordSysAxesInfo;
  return e && e.axesInfo[ol(r)];
}
function dG(r) {
  var e = wy(r);
  return e && e.axisPointerModel;
}
function Lp(r) {
  return !!r.get(["handle", "show"]);
}
function ol(r) {
  return r.type + "||" + r.id;
}
var xv = {}, pG = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, a, n, i) {
      this.axisPointerClass && vG(t), r.prototype.render.apply(this, arguments), this._doUpdateAxisPointerClass(t, n, !0);
    }, e.prototype.updateAxisPointer = function(t, a, n, i) {
      this._doUpdateAxisPointerClass(t, n, !1);
    }, e.prototype.remove = function(t, a) {
      var n = this._axisPointer;
      n && n.remove(a);
    }, e.prototype.dispose = function(t, a) {
      this._disposeAxisPointer(a), r.prototype.dispose.apply(this, arguments);
    }, e.prototype._doUpdateAxisPointerClass = function(t, a, n) {
      var i = e.getAxisPointerClass(this.axisPointerClass);
      if (i) {
        var o = dG(t);
        o ? (this._axisPointer || (this._axisPointer = new i())).render(t, o, a, n) : this._disposeAxisPointer(a);
      }
    }, e.prototype._disposeAxisPointer = function(t) {
      this._axisPointer && this._axisPointer.dispose(t), this._axisPointer = null;
    }, e.registerAxisPointerClass = function(t, a) {
      if ({}.NODE_ENV !== "production" && xv[t])
        throw new Error("axisPointer " + t + " exists");
      xv[t] = a;
    }, e.getAxisPointerClass = function(t) {
      return t && xv[t];
    }, e.type = "axis", e;
  }($t)
);
const Ti = pG;
var Ep = Dt();
function pM(r, e, t, a) {
  var n = t.axis;
  if (!n.scale.isBlank()) {
    var i = t.getModel("splitArea"), o = i.getModel("areaStyle"), s = o.get("color"), l = a.coordinateSystem.getRect(), u = n.getTicksCoords({
      tickModel: i,
      clamp: !0
    });
    if (u.length) {
      var f = s.length, h = Ep(r).splitAreaColors, c = X(), v = 0;
      if (h)
        for (var d = 0; d < u.length; d++) {
          var p = h.get(u[d].tickValue);
          if (p != null) {
            v = (p + (f - 1) * d) % f;
            break;
          }
        }
      var g = n.toGlobalCoord(u[0].coord), y = o.getAreaStyle();
      s = z(s) ? s : [s];
      for (var d = 1; d < u.length; d++) {
        var m = n.toGlobalCoord(u[d].coord), _ = void 0, S = void 0, w = void 0, x = void 0;
        n.isHorizontal() ? (_ = g, S = l.y, w = m - _, x = l.height, g = _ + w) : (_ = l.x, S = g, w = l.width, x = m - S, g = S + x);
        var b = u[d - 1].tickValue;
        b != null && c.set(b, v), e.add(new Tt({
          anid: b != null ? "area_" + b : null,
          shape: {
            x: _,
            y: S,
            width: w,
            height: x
          },
          style: et({
            fill: s[v]
          }, y),
          autoBatch: !0,
          silent: !0
        })), v = (v + 1) % f;
      }
      Ep(r).splitAreaColors = c;
    }
  }
}
function gM(r) {
  Ep(r).splitAreaColors = null;
}
var gG = ["axisLine", "axisTickLabel", "axisName"], yG = ["splitArea", "splitLine", "minorSplitLine"], yM = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t.axisPointerClass = "CartesianAxisPointer", t;
    }
    return e.prototype.render = function(t, a, n, i) {
      this.group.removeAll();
      var o = this._axisGroup;
      if (this._axisGroup = new nt(), this.group.add(this._axisGroup), !!t.get("show")) {
        var s = t.getCoordSysModel(), l = Ip(s, t), u = new _a(t, V({
          handleAutoShown: function(h) {
            for (var c = s.coordinateSystem.getCartesians(), v = 0; v < c.length; v++)
              if (xp(c[v].getOtherAxis(t.axis).scale))
                return !0;
            return !1;
          }
        }, l));
        M(gG, u.add, u), this._axisGroup.add(u.getGroup()), M(yG, function(h) {
          t.get([h, "show"]) && mG[h](this, this._axisGroup, t, s);
        }, this);
        var f = i && i.type === "changeAxisOrder" && i.isInitSort;
        f || Sl(o, this._axisGroup, t), r.prototype.render.call(this, t, a, n, i);
      }
    }, e.prototype.remove = function() {
      gM(this);
    }, e.type = "cartesianAxis", e;
  }(Ti)
), mG = {
  splitLine: function(r, e, t, a) {
    var n = t.axis;
    if (!n.scale.isBlank()) {
      var i = t.getModel("splitLine"), o = i.getModel("lineStyle"), s = o.get("color");
      s = z(s) ? s : [s];
      for (var l = a.coordinateSystem.getRect(), u = n.isHorizontal(), f = 0, h = n.getTicksCoords({
        tickModel: i
      }), c = [], v = [], d = o.getLineStyle(), p = 0; p < h.length; p++) {
        var g = n.toGlobalCoord(h[p].coord);
        u ? (c[0] = g, c[1] = l.y, v[0] = g, v[1] = l.y + l.height) : (c[0] = l.x, c[1] = g, v[0] = l.x + l.width, v[1] = g);
        var y = f++ % s.length, m = h[p].tickValue, _ = new ue({
          anid: m != null ? "line_" + h[p].tickValue : null,
          autoBatch: !0,
          shape: {
            x1: c[0],
            y1: c[1],
            x2: v[0],
            y2: v[1]
          },
          style: et({
            stroke: s[y]
          }, d),
          silent: !0
        });
        co(_.shape, d.lineWidth), e.add(_);
      }
    }
  },
  minorSplitLine: function(r, e, t, a) {
    var n = t.axis, i = t.getModel("minorSplitLine"), o = i.getModel("lineStyle"), s = a.coordinateSystem.getRect(), l = n.isHorizontal(), u = n.getMinorTicksCoords();
    if (u.length)
      for (var f = [], h = [], c = o.getLineStyle(), v = 0; v < u.length; v++)
        for (var d = 0; d < u[v].length; d++) {
          var p = n.toGlobalCoord(u[v][d].coord);
          l ? (f[0] = p, f[1] = s.y, h[0] = p, h[1] = s.y + s.height) : (f[0] = s.x, f[1] = p, h[0] = s.x + s.width, h[1] = p);
          var g = new ue({
            anid: "minor_line_" + u[v][d].tickValue,
            autoBatch: !0,
            shape: {
              x1: f[0],
              y1: f[1],
              x2: h[0],
              y2: h[1]
            },
            style: c,
            silent: !0
          });
          co(g.shape, c.lineWidth), e.add(g);
        }
  },
  splitArea: function(r, e, t, a) {
    pM(r, e, t, a);
  }
}, mM = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.type = "xAxis", e;
  }(yM)
), _G = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = mM.type, t;
    }
    return e.type = "yAxis", e;
  }(yM)
), SG = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = "grid", t;
    }
    return e.prototype.render = function(t, a) {
      this.group.removeAll(), t.get("show") && this.group.add(new Tt({
        shape: t.coordinateSystem.getRect(),
        style: et({
          fill: t.get("backgroundColor")
        }, t.getItemStyle()),
        silent: !0,
        z2: -1
      }));
    }, e.type = "grid", e;
  }($t)
), J1 = {
  // gridIndex: 0,
  // gridId: '',
  offset: 0
};
function _M(r) {
  r.registerComponentView(SG), r.registerComponentModel($5), r.registerCoordinateSystem("cartesian2d", rG), mo(r, "x", Ap, J1), mo(r, "y", Ap, J1), r.registerComponentView(mM), r.registerComponentView(_G), r.registerPreprocessor(function(e) {
    e.xAxis && e.yAxis && !e.grid && (e.grid = {});
  });
}
function xG(r) {
  yt(_M), r.registerSeriesModel(k5), r.registerChartView(H5), r.registerLayout(Il("scatter"));
}
function wG(r) {
  r.eachSeriesByType("radar", function(e) {
    var t = e.getData(), a = [], n = e.coordinateSystem;
    if (n) {
      var i = n.getIndicatorAxes();
      M(i, function(o, s) {
        t.each(t.mapDimension(i[s].dim), function(l, u) {
          a[u] = a[u] || [];
          var f = n.dataToPoint(l, s);
          a[u][s] = Q1(f) ? f : tS(n);
        });
      }), t.each(function(o) {
        var s = o2(a[o], function(l) {
          return Q1(l);
        }) || tS(n);
        a[o].push(s.slice()), t.setItemLayout(o, a[o]);
      });
    }
  });
}
function Q1(r) {
  return !isNaN(r[0]) && !isNaN(r[1]);
}
function tS(r) {
  return [r.cx, r.cy];
}
function bG(r) {
  var e = r.polar;
  if (e) {
    z(e) || (e = [e]);
    var t = [];
    M(e, function(a, n) {
      a.indicator ? (a.type && !a.shape && (a.shape = a.type), r.radar = r.radar || [], z(r.radar) || (r.radar = [r.radar]), r.radar.push(a)) : t.push(a);
    }), r.polar = t;
  }
  M(r.series, function(a) {
    a && a.type === "radar" && a.polarIndex && (a.radarIndex = a.polarIndex);
  });
}
var TG = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, a, n) {
      var i = t.coordinateSystem, o = this.group, s = t.getData(), l = this._data;
      function u(c, v) {
        var d = c.getItemVisual(v, "symbol") || "circle";
        if (d !== "none") {
          var p = Bo(c.getItemVisual(v, "symbolSize")), g = Qt(d, -1, -1, 2, 2), y = c.getItemVisual(v, "symbolRotate") || 0;
          return g.attr({
            style: {
              strokeNoScale: !0
            },
            z2: 100,
            scaleX: p[0] / 2,
            scaleY: p[1] / 2,
            rotation: y * Math.PI / 180 || 0
          }), g;
        }
      }
      function f(c, v, d, p, g, y) {
        d.removeAll();
        for (var m = 0; m < v.length - 1; m++) {
          var _ = u(p, g);
          _ && (_.__dimIdx = m, c[m] ? (_.setPosition(c[m]), wl[y ? "initProps" : "updateProps"](_, {
            x: v[m][0],
            y: v[m][1]
          }, t, g)) : _.setPosition(v[m]), d.add(_));
        }
      }
      function h(c) {
        return G(c, function(v) {
          return [i.cx, i.cy];
        });
      }
      s.diff(l).add(function(c) {
        var v = s.getItemLayout(c);
        if (v) {
          var d = new Ge(), p = new Fe(), g = {
            shape: {
              points: v
            }
          };
          d.shape.points = h(v), p.shape.points = h(v), Bt(d, g, t, c), Bt(p, g, t, c);
          var y = new nt(), m = new nt();
          y.add(p), y.add(d), y.add(m), f(p.shape.points, v, m, s, c, !0), s.setItemGraphicEl(c, y);
        }
      }).update(function(c, v) {
        var d = l.getItemGraphicEl(v), p = d.childAt(0), g = d.childAt(1), y = d.childAt(2), m = {
          shape: {
            points: s.getItemLayout(c)
          }
        };
        m.shape.points && (f(p.shape.points, m.shape.points, y, s, c, !1), Mr(g), Mr(p), Mt(p, m, t), Mt(g, m, t), s.setItemGraphicEl(c, d));
      }).remove(function(c) {
        o.remove(l.getItemGraphicEl(c));
      }).execute(), s.eachItemGraphicEl(function(c, v) {
        var d = s.getItemModel(v), p = c.childAt(0), g = c.childAt(1), y = c.childAt(2), m = s.getItemVisual(v, "style"), _ = m.fill;
        o.add(c), p.useStyle(et(d.getModel("lineStyle").getLineStyle(), {
          fill: "none",
          stroke: _
        })), de(p, d, "lineStyle"), de(g, d, "areaStyle");
        var S = d.getModel("areaStyle"), w = S.isEmpty() && S.parentModel.isEmpty();
        g.ignore = w, M(["emphasis", "select", "blur"], function(T) {
          var C = d.getModel([T, "areaStyle"]), D = C.isEmpty() && C.parentModel.isEmpty();
          g.ensureState(T).ignore = D && w;
        }), g.useStyle(et(S.getAreaStyle(), {
          fill: _,
          opacity: 0.7,
          decal: m.decal
        }));
        var x = d.getModel("emphasis"), b = x.getModel("itemStyle").getItemStyle();
        y.eachChild(function(T) {
          if (T instanceof ge) {
            var C = T.style;
            T.useStyle(V({
              // TODO other properties like x, y ?
              image: C.image,
              x: C.x,
              y: C.y,
              width: C.width,
              height: C.height
            }, m));
          } else
            T.useStyle(m), T.setColor(_), T.style.strokeNoScale = !0;
          var D = T.ensureState("emphasis");
          D.style = at(b);
          var A = s.getStore().get(s.getDimensionIndex(T.__dimIdx), v);
          (A == null || isNaN(A)) && (A = ""), pe(T, oe(d), {
            labelFetcher: s.hostModel,
            labelDataIndex: v,
            labelDimIndex: T.__dimIdx,
            defaultText: A,
            inheritColor: _,
            defaultOpacity: m.opacity
          });
        }), Wt(c, x.get("focus"), x.get("blurScope"), x.get("disabled"));
      }), this._data = s;
    }, e.prototype.remove = function() {
      this.group.removeAll(), this._data = null;
    }, e.type = "radar", e;
  }(Vt)
);
const DG = TG;
var CG = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t.hasSymbolVisual = !0, t;
    }
    return e.prototype.init = function(t) {
      r.prototype.init.apply(this, arguments), this.legendVisualProvider = new El(Y(this.getData, this), Y(this.getRawData, this));
    }, e.prototype.getInitialData = function(t, a) {
      return zo(this, {
        generateCoord: "indicator_",
        generateCoordCount: 1 / 0
      });
    }, e.prototype.formatTooltip = function(t, a, n) {
      var i = this.getData(), o = this.coordinateSystem, s = o.getIndicatorAxes(), l = this.getData().getName(t), u = l === "" ? this.name : l, f = gC(this, t);
      return se("section", {
        header: u,
        sortBlocks: !0,
        blocks: G(s, function(h) {
          var c = i.get(i.mapDimension(h.dim), t);
          return se("nameValue", {
            markerType: "subItem",
            markerColor: f,
            name: h.name,
            value: c,
            sortParam: c
          });
        })
      });
    }, e.prototype.getTooltipPosition = function(t) {
      if (t != null) {
        for (var a = this.getData(), n = this.coordinateSystem, i = a.getValues(G(n.dimensions, function(u) {
          return a.mapDimension(u);
        }), t), o = 0, s = i.length; o < s; o++)
          if (!isNaN(i[o])) {
            var l = n.getIndicatorAxes();
            return n.coordToPoint(l[o].dataToCoord(i[o]), o);
          }
      }
    }, e.type = "series.radar", e.dependencies = ["radar"], e.defaultOption = {
      // zlevel: 0,
      z: 2,
      colorBy: "data",
      coordinateSystem: "radar",
      legendHoverLink: !0,
      radarIndex: 0,
      lineStyle: {
        width: 2,
        type: "solid",
        join: "round"
      },
      label: {
        position: "top"
      },
      // areaStyle: {
      // },
      // itemStyle: {}
      symbolSize: 8
      // symbolRotate: null
    }, e;
  }(Gt)
);
const AG = CG;
var is = cM.value;
function xu(r, e) {
  return et({
    show: e
  }, r);
}
var MG = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.optionUpdated = function() {
      var t = this.get("boundaryGap"), a = this.get("splitNumber"), n = this.get("scale"), i = this.get("axisLine"), o = this.get("axisTick"), s = this.get("axisLabel"), l = this.get("axisName"), u = this.get(["axisName", "show"]), f = this.get(["axisName", "formatter"]), h = this.get("axisNameGap"), c = this.get("triggerEvent"), v = G(this.get("indicator") || [], function(d) {
        d.max != null && d.max > 0 && !d.min ? d.min = 0 : d.min != null && d.min < 0 && !d.max && (d.max = 0);
        var p = l;
        d.color != null && (p = et({
          color: d.color
        }, l));
        var g = ht(at(d), {
          boundaryGap: t,
          splitNumber: a,
          scale: n,
          axisLine: i,
          axisTick: o,
          // axisType: axisType,
          axisLabel: s,
          // Compatible with 2 and use text
          name: d.text,
          showName: u,
          nameLocation: "end",
          nameGap: h,
          // min: 0,
          nameTextStyle: p,
          triggerEvent: c
        }, !1);
        if ($(f)) {
          var y = g.name;
          g.name = f.replace("{value}", y != null ? y : "");
        } else
          K(f) && (g.name = f(g.name, g));
        var m = new kt(g, null, this.ecModel);
        return te(m, Cl.prototype), m.mainType = "radar", m.componentIndex = this.componentIndex, m;
      }, this);
      this._indicatorModels = v;
    }, e.prototype.getIndicatorModels = function() {
      return this._indicatorModels;
    }, e.type = "radar", e.defaultOption = {
      // zlevel: 0,
      z: 0,
      center: ["50%", "50%"],
      radius: "75%",
      startAngle: 90,
      axisName: {
        show: !0
        // formatter: null
        // textStyle: {}
      },
      boundaryGap: [0, 0],
      splitNumber: 5,
      axisNameGap: 15,
      scale: !1,
      // Polygon or circle
      shape: "polygon",
      axisLine: ht({
        lineStyle: {
          color: "#bbb"
        }
      }, is.axisLine),
      axisLabel: xu(is.axisLabel, !1),
      axisTick: xu(is.axisTick, !1),
      // axisType: 'value',
      splitLine: xu(is.splitLine, !0),
      splitArea: xu(is.splitArea, !0),
      // {text, min, max}
      indicator: []
    }, e;
  }(xt)
);
const IG = MG;
var LG = ["axisLine", "axisTickLabel", "axisName"], EG = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, a, n) {
      var i = this.group;
      i.removeAll(), this._buildAxes(t), this._buildSplitLineAndArea(t);
    }, e.prototype._buildAxes = function(t) {
      var a = t.coordinateSystem, n = a.getIndicatorAxes(), i = G(n, function(o) {
        var s = o.model.get("showName") ? o.name : "", l = new _a(o.model, {
          axisName: s,
          position: [a.cx, a.cy],
          rotation: o.angle,
          labelDirection: -1,
          tickDirection: -1,
          nameDirection: 1
        });
        return l;
      });
      M(i, function(o) {
        M(LG, o.add, o), this.group.add(o.getGroup());
      }, this);
    }, e.prototype._buildSplitLineAndArea = function(t) {
      var a = t.coordinateSystem, n = a.getIndicatorAxes();
      if (!n.length)
        return;
      var i = t.get("shape"), o = t.getModel("splitLine"), s = t.getModel("splitArea"), l = o.getModel("lineStyle"), u = s.getModel("areaStyle"), f = o.get("show"), h = s.get("show"), c = l.get("color"), v = u.get("color"), d = z(c) ? c : [c], p = z(v) ? v : [v], g = [], y = [];
      function m(P, R, k) {
        var O = k % R.length;
        return P[O] = P[O] || [], O;
      }
      if (i === "circle")
        for (var _ = n[0].getTicksCoords(), S = a.cx, w = a.cy, x = 0; x < _.length; x++) {
          if (f) {
            var b = m(g, d, x);
            g[b].push(new jr({
              shape: {
                cx: S,
                cy: w,
                r: _[x].coord
              }
            }));
          }
          if (h && x < _.length - 1) {
            var b = m(y, p, x);
            y[b].push(new Sh({
              shape: {
                cx: S,
                cy: w,
                r0: _[x].coord,
                r: _[x + 1].coord
              }
            }));
          }
        }
      else
        for (var T, C = G(n, function(P, R) {
          var k = P.getTicksCoords();
          return T = T == null ? k.length - 1 : Math.min(k.length - 1, T), G(k, function(O) {
            return a.coordToPoint(O.coord, R);
          });
        }), D = [], x = 0; x <= T; x++) {
          for (var A = [], I = 0; I < n.length; I++)
            A.push(C[I][x]);
          if (A[0] ? A.push(A[0].slice()) : {}.NODE_ENV !== "production" && console.error("Can't draw value axis " + x), f) {
            var b = m(g, d, x);
            g[b].push(new Fe({
              shape: {
                points: A
              }
            }));
          }
          if (h && D) {
            var b = m(y, p, x - 1);
            y[b].push(new Ge({
              shape: {
                points: A.concat(D)
              }
            }));
          }
          D = A.slice().reverse();
        }
      var L = l.getLineStyle(), E = u.getAreaStyle();
      M(y, function(P, R) {
        this.group.add(ir(P, {
          style: et({
            stroke: "none",
            fill: p[R % p.length]
          }, E),
          silent: !0
        }));
      }, this), M(g, function(P, R) {
        this.group.add(ir(P, {
          style: et({
            fill: "none",
            stroke: d[R % d.length]
          }, L),
          silent: !0
        }));
      }, this);
    }, e.type = "radar", e;
  }($t)
);
const PG = EG;
var RG = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t, a, n) {
      var i = r.call(this, t, a, n) || this;
      return i.type = "value", i.angle = 0, i.name = "", i;
    }
    return e;
  }(Lr)
);
const NG = RG;
var OG = (
  /** @class */
  function() {
    function r(e, t, a) {
      this.dimensions = [], this._model = e, this._indicatorAxes = G(e.getIndicatorModels(), function(n, i) {
        var o = "indicator_" + i, s = new NG(
          o,
          new nn()
          // (indicatorModel.get('axisType') === 'log') ? new LogScale() : new IntervalScale()
        );
        return s.name = n.get("name"), s.model = n, n.axis = s, this.dimensions.push(o), s;
      }, this), this.resize(e, a);
    }
    return r.prototype.getIndicatorAxes = function() {
      return this._indicatorAxes;
    }, r.prototype.dataToPoint = function(e, t) {
      var a = this._indicatorAxes[t];
      return this.coordToPoint(a.dataToCoord(e), t);
    }, r.prototype.coordToPoint = function(e, t) {
      var a = this._indicatorAxes[t], n = a.angle, i = this.cx + e * Math.cos(n), o = this.cy - e * Math.sin(n);
      return [i, o];
    }, r.prototype.pointToData = function(e) {
      var t = e[0] - this.cx, a = e[1] - this.cy, n = Math.sqrt(t * t + a * a);
      t /= n, a /= n;
      for (var i = Math.atan2(-a, t), o = 1 / 0, s, l = -1, u = 0; u < this._indicatorAxes.length; u++) {
        var f = this._indicatorAxes[u], h = Math.abs(i - f.angle);
        h < o && (s = f, l = u, o = h);
      }
      return [l, +(s && s.coordToData(n))];
    }, r.prototype.resize = function(e, t) {
      var a = e.get("center"), n = t.getWidth(), i = t.getHeight(), o = Math.min(n, i) / 2;
      this.cx = H(a[0], n), this.cy = H(a[1], i), this.startAngle = e.get("startAngle") * Math.PI / 180;
      var s = e.get("radius");
      ($(s) || At(s)) && (s = [0, s]), this.r0 = H(s[0], o), this.r = H(s[1], o), M(this._indicatorAxes, function(l, u) {
        l.setExtent(this.r0, this.r);
        var f = this.startAngle + u * Math.PI * 2 / this._indicatorAxes.length;
        f = Math.atan2(Math.sin(f), Math.cos(f)), l.angle = f;
      }, this);
    }, r.prototype.update = function(e, t) {
      var a = this._indicatorAxes, n = this._model;
      M(a, function(s) {
        s.scale.setExtent(1 / 0, -1 / 0);
      }), e.eachSeriesByType("radar", function(s, l) {
        if (!(s.get("coordinateSystem") !== "radar" || e.getComponent("radar", s.get("radarIndex")) !== n)) {
          var u = s.getData();
          M(a, function(f) {
            f.scale.unionExtentFromData(u, u.mapDimension(f.dim));
          });
        }
      }, this);
      var i = n.get("splitNumber"), o = new nn();
      o.setExtent(0, i), o.setInterval(1), M(a, function(s, l) {
        vM(s.scale, s.model, o);
      });
    }, r.prototype.convertToPixel = function(e, t, a) {
      return console.warn("Not implemented."), null;
    }, r.prototype.convertFromPixel = function(e, t, a) {
      return console.warn("Not implemented."), null;
    }, r.prototype.containPoint = function(e) {
      return console.warn("Not implemented."), !1;
    }, r.create = function(e, t) {
      var a = [];
      return e.eachComponent("radar", function(n) {
        var i = new r(n, e, t);
        a.push(i), n.coordinateSystem = i;
      }), e.eachSeriesByType("radar", function(n) {
        n.get("coordinateSystem") === "radar" && (n.coordinateSystem = a[n.get("radarIndex") || 0]);
      }), a;
    }, r.dimensions = [], r;
  }()
);
const kG = OG;
function VG(r) {
  r.registerCoordinateSystem("radar", kG), r.registerComponentModel(IG), r.registerComponentView(PG), r.registerVisual({
    seriesType: "radar",
    reset: function(e) {
      var t = e.getData();
      t.each(function(a) {
        t.setItemVisual(a, "legendIcon", "roundRect");
      }), t.setVisual("legendIcon", "roundRect");
    }
  });
}
function BG(r) {
  yt(VG), r.registerChartView(DG), r.registerSeriesModel(AG), r.registerLayout(wG), r.registerProcessor(Ll("radar")), r.registerPreprocessor(bG);
}
var eS = "\0_ec_interaction_mutex";
function zG(r, e, t) {
  var a = by(r);
  a[e] = t;
}
function GG(r, e, t) {
  var a = by(r), n = a[e];
  n === t && (a[e] = null);
}
function rS(r, e) {
  return !!by(r)[e];
}
function by(r) {
  return r[eS] || (r[eS] = {});
}
Qr({
  type: "takeGlobalCursor",
  event: "globalCursorTaken",
  update: "update"
}, Xt);
var FG = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t) {
      var a = r.call(this) || this;
      a._zr = t;
      var n = Y(a._mousedownHandler, a), i = Y(a._mousemoveHandler, a), o = Y(a._mouseupHandler, a), s = Y(a._mousewheelHandler, a), l = Y(a._pinchHandler, a);
      return a.enable = function(u, f) {
        this.disable(), this._opt = et(at(f) || {}, {
          zoomOnMouseWheel: !0,
          moveOnMouseMove: !0,
          // By default, wheel do not trigger move.
          moveOnMouseWheel: !1,
          preventDefaultMouseMove: !0
        }), u == null && (u = !0), (u === !0 || u === "move" || u === "pan") && (t.on("mousedown", n), t.on("mousemove", i), t.on("mouseup", o)), (u === !0 || u === "scale" || u === "zoom") && (t.on("mousewheel", s), t.on("pinch", l));
      }, a.disable = function() {
        t.off("mousedown", n), t.off("mousemove", i), t.off("mouseup", o), t.off("mousewheel", s), t.off("pinch", l);
      }, a;
    }
    return e.prototype.isDragging = function() {
      return this._dragging;
    }, e.prototype.isPinching = function() {
      return this._pinching;
    }, e.prototype.setPointerChecker = function(t) {
      this.pointerChecker = t;
    }, e.prototype.dispose = function() {
      this.disable();
    }, e.prototype._mousedownHandler = function(t) {
      if (!Cm(t)) {
        for (var a = t.target; a; ) {
          if (a.draggable)
            return;
          a = a.__hostTarget || a.parent;
        }
        var n = t.offsetX, i = t.offsetY;
        this.pointerChecker && this.pointerChecker(t, n, i) && (this._x = n, this._y = i, this._dragging = !0);
      }
    }, e.prototype._mousemoveHandler = function(t) {
      if (!(!this._dragging || !Qu("moveOnMouseMove", t, this._opt) || t.gestureEvent === "pinch" || rS(this._zr, "globalPan"))) {
        var a = t.offsetX, n = t.offsetY, i = this._x, o = this._y, s = a - i, l = n - o;
        this._x = a, this._y = n, this._opt.preventDefaultMouseMove && da(t.event), SM(this, "pan", "moveOnMouseMove", t, {
          dx: s,
          dy: l,
          oldX: i,
          oldY: o,
          newX: a,
          newY: n,
          isAvailableBehavior: null
        });
      }
    }, e.prototype._mouseupHandler = function(t) {
      Cm(t) || (this._dragging = !1);
    }, e.prototype._mousewheelHandler = function(t) {
      var a = Qu("zoomOnMouseWheel", t, this._opt), n = Qu("moveOnMouseWheel", t, this._opt), i = t.wheelDelta, o = Math.abs(i), s = t.offsetX, l = t.offsetY;
      if (!(i === 0 || !a && !n)) {
        if (a) {
          var u = o > 3 ? 1.4 : o > 1 ? 1.2 : 1.1, f = i > 0 ? u : 1 / u;
          wv(this, "zoom", "zoomOnMouseWheel", t, {
            scale: f,
            originX: s,
            originY: l,
            isAvailableBehavior: null
          });
        }
        if (n) {
          var h = Math.abs(i), c = (i > 0 ? 1 : -1) * (h > 3 ? 0.4 : h > 1 ? 0.15 : 0.05);
          wv(this, "scrollMove", "moveOnMouseWheel", t, {
            scrollDelta: c,
            originX: s,
            originY: l,
            isAvailableBehavior: null
          });
        }
      }
    }, e.prototype._pinchHandler = function(t) {
      if (!rS(this._zr, "globalPan")) {
        var a = t.pinchScale > 1 ? 1.1 : 1 / 1.1;
        wv(this, "zoom", null, t, {
          scale: a,
          originX: t.pinchX,
          originY: t.pinchY,
          isAvailableBehavior: null
        });
      }
    }, e;
  }(cr)
);
function wv(r, e, t, a, n) {
  r.pointerChecker && r.pointerChecker(a, n.originX, n.originY) && (da(a.event), SM(r, e, t, a, n));
}
function SM(r, e, t, a, n) {
  n.isAvailableBehavior = Y(Qu, null, t, a), r.trigger(e, n);
}
function Qu(r, e, t) {
  var a = t[r];
  return !r || a && (!$(a) || e.event[a + "Key"]);
}
const Pl = FG;
function Ty(r, e, t) {
  var a = r.target;
  a.x += e, a.y += t, a.dirty();
}
function Dy(r, e, t, a) {
  var n = r.target, i = r.zoomLimit, o = r.zoom = r.zoom || 1;
  if (o *= e, i) {
    var s = i.min || 0, l = i.max || 1 / 0;
    o = Math.max(Math.min(l, o), s);
  }
  var u = o / r.zoom;
  r.zoom = o, n.x -= (t - n.x) * (u - 1), n.y -= (a - n.y) * (u - 1), n.scaleX *= u, n.scaleY *= u, n.dirty();
}
var HG = {
  axisPointer: 1,
  tooltip: 1,
  brush: 1
};
function Fh(r, e, t) {
  var a = e.getComponentByElement(r.topTarget), n = a && a.coordinateSystem;
  return a && a !== t && !HG.hasOwnProperty(a.mainType) && n && n.model !== t;
}
function xM(r) {
  if ($(r)) {
    var e = new DOMParser();
    r = e.parseFromString(r, "text/xml");
  }
  var t = r;
  for (t.nodeType === 9 && (t = t.firstChild); t.nodeName.toLowerCase() !== "svg" || t.nodeType !== 1; )
    t = t.nextSibling;
  return t;
}
var bv, Gf = {
  fill: "fill",
  stroke: "stroke",
  "stroke-width": "lineWidth",
  opacity: "opacity",
  "fill-opacity": "fillOpacity",
  "stroke-opacity": "strokeOpacity",
  "stroke-dasharray": "lineDash",
  "stroke-dashoffset": "lineDashOffset",
  "stroke-linecap": "lineCap",
  "stroke-linejoin": "lineJoin",
  "stroke-miterlimit": "miterLimit",
  "font-family": "fontFamily",
  "font-size": "fontSize",
  "font-style": "fontStyle",
  "font-weight": "fontWeight",
  "text-anchor": "textAlign",
  visibility: "visibility",
  display: "display"
}, aS = _t(Gf), Ff = {
  "alignment-baseline": "textBaseline",
  "stop-color": "stopColor"
}, nS = _t(Ff), WG = function() {
  function r() {
    this._defs = {}, this._root = null;
  }
  return r.prototype.parse = function(e, t) {
    t = t || {};
    var a = xM(e);
    if ({}.NODE_ENV !== "production" && !a)
      throw new Error("Illegal svg");
    this._defsUsePending = [];
    var n = new nt();
    this._root = n;
    var i = [], o = a.getAttribute("viewBox") || "", s = parseFloat(a.getAttribute("width") || t.width), l = parseFloat(a.getAttribute("height") || t.height);
    isNaN(s) && (s = null), isNaN(l) && (l = null), He(a, n, null, !0, !1);
    for (var u = a.firstChild; u; )
      this._parseNode(u, n, i, null, !1, !1), u = u.nextSibling;
    YG(this._defs, this._defsUsePending), this._defsUsePending = [];
    var f, h;
    if (o) {
      var c = Hh(o);
      c.length >= 4 && (f = {
        x: parseFloat(c[0] || 0),
        y: parseFloat(c[1] || 0),
        width: parseFloat(c[2]),
        height: parseFloat(c[3])
      });
    }
    if (f && s != null && l != null && (h = bM(f, { x: 0, y: 0, width: s, height: l }), !t.ignoreViewBox)) {
      var v = n;
      n = new nt(), n.add(v), v.scaleX = v.scaleY = h.scale, v.x = h.x, v.y = h.y;
    }
    return !t.ignoreRootClip && s != null && l != null && n.setClipPath(new Tt({
      shape: { x: 0, y: 0, width: s, height: l }
    })), {
      root: n,
      width: s,
      height: l,
      viewBoxRect: f,
      viewBoxTransform: h,
      named: i
    };
  }, r.prototype._parseNode = function(e, t, a, n, i, o) {
    var s = e.nodeName.toLowerCase(), l, u = n;
    if (s === "defs" && (i = !0), s === "text" && (o = !0), s === "defs" || s === "switch")
      l = t;
    else {
      if (!i) {
        var f = bv[s];
        if (f && U(bv, s)) {
          l = f.call(this, e, t);
          var h = e.getAttribute("name");
          if (h) {
            var c = {
              name: h,
              namedFrom: null,
              svgNodeTagLower: s,
              el: l
            };
            a.push(c), s === "g" && (u = c);
          } else
            n && a.push({
              name: n.name,
              namedFrom: n,
              svgNodeTagLower: s,
              el: l
            });
          t.add(l);
        }
      }
      var v = iS[s];
      if (v && U(iS, s)) {
        var d = v.call(this, e), p = e.getAttribute("id");
        p && (this._defs[p] = d);
      }
    }
    if (l && l.isGroup)
      for (var g = e.firstChild; g; )
        g.nodeType === 1 ? this._parseNode(g, l, a, u, i, o) : g.nodeType === 3 && o && this._parseText(g, l), g = g.nextSibling;
  }, r.prototype._parseText = function(e, t) {
    var a = new Zs({
      style: {
        text: e.textContent
      },
      silent: !0,
      x: this._textX || 0,
      y: this._textY || 0
    });
    Ke(t, a), He(e, a, this._defsUsePending, !1, !1), $G(a, t);
    var n = a.style, i = n.fontSize;
    i && i < 9 && (n.fontSize = 9, a.scaleX *= i / 9, a.scaleY *= i / 9);
    var o = (n.fontSize || n.fontFamily) && [
      n.fontStyle,
      n.fontWeight,
      (n.fontSize || 12) + "px",
      n.fontFamily || "sans-serif"
    ].join(" ");
    n.font = o;
    var s = a.getBoundingRect();
    return this._textX += s.width, t.add(a), a;
  }, r.internalField = function() {
    bv = {
      g: function(e, t) {
        var a = new nt();
        return Ke(t, a), He(e, a, this._defsUsePending, !1, !1), a;
      },
      rect: function(e, t) {
        var a = new Tt();
        return Ke(t, a), He(e, a, this._defsUsePending, !1, !1), a.setShape({
          x: parseFloat(e.getAttribute("x") || "0"),
          y: parseFloat(e.getAttribute("y") || "0"),
          width: parseFloat(e.getAttribute("width") || "0"),
          height: parseFloat(e.getAttribute("height") || "0")
        }), a.silent = !0, a;
      },
      circle: function(e, t) {
        var a = new jr();
        return Ke(t, a), He(e, a, this._defsUsePending, !1, !1), a.setShape({
          cx: parseFloat(e.getAttribute("cx") || "0"),
          cy: parseFloat(e.getAttribute("cy") || "0"),
          r: parseFloat(e.getAttribute("r") || "0")
        }), a.silent = !0, a;
      },
      line: function(e, t) {
        var a = new ue();
        return Ke(t, a), He(e, a, this._defsUsePending, !1, !1), a.setShape({
          x1: parseFloat(e.getAttribute("x1") || "0"),
          y1: parseFloat(e.getAttribute("y1") || "0"),
          x2: parseFloat(e.getAttribute("x2") || "0"),
          y2: parseFloat(e.getAttribute("y2") || "0")
        }), a.silent = !0, a;
      },
      ellipse: function(e, t) {
        var a = new Ng();
        return Ke(t, a), He(e, a, this._defsUsePending, !1, !1), a.setShape({
          cx: parseFloat(e.getAttribute("cx") || "0"),
          cy: parseFloat(e.getAttribute("cy") || "0"),
          rx: parseFloat(e.getAttribute("rx") || "0"),
          ry: parseFloat(e.getAttribute("ry") || "0")
        }), a.silent = !0, a;
      },
      polygon: function(e, t) {
        var a = e.getAttribute("points"), n;
        a && (n = lS(a));
        var i = new Ge({
          shape: {
            points: n || []
          },
          silent: !0
        });
        return Ke(t, i), He(e, i, this._defsUsePending, !1, !1), i;
      },
      polyline: function(e, t) {
        var a = e.getAttribute("points"), n;
        a && (n = lS(a));
        var i = new Fe({
          shape: {
            points: n || []
          },
          silent: !0
        });
        return Ke(t, i), He(e, i, this._defsUsePending, !1, !1), i;
      },
      image: function(e, t) {
        var a = new ge();
        return Ke(t, a), He(e, a, this._defsUsePending, !1, !1), a.setStyle({
          image: e.getAttribute("xlink:href") || e.getAttribute("href"),
          x: +e.getAttribute("x"),
          y: +e.getAttribute("y"),
          width: +e.getAttribute("width"),
          height: +e.getAttribute("height")
        }), a.silent = !0, a;
      },
      text: function(e, t) {
        var a = e.getAttribute("x") || "0", n = e.getAttribute("y") || "0", i = e.getAttribute("dx") || "0", o = e.getAttribute("dy") || "0";
        this._textX = parseFloat(a) + parseFloat(i), this._textY = parseFloat(n) + parseFloat(o);
        var s = new nt();
        return Ke(t, s), He(e, s, this._defsUsePending, !1, !0), s;
      },
      tspan: function(e, t) {
        var a = e.getAttribute("x"), n = e.getAttribute("y");
        a != null && (this._textX = parseFloat(a)), n != null && (this._textY = parseFloat(n));
        var i = e.getAttribute("dx") || "0", o = e.getAttribute("dy") || "0", s = new nt();
        return Ke(t, s), He(e, s, this._defsUsePending, !1, !0), this._textX += parseFloat(i), this._textY += parseFloat(o), s;
      },
      path: function(e, t) {
        var a = e.getAttribute("d") || "", n = QT(a);
        return Ke(t, n), He(e, n, this._defsUsePending, !1, !1), n.silent = !0, n;
      }
    };
  }(), r;
}(), iS = {
  lineargradient: function(r) {
    var e = parseInt(r.getAttribute("x1") || "0", 10), t = parseInt(r.getAttribute("y1") || "0", 10), a = parseInt(r.getAttribute("x2") || "10", 10), n = parseInt(r.getAttribute("y2") || "0", 10), i = new _l(e, t, a, n);
    return oS(r, i), sS(r, i), i;
  },
  radialgradient: function(r) {
    var e = parseInt(r.getAttribute("cx") || "0", 10), t = parseInt(r.getAttribute("cy") || "0", 10), a = parseInt(r.getAttribute("r") || "0", 10), n = new cD(e, t, a);
    return oS(r, n), sS(r, n), n;
  }
};
function oS(r, e) {
  var t = r.getAttribute("gradientUnits");
  t === "userSpaceOnUse" && (e.global = !0);
}
function sS(r, e) {
  for (var t = r.firstChild; t; ) {
    if (t.nodeType === 1 && t.nodeName.toLocaleLowerCase() === "stop") {
      var a = t.getAttribute("offset"), n = void 0;
      a && a.indexOf("%") > 0 ? n = parseInt(a, 10) / 100 : a ? n = parseFloat(a) : n = 0;
      var i = {};
      wM(t, i, i);
      var o = i.stopColor || t.getAttribute("stop-color") || "#000000";
      e.colorStops.push({
        offset: n,
        color: o
      });
    }
    t = t.nextSibling;
  }
}
function Ke(r, e) {
  r && r.__inheritedStyle && (e.__inheritedStyle || (e.__inheritedStyle = {}), et(e.__inheritedStyle, r.__inheritedStyle));
}
function lS(r) {
  for (var e = Hh(r), t = [], a = 0; a < e.length; a += 2) {
    var n = parseFloat(e[a]), i = parseFloat(e[a + 1]);
    t.push([n, i]);
  }
  return t;
}
function He(r, e, t, a, n) {
  var i = e, o = i.__inheritedStyle = i.__inheritedStyle || {}, s = {};
  r.nodeType === 1 && (qG(r, e), wM(r, o, s), a || KG(r, o, s)), i.style = i.style || {}, o.fill != null && (i.style.fill = uS(i, "fill", o.fill, t)), o.stroke != null && (i.style.stroke = uS(i, "stroke", o.stroke, t)), M([
    "lineWidth",
    "opacity",
    "fillOpacity",
    "strokeOpacity",
    "miterLimit",
    "fontSize"
  ], function(l) {
    o[l] != null && (i.style[l] = parseFloat(o[l]));
  }), M([
    "lineDashOffset",
    "lineCap",
    "lineJoin",
    "fontWeight",
    "fontFamily",
    "fontStyle",
    "textAlign"
  ], function(l) {
    o[l] != null && (i.style[l] = o[l]);
  }), n && (i.__selfStyle = s), o.lineDash && (i.style.lineDash = G(Hh(o.lineDash), function(l) {
    return parseFloat(l);
  })), (o.visibility === "hidden" || o.visibility === "collapse") && (i.invisible = !0), o.display === "none" && (i.ignore = !0);
}
function $G(r, e) {
  var t = e.__selfStyle;
  if (t) {
    var a = t.textBaseline, n = a;
    !a || a === "auto" || a === "baseline" ? n = "alphabetic" : a === "before-edge" || a === "text-before-edge" ? n = "top" : a === "after-edge" || a === "text-after-edge" ? n = "bottom" : (a === "central" || a === "mathematical") && (n = "middle"), r.style.textBaseline = n;
  }
  var i = e.__inheritedStyle;
  if (i) {
    var o = i.textAlign, s = o;
    o && (o === "middle" && (s = "center"), r.style.textAlign = s);
  }
}
var UG = /^url\(\s*#(.*?)\)/;
function uS(r, e, t, a) {
  var n = t && t.match(UG);
  if (n) {
    var i = Sr(n[1]);
    a.push([r, e, i]);
    return;
  }
  return t === "none" && (t = null), t;
}
function YG(r, e) {
  for (var t = 0; t < e.length; t++) {
    var a = e[t];
    a[0].style[a[1]] = r[a[2]];
  }
}
var ZG = /-?([0-9]*\.)?[0-9]+([eE]-?[0-9]+)?/g;
function Hh(r) {
  return r.match(ZG) || [];
}
var XG = /(translate|scale|rotate|skewX|skewY|matrix)\(([\-\s0-9\.eE,]*)\)/g, Tv = Math.PI / 180;
function qG(r, e) {
  var t = r.getAttribute("transform");
  if (t) {
    t = t.replace(/,/g, " ");
    var a = [], n = null;
    t.replace(XG, function(h, c, v) {
      return a.push(c, v), "";
    });
    for (var i = a.length - 1; i > 0; i -= 2) {
      var o = a[i], s = a[i - 1], l = Hh(o);
      switch (n = n || fr(), s) {
        case "translate":
          Zr(n, n, [parseFloat(l[0]), parseFloat(l[1] || "0")]);
          break;
        case "scale":
          mg(n, n, [parseFloat(l[0]), parseFloat(l[1] || l[0])]);
          break;
        case "rotate":
          _i(n, n, -parseFloat(l[0]) * Tv);
          break;
        case "skewX":
          var u = Math.tan(parseFloat(l[0]) * Tv);
          ua(n, [1, 0, u, 1, 0, 0], n);
          break;
        case "skewY":
          var f = Math.tan(parseFloat(l[0]) * Tv);
          ua(n, [1, f, 0, 1, 0, 0], n);
          break;
        case "matrix":
          n[0] = parseFloat(l[0]), n[1] = parseFloat(l[1]), n[2] = parseFloat(l[2]), n[3] = parseFloat(l[3]), n[4] = parseFloat(l[4]), n[5] = parseFloat(l[5]);
          break;
      }
    }
    e.setLocalTransform(n);
  }
}
var fS = /([^\s:;]+)\s*:\s*([^:;]+)/g;
function wM(r, e, t) {
  var a = r.getAttribute("style");
  if (a) {
    fS.lastIndex = 0;
    for (var n; (n = fS.exec(a)) != null; ) {
      var i = n[1], o = U(Gf, i) ? Gf[i] : null;
      o && (e[o] = n[2]);
      var s = U(Ff, i) ? Ff[i] : null;
      s && (t[s] = n[2]);
    }
  }
}
function KG(r, e, t) {
  for (var a = 0; a < aS.length; a++) {
    var n = aS[a], i = r.getAttribute(n);
    i != null && (e[Gf[n]] = i);
  }
  for (var a = 0; a < nS.length; a++) {
    var n = nS[a], i = r.getAttribute(n);
    i != null && (t[Ff[n]] = i);
  }
}
function bM(r, e) {
  var t = e.width / r.width, a = e.height / r.height, n = Math.min(t, a);
  return {
    scale: n,
    x: -(r.x + r.width / 2) * n + (e.x + e.width / 2),
    y: -(r.y + r.height / 2) * n + (e.y + e.height / 2)
  };
}
function jG(r, e) {
  var t = new WG();
  return t.parse(r, e);
}
var JG = X([
  "rect",
  "circle",
  "line",
  "ellipse",
  "polygon",
  "polyline",
  "path",
  // <text> <tspan> are also enabled because some SVG might paint text itself,
  // but still need to trigger events or tooltip.
  "text",
  "tspan",
  // <g> is also enabled because this case: if multiple tags share one name
  // and need label displayed, every tags will display the name, which is not
  // expected. So we can put them into a <g name="xxx">. Thereby only one label
  // displayed and located based on the bounding rect of the <g>.
  "g"
]), QG = (
  /** @class */
  function() {
    function r(e, t) {
      this.type = "geoSVG", this._usedGraphicMap = X(), this._freedGraphics = [], this._mapName = e, this._parsedXML = xM(t);
    }
    return r.prototype.load = function() {
      var e = this._firstGraphic;
      if (!e) {
        e = this._firstGraphic = this._buildGraphic(this._parsedXML), this._freedGraphics.push(e), this._boundingRect = this._firstGraphic.boundingRect.clone();
        var t = eF(e.named), a = t.regions, n = t.regionsMap;
        this._regions = a, this._regionsMap = n;
      }
      return {
        boundingRect: this._boundingRect,
        regions: this._regions,
        regionsMap: this._regionsMap
      };
    }, r.prototype._buildGraphic = function(e) {
      var t, a;
      try {
        t = e && jG(e, {
          ignoreViewBox: !0,
          ignoreRootClip: !0
        }) || {}, a = t.root, J(a != null);
      } catch (g) {
        throw new Error("Invalid svg format\n" + g.message);
      }
      var n = new nt();
      n.add(a), n.isGeoSVGGraphicRoot = !0;
      var i = t.width, o = t.height, s = t.viewBoxRect, l = this._boundingRect;
      if (!l) {
        var u = void 0, f = void 0, h = void 0, c = void 0;
        if (i != null ? (u = 0, h = i) : s && (u = s.x, h = s.width), o != null ? (f = 0, c = o) : s && (f = s.y, c = s.height), u == null || f == null) {
          var v = a.getBoundingRect();
          u == null && (u = v.x, h = v.width), f == null && (f = v.y, c = v.height);
        }
        l = this._boundingRect = new ct(u, f, h, c);
      }
      if (s) {
        var d = bM(s, l);
        a.scaleX = a.scaleY = d.scale, a.x = d.x, a.y = d.y;
      }
      n.setClipPath(new Tt({
        shape: l.plain()
      }));
      var p = [];
      return M(t.named, function(g) {
        JG.get(g.svgNodeTagLower) != null && (p.push(g), tF(g.el));
      }), {
        root: n,
        boundingRect: l,
        named: p
      };
    }, r.prototype.useGraphic = function(e) {
      var t = this._usedGraphicMap, a = t.get(e);
      return a || (a = this._freedGraphics.pop() || this._buildGraphic(this._parsedXML), t.set(e, a), a);
    }, r.prototype.freeGraphic = function(e) {
      var t = this._usedGraphicMap, a = t.get(e);
      a && (t.removeKey(e), this._freedGraphics.push(a));
    }, r;
  }()
);
function tF(r) {
  r.silent = !1, r.isGroup && r.traverse(function(e) {
    e.silent = !1;
  });
}
function eF(r) {
  var e = [], t = X();
  return M(r, function(a) {
    if (a.namedFrom == null) {
      var n = new SB(a.name, a.el);
      e.push(n), t.set(a.name, n);
    }
  }), {
    regions: e,
    regionsMap: t
  };
}
var Pp = [126, 25], hS = "南海诸岛", Vn = [[[0, 3.5], [7, 11.2], [15, 11.9], [30, 7], [42, 0.7], [52, 0.7], [56, 7.7], [59, 0.7], [64, 0.7], [64, 0], [5, 0], [0, 3.5]], [[13, 16.1], [19, 14.7], [16, 21.7], [11, 23.1], [13, 16.1]], [[12, 32.2], [14, 38.5], [15, 38.5], [13, 32.2], [12, 32.2]], [[16, 47.6], [12, 53.2], [13, 53.2], [18, 47.6], [16, 47.6]], [[6, 64.4], [8, 70], [9, 70], [8, 64.4], [6, 64.4]], [[23, 82.6], [29, 79.8], [30, 79.8], [25, 82.6], [23, 82.6]], [[37, 70.7], [43, 62.3], [44, 62.3], [39, 70.7], [37, 70.7]], [[48, 51.1], [51, 45.5], [53, 45.5], [50, 51.1], [48, 51.1]], [[51, 35], [51, 28.7], [53, 28.7], [53, 35], [51, 35]], [[52, 22.4], [55, 17.5], [56, 17.5], [53, 22.4], [52, 22.4]], [[58, 12.6], [62, 7], [63, 7], [60, 12.6], [58, 12.6]], [[0, 3.5], [0, 93.1], [64, 93.1], [64, 0], [63, 0], [63, 92.4], [1, 92.4], [1, 3.5], [0, 3.5]]];
for (var Nn = 0; Nn < Vn.length; Nn++)
  for (var Gi = 0; Gi < Vn[Nn].length; Gi++)
    Vn[Nn][Gi][0] /= 10.5, Vn[Nn][Gi][1] /= -10.5 / 0.75, Vn[Nn][Gi][0] += Pp[0], Vn[Nn][Gi][1] += Pp[1];
function rF(r, e) {
  if (r === "china") {
    for (var t = 0; t < e.length; t++)
      if (e[t].name === hS)
        return;
    e.push(new xA(hS, G(Vn, function(a) {
      return {
        type: "polygon",
        exterior: a
      };
    }), Pp));
  }
}
var aF = {
  南海诸岛: [32, 80],
  // 全国
  广东: [0, -10],
  香港: [10, 5],
  澳门: [-10, 10],
  // '北京': [-10, 0],
  天津: [5, 5]
};
function nF(r, e) {
  if (r === "china") {
    var t = aF[e.name];
    if (t) {
      var a = e.getCenter();
      a[0] += t[0] / 10.5, a[1] += -t[1] / (10.5 / 0.75), e.setCenter(a);
    }
  }
}
var iF = [[[123.45165252685547, 25.73527164402261], [123.49731445312499, 25.73527164402261], [123.49731445312499, 25.750734064600884], [123.45165252685547, 25.750734064600884], [123.45165252685547, 25.73527164402261]]];
function oF(r, e) {
  r === "china" && e.name === "台湾" && e.geometries.push({
    type: "polygon",
    exterior: iF[0]
  });
}
var sF = "name", lF = (
  /** @class */
  function() {
    function r(e, t, a) {
      this.type = "geoJSON", this._parsedMap = X(), this._mapName = e, this._specialAreas = a, this._geoJSON = fF(t);
    }
    return r.prototype.load = function(e, t) {
      t = t || sF;
      var a = this._parsedMap.get(t);
      if (!a) {
        var n = this._parseToRegions(t);
        a = this._parsedMap.set(t, {
          regions: n,
          boundingRect: uF(n)
        });
      }
      var i = X(), o = [];
      return M(a.regions, function(s) {
        var l = s.name;
        e && U(e, l) && (s = s.cloneShallow(l = e[l])), o.push(s), i.set(l, s);
      }), {
        regions: o,
        boundingRect: a.boundingRect || new ct(0, 0, 0, 0),
        regionsMap: i
      };
    }, r.prototype._parseToRegions = function(e) {
      var t = this._mapName, a = this._geoJSON, n;
      try {
        n = a ? wB(a, e) : [];
      } catch (i) {
        throw new Error("Invalid geoJson format\n" + i.message);
      }
      return rF(t, n), M(n, function(i) {
        var o = i.name;
        nF(t, i), oF(t, i);
        var s = this._specialAreas && this._specialAreas[o];
        s && i.transformTo(s.left, s.top, s.width, s.height);
      }, this), n;
    }, r.prototype.getMapForUser = function() {
      return {
        // For backward compatibility, use geoJson
        // PENDING: it has been returning them without clone.
        // do we need to avoid outsite modification?
        geoJson: this._geoJSON,
        geoJSON: this._geoJSON,
        specialAreas: this._specialAreas
      };
    }, r;
  }()
);
function uF(r) {
  for (var e, t = 0; t < r.length; t++) {
    var a = r[t].getBoundingRect();
    e = e || a.clone(), e.union(a);
  }
  return e;
}
function fF(r) {
  return $(r) ? typeof JSON < "u" && JSON.parse ? JSON.parse(r) : new Function("return (" + r + ");")() : r;
}
var os = X();
const Sa = {
  /**
   * Compatible with previous `echarts.registerMap`.
   *
   * @usage
   * ```js
   *
   * echarts.registerMap('USA', geoJson, specialAreas);
   *
   * echarts.registerMap('USA', {
   *     geoJson: geoJson,
   *     specialAreas: {...}
   * });
   * echarts.registerMap('USA', {
   *     geoJSON: geoJson,
   *     specialAreas: {...}
   * });
   *
   * echarts.registerMap('airport', {
   *     svg: svg
   * }
   * ```
   *
   * Note:
   * Do not support that register multiple geoJSON or SVG
   * one map name. Because different geoJSON and SVG have
   * different unit. It's not easy to make sure how those
   * units are mapping/normalize.
   * If intending to use multiple geoJSON or SVG, we can
   * use multiple geo coordinate system.
   */
  registerMap: function(r, e, t) {
    if (e.svg) {
      var a = new QG(r, e.svg);
      os.set(r, a);
    } else {
      var n = e.geoJson || e.geoJSON;
      n && !e.features ? t = e.specialAreas : n = e;
      var a = new lF(r, n, t);
      os.set(r, a);
    }
  },
  getGeoResource: function(r) {
    return os.get(r);
  },
  /**
   * Only for exporting to users.
   * **MUST NOT** used internally.
   */
  getMapForUser: function(r) {
    var e = os.get(r);
    return e && e.type === "geoJSON" && e.getMapForUser();
  },
  load: function(r, e, t) {
    var a = os.get(r);
    if (!a) {
      ({}).NODE_ENV !== "production" && console.error("Map " + r + " not exists. The GeoJSON of the map must be provided.");
      return;
    }
    return a.load(e, t);
  }
};
var Cy = ["rect", "circle", "line", "ellipse", "polygon", "polyline", "path"], hF = X(Cy), cF = X(Cy.concat(["g"])), vF = X(Cy.concat(["g"])), TM = Dt();
function wu(r) {
  var e = r.getItemStyle(), t = r.get("areaColor");
  return t != null && (e.fill = t), e;
}
function cS(r) {
  var e = r.style;
  e && (e.stroke = e.stroke || e.fill, e.fill = null);
}
var dF = (
  /** @class */
  function() {
    function r(e) {
      var t = new nt();
      this.uid = Lo("ec_map_draw"), this._controller = new Pl(e.getZr()), this._controllerHost = {
        target: t
      }, this.group = t, t.add(this._regionsGroup = new nt()), t.add(this._svgGroup = new nt());
    }
    return r.prototype.draw = function(e, t, a, n, i) {
      var o = e.mainType === "geo", s = e.getData && e.getData();
      o && t.eachComponent({
        mainType: "series",
        subType: "map"
      }, function(y) {
        !s && y.getHostGeoModel() === e && (s = y.getData());
      });
      var l = e.coordinateSystem, u = this._regionsGroup, f = this.group, h = l.getTransformInfo(), c = h.raw, v = h.roam, d = !u.childAt(0) || i;
      d ? (f.x = v.x, f.y = v.y, f.scaleX = v.scaleX, f.scaleY = v.scaleY, f.dirty()) : Mt(f, v, e);
      var p = s && s.getVisual("visualMeta") && s.getVisual("visualMeta").length > 0, g = {
        api: a,
        geo: l,
        mapOrGeoModel: e,
        data: s,
        isVisualEncodedByVisualMap: p,
        isGeo: o,
        transformInfoRaw: c
      };
      l.resourceType === "geoJSON" ? this._buildGeoJSON(g) : l.resourceType === "geoSVG" && this._buildSVG(g), this._updateController(e, t, a), this._updateMapSelectHandler(e, u, a, n);
    }, r.prototype._buildGeoJSON = function(e) {
      var t = this._regionsGroupByName = X(), a = X(), n = this._regionsGroup, i = e.transformInfoRaw, o = e.mapOrGeoModel, s = e.data, l = e.geo.projection, u = l && l.stream;
      function f(v, d) {
        return d && (v = d(v)), v && [v[0] * i.scaleX + i.x, v[1] * i.scaleY + i.y];
      }
      function h(v) {
        for (var d = [], p = !u && l && l.project, g = 0; g < v.length; ++g) {
          var y = f(v[g], p);
          y && d.push(y);
        }
        return d;
      }
      function c(v) {
        return {
          shape: {
            points: h(v)
          }
        };
      }
      n.removeAll(), M(e.geo.regions, function(v) {
        var d = v.name, p = t.get(d), g = a.get(d) || {}, y = g.dataIdx, m = g.regionModel;
        p || (p = t.set(d, new nt()), n.add(p), y = s ? s.indexOfName(d) : null, m = e.isGeo ? o.getRegionModel(d) : s ? s.getItemModel(y) : null, a.set(d, {
          dataIdx: y,
          regionModel: m
        }));
        var _ = [], S = [];
        M(v.geometries, function(b) {
          if (b.type === "polygon") {
            var T = [b.exterior].concat(b.interiors || []);
            u && (T = mS(T, u)), M(T, function(D) {
              _.push(new Ge(c(D)));
            });
          } else {
            var C = b.points;
            u && (C = mS(C, u, !0)), M(C, function(D) {
              S.push(new Fe(c(D)));
            });
          }
        });
        var w = f(v.getCenter(), l && l.project);
        function x(b, T) {
          if (b.length) {
            var C = new kg({
              culling: !0,
              segmentIgnoreThreshold: 1,
              shape: {
                paths: b
              }
            });
            p.add(C), vS(e, C, y, m), dS(e, C, d, m, o, y, w), T && (cS(C), M(C.states, cS));
          }
        }
        x(_), x(S, !0);
      }), t.each(function(v, d) {
        var p = a.get(d), g = p.dataIdx, y = p.regionModel;
        pS(e, v, d, y, o, g), gS(e, v, d, y, o), yS(e, v, d, y, o);
      }, this);
    }, r.prototype._buildSVG = function(e) {
      var t = e.geo.map, a = e.transformInfoRaw;
      this._svgGroup.x = a.x, this._svgGroup.y = a.y, this._svgGroup.scaleX = a.scaleX, this._svgGroup.scaleY = a.scaleY, this._svgResourceChanged(t) && (this._freeSVG(), this._useSVG(t));
      var n = this._svgDispatcherMap = X(), i = !1;
      M(this._svgGraphicRecord.named, function(o) {
        var s = o.name, l = e.mapOrGeoModel, u = e.data, f = o.svgNodeTagLower, h = o.el, c = u ? u.indexOfName(s) : null, v = l.getRegionModel(s);
        if (hF.get(f) != null && h instanceof hr && vS(e, h, c, v), h instanceof hr && (h.culling = !0), h.z2EmphasisLift = 0, !o.namedFrom && (vF.get(f) != null && dS(e, h, s, v, l, c, null), pS(e, h, s, v, l, c), gS(e, h, s, v, l), cF.get(f) != null)) {
          var d = yS(e, h, s, v, l);
          d === "self" && (i = !0);
          var p = n.get(s) || n.set(s, []);
          p.push(h);
        }
      }, this), this._enableBlurEntireSVG(i, e);
    }, r.prototype._enableBlurEntireSVG = function(e, t) {
      if (e && t.isGeo) {
        var a = t.mapOrGeoModel.getModel(["blur", "itemStyle"]).getItemStyle(), n = a.opacity;
        this._svgGraphicRecord.root.traverse(function(i) {
          if (!i.isGroup) {
            di(i);
            var o = i.ensureState("blur").style || {};
            o.opacity == null && n != null && (o.opacity = n), i.ensureState("emphasis");
          }
        });
      }
    }, r.prototype.remove = function() {
      this._regionsGroup.removeAll(), this._regionsGroupByName = null, this._svgGroup.removeAll(), this._freeSVG(), this._controller.dispose(), this._controllerHost = null;
    }, r.prototype.findHighDownDispatchers = function(e, t) {
      if (e == null)
        return [];
      var a = t.coordinateSystem;
      if (a.resourceType === "geoJSON") {
        var n = this._regionsGroupByName;
        if (n) {
          var i = n.get(e);
          return i ? [i] : [];
        }
      } else if (a.resourceType === "geoSVG")
        return this._svgDispatcherMap && this._svgDispatcherMap.get(e) || [];
    }, r.prototype._svgResourceChanged = function(e) {
      return this._svgMapName !== e;
    }, r.prototype._useSVG = function(e) {
      var t = Sa.getGeoResource(e);
      if (t && t.type === "geoSVG") {
        var a = t.useGraphic(this.uid);
        this._svgGroup.add(a.root), this._svgGraphicRecord = a, this._svgMapName = e;
      }
    }, r.prototype._freeSVG = function() {
      var e = this._svgMapName;
      if (e != null) {
        var t = Sa.getGeoResource(e);
        t && t.type === "geoSVG" && t.freeGraphic(this.uid), this._svgGraphicRecord = null, this._svgDispatcherMap = null, this._svgGroup.removeAll(), this._svgMapName = null;
      }
    }, r.prototype._updateController = function(e, t, a) {
      var n = e.coordinateSystem, i = this._controller, o = this._controllerHost;
      o.zoomLimit = e.get("scaleLimit"), o.zoom = n.getZoom(), i.enable(e.get("roam") || !1);
      var s = e.mainType;
      function l() {
        var u = {
          type: "geoRoam",
          componentType: s
        };
        return u[s + "Id"] = e.id, u;
      }
      i.off("pan").on("pan", function(u) {
        this._mouseDownFlag = !1, Ty(o, u.dx, u.dy), a.dispatchAction(V(l(), {
          dx: u.dx,
          dy: u.dy,
          animation: {
            duration: 0
          }
        }));
      }, this), i.off("zoom").on("zoom", function(u) {
        this._mouseDownFlag = !1, Dy(o, u.scale, u.originX, u.originY), a.dispatchAction(V(l(), {
          zoom: u.scale,
          originX: u.originX,
          originY: u.originY,
          animation: {
            duration: 0
          }
        }));
      }, this), i.setPointerChecker(function(u, f, h) {
        return n.containPoint([f, h]) && !Fh(u, a, e);
      });
    }, r.prototype.resetForLabelLayout = function() {
      this.group.traverse(function(e) {
        var t = e.getTextContent();
        t && (t.ignore = TM(t).ignore);
      });
    }, r.prototype._updateMapSelectHandler = function(e, t, a, n) {
      var i = this;
      t.off("mousedown"), t.off("click"), e.get("selectedMode") && (t.on("mousedown", function() {
        i._mouseDownFlag = !0;
      }), t.on("click", function(o) {
        i._mouseDownFlag && (i._mouseDownFlag = !1);
      }));
    }, r;
  }()
);
function vS(r, e, t, a) {
  var n = a.getModel("itemStyle"), i = a.getModel(["emphasis", "itemStyle"]), o = a.getModel(["blur", "itemStyle"]), s = a.getModel(["select", "itemStyle"]), l = wu(n), u = wu(i), f = wu(s), h = wu(o), c = r.data;
  if (c) {
    var v = c.getItemVisual(t, "style"), d = c.getItemVisual(t, "decal");
    r.isVisualEncodedByVisualMap && v.fill && (l.fill = v.fill), d && (l.decal = po(d, r.api));
  }
  e.setStyle(l), e.style.strokeNoScale = !0, e.ensureState("emphasis").style = u, e.ensureState("select").style = f, e.ensureState("blur").style = h, di(e);
}
function dS(r, e, t, a, n, i, o) {
  var s = r.data, l = r.isGeo, u = s && isNaN(s.get(s.mapDimension("value"), i)), f = s && s.getItemLayout(i);
  if (l || u || f && f.showLabel) {
    var h = l ? t : i, c = void 0;
    (!s || i >= 0) && (c = n);
    var v = o ? {
      normal: {
        align: "center",
        verticalAlign: "middle"
      }
    } : null;
    pe(e, oe(a), {
      labelFetcher: c,
      labelDataIndex: h,
      defaultText: t
    }, v);
    var d = e.getTextContent();
    if (d && (TM(d).ignore = d.ignore, e.textConfig && o)) {
      var p = e.getBoundingRect().clone();
      e.textConfig.layoutRect = p, e.textConfig.position = [(o[0] - p.x) / p.width * 100 + "%", (o[1] - p.y) / p.height * 100 + "%"];
    }
    e.disableLabelAnimation = !0;
  } else
    e.removeTextContent(), e.removeTextConfig(), e.disableLabelAnimation = null;
}
function pS(r, e, t, a, n, i) {
  r.data ? r.data.setItemGraphicEl(i, e) : it(e).eventData = {
    componentType: "geo",
    componentIndex: n.componentIndex,
    geoIndex: n.componentIndex,
    name: t,
    region: a && a.option || {}
  };
}
function gS(r, e, t, a, n) {
  r.data || Mo({
    el: e,
    componentModel: n,
    itemName: t,
    // @ts-ignore FIXME:TS fix the "compatible with each other"?
    itemTooltipOption: a.get("tooltip")
  });
}
function yS(r, e, t, a, n) {
  e.highDownSilentOnTouch = !!n.get("selectedMode");
  var i = a.getModel("emphasis"), o = i.get("focus");
  return Wt(e, o, i.get("blurScope"), i.get("disabled")), r.isGeo && dR(e, n, t), o;
}
function mS(r, e, t) {
  var a = [], n;
  function i() {
    n = [];
  }
  function o() {
    n.length && (a.push(n), n = []);
  }
  var s = e({
    polygonStart: i,
    polygonEnd: o,
    lineStart: i,
    lineEnd: o,
    point: function(l, u) {
      isFinite(l) && isFinite(u) && n.push([l, u]);
    },
    sphere: function() {
    }
  });
  return !t && s.polygonStart(), M(r, function(l) {
    s.lineStart();
    for (var u = 0; u < l.length; u++)
      s.point(l[u][0], l[u][1]);
    s.lineEnd();
  }), !t && s.polygonEnd(), a;
}
const DM = dF;
var pF = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, a, n, i) {
      if (!(i && i.type === "mapToggleSelect" && i.from === this.uid)) {
        var o = this.group;
        if (o.removeAll(), !t.getHostGeoModel()) {
          if (this._mapDraw && i && i.type === "geoRoam" && this._mapDraw.resetForLabelLayout(), i && i.type === "geoRoam" && i.componentType === "series" && i.seriesId === t.id) {
            var s = this._mapDraw;
            s && o.add(s.group);
          } else if (t.needsDrawMap) {
            var s = this._mapDraw || new DM(n);
            o.add(s.group), s.draw(t, a, n, this, i), this._mapDraw = s;
          } else
            this._mapDraw && this._mapDraw.remove(), this._mapDraw = null;
          t.get("showLegendSymbol") && a.getComponent("legend") && this._renderSymbols(t, a, n);
        }
      }
    }, e.prototype.remove = function() {
      this._mapDraw && this._mapDraw.remove(), this._mapDraw = null, this.group.removeAll();
    }, e.prototype.dispose = function() {
      this._mapDraw && this._mapDraw.remove(), this._mapDraw = null;
    }, e.prototype._renderSymbols = function(t, a, n) {
      var i = t.originalData, o = this.group;
      i.each(i.mapDimension("value"), function(s, l) {
        if (!isNaN(s)) {
          var u = i.getItemLayout(l);
          if (!(!u || !u.point)) {
            var f = u.point, h = u.offset, c = new jr({
              style: {
                // Because the special of map draw.
                // Which needs statistic of multiple series and draw on one map.
                // And each series also need a symbol with legend color
                //
                // Layout and visual are put one the different data
                // TODO
                fill: t.getData().getVisual("style").fill
              },
              shape: {
                cx: f[0] + h * 9,
                cy: f[1],
                r: 3
              },
              silent: !0,
              // Do not overlap the first series, on which labels are displayed.
              z2: 8 + (h ? 0 : Co + 1)
            });
            if (!h) {
              var v = t.mainSeries.getData(), d = i.getName(l), p = v.indexOfName(d), g = i.getItemModel(l), y = g.getModel("label"), m = v.getItemGraphicEl(p);
              pe(c, oe(g), {
                labelFetcher: {
                  getFormattedLabel: function(_, S) {
                    return t.getFormattedLabel(p, S);
                  }
                },
                defaultText: d
              }), c.disableLabelAnimation = !0, y.get("position") || c.setTextConfig({
                position: "bottom"
              }), m.onHoverStateChange = function(_) {
                yf(c, _);
              };
            }
            o.add(c);
          }
        }
      });
    }, e.type = "map", e;
  }(Vt)
);
const gF = pF;
var yF = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t.needsDrawMap = !1, t.seriesGroup = [], t.getTooltipPosition = function(a) {
        if (a != null) {
          var n = this.getData().getName(a), i = this.coordinateSystem, o = i.getRegion(n);
          return o && i.dataToPoint(o.getCenter());
        }
      }, t;
    }
    return e.prototype.getInitialData = function(t) {
      for (var a = zo(this, {
        coordDimensions: ["value"],
        encodeDefaulter: ot(Ug, this)
      }), n = X(), i = [], o = 0, s = a.count(); o < s; o++) {
        var l = a.getName(o);
        n.set(l, !0);
      }
      var u = Sa.load(this.getMapType(), this.option.nameMap, this.option.nameProperty);
      return M(u.regions, function(f) {
        var h = f.name;
        n.get(h) || i.push(h);
      }), a.appendValues([], i), a;
    }, e.prototype.getHostGeoModel = function() {
      var t = this.option.geoIndex;
      return t != null ? this.ecModel.getComponent("geo", t) : null;
    }, e.prototype.getMapType = function() {
      return (this.getHostGeoModel() || this).option.map;
    }, e.prototype.getRawValue = function(t) {
      var a = this.getData();
      return a.get(a.mapDimension("value"), t);
    }, e.prototype.getRegionModel = function(t) {
      var a = this.getData();
      return a.getItemModel(a.indexOfName(t));
    }, e.prototype.formatTooltip = function(t, a, n) {
      for (var i = this.getData(), o = this.getRawValue(t), s = i.getName(t), l = this.seriesGroup, u = [], f = 0; f < l.length; f++) {
        var h = l[f].originalData.indexOfName(s), c = i.mapDimension("value");
        isNaN(l[f].originalData.get(c, h)) || u.push(l[f].name);
      }
      return se("section", {
        header: u.join(", "),
        noHeader: !u.length,
        blocks: [se("nameValue", {
          name: s,
          value: o
        })]
      });
    }, e.prototype.setZoom = function(t) {
      this.option.zoom = t;
    }, e.prototype.setCenter = function(t) {
      this.option.center = t;
    }, e.prototype.getLegendIcon = function(t) {
      var a = t.icon || "roundRect", n = Qt(a, 0, 0, t.itemWidth, t.itemHeight, t.itemStyle.fill);
      return n.setStyle(t.itemStyle), n.style.stroke = "none", a.indexOf("empty") > -1 && (n.style.stroke = n.style.fill, n.style.fill = "#fff", n.style.lineWidth = 2), n;
    }, e.type = "series.map", e.dependencies = ["geo"], e.layoutMode = "box", e.defaultOption = {
      // 一级层叠
      // zlevel: 0,
      // 二级层叠
      z: 2,
      coordinateSystem: "geo",
      // map should be explicitly specified since ec3.
      map: "",
      // If `geoIndex` is not specified, a exclusive geo will be
      // created. Otherwise use the specified geo component, and
      // `map` and `mapType` are ignored.
      // geoIndex: 0,
      // 'center' | 'left' | 'right' | 'x%' | {number}
      left: "center",
      // 'center' | 'top' | 'bottom' | 'x%' | {number}
      top: "center",
      // right
      // bottom
      // width:
      // height
      // Aspect is width / height. Inited to be geoJson bbox aspect
      // This parameter is used for scale this aspect
      // Default value:
      // for geoSVG source: 1,
      // for geoJSON source: 0.75.
      aspectScale: null,
      // Layout with center and size
      // If you want to put map in a fixed size box with right aspect ratio
      // This two properties may be more convenient.
      // layoutCenter: [50%, 50%]
      // layoutSize: 100
      showLegendSymbol: !0,
      // Define left-top, right-bottom coords to control view
      // For example, [ [180, 90], [-180, -90] ],
      // higher priority than center and zoom
      boundingCoords: null,
      // Default on center of map
      center: null,
      zoom: 1,
      scaleLimit: null,
      selectedMode: !0,
      label: {
        show: !1,
        color: "#000"
      },
      // scaleLimit: null,
      itemStyle: {
        borderWidth: 0.5,
        borderColor: "#444",
        areaColor: "#eee"
      },
      emphasis: {
        label: {
          show: !0,
          color: "rgb(100,0,0)"
        },
        itemStyle: {
          areaColor: "rgba(255,215,0,0.8)"
        }
      },
      select: {
        label: {
          show: !0,
          color: "rgb(100,0,0)"
        },
        itemStyle: {
          color: "rgba(255,215,0,0.8)"
        }
      },
      nameProperty: "name"
    }, e;
  }(Gt)
);
const mF = yF;
function _F(r, e) {
  var t = {};
  return M(r, function(a) {
    a.each(a.mapDimension("value"), function(n, i) {
      var o = "ec-" + a.getName(i);
      t[o] = t[o] || [], isNaN(n) || t[o].push(n);
    });
  }), r[0].map(r[0].mapDimension("value"), function(a, n) {
    for (var i = "ec-" + r[0].getName(n), o = 0, s = 1 / 0, l = -1 / 0, u = t[i].length, f = 0; f < u; f++)
      s = Math.min(s, t[i][f]), l = Math.max(l, t[i][f]), o += t[i][f];
    var h;
    return e === "min" ? h = s : e === "max" ? h = l : e === "average" ? h = o / u : h = o, u === 0 ? NaN : h;
  });
}
function SF(r) {
  var e = {};
  r.eachSeriesByType("map", function(t) {
    var a = t.getHostGeoModel(), n = a ? "o" + a.id : "i" + t.getMapType();
    (e[n] = e[n] || []).push(t);
  }), M(e, function(t, a) {
    for (var n = _F(G(t, function(o) {
      return o.getData();
    }), t[0].get("mapValueCalculation")), i = 0; i < t.length; i++)
      t[i].originalData = t[i].getData();
    for (var i = 0; i < t.length; i++)
      t[i].seriesGroup = t, t[i].needsDrawMap = i === 0 && !t[i].getHostGeoModel(), t[i].setData(n.cloneShallow()), t[i].mainSeries = t[0];
  });
}
function xF(r) {
  var e = {};
  r.eachSeriesByType("map", function(t) {
    var a = t.getMapType();
    if (!(t.getHostGeoModel() || e[a])) {
      var n = {};
      M(t.seriesGroup, function(o) {
        var s = o.coordinateSystem, l = o.originalData;
        o.get("showLegendSymbol") && r.getComponent("legend") && l.each(l.mapDimension("value"), function(u, f) {
          var h = l.getName(f), c = s.getRegion(h);
          if (!(!c || isNaN(u))) {
            var v = n[h] || 0, d = s.dataToPoint(c.getCenter());
            n[h] = v + 1, l.setItemLayout(f, {
              point: d,
              offset: v
            });
          }
        });
      });
      var i = t.getData();
      i.each(function(o) {
        var s = i.getName(o), l = i.getItemLayout(o) || {};
        l.showLabel = !n[s], i.setItemLayout(o, l);
      }), e[a] = !0;
    }
  });
}
var _S = he, wF = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t) {
      var a = r.call(this) || this;
      return a.type = "view", a.dimensions = ["x", "y"], a._roamTransformable = new oa(), a._rawTransformable = new oa(), a.name = t, a;
    }
    return e.prototype.setBoundingRect = function(t, a, n, i) {
      return this._rect = new ct(t, a, n, i), this._rect;
    }, e.prototype.getBoundingRect = function() {
      return this._rect;
    }, e.prototype.setViewRect = function(t, a, n, i) {
      this._transformTo(t, a, n, i), this._viewRect = new ct(t, a, n, i);
    }, e.prototype._transformTo = function(t, a, n, i) {
      var o = this.getBoundingRect(), s = this._rawTransformable;
      s.transform = o.calculateTransform(new ct(t, a, n, i));
      var l = s.parent;
      s.parent = null, s.decomposeTransform(), s.parent = l, this._updateTransform();
    }, e.prototype.setCenter = function(t, a) {
      t && (this._center = [H(t[0], a.getWidth()), H(t[1], a.getHeight())], this._updateCenterAndZoom());
    }, e.prototype.setZoom = function(t) {
      t = t || 1;
      var a = this.zoomLimit;
      a && (a.max != null && (t = Math.min(a.max, t)), a.min != null && (t = Math.max(a.min, t))), this._zoom = t, this._updateCenterAndZoom();
    }, e.prototype.getDefaultCenter = function() {
      var t = this.getBoundingRect(), a = t.x + t.width / 2, n = t.y + t.height / 2;
      return [a, n];
    }, e.prototype.getCenter = function() {
      return this._center || this.getDefaultCenter();
    }, e.prototype.getZoom = function() {
      return this._zoom || 1;
    }, e.prototype.getRoamTransform = function() {
      return this._roamTransformable.getLocalTransform();
    }, e.prototype._updateCenterAndZoom = function() {
      var t = this._rawTransformable.getLocalTransform(), a = this._roamTransformable, n = this.getDefaultCenter(), i = this.getCenter(), o = this.getZoom();
      i = he([], i, t), n = he([], n, t), a.originX = i[0], a.originY = i[1], a.x = n[0] - i[0], a.y = n[1] - i[1], a.scaleX = a.scaleY = o, this._updateTransform();
    }, e.prototype._updateTransform = function() {
      var t = this._roamTransformable, a = this._rawTransformable;
      a.parent = t, t.updateTransform(), a.updateTransform(), yg(this.transform || (this.transform = []), a.transform || fr()), this._rawTransform = a.getLocalTransform(), this.invTransform = this.invTransform || [], To(this.invTransform, this.transform), this.decomposeTransform();
    }, e.prototype.getTransformInfo = function() {
      var t = this._rawTransformable, a = this._roamTransformable, n = new oa();
      return n.transform = a.transform, n.decomposeTransform(), {
        roam: {
          x: n.x,
          y: n.y,
          scaleX: n.scaleX,
          scaleY: n.scaleY
        },
        raw: {
          x: t.x,
          y: t.y,
          scaleX: t.scaleX,
          scaleY: t.scaleY
        }
      };
    }, e.prototype.getViewRect = function() {
      return this._viewRect;
    }, e.prototype.getViewRectAfterRoam = function() {
      var t = this.getBoundingRect().clone();
      return t.applyTransform(this.transform), t;
    }, e.prototype.dataToPoint = function(t, a, n) {
      var i = a ? this._rawTransform : this.transform;
      return n = n || [], i ? _S(n, t, i) : De(n, t);
    }, e.prototype.pointToData = function(t) {
      var a = this.invTransform;
      return a ? _S([], t, a) : [t[0], t[1]];
    }, e.prototype.convertToPixel = function(t, a, n) {
      var i = SS(a);
      return i === this ? i.dataToPoint(n) : null;
    }, e.prototype.convertFromPixel = function(t, a, n) {
      var i = SS(a);
      return i === this ? i.pointToData(n) : null;
    }, e.prototype.containPoint = function(t) {
      return this.getViewRectAfterRoam().contain(t[0], t[1]);
    }, e.dimensions = ["x", "y"], e;
  }(oa)
);
function SS(r) {
  var e = r.seriesModel;
  return e ? e.coordinateSystem : null;
}
const Rl = wF;
var bF = {
  geoJSON: {
    aspectScale: 0.75,
    invertLongitute: !0
  },
  geoSVG: {
    aspectScale: 1,
    invertLongitute: !1
  }
}, CM = ["lng", "lat"], AM = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t, a, n) {
      var i = r.call(this, t) || this;
      i.dimensions = CM, i.type = "geo", i._nameCoordMap = X(), i.map = a;
      var o = n.projection, s = Sa.load(a, n.nameMap, n.nameProperty), l = Sa.getGeoResource(a), u = i.resourceType = l ? l.type : null, f = i.regions = s.regions, h = bF[l.type];
      i._regionsMap = s.regionsMap, i.regions = s.regions, {}.NODE_ENV !== "production" && o && (u === "geoSVG" && ({}.NODE_ENV !== "production" && Ft("Map " + a + " with SVG source can't use projection. Only GeoJSON source supports projection."), o = null), o.project && o.unproject || ({}.NODE_ENV !== "production" && Ft("project and unproject must be both provided in the projeciton."), o = null)), i.projection = o;
      var c;
      if (o)
        for (var v = 0; v < f.length; v++) {
          var d = f[v].getBoundingRect(o);
          c = c || d.clone(), c.union(d);
        }
      else
        c = s.boundingRect;
      return i.setBoundingRect(c.x, c.y, c.width, c.height), i.aspectScale = o ? 1 : ft(n.aspectScale, h.aspectScale), i._invertLongitute = o ? !1 : h.invertLongitute, i;
    }
    return e.prototype._transformTo = function(t, a, n, i) {
      var o = this.getBoundingRect(), s = this._invertLongitute;
      o = o.clone(), s && (o.y = -o.y - o.height);
      var l = this._rawTransformable;
      l.transform = o.calculateTransform(new ct(t, a, n, i));
      var u = l.parent;
      l.parent = null, l.decomposeTransform(), l.parent = u, s && (l.scaleY = -l.scaleY), this._updateTransform();
    }, e.prototype.getRegion = function(t) {
      return this._regionsMap.get(t);
    }, e.prototype.getRegionByCoord = function(t) {
      for (var a = this.regions, n = 0; n < a.length; n++) {
        var i = a[n];
        if (i.type === "geoJSON" && i.contain(t))
          return a[n];
      }
    }, e.prototype.addGeoCoord = function(t, a) {
      this._nameCoordMap.set(t, a);
    }, e.prototype.getGeoCoord = function(t) {
      var a = this._regionsMap.get(t);
      return this._nameCoordMap.get(t) || a && a.getCenter();
    }, e.prototype.dataToPoint = function(t, a, n) {
      if ($(t) && (t = this.getGeoCoord(t)), t) {
        var i = this.projection;
        return i && (t = i.project(t)), t && this.projectedToPoint(t, a, n);
      }
    }, e.prototype.pointToData = function(t) {
      var a = this.projection;
      return a && (t = a.unproject(t)), t && this.pointToProjected(t);
    }, e.prototype.pointToProjected = function(t) {
      return r.prototype.pointToData.call(this, t);
    }, e.prototype.projectedToPoint = function(t, a, n) {
      return r.prototype.dataToPoint.call(this, t, a, n);
    }, e.prototype.convertToPixel = function(t, a, n) {
      var i = xS(a);
      return i === this ? i.dataToPoint(n) : null;
    }, e.prototype.convertFromPixel = function(t, a, n) {
      var i = xS(a);
      return i === this ? i.pointToData(n) : null;
    }, e;
  }(Rl)
);
te(AM, Rl);
function xS(r) {
  var e = r.geoModel, t = r.seriesModel;
  return e ? e.coordinateSystem : t ? t.coordinateSystem || (t.getReferringComponents("geo", Jt).models[0] || {}).coordinateSystem : null;
}
const wS = AM;
function bS(r, e) {
  var t = r.get("boundingCoords");
  if (t != null) {
    var a = t[0], n = t[1];
    if (!(isFinite(a[0]) && isFinite(a[1]) && isFinite(n[0]) && isFinite(n[1])))
      ({}).NODE_ENV !== "production" && console.error("Invalid boundingCoords");
    else {
      var i = this.projection;
      if (i) {
        var o = a[0], s = a[1], l = n[0], u = n[1];
        a = [1 / 0, 1 / 0], n = [-1 / 0, -1 / 0];
        var f = function(x, b, T, C) {
          for (var D = T - x, A = C - b, I = 0; I <= 100; I++) {
            var L = I / 100, E = i.project([x + D * L, b + A * L]);
            Ga(a, a, E), Fa(n, n, E);
          }
        };
        f(o, s, l, s), f(l, s, l, u), f(l, u, o, u), f(o, u, l, s);
      }
      this.setBoundingRect(a[0], a[1], n[0] - a[0], n[1] - a[1]);
    }
  }
  var h = this.getBoundingRect(), c = r.get("layoutCenter"), v = r.get("layoutSize"), d = e.getWidth(), p = e.getHeight(), g = h.width / h.height * this.aspectScale, y = !1, m, _;
  c && v && (m = [H(c[0], d), H(c[1], p)], _ = H(v, Math.min(d, p)), !isNaN(m[0]) && !isNaN(m[1]) && !isNaN(_) ? y = !0 : {}.NODE_ENV !== "production" && console.warn("Given layoutCenter or layoutSize data are invalid. Use left/top/width/height instead."));
  var S;
  if (y)
    S = {}, g > 1 ? (S.width = _, S.height = _ / g) : (S.height = _, S.width = _ * g), S.y = m[1] - S.height / 2, S.x = m[0] - S.width / 2;
  else {
    var w = r.getBoxLayoutParams();
    w.aspect = g, S = ae(w, {
      width: d,
      height: p
    });
  }
  this.setViewRect(S.x, S.y, S.width, S.height), this.setCenter(r.get("center"), e), this.setZoom(r.get("zoom"));
}
function TF(r, e) {
  M(e.get("geoCoord"), function(t, a) {
    r.addGeoCoord(a, t);
  });
}
var DF = (
  /** @class */
  function() {
    function r() {
      this.dimensions = CM;
    }
    return r.prototype.create = function(e, t) {
      var a = [];
      function n(o) {
        return {
          nameProperty: o.get("nameProperty"),
          aspectScale: o.get("aspectScale"),
          projection: o.get("projection")
        };
      }
      e.eachComponent("geo", function(o, s) {
        var l = o.get("map"), u = new wS(l + s, l, V({
          nameMap: o.get("nameMap")
        }, n(o)));
        u.zoomLimit = o.get("scaleLimit"), a.push(u), o.coordinateSystem = u, u.model = o, u.resize = bS, u.resize(o, t);
      }), e.eachSeries(function(o) {
        var s = o.get("coordinateSystem");
        if (s === "geo") {
          var l = o.get("geoIndex") || 0;
          o.coordinateSystem = a[l];
        }
      });
      var i = {};
      return e.eachSeriesByType("map", function(o) {
        if (!o.getHostGeoModel()) {
          var s = o.getMapType();
          i[s] = i[s] || [], i[s].push(o);
        }
      }), M(i, function(o, s) {
        var l = G(o, function(f) {
          return f.get("nameMap");
        }), u = new wS(s, s, V({
          nameMap: vg(l)
        }, n(o[0])));
        u.zoomLimit = jt.apply(null, G(o, function(f) {
          return f.get("scaleLimit");
        })), a.push(u), u.resize = bS, u.resize(o[0], t), M(o, function(f) {
          f.coordinateSystem = u, TF(u, f);
        });
      }), a;
    }, r.prototype.getFilledRegions = function(e, t, a, n) {
      for (var i = (e || []).slice(), o = X(), s = 0; s < i.length; s++)
        o.set(i[s].name, i[s]);
      var l = Sa.load(t, a, n);
      return M(l.regions, function(u) {
        var f = u.name;
        !o.get(f) && i.push({
          name: f
        });
      }), i;
    }, r;
  }()
), CF = new DF();
const MM = CF;
var AF = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.init = function(t, a, n) {
      var i = Sa.getGeoResource(t.map);
      if (i && i.type === "geoJSON") {
        var o = t.itemStyle = t.itemStyle || {};
        "color" in o || (o.color = "#eee");
      }
      this.mergeDefaultAndTheme(t, n), hi(t, "label", ["show"]);
    }, e.prototype.optionUpdated = function() {
      var t = this, a = this.option;
      a.regions = MM.getFilledRegions(a.regions, a.map, a.nameMap, a.nameProperty);
      var n = {};
      this._optionModelMap = Yr(a.regions || [], function(i, o) {
        var s = o.name;
        return s && (i.set(s, new kt(o, t, t.ecModel)), o.selected && (n[s] = !0)), i;
      }, X()), a.selectedMap || (a.selectedMap = n);
    }, e.prototype.getRegionModel = function(t) {
      return this._optionModelMap.get(t) || new kt(null, this, this.ecModel);
    }, e.prototype.getFormattedLabel = function(t, a) {
      var n = this.getRegionModel(t), i = a === "normal" ? n.get(["label", "formatter"]) : n.get(["emphasis", "label", "formatter"]), o = {
        name: t
      };
      if (K(i))
        return o.status = a, i(o);
      if ($(i))
        return i.replace("{a}", t != null ? t : "");
    }, e.prototype.setZoom = function(t) {
      this.option.zoom = t;
    }, e.prototype.setCenter = function(t) {
      this.option.center = t;
    }, e.prototype.select = function(t) {
      var a = this.option, n = a.selectedMode;
      if (n) {
        n !== "multiple" && (a.selectedMap = null);
        var i = a.selectedMap || (a.selectedMap = {});
        i[t] = !0;
      }
    }, e.prototype.unSelect = function(t) {
      var a = this.option.selectedMap;
      a && (a[t] = !1);
    }, e.prototype.toggleSelected = function(t) {
      this[this.isSelected(t) ? "unSelect" : "select"](t);
    }, e.prototype.isSelected = function(t) {
      var a = this.option.selectedMap;
      return !!(a && a[t]);
    }, e.type = "geo", e.layoutMode = "box", e.defaultOption = {
      // zlevel: 0,
      z: 0,
      show: !0,
      left: "center",
      top: "center",
      // Default value:
      // for geoSVG source: 1,
      // for geoJSON source: 0.75.
      aspectScale: null,
      // /// Layout with center and size
      // If you want to put map in a fixed size box with right aspect ratio
      // This two properties may be more convenient
      // layoutCenter: [50%, 50%]
      // layoutSize: 100
      silent: !1,
      // Map type
      map: "",
      // Define left-top, right-bottom coords to control view
      // For example, [ [180, 90], [-180, -90] ]
      boundingCoords: null,
      // Default on center of map
      center: null,
      zoom: 1,
      scaleLimit: null,
      // selectedMode: false
      label: {
        show: !1,
        color: "#000"
      },
      itemStyle: {
        borderWidth: 0.5,
        borderColor: "#444"
        // Default color:
        // + geoJSON: #eee
        // + geoSVG: null (use SVG original `fill`)
        // color: '#eee'
      },
      emphasis: {
        label: {
          show: !0,
          color: "rgb(100,0,0)"
        },
        itemStyle: {
          color: "rgba(255,215,0,0.8)"
        }
      },
      select: {
        label: {
          show: !0,
          color: "rgb(100,0,0)"
        },
        itemStyle: {
          color: "rgba(255,215,0,0.8)"
        }
      },
      regions: []
      // tooltip: {
      //     show: false
      // }
    }, e;
  }(xt)
);
const MF = AF;
function TS(r, e) {
  return r.pointToProjected ? r.pointToProjected(e) : r.pointToData(e);
}
function Ay(r, e, t, a) {
  var n = r.getZoom(), i = r.getCenter(), o = e.zoom, s = r.projectedToPoint ? r.projectedToPoint(i) : r.dataToPoint(i);
  if (e.dx != null && e.dy != null && (s[0] -= e.dx, s[1] -= e.dy, r.setCenter(TS(r, s), a)), o != null) {
    if (t) {
      var l = t.min || 0, u = t.max || 1 / 0;
      o = Math.max(Math.min(n * o, u), l) / n;
    }
    r.scaleX *= o, r.scaleY *= o;
    var f = (e.originX - r.x) * (o - 1), h = (e.originY - r.y) * (o - 1);
    r.x -= f, r.y -= h, r.updateTransform(), r.setCenter(TS(r, s), a), r.setZoom(o * n);
  }
  return {
    center: r.getCenter(),
    zoom: r.getZoom()
  };
}
var IF = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t.focusBlurEnabled = !0, t;
    }
    return e.prototype.init = function(t, a) {
      this._api = a;
    }, e.prototype.render = function(t, a, n, i) {
      if (this._model = t, !t.get("show")) {
        this._mapDraw && this._mapDraw.remove(), this._mapDraw = null;
        return;
      }
      this._mapDraw || (this._mapDraw = new DM(n));
      var o = this._mapDraw;
      o.draw(t, a, n, this, i), o.group.on("click", this._handleRegionClick, this), o.group.silent = t.get("silent"), this.group.add(o.group), this.updateSelectStatus(t, a, n);
    }, e.prototype._handleRegionClick = function(t) {
      var a;
      Kn(t.target, function(n) {
        return (a = it(n).eventData) != null;
      }, !0), a && this._api.dispatchAction({
        type: "geoToggleSelect",
        geoId: this._model.id,
        name: a.name
      });
    }, e.prototype.updateSelectStatus = function(t, a, n) {
      var i = this;
      this._mapDraw.group.traverse(function(o) {
        var s = it(o).eventData;
        if (s)
          return i._model.isSelected(s.name) ? n.enterSelect(o) : n.leaveSelect(o), !0;
      });
    }, e.prototype.findHighDownDispatchers = function(t) {
      return this._mapDraw && this._mapDraw.findHighDownDispatchers(t, this._model);
    }, e.prototype.dispose = function() {
      this._mapDraw && this._mapDraw.remove();
    }, e.type = "geo", e;
  }($t)
);
const LF = IF;
function EF(r, e, t) {
  Sa.registerMap(r, e, t);
}
function IM(r) {
  r.registerCoordinateSystem("geo", MM), r.registerComponentModel(MF), r.registerComponentView(LF), r.registerImpl("registerMap", EF), r.registerImpl("getMap", function(t) {
    return Sa.getMapForUser(t);
  });
  function e(t, a) {
    a.update = "geo:updateSelectStatus", r.registerAction(a, function(n, i) {
      var o = {}, s = [];
      return i.eachComponent({
        mainType: "geo",
        query: n
      }, function(l) {
        l[t](n.name);
        var u = l.coordinateSystem;
        M(u.regions, function(h) {
          o[h.name] = l.isSelected(h.name) || !1;
        });
        var f = [];
        M(o, function(h, c) {
          o[c] && f.push(c);
        }), s.push({
          geoIndex: l.componentIndex,
          // Use singular, the same naming convention as the event `selectchanged`.
          name: f
        });
      }), {
        selected: o,
        allSelected: s,
        name: n.name
      };
    });
  }
  e("toggleSelected", {
    type: "geoToggleSelect",
    event: "geoselectchanged"
  }), e("select", {
    type: "geoSelect",
    event: "geoselected"
  }), e("unSelect", {
    type: "geoUnSelect",
    event: "geounselected"
  }), r.registerAction({
    type: "geoRoam",
    event: "geoRoam",
    update: "updateTransform"
  }, function(t, a, n) {
    var i = t.componentType || "series";
    a.eachComponent({
      mainType: i,
      query: t
    }, function(o) {
      var s = o.coordinateSystem;
      if (s.type === "geo") {
        var l = Ay(s, t, o.get("scaleLimit"), n);
        o.setCenter && o.setCenter(l.center), o.setZoom && o.setZoom(l.zoom), i === "series" && M(o.seriesGroup, function(u) {
          u.setCenter(l.center), u.setZoom(l.zoom);
        });
      }
    });
  });
}
function PF(r) {
  yt(IM), r.registerChartView(gF), r.registerSeriesModel(mF), r.registerLayout(xF), r.registerProcessor(r.PRIORITY.PROCESSOR.STATISTIC, SF), MC("map", r.registerAction);
}
function RF(r) {
  var e = r;
  e.hierNode = {
    defaultAncestor: null,
    ancestor: e,
    prelim: 0,
    modifier: 0,
    change: 0,
    shift: 0,
    i: 0,
    thread: null
  };
  for (var t = [e], a, n; a = t.pop(); )
    if (n = a.children, a.isExpand && n.length)
      for (var i = n.length, o = i - 1; o >= 0; o--) {
        var s = n[o];
        s.hierNode = {
          defaultAncestor: null,
          ancestor: s,
          prelim: 0,
          modifier: 0,
          change: 0,
          shift: 0,
          i: o,
          thread: null
        }, t.push(s);
      }
}
function NF(r, e) {
  var t = r.isExpand ? r.children : [], a = r.parentNode.children, n = r.hierNode.i ? a[r.hierNode.i - 1] : null;
  if (t.length) {
    VF(r);
    var i = (t[0].hierNode.prelim + t[t.length - 1].hierNode.prelim) / 2;
    n ? (r.hierNode.prelim = n.hierNode.prelim + e(r, n), r.hierNode.modifier = r.hierNode.prelim - i) : r.hierNode.prelim = i;
  } else
    n && (r.hierNode.prelim = n.hierNode.prelim + e(r, n));
  r.parentNode.hierNode.defaultAncestor = BF(r, n, r.parentNode.hierNode.defaultAncestor || a[0], e);
}
function OF(r) {
  var e = r.hierNode.prelim + r.parentNode.hierNode.modifier;
  r.setLayout({
    x: e
  }, !0), r.hierNode.modifier += r.parentNode.hierNode.modifier;
}
function DS(r) {
  return arguments.length ? r : FF;
}
function Ts(r, e) {
  return r -= Math.PI / 2, {
    x: e * Math.cos(r),
    y: e * Math.sin(r)
  };
}
function kF(r, e) {
  return ae(r.getBoxLayoutParams(), {
    width: e.getWidth(),
    height: e.getHeight()
  });
}
function VF(r) {
  for (var e = r.children, t = e.length, a = 0, n = 0; --t >= 0; ) {
    var i = e[t];
    i.hierNode.prelim += a, i.hierNode.modifier += a, n += i.hierNode.change, a += i.hierNode.shift + n;
  }
}
function BF(r, e, t, a) {
  if (e) {
    for (var n = r, i = r, o = i.parentNode.children[0], s = e, l = n.hierNode.modifier, u = i.hierNode.modifier, f = o.hierNode.modifier, h = s.hierNode.modifier; s = Dv(s), i = Cv(i), s && i; ) {
      n = Dv(n), o = Cv(o), n.hierNode.ancestor = r;
      var c = s.hierNode.prelim + h - i.hierNode.prelim - u + a(s, i);
      c > 0 && (GF(zF(s, r, t), r, c), u += c, l += c), h += s.hierNode.modifier, u += i.hierNode.modifier, l += n.hierNode.modifier, f += o.hierNode.modifier;
    }
    s && !Dv(n) && (n.hierNode.thread = s, n.hierNode.modifier += h - l), i && !Cv(o) && (o.hierNode.thread = i, o.hierNode.modifier += u - f, t = r);
  }
  return t;
}
function Dv(r) {
  var e = r.children;
  return e.length && r.isExpand ? e[e.length - 1] : r.hierNode.thread;
}
function Cv(r) {
  var e = r.children;
  return e.length && r.isExpand ? e[0] : r.hierNode.thread;
}
function zF(r, e, t) {
  return r.hierNode.ancestor.parentNode === e.parentNode ? r.hierNode.ancestor : t;
}
function GF(r, e, t) {
  var a = t / (e.hierNode.i - r.hierNode.i);
  e.hierNode.change -= a, e.hierNode.shift += t, e.hierNode.modifier += t, e.hierNode.prelim += t, r.hierNode.change += a;
}
function FF(r, e) {
  return r.parentNode === e.parentNode ? 1 : 2;
}
var HF = (
  /** @class */
  function() {
    function r() {
      this.parentPoint = [], this.childPoints = [];
    }
    return r;
  }()
), WF = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t) {
      return r.call(this, t) || this;
    }
    return e.prototype.getDefaultStyle = function() {
      return {
        stroke: "#000",
        fill: null
      };
    }, e.prototype.getDefaultShape = function() {
      return new HF();
    }, e.prototype.buildPath = function(t, a) {
      var n = a.childPoints, i = n.length, o = a.parentPoint, s = n[0], l = n[i - 1];
      if (i === 1) {
        t.moveTo(o[0], o[1]), t.lineTo(s[0], s[1]);
        return;
      }
      var u = a.orient, f = u === "TB" || u === "BT" ? 0 : 1, h = 1 - f, c = H(a.forkPosition, 1), v = [];
      v[f] = o[f], v[h] = o[h] + (l[h] - o[h]) * c, t.moveTo(o[0], o[1]), t.lineTo(v[0], v[1]), t.moveTo(s[0], s[1]), v[f] = s[f], t.lineTo(v[0], v[1]), v[f] = l[f], t.lineTo(v[0], v[1]), t.lineTo(l[0], l[1]);
      for (var d = 1; d < i - 1; d++) {
        var p = n[d];
        t.moveTo(p[0], p[1]), v[f] = p[f], t.lineTo(v[0], v[1]);
      }
    }, e;
  }(mt)
), $F = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t._mainGroup = new nt(), t;
    }
    return e.prototype.init = function(t, a) {
      this._controller = new Pl(a.getZr()), this._controllerHost = {
        target: this.group
      }, this.group.add(this._mainGroup);
    }, e.prototype.render = function(t, a, n) {
      var i = t.getData(), o = t.layoutInfo, s = this._mainGroup, l = t.get("layout");
      l === "radial" ? (s.x = o.x + o.width / 2, s.y = o.y + o.height / 2) : (s.x = o.x, s.y = o.y), this._updateViewCoordSys(t, n), this._updateController(t, a, n);
      var u = this._data;
      i.diff(u).add(function(f) {
        CS(i, f) && AS(i, f, null, s, t);
      }).update(function(f, h) {
        var c = u.getItemGraphicEl(h);
        if (!CS(i, f)) {
          c && IS(u, h, c, s, t);
          return;
        }
        AS(i, f, c, s, t);
      }).remove(function(f) {
        var h = u.getItemGraphicEl(f);
        h && IS(u, f, h, s, t);
      }).execute(), this._nodeScaleRatio = t.get("nodeScaleRatio"), this._updateNodeAndLinkScale(t), t.get("expandAndCollapse") === !0 && i.eachItemGraphicEl(function(f, h) {
        f.off("click").on("click", function() {
          n.dispatchAction({
            type: "treeExpandAndCollapse",
            seriesId: t.id,
            dataIndex: h
          });
        });
      }), this._data = i;
    }, e.prototype._updateViewCoordSys = function(t, a) {
      var n = t.getData(), i = [];
      n.each(function(h) {
        var c = n.getItemLayout(h);
        c && !isNaN(c.x) && !isNaN(c.y) && i.push([+c.x, +c.y]);
      });
      var o = [], s = [];
      yh(i, o, s);
      var l = this._min, u = this._max;
      s[0] - o[0] === 0 && (o[0] = l ? l[0] : o[0] - 1, s[0] = u ? u[0] : s[0] + 1), s[1] - o[1] === 0 && (o[1] = l ? l[1] : o[1] - 1, s[1] = u ? u[1] : s[1] + 1);
      var f = t.coordinateSystem = new Rl();
      f.zoomLimit = t.get("scaleLimit"), f.setBoundingRect(o[0], o[1], s[0] - o[0], s[1] - o[1]), f.setCenter(t.get("center"), a), f.setZoom(t.get("zoom")), this.group.attr({
        x: f.x,
        y: f.y,
        scaleX: f.scaleX,
        scaleY: f.scaleY
      }), this._min = o, this._max = s;
    }, e.prototype._updateController = function(t, a, n) {
      var i = this, o = this._controller, s = this._controllerHost, l = this.group;
      o.setPointerChecker(function(u, f, h) {
        var c = l.getBoundingRect();
        return c.applyTransform(l.transform), c.contain(f, h) && !Fh(u, n, t);
      }), o.enable(t.get("roam")), s.zoomLimit = t.get("scaleLimit"), s.zoom = t.coordinateSystem.getZoom(), o.off("pan").off("zoom").on("pan", function(u) {
        Ty(s, u.dx, u.dy), n.dispatchAction({
          seriesId: t.id,
          type: "treeRoam",
          dx: u.dx,
          dy: u.dy
        });
      }).on("zoom", function(u) {
        Dy(s, u.scale, u.originX, u.originY), n.dispatchAction({
          seriesId: t.id,
          type: "treeRoam",
          zoom: u.scale,
          originX: u.originX,
          originY: u.originY
        }), i._updateNodeAndLinkScale(t), n.updateLabelLayout();
      });
    }, e.prototype._updateNodeAndLinkScale = function(t) {
      var a = t.getData(), n = this._getNodeGlobalScale(t);
      a.eachItemGraphicEl(function(i, o) {
        i.setSymbolScale(n);
      });
    }, e.prototype._getNodeGlobalScale = function(t) {
      var a = t.coordinateSystem;
      if (a.type !== "view")
        return 1;
      var n = this._nodeScaleRatio, i = a.scaleX || 1, o = a.getZoom(), s = (o - 1) * n + 1;
      return s / i;
    }, e.prototype.dispose = function() {
      this._controller && this._controller.dispose(), this._controllerHost = null;
    }, e.prototype.remove = function() {
      this._mainGroup.removeAll(), this._data = null;
    }, e.type = "tree", e;
  }(Vt)
);
function CS(r, e) {
  var t = r.getItemLayout(e);
  return t && !isNaN(t.x) && !isNaN(t.y);
}
function AS(r, e, t, a, n) {
  var i = !t, o = r.tree.getNodeByDataIndex(e), s = o.getModel(), l = o.getVisual("style").fill, u = o.isExpand === !1 && o.children.length !== 0 ? l : "#fff", f = r.tree.root, h = o.parentNode === f ? o : o.parentNode || o, c = r.getItemGraphicEl(h.dataIndex), v = h.getLayout(), d = c ? {
    x: c.__oldX,
    y: c.__oldY,
    rawX: c.__radialOldRawX,
    rawY: c.__radialOldRawY
  } : v, p = o.getLayout();
  i ? (t = new Al(r, e, null, {
    symbolInnerColor: u,
    useNameLabel: !0
  }), t.x = d.x, t.y = d.y) : t.updateData(r, e, null, {
    symbolInnerColor: u,
    useNameLabel: !0
  }), t.__radialOldRawX = t.__radialRawX, t.__radialOldRawY = t.__radialRawY, t.__radialRawX = p.rawX, t.__radialRawY = p.rawY, a.add(t), r.setItemGraphicEl(e, t), t.__oldX = t.x, t.__oldY = t.y, Mt(t, {
    x: p.x,
    y: p.y
  }, n);
  var g = t.getSymbolPath();
  if (n.get("layout") === "radial") {
    var y = f.children[0], m = y.getLayout(), _ = y.children.length, S = void 0, w = void 0;
    if (p.x === m.x && o.isExpand === !0 && y.children.length) {
      var x = {
        x: (y.children[0].getLayout().x + y.children[_ - 1].getLayout().x) / 2,
        y: (y.children[0].getLayout().y + y.children[_ - 1].getLayout().y) / 2
      };
      S = Math.atan2(x.y - m.y, x.x - m.x), S < 0 && (S = Math.PI * 2 + S), w = x.x < m.x, w && (S = S - Math.PI);
    } else
      S = Math.atan2(p.y - m.y, p.x - m.x), S < 0 && (S = Math.PI * 2 + S), o.children.length === 0 || o.children.length !== 0 && o.isExpand === !1 ? (w = p.x < m.x, w && (S = S - Math.PI)) : (w = p.x > m.x, w || (S = S - Math.PI));
    var b = w ? "left" : "right", T = s.getModel("label"), C = T.get("rotate"), D = C * (Math.PI / 180), A = g.getTextContent();
    A && (g.setTextConfig({
      position: T.get("position") || b,
      rotation: C == null ? -S : D,
      origin: "center"
    }), A.setStyle("verticalAlign", "middle"));
  }
  var I = s.get(["emphasis", "focus"]), L = I === "relative" ? sf(o.getAncestorsIndices(), o.getDescendantIndices()) : I === "ancestor" ? o.getAncestorsIndices() : I === "descendant" ? o.getDescendantIndices() : null;
  L && (it(t).focus = L), UF(n, o, f, t, d, v, p, a), t.__edge && (t.onHoverStateChange = function(E) {
    if (E !== "blur") {
      var P = o.parentNode && r.getItemGraphicEl(o.parentNode.dataIndex);
      P && P.hoverState === ml || yf(t.__edge, E);
    }
  });
}
function UF(r, e, t, a, n, i, o, s) {
  var l = e.getModel(), u = r.get("edgeShape"), f = r.get("layout"), h = r.getOrient(), c = r.get(["lineStyle", "curveness"]), v = r.get("edgeForkPosition"), d = l.getModel("lineStyle").getLineStyle(), p = a.__edge;
  if (u === "curve")
    e.parentNode && e.parentNode !== t && (p || (p = a.__edge = new xh({
      shape: Rp(f, h, c, n, n)
    })), Mt(p, {
      shape: Rp(f, h, c, i, o)
    }, r));
  else if (u === "polyline") {
    if (f === "orthogonal") {
      if (e !== t && e.children && e.children.length !== 0 && e.isExpand === !0) {
        for (var g = e.children, y = [], m = 0; m < g.length; m++) {
          var _ = g[m].getLayout();
          y.push([_.x, _.y]);
        }
        p || (p = a.__edge = new WF({
          shape: {
            parentPoint: [o.x, o.y],
            childPoints: [[o.x, o.y]],
            orient: h,
            forkPosition: v
          }
        })), Mt(p, {
          shape: {
            parentPoint: [o.x, o.y],
            childPoints: y
          }
        }, r);
      }
    } else if ({}.NODE_ENV !== "production")
      throw new Error("The polyline edgeShape can only be used in orthogonal layout");
  }
  p && !(u === "polyline" && !e.isExpand) && (p.useStyle(et({
    strokeNoScale: !0,
    fill: null
  }, d)), de(p, l, "lineStyle"), di(p), s.add(p));
}
function MS(r, e, t, a, n) {
  var i = e.tree.root, o = LM(i, r), s = o.source, l = o.sourceLayout, u = e.getItemGraphicEl(r.dataIndex);
  if (u) {
    var f = e.getItemGraphicEl(s.dataIndex), h = f.__edge, c = u.__edge || (s.isExpand === !1 || s.children.length === 1 ? h : void 0), v = a.get("edgeShape"), d = a.get("layout"), p = a.get("orient"), g = a.get(["lineStyle", "curveness"]);
    c && (v === "curve" ? en(c, {
      shape: Rp(d, p, g, l, l),
      style: {
        opacity: 0
      }
    }, a, {
      cb: function() {
        t.remove(c);
      },
      removeOpt: n
    }) : v === "polyline" && a.get("layout") === "orthogonal" && en(c, {
      shape: {
        parentPoint: [l.x, l.y],
        childPoints: [[l.x, l.y]]
      },
      style: {
        opacity: 0
      }
    }, a, {
      cb: function() {
        t.remove(c);
      },
      removeOpt: n
    }));
  }
}
function LM(r, e) {
  for (var t = e.parentNode === r ? e : e.parentNode || e, a; a = t.getLayout(), a == null; )
    t = t.parentNode === r ? t : t.parentNode || t;
  return {
    source: t,
    sourceLayout: a
  };
}
function IS(r, e, t, a, n) {
  var i = r.tree.getNodeByDataIndex(e), o = r.tree.root, s = LM(o, i).sourceLayout, l = {
    duration: n.get("animationDurationUpdate"),
    easing: n.get("animationEasingUpdate")
  };
  en(t, {
    x: s.x + 1,
    y: s.y + 1
  }, n, {
    cb: function() {
      a.remove(t), r.setItemGraphicEl(e, null);
    },
    removeOpt: l
  }), t.fadeOut(null, r.hostModel, {
    fadeLabel: !0,
    animation: l
  }), i.children.forEach(function(u) {
    MS(u, r, a, n, l);
  }), MS(i, r, a, n, l);
}
function Rp(r, e, t, a, n) {
  var i, o, s, l, u, f, h, c;
  if (r === "radial") {
    u = a.rawX, h = a.rawY, f = n.rawX, c = n.rawY;
    var v = Ts(u, h), d = Ts(u, h + (c - h) * t), p = Ts(f, c + (h - c) * t), g = Ts(f, c);
    return {
      x1: v.x || 0,
      y1: v.y || 0,
      x2: g.x || 0,
      y2: g.y || 0,
      cpx1: d.x || 0,
      cpy1: d.y || 0,
      cpx2: p.x || 0,
      cpy2: p.y || 0
    };
  } else
    u = a.x, h = a.y, f = n.x, c = n.y, (e === "LR" || e === "RL") && (i = u + (f - u) * t, o = h, s = f + (u - f) * t, l = c), (e === "TB" || e === "BT") && (i = u, o = h + (c - h) * t, s = f, l = c + (h - c) * t);
  return {
    x1: u,
    y1: h,
    x2: f,
    y2: c,
    cpx1: i,
    cpy1: o,
    cpx2: s,
    cpy2: l
  };
}
const YF = $F;
var ur = Dt();
function EM(r) {
  var e = r.mainData, t = r.datas;
  t || (t = {
    main: e
  }, r.datasAttr = {
    main: "data"
  }), r.datas = r.mainData = null, PM(e, t, r), M(t, function(a) {
    M(e.TRANSFERABLE_METHODS, function(n) {
      a.wrapMethod(n, ot(ZF, r));
    });
  }), e.wrapMethod("cloneShallow", ot(qF, r)), M(e.CHANGABLE_METHODS, function(a) {
    e.wrapMethod(a, ot(XF, r));
  }), J(t[e.dataType] === e);
}
function ZF(r, e) {
  if (JF(this)) {
    var t = V({}, ur(this).datas);
    t[this.dataType] = e, PM(e, t, r);
  } else
    My(e, this.dataType, ur(this).mainData, r);
  return e;
}
function XF(r, e) {
  return r.struct && r.struct.update(), e;
}
function qF(r, e) {
  return M(ur(e).datas, function(t, a) {
    t !== e && My(t.cloneShallow(), a, e, r);
  }), e;
}
function KF(r) {
  var e = ur(this).mainData;
  return r == null || e == null ? e : ur(e).datas[r];
}
function jF() {
  var r = ur(this).mainData;
  return r == null ? [{
    data: r
  }] : G(_t(ur(r).datas), function(e) {
    return {
      type: e,
      data: ur(r).datas[e]
    };
  });
}
function JF(r) {
  return ur(r).mainData === r;
}
function PM(r, e, t) {
  ur(r).datas = {}, M(e, function(a, n) {
    My(a, n, r, t);
  });
}
function My(r, e, t, a) {
  ur(t).datas[e] = r, ur(r).mainData = t, r.dataType = e, a.struct && (r[a.structAttr] = a.struct, a.struct[a.datasAttr[e]] = r), r.getLinkedData = KF, r.getLinkedDataAll = jF;
}
var QF = (
  /** @class */
  function() {
    function r(e, t) {
      this.depth = 0, this.height = 0, this.dataIndex = -1, this.children = [], this.viewChildren = [], this.isExpand = !1, this.name = e || "", this.hostTree = t;
    }
    return r.prototype.isRemoved = function() {
      return this.dataIndex < 0;
    }, r.prototype.eachNode = function(e, t, a) {
      K(e) && (a = t, t = e, e = null), e = e || {}, $(e) && (e = {
        order: e
      });
      var n = e.order || "preorder", i = this[e.attr || "children"], o;
      n === "preorder" && (o = t.call(a, this));
      for (var s = 0; !o && s < i.length; s++)
        i[s].eachNode(e, t, a);
      n === "postorder" && t.call(a, this);
    }, r.prototype.updateDepthAndHeight = function(e) {
      var t = 0;
      this.depth = e;
      for (var a = 0; a < this.children.length; a++) {
        var n = this.children[a];
        n.updateDepthAndHeight(e + 1), n.height > t && (t = n.height);
      }
      this.height = t + 1;
    }, r.prototype.getNodeById = function(e) {
      if (this.getId() === e)
        return this;
      for (var t = 0, a = this.children, n = a.length; t < n; t++) {
        var i = a[t].getNodeById(e);
        if (i)
          return i;
      }
    }, r.prototype.contains = function(e) {
      if (e === this)
        return !0;
      for (var t = 0, a = this.children, n = a.length; t < n; t++) {
        var i = a[t].contains(e);
        if (i)
          return i;
      }
    }, r.prototype.getAncestors = function(e) {
      for (var t = [], a = e ? this : this.parentNode; a; )
        t.push(a), a = a.parentNode;
      return t.reverse(), t;
    }, r.prototype.getAncestorsIndices = function() {
      for (var e = [], t = this; t; )
        e.push(t.dataIndex), t = t.parentNode;
      return e.reverse(), e;
    }, r.prototype.getDescendantIndices = function() {
      var e = [];
      return this.eachNode(function(t) {
        e.push(t.dataIndex);
      }), e;
    }, r.prototype.getValue = function(e) {
      var t = this.hostTree.data;
      return t.getStore().get(t.getDimensionIndex(e || "value"), this.dataIndex);
    }, r.prototype.setLayout = function(e, t) {
      this.dataIndex >= 0 && this.hostTree.data.setItemLayout(this.dataIndex, e, t);
    }, r.prototype.getLayout = function() {
      return this.hostTree.data.getItemLayout(this.dataIndex);
    }, r.prototype.getModel = function(e) {
      if (!(this.dataIndex < 0)) {
        var t = this.hostTree, a = t.data.getItemModel(this.dataIndex);
        return a.getModel(e);
      }
    }, r.prototype.getLevelModel = function() {
      return (this.hostTree.levelModels || [])[this.depth];
    }, r.prototype.setVisual = function(e, t) {
      this.dataIndex >= 0 && this.hostTree.data.setItemVisual(this.dataIndex, e, t);
    }, r.prototype.getVisual = function(e) {
      return this.hostTree.data.getItemVisual(this.dataIndex, e);
    }, r.prototype.getRawIndex = function() {
      return this.hostTree.data.getRawIndex(this.dataIndex);
    }, r.prototype.getId = function() {
      return this.hostTree.data.getId(this.dataIndex);
    }, r.prototype.getChildIndex = function() {
      if (this.parentNode) {
        for (var e = this.parentNode.children, t = 0; t < e.length; ++t)
          if (e[t] === this)
            return t;
        return -1;
      }
      return -1;
    }, r.prototype.isAncestorOf = function(e) {
      for (var t = e.parentNode; t; ) {
        if (t === this)
          return !0;
        t = t.parentNode;
      }
      return !1;
    }, r.prototype.isDescendantOf = function(e) {
      return e !== this && e.isAncestorOf(this);
    }, r;
  }()
), t3 = (
  /** @class */
  function() {
    function r(e) {
      this.type = "tree", this._nodes = [], this.hostModel = e;
    }
    return r.prototype.eachNode = function(e, t, a) {
      this.root.eachNode(e, t, a);
    }, r.prototype.getNodeByDataIndex = function(e) {
      var t = this.data.getRawIndex(e);
      return this._nodes[t];
    }, r.prototype.getNodeById = function(e) {
      return this.root.getNodeById(e);
    }, r.prototype.update = function() {
      for (var e = this.data, t = this._nodes, a = 0, n = t.length; a < n; a++)
        t[a].dataIndex = -1;
      for (var a = 0, n = e.count(); a < n; a++)
        t[e.getRawIndex(a)].dataIndex = a;
    }, r.prototype.clearLayouts = function() {
      this.data.clearItemLayouts();
    }, r.createTree = function(e, t, a) {
      var n = new r(t), i = [], o = 1;
      s(e);
      function s(f, h) {
        var c = f.value;
        o = Math.max(o, z(c) ? c.length : 1), i.push(f);
        var v = new QF(re(f.name, ""), n);
        h ? e3(v, h) : n.root = v, n._nodes.push(v);
        var d = f.children;
        if (d)
          for (var p = 0; p < d.length; p++)
            s(d[p], v);
      }
      n.root.updateDepthAndHeight(0);
      var l = Tl(i, {
        coordDimensions: ["value"],
        dimensionsCount: o
      }).dimensions, u = new Me(l, t);
      return u.initData(i), a && a(u), EM({
        mainData: u,
        struct: n,
        structAttr: "tree"
      }), n.update(), n;
    }, r;
  }()
);
function e3(r, e) {
  var t = e.children;
  r.parentNode !== e && (t.push(r), r.parentNode = e);
}
const Iy = t3;
function sl(r, e, t) {
  if (r && vt(e, r.type) >= 0) {
    var a = t.getData().tree.root, n = r.targetNode;
    if ($(n) && (n = a.getNodeById(n)), n && a.contains(n))
      return {
        node: n
      };
    var i = r.targetNodeId;
    if (i != null && (n = a.getNodeById(i)))
      return {
        node: n
      };
  }
}
function RM(r) {
  for (var e = []; r; )
    r = r.parentNode, r && e.push(r);
  return e.reverse();
}
function Ly(r, e) {
  var t = RM(r);
  return vt(t, e) >= 0;
}
function Wh(r, e) {
  for (var t = []; r; ) {
    var a = r.dataIndex;
    t.push({
      name: r.name,
      dataIndex: a,
      value: e.getRawValue(a)
    }), r = r.parentNode;
  }
  return t.reverse(), t;
}
var r3 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.hasSymbolVisual = !0, t.ignoreStyleOnData = !0, t;
    }
    return e.prototype.getInitialData = function(t) {
      var a = {
        name: t.name,
        children: t.data
      }, n = t.leaves || {}, i = new kt(n, this, this.ecModel), o = Iy.createTree(a, this, s);
      function s(h) {
        h.wrapMethod("getItemModel", function(c, v) {
          var d = o.getNodeByDataIndex(v);
          return d && d.children.length && d.isExpand || (c.parentModel = i), c;
        });
      }
      var l = 0;
      o.eachNode("preorder", function(h) {
        h.depth > l && (l = h.depth);
      });
      var u = t.expandAndCollapse, f = u && t.initialTreeDepth >= 0 ? t.initialTreeDepth : l;
      return o.root.eachNode("preorder", function(h) {
        var c = h.hostTree.data.getRawDataItem(h.dataIndex);
        h.isExpand = c && c.collapsed != null ? !c.collapsed : h.depth <= f;
      }), o.data;
    }, e.prototype.getOrient = function() {
      var t = this.get("orient");
      return t === "horizontal" ? t = "LR" : t === "vertical" && (t = "TB"), t;
    }, e.prototype.setZoom = function(t) {
      this.option.zoom = t;
    }, e.prototype.setCenter = function(t) {
      this.option.center = t;
    }, e.prototype.formatTooltip = function(t, a, n) {
      for (var i = this.getData().tree, o = i.root.children[0], s = i.getNodeByDataIndex(t), l = s.getValue(), u = s.name; s && s !== o; )
        u = s.parentNode.name + "." + u, s = s.parentNode;
      return se("nameValue", {
        name: u,
        value: l,
        noValue: isNaN(l) || l == null
      });
    }, e.prototype.getDataParams = function(t) {
      var a = r.prototype.getDataParams.apply(this, arguments), n = this.getData().tree.getNodeByDataIndex(t);
      return a.treeAncestors = Wh(n, this), a.collapsed = !n.isExpand, a;
    }, e.type = "series.tree", e.layoutMode = "box", e.defaultOption = {
      // zlevel: 0,
      z: 2,
      coordinateSystem: "view",
      // the position of the whole view
      left: "12%",
      top: "12%",
      right: "12%",
      bottom: "12%",
      // the layout of the tree, two value can be selected, 'orthogonal' or 'radial'
      layout: "orthogonal",
      // value can be 'polyline'
      edgeShape: "curve",
      edgeForkPosition: "50%",
      // true | false | 'move' | 'scale', see module:component/helper/RoamController.
      roam: !1,
      // Symbol size scale ratio in roam
      nodeScaleRatio: 0.4,
      // Default on center of graph
      center: null,
      zoom: 1,
      orient: "LR",
      symbol: "emptyCircle",
      symbolSize: 7,
      expandAndCollapse: !0,
      initialTreeDepth: 2,
      lineStyle: {
        color: "#ccc",
        width: 1.5,
        curveness: 0.5
      },
      itemStyle: {
        color: "lightsteelblue",
        // borderColor: '#c23531',
        borderWidth: 1.5
      },
      label: {
        show: !0
      },
      animationEasing: "linear",
      animationDuration: 700,
      animationDurationUpdate: 500
    }, e;
  }(Gt)
);
const a3 = r3;
function n3(r, e, t) {
  for (var a = [r], n = [], i; i = a.pop(); )
    if (n.push(i), i.isExpand) {
      var o = i.children;
      if (o.length)
        for (var s = 0; s < o.length; s++)
          a.push(o[s]);
    }
  for (; i = n.pop(); )
    e(i, t);
}
function ss(r, e) {
  for (var t = [r], a; a = t.pop(); )
    if (e(a), a.isExpand) {
      var n = a.children;
      if (n.length)
        for (var i = n.length - 1; i >= 0; i--)
          t.push(n[i]);
    }
}
function i3(r, e) {
  r.eachSeriesByType("tree", function(t) {
    o3(t, e);
  });
}
function o3(r, e) {
  var t = kF(r, e);
  r.layoutInfo = t;
  var a = r.get("layout"), n = 0, i = 0, o = null;
  a === "radial" ? (n = 2 * Math.PI, i = Math.min(t.height, t.width) / 2, o = DS(function(_, S) {
    return (_.parentNode === S.parentNode ? 1 : 2) / _.depth;
  })) : (n = t.width, i = t.height, o = DS());
  var s = r.getData().tree.root, l = s.children[0];
  if (l) {
    RF(s), n3(l, NF, o), s.hierNode.modifier = -l.hierNode.prelim, ss(l, OF);
    var u = l, f = l, h = l;
    ss(l, function(_) {
      var S = _.getLayout().x;
      S < u.getLayout().x && (u = _), S > f.getLayout().x && (f = _), _.depth > h.depth && (h = _);
    });
    var c = u === f ? 1 : o(u, f) / 2, v = c - u.getLayout().x, d = 0, p = 0, g = 0, y = 0;
    if (a === "radial")
      d = n / (f.getLayout().x + c + v), p = i / (h.depth - 1 || 1), ss(l, function(_) {
        g = (_.getLayout().x + v) * d, y = (_.depth - 1) * p;
        var S = Ts(g, y);
        _.setLayout({
          x: S.x,
          y: S.y,
          rawX: g,
          rawY: y
        }, !0);
      });
    else {
      var m = r.getOrient();
      m === "RL" || m === "LR" ? (p = i / (f.getLayout().x + c + v), d = n / (h.depth - 1 || 1), ss(l, function(_) {
        y = (_.getLayout().x + v) * p, g = m === "LR" ? (_.depth - 1) * d : n - (_.depth - 1) * d, _.setLayout({
          x: g,
          y
        }, !0);
      })) : (m === "TB" || m === "BT") && (d = n / (f.getLayout().x + c + v), p = i / (h.depth - 1 || 1), ss(l, function(_) {
        g = (_.getLayout().x + v) * d, y = m === "TB" ? (_.depth - 1) * p : i - (_.depth - 1) * p, _.setLayout({
          x: g,
          y
        }, !0);
      }));
    }
  }
}
function s3(r) {
  r.eachSeriesByType("tree", function(e) {
    var t = e.getData(), a = t.tree;
    a.eachNode(function(n) {
      var i = n.getModel(), o = i.getModel("itemStyle").getItemStyle(), s = t.ensureUniqueItemVisual(n.dataIndex, "style");
      V(s, o);
    });
  });
}
function l3(r) {
  r.registerAction({
    type: "treeExpandAndCollapse",
    event: "treeExpandAndCollapse",
    update: "update"
  }, function(e, t) {
    t.eachComponent({
      mainType: "series",
      subType: "tree",
      query: e
    }, function(a) {
      var n = e.dataIndex, i = a.getData().tree, o = i.getNodeByDataIndex(n);
      o.isExpand = !o.isExpand;
    });
  }), r.registerAction({
    type: "treeRoam",
    event: "treeRoam",
    // Here we set 'none' instead of 'update', because roam action
    // just need to update the transform matrix without having to recalculate
    // the layout. So don't need to go through the whole update process, such
    // as 'dataPrcocess', 'coordSystemUpdate', 'layout' and so on.
    update: "none"
  }, function(e, t, a) {
    t.eachComponent({
      mainType: "series",
      subType: "tree",
      query: e
    }, function(n) {
      var i = n.coordinateSystem, o = Ay(i, e, void 0, a);
      n.setCenter && n.setCenter(o.center), n.setZoom && n.setZoom(o.zoom);
    });
  });
}
function u3(r) {
  r.registerChartView(YF), r.registerSeriesModel(a3), r.registerLayout(i3), r.registerVisual(s3), l3(r);
}
var LS = ["treemapZoomToNode", "treemapRender", "treemapMove"];
function f3(r) {
  for (var e = 0; e < LS.length; e++)
    r.registerAction({
      type: LS[e],
      update: "updateView"
    }, Xt);
  r.registerAction({
    type: "treemapRootToNode",
    update: "updateView"
  }, function(t, a) {
    a.eachComponent({
      mainType: "series",
      subType: "treemap",
      query: t
    }, n);
    function n(i, o) {
      var s = ["treemapZoomToNode", "treemapRootToNode"], l = sl(t, s, i);
      if (l) {
        var u = i.getViewRoot();
        u && (t.direction = Ly(u, l.node) ? "rollUp" : "drillDown"), i.resetViewRoot(l.node);
      }
    }
  });
}
function NM(r) {
  var e = r.getData(), t = e.tree, a = {};
  t.eachNode(function(n) {
    for (var i = n; i && i.depth > 1; )
      i = i.parentNode;
    var o = lp(r.ecModel, i.name || i.dataIndex + "", a);
    n.setVisual("decal", o);
  });
}
var h3 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t.preventUsingHoverLayer = !0, t;
    }
    return e.prototype.getInitialData = function(t, a) {
      var n = {
        name: t.name,
        children: t.data
      };
      OM(n);
      var i = t.levels || [], o = this.designatedVisualItemStyle = {}, s = new kt({
        itemStyle: o
      }, this, a);
      i = t.levels = c3(i, a);
      var l = G(i || [], function(h) {
        return new kt(h, s, a);
      }, this), u = Iy.createTree(n, this, f);
      function f(h) {
        h.wrapMethod("getItemModel", function(c, v) {
          var d = u.getNodeByDataIndex(v), p = d ? l[d.depth] : null;
          return c.parentModel = p || s, c;
        });
      }
      return u.data;
    }, e.prototype.optionUpdated = function() {
      this.resetViewRoot();
    }, e.prototype.formatTooltip = function(t, a, n) {
      var i = this.getData(), o = this.getRawValue(t), s = i.getName(t);
      return se("nameValue", {
        name: s,
        value: o
      });
    }, e.prototype.getDataParams = function(t) {
      var a = r.prototype.getDataParams.apply(this, arguments), n = this.getData().tree.getNodeByDataIndex(t);
      return a.treeAncestors = Wh(n, this), a.treePathInfo = a.treeAncestors, a;
    }, e.prototype.setLayoutInfo = function(t) {
      this.layoutInfo = this.layoutInfo || {}, V(this.layoutInfo, t);
    }, e.prototype.mapIdToIndex = function(t) {
      var a = this._idIndexMap;
      a || (a = this._idIndexMap = X(), this._idIndexMapCount = 0);
      var n = a.get(t);
      return n == null && a.set(t, n = this._idIndexMapCount++), n;
    }, e.prototype.getViewRoot = function() {
      return this._viewRoot;
    }, e.prototype.resetViewRoot = function(t) {
      t ? this._viewRoot = t : t = this._viewRoot;
      var a = this.getRawData().tree.root;
      (!t || t !== a && !a.contains(t)) && (this._viewRoot = a);
    }, e.prototype.enableAriaDecal = function() {
      NM(this);
    }, e.type = "series.treemap", e.layoutMode = "box", e.defaultOption = {
      // Disable progressive rendering
      progressive: 0,
      // size: ['80%', '80%'],            // deprecated, compatible with ec2.
      left: "center",
      top: "middle",
      width: "80%",
      height: "80%",
      sort: !0,
      clipWindow: "origin",
      squareRatio: 0.5 * (1 + Math.sqrt(5)),
      leafDepth: null,
      drillDownIcon: "▶",
      // to align specialized icon. ▷▶❒❐▼✚
      zoomToNodeRatio: 0.32 * 0.32,
      roam: !0,
      nodeClick: "zoomToNode",
      animation: !0,
      animationDurationUpdate: 900,
      animationEasing: "quinticInOut",
      breadcrumb: {
        show: !0,
        height: 22,
        left: "center",
        top: "bottom",
        // right
        // bottom
        emptyItemWidth: 25,
        itemStyle: {
          color: "rgba(0,0,0,0.7)",
          textStyle: {
            color: "#fff"
          }
        },
        emphasis: {
          itemStyle: {
            color: "rgba(0,0,0,0.9)"
            // '#5793f3',
          }
        }
      },
      label: {
        show: !0,
        // Do not use textDistance, for ellipsis rect just the same as treemap node rect.
        distance: 0,
        padding: 5,
        position: "inside",
        // formatter: null,
        color: "#fff",
        overflow: "truncate"
        // align
        // verticalAlign
      },
      upperLabel: {
        show: !1,
        position: [0, "50%"],
        height: 20,
        // formatter: null,
        // color: '#fff',
        overflow: "truncate",
        // align: null,
        verticalAlign: "middle"
      },
      itemStyle: {
        color: null,
        colorAlpha: null,
        colorSaturation: null,
        borderWidth: 0,
        gapWidth: 0,
        borderColor: "#fff",
        borderColorSaturation: null
        // If specified, borderColor will be ineffective, and the
        // border color is evaluated by color of current node and
        // borderColorSaturation.
      },
      emphasis: {
        upperLabel: {
          show: !0,
          position: [0, "50%"],
          overflow: "truncate",
          verticalAlign: "middle"
        }
      },
      visualDimension: 0,
      visualMin: null,
      visualMax: null,
      color: [],
      // level[n].color (if necessary).
      // + Specify color list of each level. level[0].color would be global
      // color list if not specified. (see method `setDefault`).
      // + But set as a empty array to forbid fetch color from global palette
      // when using nodeModel.get('color'), otherwise nodes on deep level
      // will always has color palette set and are not able to inherit color
      // from parent node.
      // + TreemapSeries.color can not be set as 'none', otherwise effect
      // legend color fetching (see seriesColor.js).
      colorAlpha: null,
      colorSaturation: null,
      colorMappingBy: "index",
      visibleMin: 10,
      // be rendered. Only works when sort is 'asc' or 'desc'.
      childrenVisibleMin: null,
      // grandchildren will not show.
      // Why grandchildren? If not grandchildren but children,
      // some siblings show children and some not,
      // the appearance may be mess and not consistent,
      levels: []
      // Each item: {
      //     visibleMin, itemStyle, visualDimension, label
      // }
    }, e;
  }(Gt)
);
function OM(r) {
  var e = 0;
  M(r.children, function(a) {
    OM(a);
    var n = a.value;
    z(n) && (n = n[0]), e += n;
  });
  var t = r.value;
  z(t) && (t = t[0]), (t == null || isNaN(t)) && (t = e), t < 0 && (t = 0), z(r.value) ? r.value[0] = t : r.value = t;
}
function c3(r, e) {
  var t = Pt(e.get("color")), a = Pt(e.get(["aria", "decal", "decals"]));
  if (t) {
    r = r || [];
    var n, i;
    M(r, function(s) {
      var l = new kt(s), u = l.get("color"), f = l.get("decal");
      (l.get(["itemStyle", "color"]) || u && u !== "none") && (n = !0), (l.get(["itemStyle", "decal"]) || f && f !== "none") && (i = !0);
    });
    var o = r[0] || (r[0] = {});
    return n || (o.color = t.slice()), !i && a && (o.decal = a.slice()), r;
  }
}
const v3 = h3;
var d3 = 8, ES = 8, Av = 5, p3 = (
  /** @class */
  function() {
    function r(e) {
      this.group = new nt(), e.add(this.group);
    }
    return r.prototype.render = function(e, t, a, n) {
      var i = e.getModel("breadcrumb"), o = this.group;
      if (o.removeAll(), !(!i.get("show") || !a)) {
        var s = i.getModel("itemStyle"), l = i.getModel("emphasis"), u = s.getModel("textStyle"), f = l.getModel(["itemStyle", "textStyle"]), h = {
          pos: {
            left: i.get("left"),
            right: i.get("right"),
            top: i.get("top"),
            bottom: i.get("bottom")
          },
          box: {
            width: t.getWidth(),
            height: t.getHeight()
          },
          emptyItemWidth: i.get("emptyItemWidth"),
          totalWidth: 0,
          renderList: []
        };
        this._prepare(a, h, u), this._renderContent(e, h, s, l, u, f, n), Lh(o, h.pos, h.box);
      }
    }, r.prototype._prepare = function(e, t, a) {
      for (var n = e; n; n = n.parentNode) {
        var i = re(n.getModel().get("name"), ""), o = a.getTextRect(i), s = Math.max(o.width + d3 * 2, t.emptyItemWidth);
        t.totalWidth += s + ES, t.renderList.push({
          node: n,
          text: i,
          width: s
        });
      }
    }, r.prototype._renderContent = function(e, t, a, n, i, o, s) {
      for (var l = 0, u = t.emptyItemWidth, f = e.get(["breadcrumb", "height"]), h = bN(t.pos, t.box), c = t.totalWidth, v = t.renderList, d = n.getModel("itemStyle").getItemStyle(), p = v.length - 1; p >= 0; p--) {
        var g = v[p], y = g.node, m = g.width, _ = g.text;
        c > h.width && (c -= m - u, m = u, _ = null);
        var S = new Ge({
          shape: {
            points: g3(l, 0, m, f, p === v.length - 1, p === 0)
          },
          style: et(a.getItemStyle(), {
            lineJoin: "bevel"
          }),
          textContent: new Ct({
            style: Ot(i, {
              text: _
            })
          }),
          textConfig: {
            position: "inside"
          },
          z2: Co * 1e4,
          onclick: ot(s, y)
        });
        S.disableLabelAnimation = !0, S.getTextContent().ensureState("emphasis").style = Ot(o, {
          text: _
        }), S.ensureState("emphasis").style = d, Wt(S, n.get("focus"), n.get("blurScope"), n.get("disabled")), this.group.add(S), y3(S, e, y), l += m + ES;
      }
    }, r.prototype.remove = function() {
      this.group.removeAll();
    }, r;
  }()
);
function g3(r, e, t, a, n, i) {
  var o = [[n ? r : r - Av, e], [r + t, e], [r + t, e + a], [n ? r : r - Av, e + a]];
  return !i && o.splice(2, 0, [r + t + Av, e + a / 2]), !n && o.push([r, e + a / 2]), o;
}
function y3(r, e, t) {
  it(r).eventData = {
    componentType: "series",
    componentSubType: "treemap",
    componentIndex: e.componentIndex,
    seriesIndex: e.seriesIndex,
    seriesName: e.name,
    seriesType: "treemap",
    selfType: "breadcrumb",
    nodeData: {
      dataIndex: t && t.dataIndex,
      name: t && t.name
    },
    treePathInfo: t && Wh(t, e)
  };
}
const m3 = p3;
var _3 = (
  /** @class */
  function() {
    function r() {
      this._storage = [], this._elExistsMap = {};
    }
    return r.prototype.add = function(e, t, a, n, i) {
      return this._elExistsMap[e.id] ? !1 : (this._elExistsMap[e.id] = !0, this._storage.push({
        el: e,
        target: t,
        duration: a,
        delay: n,
        easing: i
      }), !0);
    }, r.prototype.finished = function(e) {
      return this._finishedCallback = e, this;
    }, r.prototype.start = function() {
      for (var e = this, t = this._storage.length, a = function() {
        t--, t <= 0 && (e._storage.length = 0, e._elExistsMap = {}, e._finishedCallback && e._finishedCallback());
      }, n = 0, i = this._storage.length; n < i; n++) {
        var o = this._storage[n];
        o.el.animateTo(o.target, {
          duration: o.duration,
          delay: o.delay,
          easing: o.easing,
          setToFinal: !0,
          done: a,
          aborted: a
        });
      }
      return this;
    }, r;
  }()
);
function S3() {
  return new _3();
}
var Np = nt, PS = Tt, RS = 3, NS = "label", OS = "upperLabel", x3 = Co * 10, w3 = Co * 2, b3 = Co * 3, Bn = vi([
  ["fill", "color"],
  // `borderColor` and `borderWidth` has been occupied,
  // so use `stroke` to indicate the stroke of the rect.
  ["stroke", "strokeColor"],
  ["lineWidth", "strokeWidth"],
  ["shadowBlur"],
  ["shadowOffsetX"],
  ["shadowOffsetY"],
  ["shadowColor"]
  // Option decal is in `DecalObject` but style.decal is in `PatternObject`.
  // So do not transfer decal directly.
]), kS = function(r) {
  var e = Bn(r);
  return e.stroke = e.fill = e.lineWidth = null, e;
}, Hf = Dt(), T3 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t._state = "ready", t._storage = ls(), t;
    }
    return e.prototype.render = function(t, a, n, i) {
      var o = a.findComponents({
        mainType: "series",
        subType: "treemap",
        query: i
      });
      if (!(vt(o, t) < 0)) {
        this.seriesModel = t, this.api = n, this.ecModel = a;
        var s = ["treemapZoomToNode", "treemapRootToNode"], l = sl(i, s, t), u = i && i.type, f = t.layoutInfo, h = !this._oldTree, c = this._storage, v = u === "treemapRootToNode" && l && c ? {
          rootNodeGroup: c.nodeGroup[l.node.getRawIndex()],
          direction: i.direction
        } : null, d = this._giveContainerGroup(f), p = t.get("animation"), g = this._doRender(d, t, v);
        p && !h && (!u || u === "treemapZoomToNode" || u === "treemapRootToNode") ? this._doAnimation(d, g, t, v) : g.renderFinally(), this._resetController(n), this._renderBreadcrumb(t, n, l);
      }
    }, e.prototype._giveContainerGroup = function(t) {
      var a = this._containerGroup;
      return a || (a = this._containerGroup = new Np(), this._initEvents(a), this.group.add(a)), a.x = t.x, a.y = t.y, a;
    }, e.prototype._doRender = function(t, a, n) {
      var i = a.getData().tree, o = this._oldTree, s = ls(), l = ls(), u = this._storage, f = [];
      function h(g, y, m, _) {
        return D3(a, l, u, n, s, f, g, y, m, _);
      }
      v(i.root ? [i.root] : [], o && o.root ? [o.root] : [], t, i === o || !o, 0);
      var c = d(u);
      return this._oldTree = i, this._storage = l, {
        lastsForAnimation: s,
        willDeleteEls: c,
        renderFinally: p
      };
      function v(g, y, m, _, S) {
        _ ? (y = g, M(g, function(b, T) {
          !b.isRemoved() && x(T, T);
        })) : new ma(y, g, w, w).add(x).update(x).remove(ot(x, null)).execute();
        function w(b) {
          return b.getId();
        }
        function x(b, T) {
          var C = b != null ? g[b] : null, D = T != null ? y[T] : null, A = h(C, D, m, S);
          A && v(C && C.viewChildren || [], D && D.viewChildren || [], A, _, S + 1);
        }
      }
      function d(g) {
        var y = ls();
        return g && M(g, function(m, _) {
          var S = y[_];
          M(m, function(w) {
            w && (S.push(w), Hf(w).willDelete = !0);
          });
        }), y;
      }
      function p() {
        M(c, function(g) {
          M(g, function(y) {
            y.parent && y.parent.remove(y);
          });
        }), M(f, function(g) {
          g.invisible = !0, g.dirty();
        });
      }
    }, e.prototype._doAnimation = function(t, a, n, i) {
      var o = n.get("animationDurationUpdate"), s = n.get("animationEasing"), l = (K(o) ? 0 : o) || 0, u = (K(s) ? null : s) || "cubicOut", f = S3();
      M(a.willDeleteEls, function(h, c) {
        M(h, function(v, d) {
          if (!v.invisible) {
            var p = v.parent, g, y = Hf(p);
            if (i && i.direction === "drillDown")
              g = p === i.rootNodeGroup ? {
                shape: {
                  x: 0,
                  y: 0,
                  width: y.nodeWidth,
                  height: y.nodeHeight
                },
                style: {
                  opacity: 0
                }
              } : {
                style: {
                  opacity: 0
                }
              };
            else {
              var m = 0, _ = 0;
              y.willDelete || (m = y.nodeWidth / 2, _ = y.nodeHeight / 2), g = c === "nodeGroup" ? {
                x: m,
                y: _,
                style: {
                  opacity: 0
                }
              } : {
                shape: {
                  x: m,
                  y: _,
                  width: 0,
                  height: 0
                },
                style: {
                  opacity: 0
                }
              };
            }
            g && f.add(v, g, l, 0, u);
          }
        });
      }), M(this._storage, function(h, c) {
        M(h, function(v, d) {
          var p = a.lastsForAnimation[c][d], g = {};
          p && (v instanceof nt ? p.oldX != null && (g.x = v.x, g.y = v.y, v.x = p.oldX, v.y = p.oldY) : (p.oldShape && (g.shape = V({}, v.shape), v.setShape(p.oldShape)), p.fadein ? (v.setStyle("opacity", 0), g.style = {
            opacity: 1
          }) : v.style.opacity !== 1 && (g.style = {
            opacity: 1
          })), f.add(v, g, l, 0, u));
        });
      }, this), this._state = "animating", f.finished(Y(function() {
        this._state = "ready", a.renderFinally();
      }, this)).start();
    }, e.prototype._resetController = function(t) {
      var a = this._controller;
      a || (a = this._controller = new Pl(t.getZr()), a.enable(this.seriesModel.get("roam")), a.on("pan", Y(this._onPan, this)), a.on("zoom", Y(this._onZoom, this)));
      var n = new ct(0, 0, t.getWidth(), t.getHeight());
      a.setPointerChecker(function(i, o, s) {
        return n.contain(o, s);
      });
    }, e.prototype._clearController = function() {
      var t = this._controller;
      t && (t.dispose(), t = null);
    }, e.prototype._onPan = function(t) {
      if (this._state !== "animating" && (Math.abs(t.dx) > RS || Math.abs(t.dy) > RS)) {
        var a = this.seriesModel.getData().tree.root;
        if (!a)
          return;
        var n = a.getLayout();
        if (!n)
          return;
        this.api.dispatchAction({
          type: "treemapMove",
          from: this.uid,
          seriesId: this.seriesModel.id,
          rootRect: {
            x: n.x + t.dx,
            y: n.y + t.dy,
            width: n.width,
            height: n.height
          }
        });
      }
    }, e.prototype._onZoom = function(t) {
      var a = t.originX, n = t.originY;
      if (this._state !== "animating") {
        var i = this.seriesModel.getData().tree.root;
        if (!i)
          return;
        var o = i.getLayout();
        if (!o)
          return;
        var s = new ct(o.x, o.y, o.width, o.height), l = this.seriesModel.layoutInfo;
        a -= l.x, n -= l.y;
        var u = fr();
        Zr(u, u, [-a, -n]), mg(u, u, [t.scale, t.scale]), Zr(u, u, [a, n]), s.applyTransform(u), this.api.dispatchAction({
          type: "treemapRender",
          from: this.uid,
          seriesId: this.seriesModel.id,
          rootRect: {
            x: s.x,
            y: s.y,
            width: s.width,
            height: s.height
          }
        });
      }
    }, e.prototype._initEvents = function(t) {
      var a = this;
      t.on("click", function(n) {
        if (a._state === "ready") {
          var i = a.seriesModel.get("nodeClick", !0);
          if (i) {
            var o = a.findTarget(n.offsetX, n.offsetY);
            if (o) {
              var s = o.node;
              if (s.getLayout().isLeafRoot)
                a._rootToNode(o);
              else if (i === "zoomToNode")
                a._zoomToNode(o);
              else if (i === "link") {
                var l = s.hostTree.data.getItemModel(s.dataIndex), u = l.get("link", !0), f = l.get("target", !0) || "blank";
                u && bf(u, f);
              }
            }
          }
        }
      }, this);
    }, e.prototype._renderBreadcrumb = function(t, a, n) {
      var i = this;
      n || (n = t.get("leafDepth", !0) != null ? {
        node: t.getViewRoot()
      } : this.findTarget(a.getWidth() / 2, a.getHeight() / 2), n || (n = {
        node: t.getData().tree.root
      })), (this._breadcrumb || (this._breadcrumb = new m3(this.group))).render(t, a, n.node, function(o) {
        i._state !== "animating" && (Ly(t.getViewRoot(), o) ? i._rootToNode({
          node: o
        }) : i._zoomToNode({
          node: o
        }));
      });
    }, e.prototype.remove = function() {
      this._clearController(), this._containerGroup && this._containerGroup.removeAll(), this._storage = ls(), this._state = "ready", this._breadcrumb && this._breadcrumb.remove();
    }, e.prototype.dispose = function() {
      this._clearController();
    }, e.prototype._zoomToNode = function(t) {
      this.api.dispatchAction({
        type: "treemapZoomToNode",
        from: this.uid,
        seriesId: this.seriesModel.id,
        targetNode: t.node
      });
    }, e.prototype._rootToNode = function(t) {
      this.api.dispatchAction({
        type: "treemapRootToNode",
        from: this.uid,
        seriesId: this.seriesModel.id,
        targetNode: t.node
      });
    }, e.prototype.findTarget = function(t, a) {
      var n, i = this.seriesModel.getViewRoot();
      return i.eachNode({
        attr: "viewChildren",
        order: "preorder"
      }, function(o) {
        var s = this._storage.background[o.getRawIndex()];
        if (s) {
          var l = s.transformCoordToLocal(t, a), u = s.shape;
          if (u.x <= l[0] && l[0] <= u.x + u.width && u.y <= l[1] && l[1] <= u.y + u.height)
            n = {
              node: o,
              offsetX: l[0],
              offsetY: l[1]
            };
          else
            return !1;
        }
      }, this), n;
    }, e.type = "treemap", e;
  }(Vt)
);
function ls() {
  return {
    nodeGroup: [],
    background: [],
    content: []
  };
}
function D3(r, e, t, a, n, i, o, s, l, u) {
  if (!o)
    return;
  var f = o.getLayout(), h = r.getData(), c = o.getModel();
  if (h.setItemGraphicEl(o.dataIndex, null), !f || !f.isInView)
    return;
  var v = f.width, d = f.height, p = f.borderWidth, g = f.invisible, y = o.getRawIndex(), m = s && s.getRawIndex(), _ = o.viewChildren, S = f.upperHeight, w = _ && _.length, x = c.getModel("itemStyle"), b = c.getModel(["emphasis", "itemStyle"]), T = c.getModel(["blur", "itemStyle"]), C = c.getModel(["select", "itemStyle"]), D = x.get("borderRadius") || 0, A = tt("nodeGroup", Np);
  if (!A)
    return;
  if (l.add(A), A.x = f.x || 0, A.y = f.y || 0, A.markRedraw(), Hf(A).nodeWidth = v, Hf(A).nodeHeight = d, f.isAboveViewRoot)
    return A;
  var I = tt("background", PS, u, w3);
  I && B(A, I, w && f.upperLabelHeight);
  var L = c.getModel("emphasis"), E = L.get("focus"), P = L.get("blurScope"), R = L.get("disabled"), k = E === "ancestor" ? o.getAncestorsIndices() : E === "descendant" ? o.getDescendantIndices() : E;
  if (w)
    tn(A) && Xn(A, !1), I && (Xn(I, !R), h.setItemGraphicEl(o.dataIndex, I), Qd(I, k, P));
  else {
    var O = tt("content", PS, u, b3);
    O && F(A, O), I.disableMorphing = !0, I && tn(I) && Xn(I, !1), Xn(A, !R), h.setItemGraphicEl(o.dataIndex, A), Qd(A, k, P);
  }
  return A;
  function B(pt, rt, gt) {
    var st = it(rt);
    if (st.dataIndex = o.dataIndex, st.seriesIndex = r.seriesIndex, rt.setShape({
      x: 0,
      y: 0,
      width: v,
      height: d,
      r: D
    }), g)
      W(rt);
    else {
      rt.invisible = !1;
      var q = o.getVisual("style"), lt = q.stroke, zt = kS(x);
      zt.fill = lt;
      var wt = Bn(b);
      wt.fill = b.get("borderColor");
      var Ut = Bn(T);
      Ut.fill = T.get("borderColor");
      var Ht = Bn(C);
      if (Ht.fill = C.get("borderColor"), gt) {
        var ye = v - 2 * p;
        Z(
          // PENDING: convert ZRColor to ColorString for text.
          rt,
          lt,
          q.opacity,
          {
            x: p,
            y: 0,
            width: ye,
            height: S
          }
        );
      } else
        rt.removeTextContent();
      rt.setStyle(zt), rt.ensureState("emphasis").style = wt, rt.ensureState("blur").style = Ut, rt.ensureState("select").style = Ht, di(rt);
    }
    pt.add(rt);
  }
  function F(pt, rt) {
    var gt = it(rt);
    gt.dataIndex = o.dataIndex, gt.seriesIndex = r.seriesIndex;
    var st = Math.max(v - 2 * p, 0), q = Math.max(d - 2 * p, 0);
    if (rt.culling = !0, rt.setShape({
      x: p,
      y: p,
      width: st,
      height: q,
      r: D
    }), g)
      W(rt);
    else {
      rt.invisible = !1;
      var lt = o.getVisual("style"), zt = lt.fill, wt = kS(x);
      wt.fill = zt, wt.decal = lt.decal;
      var Ut = Bn(b), Ht = Bn(T), ye = Bn(C);
      Z(rt, zt, lt.opacity, null), rt.setStyle(wt), rt.ensureState("emphasis").style = Ut, rt.ensureState("blur").style = Ht, rt.ensureState("select").style = ye, di(rt);
    }
    pt.add(rt);
  }
  function W(pt) {
    !pt.invisible && i.push(pt);
  }
  function Z(pt, rt, gt, st) {
    var q = c.getModel(st ? OS : NS), lt = re(c.get("name"), null), zt = q.getShallow("show");
    pe(pt, oe(c, st ? OS : NS), {
      defaultText: zt ? lt : null,
      inheritColor: rt,
      defaultOpacity: gt,
      labelFetcher: r,
      labelDataIndex: o.dataIndex
    });
    var wt = pt.getTextContent();
    if (wt) {
      var Ut = wt.style, Ht = pg(Ut.padding || 0);
      st && (pt.setTextConfig({
        layoutRect: st
      }), wt.disableLabelLayout = !0), wt.beforeUpdate = function() {
        var ta = Math.max((st ? st.width : pt.shape.width) - Ht[1] - Ht[3], 0), Ee = Math.max((st ? st.height : pt.shape.height) - Ht[0] - Ht[2], 0);
        (Ut.width !== ta || Ut.height !== Ee) && wt.setStyle({
          width: ta,
          height: Ee
        });
      }, Ut.truncateMinChar = 2, Ut.lineOverflow = "truncate", Q(Ut, st, f);
      var ye = wt.getState("emphasis");
      Q(ye ? ye.style : null, st, f);
    }
  }
  function Q(pt, rt, gt) {
    var st = pt ? pt.text : null;
    if (!rt && gt.isLeafRoot && st != null) {
      var q = r.get("drillDownIcon", !0);
      pt.text = q ? q + " " + st : st;
    }
  }
  function tt(pt, rt, gt, st) {
    var q = m != null && t[pt][m], lt = n[pt];
    return q ? (t[pt][m] = null, dt(lt, q)) : g || (q = new rt(), q instanceof hr && (q.z2 = C3(gt, st)), St(lt, q)), e[pt][y] = q;
  }
  function dt(pt, rt) {
    var gt = pt[y] = {};
    rt instanceof Np ? (gt.oldX = rt.x, gt.oldY = rt.y) : gt.oldShape = V({}, rt.shape);
  }
  function St(pt, rt) {
    var gt = pt[y] = {}, st = o.parentNode, q = rt instanceof nt;
    if (st && (!a || a.direction === "drillDown")) {
      var lt = 0, zt = 0, wt = n.background[st.getRawIndex()];
      !a && wt && wt.oldShape && (lt = wt.oldShape.width, zt = wt.oldShape.height), q ? (gt.oldX = 0, gt.oldY = zt) : gt.oldShape = {
        x: lt,
        y: zt,
        width: 0,
        height: 0
      };
    }
    gt.fadein = !q;
  }
}
function C3(r, e) {
  return r * x3 + e;
}
const A3 = T3;
var ll = M, M3 = j, Wf = -1, Ey = (
  /** @class */
  function() {
    function r(e) {
      var t = e.mappingMethod, a = e.type, n = this.option = at(e);
      this.type = a, this.mappingMethod = t, this._normalizeData = E3[t];
      var i = r.visualHandlers[a];
      this.applyVisual = i.applyVisual, this.getColorMapper = i.getColorMapper, this._normalizedToVisual = i._normalizedToVisual[t], t === "piecewise" ? (Mv(n), I3(n)) : t === "category" ? n.categories ? L3(n) : Mv(n, !0) : (J(t !== "linear" || n.dataExtent), Mv(n));
    }
    return r.prototype.mapValueToVisual = function(e) {
      var t = this._normalizeData(e);
      return this._normalizedToVisual(t, e);
    }, r.prototype.getNormalizer = function() {
      return Y(this._normalizeData, this);
    }, r.listVisualTypes = function() {
      return _t(r.visualHandlers);
    }, r.isValidType = function(e) {
      return r.visualHandlers.hasOwnProperty(e);
    }, r.eachVisual = function(e, t, a) {
      j(e) ? M(e, t, a) : t.call(a, e);
    }, r.mapVisual = function(e, t, a) {
      var n, i = z(e) ? [] : j(e) ? {} : (n = !0, null);
      return r.eachVisual(e, function(o, s) {
        var l = t.call(a, o, s);
        n ? i = l : i[s] = l;
      }), i;
    }, r.retrieveVisuals = function(e) {
      var t = {}, a;
      return e && ll(r.visualHandlers, function(n, i) {
        e.hasOwnProperty(i) && (t[i] = e[i], a = !0);
      }), a ? t : null;
    }, r.prepareVisualTypes = function(e) {
      if (z(e))
        e = e.slice();
      else if (M3(e)) {
        var t = [];
        ll(e, function(a, n) {
          t.push(n);
        }), e = t;
      } else
        return [];
      return e.sort(function(a, n) {
        return n === "color" && a !== "color" && a.indexOf("color") === 0 ? 1 : -1;
      }), e;
    }, r.dependsOn = function(e, t) {
      return t === "color" ? !!(e && e.indexOf(t) === 0) : e === t;
    }, r.findPieceIndex = function(e, t, a) {
      for (var n, i = 1 / 0, o = 0, s = t.length; o < s; o++) {
        var l = t[o].value;
        if (l != null) {
          if (l === e || $(l) && l === e + "")
            return o;
          a && c(l, o);
        }
      }
      for (var o = 0, s = t.length; o < s; o++) {
        var u = t[o], f = u.interval, h = u.close;
        if (f) {
          if (f[0] === -1 / 0) {
            if (Tu(h[1], e, f[1]))
              return o;
          } else if (f[1] === 1 / 0) {
            if (Tu(h[0], f[0], e))
              return o;
          } else if (Tu(h[0], f[0], e) && Tu(h[1], e, f[1]))
            return o;
          a && c(f[0], o), a && c(f[1], o);
        }
      }
      if (a)
        return e === 1 / 0 ? t.length - 1 : e === -1 / 0 ? 0 : n;
      function c(v, d) {
        var p = Math.abs(v - e);
        p < i && (i = p, n = d);
      }
    }, r.visualHandlers = {
      color: {
        applyVisual: us("color"),
        getColorMapper: function() {
          var e = this.option;
          return Y(e.mappingMethod === "category" ? function(t, a) {
            return !a && (t = this._normalizeData(t)), Ds.call(this, t);
          } : function(t, a, n) {
            var i = !!n;
            return !a && (t = this._normalizeData(t)), n = sc(t, e.parsedVisual, n), i ? n : fa(n, "rgba");
          }, this);
        },
        _normalizedToVisual: {
          linear: function(e) {
            return fa(sc(e, this.option.parsedVisual), "rgba");
          },
          category: Ds,
          piecewise: function(e, t) {
            var a = kp.call(this, t);
            return a == null && (a = fa(sc(e, this.option.parsedVisual), "rgba")), a;
          },
          fixed: zn
        }
      },
      colorHue: bu(function(e, t) {
        return Is(e, t);
      }),
      colorSaturation: bu(function(e, t) {
        return Is(e, null, t);
      }),
      colorLightness: bu(function(e, t) {
        return Is(e, null, null, t);
      }),
      colorAlpha: bu(function(e, t) {
        return ff(e, t);
      }),
      decal: {
        applyVisual: us("decal"),
        _normalizedToVisual: {
          linear: null,
          category: Ds,
          piecewise: null,
          fixed: null
        }
      },
      opacity: {
        applyVisual: us("opacity"),
        _normalizedToVisual: Op([0, 1])
      },
      liftZ: {
        applyVisual: us("liftZ"),
        _normalizedToVisual: {
          linear: zn,
          category: zn,
          piecewise: zn,
          fixed: zn
        }
      },
      symbol: {
        applyVisual: function(e, t, a) {
          var n = this.mapValueToVisual(e);
          a("symbol", n);
        },
        _normalizedToVisual: {
          linear: VS,
          category: Ds,
          piecewise: function(e, t) {
            var a = kp.call(this, t);
            return a == null && (a = VS.call(this, e)), a;
          },
          fixed: zn
        }
      },
      symbolSize: {
        applyVisual: us("symbolSize"),
        _normalizedToVisual: Op([0, 1])
      }
    }, r;
  }()
);
function I3(r) {
  var e = r.pieceList;
  r.hasSpecialVisual = !1, M(e, function(t, a) {
    t.originIndex = a, t.visual != null && (r.hasSpecialVisual = !0);
  });
}
function L3(r) {
  var e = r.categories, t = r.categoryMap = {}, a = r.visual;
  if (ll(e, function(o, s) {
    t[o] = s;
  }), !z(a)) {
    var n = [];
    j(a) ? ll(a, function(o, s) {
      var l = t[s];
      n[l != null ? l : Wf] = o;
    }) : n[Wf] = a, a = kM(r, n);
  }
  for (var i = e.length - 1; i >= 0; i--)
    a[i] == null && (delete t[e[i]], e.pop());
}
function Mv(r, e) {
  var t = r.visual, a = [];
  j(t) ? ll(t, function(i) {
    a.push(i);
  }) : t != null && a.push(t);
  var n = {
    color: 1,
    symbol: 1
  };
  !e && a.length === 1 && !n.hasOwnProperty(r.type) && (a[1] = a[0]), kM(r, a);
}
function bu(r) {
  return {
    applyVisual: function(e, t, a) {
      var n = this.mapValueToVisual(e);
      a("color", r(t("color"), n));
    },
    _normalizedToVisual: Op([0, 1])
  };
}
function VS(r) {
  var e = this.option.visual;
  return e[Math.round(Lt(r, [0, 1], [0, e.length - 1], !0))] || {};
}
function us(r) {
  return function(e, t, a) {
    a(r, this.mapValueToVisual(e));
  };
}
function Ds(r) {
  var e = this.option.visual;
  return e[this.option.loop && r !== Wf ? r % e.length : r];
}
function zn() {
  return this.option.visual[0];
}
function Op(r) {
  return {
    linear: function(e) {
      return Lt(e, r, this.option.visual, !0);
    },
    category: Ds,
    piecewise: function(e, t) {
      var a = kp.call(this, t);
      return a == null && (a = Lt(e, r, this.option.visual, !0)), a;
    },
    fixed: zn
  };
}
function kp(r) {
  var e = this.option, t = e.pieceList;
  if (e.hasSpecialVisual) {
    var a = Ey.findPieceIndex(r, t), n = t[a];
    if (n && n.visual)
      return n.visual[this.type];
  }
}
function kM(r, e) {
  return r.visual = e, r.type === "color" && (r.parsedVisual = G(e, function(t) {
    var a = Ue(t);
    return !a && {}.NODE_ENV !== "production" && Ft("'" + t + "' is an illegal color, fallback to '#000000'", !0), a || [0, 0, 0, 1];
  })), e;
}
var E3 = {
  linear: function(r) {
    return Lt(r, this.option.dataExtent, [0, 1], !0);
  },
  piecewise: function(r) {
    var e = this.option.pieceList, t = Ey.findPieceIndex(r, e, !0);
    if (t != null)
      return Lt(t, [0, e.length - 1], [0, 1], !0);
  },
  category: function(r) {
    var e = this.option.categories ? this.option.categoryMap[r] : r;
    return e == null ? Wf : e;
  },
  fixed: Xt
};
function Tu(r, e, t) {
  return r ? e <= t : e < t;
}
const ce = Ey;
var P3 = "itemStyle", VM = Dt();
const R3 = {
  seriesType: "treemap",
  reset: function(r) {
    var e = r.getData().tree, t = e.root;
    t.isRemoved() || BM(
      t,
      // Visual should calculate from tree root but not view root.
      {},
      r.getViewRoot().getAncestors(),
      r
    );
  }
};
function BM(r, e, t, a) {
  var n = r.getModel(), i = r.getLayout(), o = r.hostTree.data;
  if (!(!i || i.invisible || !i.isInView)) {
    var s = n.getModel(P3), l = N3(s, e, a), u = o.ensureUniqueItemVisual(r.dataIndex, "style"), f = s.get("borderColor"), h = s.get("borderColorSaturation"), c;
    h != null && (c = BS(l), f = O3(h, c)), u.stroke = f;
    var v = r.viewChildren;
    if (!v || !v.length)
      c = BS(l), u.fill = c;
    else {
      var d = k3(r, n, i, s, l, v);
      M(v, function(p, g) {
        if (p.depth >= t.length || p === t[p.depth]) {
          var y = V3(n, l, p, g, d, a);
          BM(p, y, t, a);
        }
      });
    }
  }
}
function N3(r, e, t) {
  var a = V({}, e), n = t.designatedVisualItemStyle;
  return M(["color", "colorAlpha", "colorSaturation"], function(i) {
    n[i] = e[i];
    var o = r.get(i);
    n[i] = null, o != null && (a[i] = o);
  }), a;
}
function BS(r) {
  var e = Iv(r, "color");
  if (e) {
    var t = Iv(r, "colorAlpha"), a = Iv(r, "colorSaturation");
    return a && (e = Is(e, null, null, a)), t && (e = ff(e, t)), e;
  }
}
function O3(r, e) {
  return e != null ? Is(e, null, null, r) : null;
}
function Iv(r, e) {
  var t = r[e];
  if (t != null && t !== "none")
    return t;
}
function k3(r, e, t, a, n, i) {
  if (!(!i || !i.length)) {
    var o = Lv(e, "color") || n.color != null && n.color !== "none" && (Lv(e, "colorAlpha") || Lv(e, "colorSaturation"));
    if (o) {
      var s = e.get("visualMin"), l = e.get("visualMax"), u = t.dataExtent.slice();
      s != null && s < u[0] && (u[0] = s), l != null && l > u[1] && (u[1] = l);
      var f = e.get("colorMappingBy"), h = {
        type: o.name,
        dataExtent: u,
        visual: o.range
      };
      h.type === "color" && (f === "index" || f === "id") ? (h.mappingMethod = "category", h.loop = !0) : h.mappingMethod = "linear";
      var c = new ce(h);
      return VM(c).drColorMappingBy = f, c;
    }
  }
}
function Lv(r, e) {
  var t = r.get(e);
  return z(t) && t.length ? {
    name: e,
    range: t
  } : null;
}
function V3(r, e, t, a, n, i) {
  var o = V({}, e);
  if (n) {
    var s = n.type, l = s === "color" && VM(n).drColorMappingBy, u = l === "index" ? a : l === "id" ? i.mapIdToIndex(t.getId()) : t.getValue(r.get("visualDimension"));
    o[s] = n.mapValueToVisual(u);
  }
  return o;
}
var ul = Math.max, $f = Math.min, zS = jt, Py = M, zM = ["itemStyle", "borderWidth"], B3 = ["itemStyle", "gapWidth"], z3 = ["upperLabel", "show"], G3 = ["upperLabel", "height"];
const F3 = {
  seriesType: "treemap",
  reset: function(r, e, t, a) {
    var n = t.getWidth(), i = t.getHeight(), o = r.option, s = ae(r.getBoxLayoutParams(), {
      width: t.getWidth(),
      height: t.getHeight()
    }), l = o.size || [], u = H(zS(s.width, l[0]), n), f = H(zS(s.height, l[1]), i), h = a && a.type, c = ["treemapZoomToNode", "treemapRootToNode"], v = sl(a, c, r), d = h === "treemapRender" || h === "treemapMove" ? a.rootRect : null, p = r.getViewRoot(), g = RM(p);
    if (h !== "treemapMove") {
      var y = h === "treemapZoomToNode" ? Z3(r, v, p, u, f) : d ? [d.width, d.height] : [u, f], m = o.sort;
      m && m !== "asc" && m !== "desc" && (m = "desc");
      var _ = {
        squareRatio: o.squareRatio,
        sort: m,
        leafDepth: o.leafDepth
      };
      p.hostTree.clearLayouts();
      var S = {
        x: 0,
        y: 0,
        width: y[0],
        height: y[1],
        area: y[0] * y[1]
      };
      p.setLayout(S), GM(p, _, !1, 0), S = p.getLayout(), Py(g, function(x, b) {
        var T = (g[b + 1] || p).getValue();
        x.setLayout(V({
          dataExtent: [T, T],
          borderWidth: 0,
          upperHeight: 0
        }, S));
      });
    }
    var w = r.getData().tree.root;
    w.setLayout(X3(s, d, v), !0), r.setLayoutInfo(s), FM(
      w,
      // Transform to base element coordinate system.
      new ct(-s.x, -s.y, n, i),
      g,
      p,
      0
    );
  }
};
function GM(r, e, t, a) {
  var n, i;
  if (!r.isRemoved()) {
    var o = r.getLayout();
    n = o.width, i = o.height;
    var s = r.getModel(), l = s.get(zM), u = s.get(B3) / 2, f = HM(s), h = Math.max(l, f), c = l - u, v = h - u;
    r.setLayout({
      borderWidth: l,
      upperHeight: h,
      upperLabelHeight: f
    }, !0), n = ul(n - 2 * c, 0), i = ul(i - c - v, 0);
    var d = n * i, p = H3(r, s, d, e, t, a);
    if (p.length) {
      var g = {
        x: c,
        y: v,
        width: n,
        height: i
      }, y = $f(n, i), m = 1 / 0, _ = [];
      _.area = 0;
      for (var S = 0, w = p.length; S < w; ) {
        var x = p[S];
        _.push(x), _.area += x.getLayout().area;
        var b = Y3(_, y, e.squareRatio);
        b <= m ? (S++, m = b) : (_.area -= _.pop().getLayout().area, GS(_, y, g, u, !1), y = $f(g.width, g.height), _.length = _.area = 0, m = 1 / 0);
      }
      if (_.length && GS(_, y, g, u, !0), !t) {
        var T = s.get("childrenVisibleMin");
        T != null && d < T && (t = !0);
      }
      for (var S = 0, w = p.length; S < w; S++)
        GM(p[S], e, t, a + 1);
    }
  }
}
function H3(r, e, t, a, n, i) {
  var o = r.children || [], s = a.sort;
  s !== "asc" && s !== "desc" && (s = null);
  var l = a.leafDepth != null && a.leafDepth <= i;
  if (n && !l)
    return r.viewChildren = [];
  o = Et(o, function(v) {
    return !v.isRemoved();
  }), $3(o, s);
  var u = U3(e, o, s);
  if (u.sum === 0)
    return r.viewChildren = [];
  if (u.sum = W3(e, t, u.sum, s, o), u.sum === 0)
    return r.viewChildren = [];
  for (var f = 0, h = o.length; f < h; f++) {
    var c = o[f].getValue() / u.sum * t;
    o[f].setLayout({
      area: c
    });
  }
  return l && (o.length && r.setLayout({
    isLeafRoot: !0
  }, !0), o.length = 0), r.viewChildren = o, r.setLayout({
    dataExtent: u.dataExtent
  }, !0), o;
}
function W3(r, e, t, a, n) {
  if (!a)
    return t;
  for (var i = r.get("visibleMin"), o = n.length, s = o, l = o - 1; l >= 0; l--) {
    var u = n[a === "asc" ? o - l - 1 : l].getValue();
    u / t * e < i && (s = l, t -= u);
  }
  return a === "asc" ? n.splice(0, o - s) : n.splice(s, o - s), t;
}
function $3(r, e) {
  return e && r.sort(function(t, a) {
    var n = e === "asc" ? t.getValue() - a.getValue() : a.getValue() - t.getValue();
    return n === 0 ? e === "asc" ? t.dataIndex - a.dataIndex : a.dataIndex - t.dataIndex : n;
  }), r;
}
function U3(r, e, t) {
  for (var a = 0, n = 0, i = e.length; n < i; n++)
    a += e[n].getValue();
  var o = r.get("visualDimension"), s;
  return !e || !e.length ? s = [NaN, NaN] : o === "value" && t ? (s = [e[e.length - 1].getValue(), e[0].getValue()], t === "asc" && s.reverse()) : (s = [1 / 0, -1 / 0], Py(e, function(l) {
    var u = l.getValue(o);
    u < s[0] && (s[0] = u), u > s[1] && (s[1] = u);
  })), {
    sum: a,
    dataExtent: s
  };
}
function Y3(r, e, t) {
  for (var a = 0, n = 1 / 0, i = 0, o = void 0, s = r.length; i < s; i++)
    o = r[i].getLayout().area, o && (o < n && (n = o), o > a && (a = o));
  var l = r.area * r.area, u = e * e * t;
  return l ? ul(u * a / l, l / (u * n)) : 1 / 0;
}
function GS(r, e, t, a, n) {
  var i = e === t.width ? 0 : 1, o = 1 - i, s = ["x", "y"], l = ["width", "height"], u = t[s[i]], f = e ? r.area / e : 0;
  (n || f > t[l[o]]) && (f = t[l[o]]);
  for (var h = 0, c = r.length; h < c; h++) {
    var v = r[h], d = {}, p = f ? v.getLayout().area / f : 0, g = d[l[o]] = ul(f - 2 * a, 0), y = t[s[i]] + t[l[i]] - u, m = h === c - 1 || y < p ? y : p, _ = d[l[i]] = ul(m - 2 * a, 0);
    d[s[o]] = t[s[o]] + $f(a, g / 2), d[s[i]] = u + $f(a, _ / 2), u += m, v.setLayout(d, !0);
  }
  t[s[o]] += f, t[l[o]] -= f;
}
function Z3(r, e, t, a, n) {
  var i = (e || {}).node, o = [a, n];
  if (!i || i === t)
    return o;
  for (var s, l = a * n, u = l * r.option.zoomToNodeRatio; s = i.parentNode; ) {
    for (var f = 0, h = s.children, c = 0, v = h.length; c < v; c++)
      f += h[c].getValue();
    var d = i.getValue();
    if (d === 0)
      return o;
    u *= f / d;
    var p = s.getModel(), g = p.get(zM), y = Math.max(g, HM(p));
    u += 4 * g * g + (3 * g + y) * Math.pow(u, 0.5), u > qm && (u = qm), i = s;
  }
  u < l && (u = l);
  var m = Math.pow(u / l, 0.5);
  return [a * m, n * m];
}
function X3(r, e, t) {
  if (e)
    return {
      x: e.x,
      y: e.y
    };
  var a = {
    x: 0,
    y: 0
  };
  if (!t)
    return a;
  var n = t.node, i = n.getLayout();
  if (!i)
    return a;
  for (var o = [i.width / 2, i.height / 2], s = n; s; ) {
    var l = s.getLayout();
    o[0] += l.x, o[1] += l.y, s = s.parentNode;
  }
  return {
    x: r.width / 2 - o[0],
    y: r.height / 2 - o[1]
  };
}
function FM(r, e, t, a, n) {
  var i = r.getLayout(), o = t[n], s = o && o === r;
  if (!(o && !s || n === t.length && r !== a)) {
    r.setLayout({
      // isInView means: viewRoot sub tree + viewAbovePath
      isInView: !0,
      // invisible only means: outside view clip so that the node can not
      // see but still layout for animation preparation but not render.
      invisible: !s && !e.intersect(i),
      isAboveViewRoot: s
    }, !0);
    var l = new ct(e.x - i.x, e.y - i.y, e.width, e.height);
    Py(r.viewChildren || [], function(u) {
      FM(u, l, t, a, n + 1);
    });
  }
}
function HM(r) {
  return r.get(z3) ? r.get(G3) : 0;
}
function q3(r) {
  r.registerSeriesModel(v3), r.registerChartView(A3), r.registerVisual(R3), r.registerLayout(F3), f3(r);
}
function K3(r) {
  var e = r.findComponents({
    mainType: "legend"
  });
  !e || !e.length || r.eachSeriesByType("graph", function(t) {
    var a = t.getCategoriesData(), n = t.getGraph(), i = n.data, o = a.mapArray(a.getName);
    i.filterSelf(function(s) {
      var l = i.getItemModel(s), u = l.getShallow("category");
      if (u != null) {
        At(u) && (u = o[u]);
        for (var f = 0; f < e.length; f++)
          if (!e[f].isSelected(u))
            return !1;
      }
      return !0;
    });
  });
}
function j3(r) {
  var e = {};
  r.eachSeriesByType("graph", function(t) {
    var a = t.getCategoriesData(), n = t.getData(), i = {};
    a.each(function(o) {
      var s = a.getName(o);
      i["ec-" + s] = o;
      var l = a.getItemModel(o), u = l.getModel("itemStyle").getItemStyle();
      u.fill || (u.fill = t.getColorFromPalette(s, e)), a.setItemVisual(o, "style", u);
      for (var f = ["symbol", "symbolSize", "symbolKeepAspect"], h = 0; h < f.length; h++) {
        var c = l.getShallow(f[h], !0);
        c != null && a.setItemVisual(o, f[h], c);
      }
    }), a.count() && n.each(function(o) {
      var s = n.getItemModel(o), l = s.getShallow("category");
      if (l != null) {
        $(l) && (l = i["ec-" + l]);
        var u = a.getItemVisual(l, "style"), f = n.ensureUniqueItemVisual(o, "style");
        V(f, u);
        for (var h = ["symbol", "symbolSize", "symbolKeepAspect"], c = 0; c < h.length; c++)
          n.setItemVisual(o, h[c], a.getItemVisual(l, h[c]));
      }
    });
  });
}
function Du(r) {
  return r instanceof Array || (r = [r, r]), r;
}
function J3(r) {
  r.eachSeriesByType("graph", function(e) {
    var t = e.getGraph(), a = e.getEdgeData(), n = Du(e.get("edgeSymbol")), i = Du(e.get("edgeSymbolSize"));
    a.setVisual("fromSymbol", n && n[0]), a.setVisual("toSymbol", n && n[1]), a.setVisual("fromSymbolSize", i && i[0]), a.setVisual("toSymbolSize", i && i[1]), a.setVisual("style", e.getModel("lineStyle").getLineStyle()), a.each(function(o) {
      var s = a.getItemModel(o), l = t.getEdgeByIndex(o), u = Du(s.getShallow("symbol", !0)), f = Du(s.getShallow("symbolSize", !0)), h = s.getModel("lineStyle").getLineStyle(), c = a.ensureUniqueItemVisual(o, "style");
      switch (V(c, h), c.stroke) {
        case "source": {
          var v = l.node1.getVisual("style");
          c.stroke = v && v.fill;
          break;
        }
        case "target": {
          var v = l.node2.getVisual("style");
          c.stroke = v && v.fill;
          break;
        }
      }
      u[0] && l.setVisual("fromSymbol", u[0]), u[1] && l.setVisual("toSymbol", u[1]), f[0] && l.setVisual("fromSymbolSize", f[0]), f[1] && l.setVisual("toSymbolSize", f[1]);
    });
  });
}
var Vp = "-->", $h = function(r) {
  return r.get("autoCurveness") || null;
}, WM = function(r, e) {
  var t = $h(r), a = 20, n = [];
  if (At(t))
    a = t;
  else if (z(t)) {
    r.__curvenessList = t;
    return;
  }
  e > a && (a = e);
  var i = a % 2 ? a + 2 : a + 3;
  n = [];
  for (var o = 0; o < i; o++)
    n.push((o % 2 ? o + 1 : o) / 10 * (o % 2 ? -1 : 1));
  r.__curvenessList = n;
}, fl = function(r, e, t) {
  var a = [r.id, r.dataIndex].join("."), n = [e.id, e.dataIndex].join(".");
  return [t.uid, a, n].join(Vp);
}, $M = function(r) {
  var e = r.split(Vp);
  return [e[0], e[2], e[1]].join(Vp);
}, Q3 = function(r, e) {
  var t = fl(r.node1, r.node2, e);
  return e.__edgeMap[t];
}, tH = function(r, e) {
  var t = Bp(fl(r.node1, r.node2, e), e), a = Bp(fl(r.node2, r.node1, e), e);
  return t + a;
}, Bp = function(r, e) {
  var t = e.__edgeMap;
  return t[r] ? t[r].length : 0;
};
function eH(r) {
  $h(r) && (r.__curvenessList = [], r.__edgeMap = {}, WM(r));
}
function rH(r, e, t, a) {
  if ($h(t)) {
    var n = fl(r, e, t), i = t.__edgeMap, o = i[$M(n)];
    i[n] && !o ? i[n].isForward = !0 : o && i[n] && (o.isForward = !0, i[n].isForward = !1), i[n] = i[n] || [], i[n].push(a);
  }
}
function Ry(r, e, t, a) {
  var n = $h(e), i = z(n);
  if (!n)
    return null;
  var o = Q3(r, e);
  if (!o)
    return null;
  for (var s = -1, l = 0; l < o.length; l++)
    if (o[l] === t) {
      s = l;
      break;
    }
  var u = tH(r, e);
  WM(e, u), r.lineStyle = r.lineStyle || {};
  var f = fl(r.node1, r.node2, e), h = e.__curvenessList, c = i || u % 2 ? 0 : 1;
  if (o.isForward)
    return h[c + s];
  var v = $M(f), d = Bp(v, e), p = h[s + d + c];
  return a ? i ? n && n[0] === 0 ? (d + c) % 2 ? p : -p : ((d % 2 ? 0 : 1) + c) % 2 ? p : -p : (d + c) % 2 ? p : -p : h[s + d + c];
}
function UM(r) {
  var e = r.coordinateSystem;
  if (!(e && e.type !== "view")) {
    var t = r.getGraph();
    t.eachNode(function(a) {
      var n = a.getModel();
      a.setLayout([+n.get("x"), +n.get("y")]);
    }), Ny(t, r);
  }
}
function Ny(r, e) {
  r.eachEdge(function(t, a) {
    var n = lr(t.getModel().get(["lineStyle", "curveness"]), -Ry(t, e, a, !0), 0), i = la(t.node1.getLayout()), o = la(t.node2.getLayout()), s = [i, o];
    +n && s.push([(i[0] + o[0]) / 2 - (i[1] - o[1]) * n, (i[1] + o[1]) / 2 - (o[0] - i[0]) * n]), t.setLayout(s);
  });
}
function aH(r, e) {
  r.eachSeriesByType("graph", function(t) {
    var a = t.get("layout"), n = t.coordinateSystem;
    if (n && n.type !== "view") {
      var i = t.getData(), o = [];
      M(n.dimensions, function(c) {
        o = o.concat(i.mapDimensionsAll(c));
      });
      for (var s = 0; s < i.count(); s++) {
        for (var l = [], u = !1, f = 0; f < o.length; f++) {
          var h = i.get(o[f], s);
          isNaN(h) || (u = !0), l.push(h);
        }
        u ? i.setItemLayout(s, n.dataToPoint(l)) : i.setItemLayout(s, [NaN, NaN]);
      }
      Ny(i.graph, t);
    } else
      (!a || a === "none") && UM(t);
  });
}
function Cs(r) {
  var e = r.coordinateSystem;
  if (e.type !== "view")
    return 1;
  var t = r.option.nodeScaleRatio, a = e.scaleX, n = e.getZoom(), i = (n - 1) * t + 1;
  return i / a;
}
function As(r) {
  var e = r.getVisual("symbolSize");
  return e instanceof Array && (e = (e[0] + e[1]) / 2), +e;
}
var FS = Math.PI, Ev = [];
function Oy(r, e, t, a) {
  var n = r.coordinateSystem;
  if (!(n && n.type !== "view")) {
    var i = n.getBoundingRect(), o = r.getData(), s = o.graph, l = i.width / 2 + i.x, u = i.height / 2 + i.y, f = Math.min(i.width, i.height) / 2, h = o.count();
    if (o.setLayout({
      cx: l,
      cy: u
    }), !!h) {
      if (t) {
        var c = n.pointToData(a), v = c[0], d = c[1], p = [v - l, d - u];
        bo(p, p), zu(p, p, f), t.setLayout([l + p[0], u + p[1]], !0);
        var g = r.get(["circular", "rotateLabel"]);
        YM(t, g, l, u);
      }
      nH[e](r, s, o, f, l, u, h), s.eachEdge(function(y, m) {
        var _ = lr(y.getModel().get(["lineStyle", "curveness"]), Ry(y, r, m), 0), S = la(y.node1.getLayout()), w = la(y.node2.getLayout()), x, b = (S[0] + w[0]) / 2, T = (S[1] + w[1]) / 2;
        +_ && (_ *= 3, x = [l * _ + b * (1 - _), u * _ + T * (1 - _)]), y.setLayout([S, w, x]);
      });
    }
  }
}
var nH = {
  value: function(r, e, t, a, n, i, o) {
    var s = 0, l = t.getSum("value"), u = Math.PI * 2 / (l || o);
    e.eachNode(function(f) {
      var h = f.getValue("value"), c = u * (l ? h : 1) / 2;
      s += c, f.setLayout([a * Math.cos(s) + n, a * Math.sin(s) + i]), s += c;
    });
  },
  symbolSize: function(r, e, t, a, n, i, o) {
    var s = 0;
    Ev.length = o;
    var l = Cs(r);
    e.eachNode(function(h) {
      var c = As(h);
      isNaN(c) && (c = 2), c < 0 && (c = 0), c *= l;
      var v = Math.asin(c / 2 / a);
      isNaN(v) && (v = FS / 2), Ev[h.dataIndex] = v, s += v * 2;
    });
    var u = (2 * FS - s) / o / 2, f = 0;
    e.eachNode(function(h) {
      var c = u + Ev[h.dataIndex];
      f += c, (!h.getLayout() || !h.getLayout().fixed) && h.setLayout([a * Math.cos(f) + n, a * Math.sin(f) + i]), f += c;
    });
  }
};
function YM(r, e, t, a) {
  var n = r.getGraphicEl();
  if (n) {
    var i = r.getModel(), o = i.get(["label", "rotate"]) || 0, s = n.getSymbolPath();
    if (e) {
      var l = r.getLayout(), u = Math.atan2(l[1] - a, l[0] - t);
      u < 0 && (u = Math.PI * 2 + u);
      var f = l[0] < t;
      f && (u = u - Math.PI);
      var h = f ? "left" : "right";
      s.setTextConfig({
        rotation: -u,
        position: h,
        origin: "center"
      });
      var c = s.ensureState("emphasis");
      V(c.textConfig || (c.textConfig = {}), {
        position: h
      });
    } else
      s.setTextConfig({
        rotation: o *= Math.PI / 180
      });
  }
}
function iH(r) {
  r.eachSeriesByType("graph", function(e) {
    e.get("layout") === "circular" && Oy(e, "symbolSize");
  });
}
var Fi = Td;
function oH(r, e, t) {
  for (var a = r, n = e, i = t.rect, o = i.width, s = i.height, l = [i.x + o / 2, i.y + s / 2], u = t.gravity == null ? 0.1 : t.gravity, f = 0; f < a.length; f++) {
    var h = a[f];
    h.p || (h.p = mi(o * (Math.random() - 0.5) + l[0], s * (Math.random() - 0.5) + l[1])), h.pp = la(h.p), h.edges = null;
  }
  var c = t.friction == null ? 0.6 : t.friction, v = c, d, p;
  return {
    warmUp: function() {
      v = c * 0.8;
    },
    setFixed: function(g) {
      a[g].fixed = !0;
    },
    setUnfixed: function(g) {
      a[g].fixed = !1;
    },
    /**
     * Before step hook
     */
    beforeStep: function(g) {
      d = g;
    },
    /**
     * After step hook
     */
    afterStep: function(g) {
      p = g;
    },
    /**
     * Some formulas were originally copied from "d3.js"
     * https://github.com/d3/d3/blob/b516d77fb8566b576088e73410437494717ada26/src/layout/force.js
     * with some modifications made for this project.
     * See the license statement at the head of this file.
     */
    step: function(g) {
      d && d(a, n);
      for (var y = [], m = a.length, _ = 0; _ < n.length; _++) {
        var S = n[_];
        if (!S.ignoreForceLayout) {
          var w = S.n1, x = S.n2;
          Yn(y, x.p, w.p);
          var b = Dd(y) - S.d, T = x.w / (w.w + x.w);
          isNaN(T) && (T = 0), bo(y, y), !w.fixed && Fi(w.p, w.p, y, T * b * v), !x.fixed && Fi(x.p, x.p, y, -(1 - T) * b * v);
        }
      }
      for (var _ = 0; _ < m; _++) {
        var C = a[_];
        C.fixed || (Yn(y, l, C.p), Fi(C.p, C.p, y, u * v));
      }
      for (var _ = 0; _ < m; _++)
        for (var w = a[_], D = _ + 1; D < m; D++) {
          var x = a[D];
          Yn(y, x.p, w.p);
          var b = Dd(y);
          b === 0 && (c2(y, Math.random() - 0.5, Math.random() - 0.5), b = 1);
          var A = (w.rep + x.rep) / b / b;
          !w.fixed && Fi(w.pp, w.pp, y, A), !x.fixed && Fi(x.pp, x.pp, y, -A);
        }
      for (var I = [], _ = 0; _ < m; _++) {
        var C = a[_];
        C.fixed || (Yn(I, C.p, C.pp), Fi(C.p, C.p, I, v), De(C.pp, C.p));
      }
      v = v * 0.992;
      var L = v < 0.01;
      p && p(a, n, L), g && g(L);
    }
  };
}
function sH(r) {
  r.eachSeriesByType("graph", function(e) {
    var t = e.coordinateSystem;
    if (!(t && t.type !== "view"))
      if (e.get("layout") === "force") {
        var a = e.preservedPoints || {}, n = e.getGraph(), i = n.data, o = n.edgeData, s = e.getModel("force"), l = s.get("initLayout");
        e.preservedPoints ? i.each(function(_) {
          var S = i.getId(_);
          i.setItemLayout(_, a[S] || [NaN, NaN]);
        }) : !l || l === "none" ? UM(e) : l === "circular" && Oy(e, "value");
        var u = i.getDataExtent("value"), f = o.getDataExtent("value"), h = s.get("repulsion"), c = s.get("edgeLength"), v = z(h) ? h : [h, h], d = z(c) ? c : [c, c];
        d = [d[1], d[0]];
        var p = i.mapArray("value", function(_, S) {
          var w = i.getItemLayout(S), x = Lt(_, u, v);
          return isNaN(x) && (x = (v[0] + v[1]) / 2), {
            w: x,
            rep: x,
            fixed: i.getItemModel(S).get("fixed"),
            p: !w || isNaN(w[0]) || isNaN(w[1]) ? null : w
          };
        }), g = o.mapArray("value", function(_, S) {
          var w = n.getEdgeByIndex(S), x = Lt(_, f, d);
          isNaN(x) && (x = (d[0] + d[1]) / 2);
          var b = w.getModel(), T = lr(w.getModel().get(["lineStyle", "curveness"]), -Ry(w, e, S, !0), 0);
          return {
            n1: p[w.node1.dataIndex],
            n2: p[w.node2.dataIndex],
            d: x,
            curveness: T,
            ignoreForceLayout: b.get("ignoreForceLayout")
          };
        }), y = t.getBoundingRect(), m = oH(p, g, {
          rect: y,
          gravity: s.get("gravity"),
          friction: s.get("friction")
        });
        m.beforeStep(function(_, S) {
          for (var w = 0, x = _.length; w < x; w++)
            _[w].fixed && De(_[w].p, n.getNodeByIndex(w).getLayout());
        }), m.afterStep(function(_, S, w) {
          for (var x = 0, b = _.length; x < b; x++)
            _[x].fixed || n.getNodeByIndex(x).setLayout(_[x].p), a[i.getId(x)] = _[x].p;
          for (var x = 0, b = S.length; x < b; x++) {
            var T = S[x], C = n.getEdgeByIndex(x), D = T.n1.p, A = T.n2.p, I = C.getLayout();
            I = I ? I.slice() : [], I[0] = I[0] || [], I[1] = I[1] || [], De(I[0], D), De(I[1], A), +T.curveness && (I[2] = [(D[0] + A[0]) / 2 - (D[1] - A[1]) * T.curveness, (D[1] + A[1]) / 2 - (A[0] - D[0]) * T.curveness]), C.setLayout(I);
          }
        }), e.forceLayout = m, e.preservedPoints = a, m.step();
      } else
        e.forceLayout = null;
  });
}
function lH(r, e, t) {
  var a = V(r.getBoxLayoutParams(), {
    aspect: t
  });
  return ae(a, {
    width: e.getWidth(),
    height: e.getHeight()
  });
}
function uH(r, e) {
  var t = [];
  return r.eachSeriesByType("graph", function(a) {
    var n = a.get("coordinateSystem");
    if (!n || n === "view") {
      var i = a.getData(), o = i.mapArray(function(g) {
        var y = i.getItemModel(g);
        return [+y.get("x"), +y.get("y")];
      }), s = [], l = [];
      yh(o, s, l), l[0] - s[0] === 0 && (l[0] += 1, s[0] -= 1), l[1] - s[1] === 0 && (l[1] += 1, s[1] -= 1);
      var u = (l[0] - s[0]) / (l[1] - s[1]), f = lH(a, e, u);
      isNaN(u) && (s = [f.x, f.y], l = [f.x + f.width, f.y + f.height]);
      var h = l[0] - s[0], c = l[1] - s[1], v = f.width, d = f.height, p = a.coordinateSystem = new Rl();
      p.zoomLimit = a.get("scaleLimit"), p.setBoundingRect(s[0], s[1], h, c), p.setViewRect(f.x, f.y, v, d), p.setCenter(a.get("center"), e), p.setZoom(a.get("zoom")), t.push(p);
    }
  }), t;
}
var HS = ue.prototype, Pv = xh.prototype, ZM = (
  /** @class */
  function() {
    function r() {
      this.x1 = 0, this.y1 = 0, this.x2 = 0, this.y2 = 0, this.percent = 1;
    }
    return r;
  }()
);
(function(r) {
  N(e, r);
  function e() {
    return r !== null && r.apply(this, arguments) || this;
  }
  return e;
})(ZM);
function Rv(r) {
  return isNaN(+r.cpx1) || isNaN(+r.cpy1);
}
var fH = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t) {
      var a = r.call(this, t) || this;
      return a.type = "ec-line", a;
    }
    return e.prototype.getDefaultStyle = function() {
      return {
        stroke: "#000",
        fill: null
      };
    }, e.prototype.getDefaultShape = function() {
      return new ZM();
    }, e.prototype.buildPath = function(t, a) {
      Rv(a) ? HS.buildPath.call(this, t, a) : Pv.buildPath.call(this, t, a);
    }, e.prototype.pointAt = function(t) {
      return Rv(this.shape) ? HS.pointAt.call(this, t) : Pv.pointAt.call(this, t);
    }, e.prototype.tangentAt = function(t) {
      var a = this.shape, n = Rv(a) ? [a.x2 - a.x1, a.y2 - a.y1] : Pv.tangentAt.call(this, t);
      return bo(n, n);
    }, e;
  }(mt)
);
const hH = fH;
var Nv = ["fromSymbol", "toSymbol"];
function WS(r) {
  return "_" + r + "Type";
}
function $S(r, e, t) {
  var a = e.getItemVisual(t, r);
  if (!a || a === "none")
    return a;
  var n = e.getItemVisual(t, r + "Size"), i = e.getItemVisual(t, r + "Rotate"), o = e.getItemVisual(t, r + "Offset"), s = e.getItemVisual(t, r + "KeepAspect"), l = Bo(n), u = xi(o || 0, l);
  return a + l + u + (i || "") + (s || "");
}
function US(r, e, t) {
  var a = e.getItemVisual(t, r);
  if (!(!a || a === "none")) {
    var n = e.getItemVisual(t, r + "Size"), i = e.getItemVisual(t, r + "Rotate"), o = e.getItemVisual(t, r + "Offset"), s = e.getItemVisual(t, r + "KeepAspect"), l = Bo(n), u = xi(o || 0, l), f = Qt(a, -l[0] / 2 + u[0], -l[1] / 2 + u[1], l[0], l[1], null, s);
    return f.__specifiedRotation = i == null || isNaN(i) ? void 0 : +i * Math.PI / 180 || 0, f.name = r, f;
  }
}
function cH(r) {
  var e = new hH({
    name: "line",
    subPixelOptimize: !0
  });
  return zp(e.shape, r), e;
}
function zp(r, e) {
  r.x1 = e[0][0], r.y1 = e[0][1], r.x2 = e[1][0], r.y2 = e[1][1], r.percent = 1;
  var t = e[2];
  t ? (r.cpx1 = t[0], r.cpy1 = t[1]) : (r.cpx1 = NaN, r.cpy1 = NaN);
}
var vH = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t, a, n) {
      var i = r.call(this) || this;
      return i._createLine(t, a, n), i;
    }
    return e.prototype._createLine = function(t, a, n) {
      var i = t.hostModel, o = t.getItemLayout(a), s = cH(o);
      s.shape.percent = 0, Bt(s, {
        shape: {
          percent: 1
        }
      }, i, a), this.add(s), M(Nv, function(l) {
        var u = US(l, t, a);
        this.add(u), this[WS(l)] = $S(l, t, a);
      }, this), this._updateCommonStl(t, a, n);
    }, e.prototype.updateData = function(t, a, n) {
      var i = t.hostModel, o = this.childOfName("line"), s = t.getItemLayout(a), l = {
        shape: {}
      };
      zp(l.shape, s), Mt(o, l, i, a), M(Nv, function(u) {
        var f = $S(u, t, a), h = WS(u);
        if (this[h] !== f) {
          this.remove(this.childOfName(u));
          var c = US(u, t, a);
          this.add(c);
        }
        this[h] = f;
      }, this), this._updateCommonStl(t, a, n);
    }, e.prototype.getLinePath = function() {
      return this.childAt(0);
    }, e.prototype._updateCommonStl = function(t, a, n) {
      var i = t.hostModel, o = this.childOfName("line"), s = n && n.emphasisLineStyle, l = n && n.blurLineStyle, u = n && n.selectLineStyle, f = n && n.labelStatesModels, h = n && n.emphasisDisabled, c = n && n.focus, v = n && n.blurScope;
      if (!n || t.hasItemOption) {
        var d = t.getItemModel(a), p = d.getModel("emphasis");
        s = p.getModel("lineStyle").getLineStyle(), l = d.getModel(["blur", "lineStyle"]).getLineStyle(), u = d.getModel(["select", "lineStyle"]).getLineStyle(), h = p.get("disabled"), c = p.get("focus"), v = p.get("blurScope"), f = oe(d);
      }
      var g = t.getItemVisual(a, "style"), y = g.stroke;
      o.useStyle(g), o.style.fill = null, o.style.strokeNoScale = !0, o.ensureState("emphasis").style = s, o.ensureState("blur").style = l, o.ensureState("select").style = u, M(Nv, function(x) {
        var b = this.childOfName(x);
        if (b) {
          b.setColor(y), b.style.opacity = g.opacity;
          for (var T = 0; T < Le.length; T++) {
            var C = Le[T], D = o.getState(C);
            if (D) {
              var A = D.style || {}, I = b.ensureState(C), L = I.style || (I.style = {});
              A.stroke != null && (L[b.__isEmptyBrush ? "stroke" : "fill"] = A.stroke), A.opacity != null && (L.opacity = A.opacity);
            }
          }
          b.markRedraw();
        }
      }, this);
      var m = i.getRawValue(a);
      pe(this, f, {
        labelDataIndex: a,
        labelFetcher: {
          getFormattedLabel: function(x, b) {
            return i.getFormattedLabel(x, b, t.dataType);
          }
        },
        inheritColor: y || "#000",
        defaultOpacity: g.opacity,
        defaultText: (m == null ? t.getName(a) : isFinite(m) ? Yt(m) : m) + ""
      });
      var _ = this.getTextContent();
      if (_) {
        var S = f.normal;
        _.__align = _.style.align, _.__verticalAlign = _.style.verticalAlign, _.__position = S.get("position") || "middle";
        var w = S.get("distance");
        z(w) || (w = [w, w]), _.__labelDistance = w;
      }
      this.setTextConfig({
        position: null,
        local: !0,
        inside: !1
        // Can't be inside for stroke element.
      }), Wt(this, c, v, h);
    }, e.prototype.highlight = function() {
      ga(this);
    }, e.prototype.downplay = function() {
      ya(this);
    }, e.prototype.updateLayout = function(t, a) {
      this.setLinePoints(t.getItemLayout(a));
    }, e.prototype.setLinePoints = function(t) {
      var a = this.childOfName("line");
      zp(a.shape, t), a.dirty();
    }, e.prototype.beforeUpdate = function() {
      var t = this, a = t.childOfName("fromSymbol"), n = t.childOfName("toSymbol"), i = t.getTextContent();
      if (!a && !n && (!i || i.ignore))
        return;
      for (var o = 1, s = this.parent; s; )
        s.scaleX && (o /= s.scaleX), s = s.parent;
      var l = t.childOfName("line");
      if (!this.__dirty && !l.__dirty)
        return;
      var u = l.shape.percent, f = l.pointAt(0), h = l.pointAt(u), c = Yn([], h, f);
      bo(c, c);
      function v(D, A) {
        var I = D.__specifiedRotation;
        if (I == null) {
          var L = l.tangentAt(A);
          D.attr("rotation", (A === 1 ? -1 : 1) * Math.PI / 2 - Math.atan2(L[1], L[0]));
        } else
          D.attr("rotation", I);
      }
      if (a && (a.setPosition(f), v(a, 0), a.scaleX = a.scaleY = o * u, a.markRedraw()), n && (n.setPosition(h), v(n, 1), n.scaleX = n.scaleY = o * u, n.markRedraw()), i && !i.ignore) {
        i.x = i.y = 0, i.originX = i.originY = 0;
        var d = void 0, p = void 0, g = i.__labelDistance, y = g[0] * o, m = g[1] * o, _ = u / 2, S = l.tangentAt(_), w = [S[1], -S[0]], x = l.pointAt(_);
        w[1] > 0 && (w[0] = -w[0], w[1] = -w[1]);
        var b = S[0] < 0 ? -1 : 1;
        if (i.__position !== "start" && i.__position !== "end") {
          var T = -Math.atan2(S[1], S[0]);
          h[0] < f[0] && (T = Math.PI + T), i.rotation = T;
        }
        var C = void 0;
        switch (i.__position) {
          case "insideStartTop":
          case "insideMiddleTop":
          case "insideEndTop":
          case "middle":
            C = -m, p = "bottom";
            break;
          case "insideStartBottom":
          case "insideMiddleBottom":
          case "insideEndBottom":
            C = m, p = "top";
            break;
          default:
            C = 0, p = "middle";
        }
        switch (i.__position) {
          case "end":
            i.x = c[0] * y + h[0], i.y = c[1] * m + h[1], d = c[0] > 0.8 ? "left" : c[0] < -0.8 ? "right" : "center", p = c[1] > 0.8 ? "top" : c[1] < -0.8 ? "bottom" : "middle";
            break;
          case "start":
            i.x = -c[0] * y + f[0], i.y = -c[1] * m + f[1], d = c[0] > 0.8 ? "right" : c[0] < -0.8 ? "left" : "center", p = c[1] > 0.8 ? "bottom" : c[1] < -0.8 ? "top" : "middle";
            break;
          case "insideStartTop":
          case "insideStart":
          case "insideStartBottom":
            i.x = y * b + f[0], i.y = f[1] + C, d = S[0] < 0 ? "right" : "left", i.originX = -y * b, i.originY = -C;
            break;
          case "insideMiddleTop":
          case "insideMiddle":
          case "insideMiddleBottom":
          case "middle":
            i.x = x[0], i.y = x[1] + C, d = "center", i.originY = -C;
            break;
          case "insideEndTop":
          case "insideEnd":
          case "insideEndBottom":
            i.x = -y * b + h[0], i.y = h[1] + C, d = S[0] >= 0 ? "right" : "left", i.originX = y * b, i.originY = -C;
            break;
        }
        i.scaleX = i.scaleY = o, i.setStyle({
          // Use the user specified text align and baseline first
          verticalAlign: i.__verticalAlign || p,
          align: i.__align || d
        });
      }
    }, e;
  }(nt)
);
const ky = vH;
var dH = (
  /** @class */
  function() {
    function r(e) {
      this.group = new nt(), this._LineCtor = e || ky;
    }
    return r.prototype.updateData = function(e) {
      var t = this;
      this._progressiveEls = null;
      var a = this, n = a.group, i = a._lineData;
      a._lineData = e, i || n.removeAll();
      var o = YS(e);
      e.diff(i).add(function(s) {
        t._doAdd(e, s, o);
      }).update(function(s, l) {
        t._doUpdate(i, e, l, s, o);
      }).remove(function(s) {
        n.remove(i.getItemGraphicEl(s));
      }).execute();
    }, r.prototype.updateLayout = function() {
      var e = this._lineData;
      e && e.eachItemGraphicEl(function(t, a) {
        t.updateLayout(e, a);
      }, this);
    }, r.prototype.incrementalPrepareUpdate = function(e) {
      this._seriesScope = YS(e), this._lineData = null, this.group.removeAll();
    }, r.prototype.incrementalUpdate = function(e, t) {
      this._progressiveEls = [];
      function a(s) {
        !s.isGroup && !pH(s) && (s.incremental = !0, s.ensureState("emphasis").hoverLayer = !0);
      }
      for (var n = e.start; n < e.end; n++) {
        var i = t.getItemLayout(n);
        if (Ov(i)) {
          var o = new this._LineCtor(t, n, this._seriesScope);
          o.traverse(a), this.group.add(o), t.setItemGraphicEl(n, o), this._progressiveEls.push(o);
        }
      }
    }, r.prototype.remove = function() {
      this.group.removeAll();
    }, r.prototype.eachRendered = function(e) {
      un(this._progressiveEls || this.group, e);
    }, r.prototype._doAdd = function(e, t, a) {
      var n = e.getItemLayout(t);
      if (Ov(n)) {
        var i = new this._LineCtor(e, t, a);
        e.setItemGraphicEl(t, i), this.group.add(i);
      }
    }, r.prototype._doUpdate = function(e, t, a, n, i) {
      var o = e.getItemGraphicEl(a);
      if (!Ov(t.getItemLayout(n))) {
        this.group.remove(o);
        return;
      }
      o ? o.updateData(t, n, i) : o = new this._LineCtor(t, n, i), t.setItemGraphicEl(n, o), this.group.add(o);
    }, r;
  }()
);
function pH(r) {
  return r.animators && r.animators.length > 0;
}
function YS(r) {
  var e = r.hostModel, t = e.getModel("emphasis");
  return {
    lineStyle: e.getModel("lineStyle").getLineStyle(),
    emphasisLineStyle: t.getModel(["lineStyle"]).getLineStyle(),
    blurLineStyle: e.getModel(["blur", "lineStyle"]).getLineStyle(),
    selectLineStyle: e.getModel(["select", "lineStyle"]).getLineStyle(),
    emphasisDisabled: t.get("disabled"),
    blurScope: t.get("blurScope"),
    focus: t.get("focus"),
    labelStatesModels: oe(e)
  };
}
function ZS(r) {
  return isNaN(r[0]) || isNaN(r[1]);
}
function Ov(r) {
  return r && !ZS(r[0]) && !ZS(r[1]);
}
const Vy = dH;
var kv = [], Vv = [], Bv = [], Hi = le, zv = ti, XS = Math.abs;
function qS(r, e, t) {
  for (var a = r[0], n = r[1], i = r[2], o = 1 / 0, s, l = t * t, u = 0.1, f = 0.1; f <= 0.9; f += 0.1) {
    kv[0] = Hi(a[0], n[0], i[0], f), kv[1] = Hi(a[1], n[1], i[1], f);
    var h = XS(zv(kv, e) - l);
    h < o && (o = h, s = f);
  }
  for (var c = 0; c < 32; c++) {
    var v = s + u;
    Vv[0] = Hi(a[0], n[0], i[0], s), Vv[1] = Hi(a[1], n[1], i[1], s), Bv[0] = Hi(a[0], n[0], i[0], v), Bv[1] = Hi(a[1], n[1], i[1], v);
    var h = zv(Vv, e) - l;
    if (XS(h) < 0.01)
      break;
    var d = zv(Bv, e) - l;
    u /= 2, h < 0 ? d >= 0 ? s = s + u : s = s - u : d >= 0 ? s = s - u : s = s + u;
  }
  return s;
}
function Gv(r, e) {
  var t = [], a = $s, n = [[], [], []], i = [[], []], o = [];
  e /= 2, r.eachEdge(function(s, l) {
    var u = s.getLayout(), f = s.getVisual("fromSymbol"), h = s.getVisual("toSymbol");
    u.__original || (u.__original = [la(u[0]), la(u[1])], u[2] && u.__original.push(la(u[2])));
    var c = u.__original;
    if (u[2] != null) {
      if (De(n[0], c[0]), De(n[1], c[2]), De(n[2], c[1]), f && f !== "none") {
        var v = As(s.node1), d = qS(n, c[0], v * e);
        a(n[0][0], n[1][0], n[2][0], d, t), n[0][0] = t[3], n[1][0] = t[4], a(n[0][1], n[1][1], n[2][1], d, t), n[0][1] = t[3], n[1][1] = t[4];
      }
      if (h && h !== "none") {
        var v = As(s.node2), d = qS(n, c[1], v * e);
        a(n[0][0], n[1][0], n[2][0], d, t), n[1][0] = t[1], n[2][0] = t[2], a(n[0][1], n[1][1], n[2][1], d, t), n[1][1] = t[1], n[2][1] = t[2];
      }
      De(u[0], n[0]), De(u[1], n[2]), De(u[2], n[1]);
    } else {
      if (De(i[0], c[0]), De(i[1], c[1]), Yn(o, i[1], i[0]), bo(o, o), f && f !== "none") {
        var v = As(s.node1);
        Td(i[0], i[0], o, v * e);
      }
      if (h && h !== "none") {
        var v = As(s.node2);
        Td(i[1], i[1], o, -v * e);
      }
      De(u[0], i[0]), De(u[1], i[1]);
    }
  });
}
function KS(r) {
  return r.type === "view";
}
var gH = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.init = function(t, a) {
      var n = new Ml(), i = new Vy(), o = this.group;
      this._controller = new Pl(a.getZr()), this._controllerHost = {
        target: o
      }, o.add(n.group), o.add(i.group), this._symbolDraw = n, this._lineDraw = i, this._firstRender = !0;
    }, e.prototype.render = function(t, a, n) {
      var i = this, o = t.coordinateSystem;
      this._model = t;
      var s = this._symbolDraw, l = this._lineDraw, u = this.group;
      if (KS(o)) {
        var f = {
          x: o.x,
          y: o.y,
          scaleX: o.scaleX,
          scaleY: o.scaleY
        };
        this._firstRender ? u.attr(f) : Mt(u, f, t);
      }
      Gv(t.getGraph(), Cs(t));
      var h = t.getData();
      s.updateData(h);
      var c = t.getEdgeData();
      l.updateData(c), this._updateNodeAndLinkScale(), this._updateController(t, a, n), clearTimeout(this._layoutTimeout);
      var v = t.forceLayout, d = t.get(["force", "layoutAnimation"]);
      v && this._startForceLayoutIteration(v, d);
      var p = t.get("layout");
      h.graph.eachNode(function(_) {
        var S = _.dataIndex, w = _.getGraphicEl(), x = _.getModel();
        if (w) {
          w.off("drag").off("dragend");
          var b = x.get("draggable");
          b && w.on("drag", function(C) {
            switch (p) {
              case "force":
                v.warmUp(), !i._layouting && i._startForceLayoutIteration(v, d), v.setFixed(S), h.setItemLayout(S, [w.x, w.y]);
                break;
              case "circular":
                h.setItemLayout(S, [w.x, w.y]), _.setLayout({
                  fixed: !0
                }, !0), Oy(t, "symbolSize", _, [C.offsetX, C.offsetY]), i.updateLayout(t);
                break;
              case "none":
              default:
                h.setItemLayout(S, [w.x, w.y]), Ny(t.getGraph(), t), i.updateLayout(t);
                break;
            }
          }).on("dragend", function() {
            v && v.setUnfixed(S);
          }), w.setDraggable(b, !!x.get("cursor"));
          var T = x.get(["emphasis", "focus"]);
          T === "adjacency" && (it(w).focus = _.getAdjacentDataIndices());
        }
      }), h.graph.eachEdge(function(_) {
        var S = _.getGraphicEl(), w = _.getModel().get(["emphasis", "focus"]);
        S && w === "adjacency" && (it(S).focus = {
          edge: [_.dataIndex],
          node: [_.node1.dataIndex, _.node2.dataIndex]
        });
      });
      var g = t.get("layout") === "circular" && t.get(["circular", "rotateLabel"]), y = h.getLayout("cx"), m = h.getLayout("cy");
      h.graph.eachNode(function(_) {
        YM(_, g, y, m);
      }), this._firstRender = !1;
    }, e.prototype.dispose = function() {
      this._controller && this._controller.dispose(), this._controllerHost = null;
    }, e.prototype._startForceLayoutIteration = function(t, a) {
      var n = this;
      (function i() {
        t.step(function(o) {
          n.updateLayout(n._model), (n._layouting = !o) && (a ? n._layoutTimeout = setTimeout(i, 16) : i());
        });
      })();
    }, e.prototype._updateController = function(t, a, n) {
      var i = this, o = this._controller, s = this._controllerHost, l = this.group;
      if (o.setPointerChecker(function(u, f, h) {
        var c = l.getBoundingRect();
        return c.applyTransform(l.transform), c.contain(f, h) && !Fh(u, n, t);
      }), !KS(t.coordinateSystem)) {
        o.disable();
        return;
      }
      o.enable(t.get("roam")), s.zoomLimit = t.get("scaleLimit"), s.zoom = t.coordinateSystem.getZoom(), o.off("pan").off("zoom").on("pan", function(u) {
        Ty(s, u.dx, u.dy), n.dispatchAction({
          seriesId: t.id,
          type: "graphRoam",
          dx: u.dx,
          dy: u.dy
        });
      }).on("zoom", function(u) {
        Dy(s, u.scale, u.originX, u.originY), n.dispatchAction({
          seriesId: t.id,
          type: "graphRoam",
          zoom: u.scale,
          originX: u.originX,
          originY: u.originY
        }), i._updateNodeAndLinkScale(), Gv(t.getGraph(), Cs(t)), i._lineDraw.updateLayout(), n.updateLabelLayout();
      });
    }, e.prototype._updateNodeAndLinkScale = function() {
      var t = this._model, a = t.getData(), n = Cs(t);
      a.eachItemGraphicEl(function(i, o) {
        i && i.setSymbolScale(n);
      });
    }, e.prototype.updateLayout = function(t) {
      Gv(t.getGraph(), Cs(t)), this._symbolDraw.updateLayout(), this._lineDraw.updateLayout();
    }, e.prototype.remove = function(t, a) {
      this._symbolDraw && this._symbolDraw.remove(), this._lineDraw && this._lineDraw.remove();
    }, e.type = "graph", e;
  }(Vt)
);
const yH = gH;
function Wi(r) {
  return "_EC_" + r;
}
var mH = (
  /** @class */
  function() {
    function r(e) {
      this.type = "graph", this.nodes = [], this.edges = [], this._nodesMap = {}, this._edgesMap = {}, this._directed = e || !1;
    }
    return r.prototype.isDirected = function() {
      return this._directed;
    }, r.prototype.addNode = function(e, t) {
      e = e == null ? "" + t : "" + e;
      var a = this._nodesMap;
      if (a[Wi(e)]) {
        ({}).NODE_ENV !== "production" && console.error("Graph nodes have duplicate name or id");
        return;
      }
      var n = new Gn(e, t);
      return n.hostGraph = this, this.nodes.push(n), a[Wi(e)] = n, n;
    }, r.prototype.getNodeByIndex = function(e) {
      var t = this.data.getRawIndex(e);
      return this.nodes[t];
    }, r.prototype.getNodeById = function(e) {
      return this._nodesMap[Wi(e)];
    }, r.prototype.addEdge = function(e, t, a) {
      var n = this._nodesMap, i = this._edgesMap;
      if (At(e) && (e = this.nodes[e]), At(t) && (t = this.nodes[t]), e instanceof Gn || (e = n[Wi(e)]), t instanceof Gn || (t = n[Wi(t)]), !(!e || !t)) {
        var o = e.id + "-" + t.id, s = new XM(e, t, a);
        return s.hostGraph = this, this._directed && (e.outEdges.push(s), t.inEdges.push(s)), e.edges.push(s), e !== t && t.edges.push(s), this.edges.push(s), i[o] = s, s;
      }
    }, r.prototype.getEdgeByIndex = function(e) {
      var t = this.edgeData.getRawIndex(e);
      return this.edges[t];
    }, r.prototype.getEdge = function(e, t) {
      e instanceof Gn && (e = e.id), t instanceof Gn && (t = t.id);
      var a = this._edgesMap;
      return this._directed ? a[e + "-" + t] : a[e + "-" + t] || a[t + "-" + e];
    }, r.prototype.eachNode = function(e, t) {
      for (var a = this.nodes, n = a.length, i = 0; i < n; i++)
        a[i].dataIndex >= 0 && e.call(t, a[i], i);
    }, r.prototype.eachEdge = function(e, t) {
      for (var a = this.edges, n = a.length, i = 0; i < n; i++)
        a[i].dataIndex >= 0 && a[i].node1.dataIndex >= 0 && a[i].node2.dataIndex >= 0 && e.call(t, a[i], i);
    }, r.prototype.breadthFirstTraverse = function(e, t, a, n) {
      if (t instanceof Gn || (t = this._nodesMap[Wi(t)]), !!t) {
        for (var i = a === "out" ? "outEdges" : a === "in" ? "inEdges" : "edges", o = 0; o < this.nodes.length; o++)
          this.nodes[o].__visited = !1;
        if (!e.call(n, t, null))
          for (var s = [t]; s.length; )
            for (var l = s.shift(), u = l[i], o = 0; o < u.length; o++) {
              var f = u[o], h = f.node1 === l ? f.node2 : f.node1;
              if (!h.__visited) {
                if (e.call(n, h, l))
                  return;
                s.push(h), h.__visited = !0;
              }
            }
      }
    }, r.prototype.update = function() {
      for (var e = this.data, t = this.edgeData, a = this.nodes, n = this.edges, i = 0, o = a.length; i < o; i++)
        a[i].dataIndex = -1;
      for (var i = 0, o = e.count(); i < o; i++)
        a[e.getRawIndex(i)].dataIndex = i;
      t.filterSelf(function(s) {
        var l = n[t.getRawIndex(s)];
        return l.node1.dataIndex >= 0 && l.node2.dataIndex >= 0;
      });
      for (var i = 0, o = n.length; i < o; i++)
        n[i].dataIndex = -1;
      for (var i = 0, o = t.count(); i < o; i++)
        n[t.getRawIndex(i)].dataIndex = i;
    }, r.prototype.clone = function() {
      for (var e = new r(this._directed), t = this.nodes, a = this.edges, n = 0; n < t.length; n++)
        e.addNode(t[n].id, t[n].dataIndex);
      for (var n = 0; n < a.length; n++) {
        var i = a[n];
        e.addEdge(i.node1.id, i.node2.id, i.dataIndex);
      }
      return e;
    }, r;
  }()
), Gn = (
  /** @class */
  function() {
    function r(e, t) {
      this.inEdges = [], this.outEdges = [], this.edges = [], this.dataIndex = -1, this.id = e == null ? "" : e, this.dataIndex = t == null ? -1 : t;
    }
    return r.prototype.degree = function() {
      return this.edges.length;
    }, r.prototype.inDegree = function() {
      return this.inEdges.length;
    }, r.prototype.outDegree = function() {
      return this.outEdges.length;
    }, r.prototype.getModel = function(e) {
      if (!(this.dataIndex < 0)) {
        var t = this.hostGraph, a = t.data.getItemModel(this.dataIndex);
        return a.getModel(e);
      }
    }, r.prototype.getAdjacentDataIndices = function() {
      for (var e = {
        edge: [],
        node: []
      }, t = 0; t < this.edges.length; t++) {
        var a = this.edges[t];
        a.dataIndex < 0 || (e.edge.push(a.dataIndex), e.node.push(a.node1.dataIndex, a.node2.dataIndex));
      }
      return e;
    }, r.prototype.getTrajectoryDataIndices = function() {
      for (var e = X(), t = X(), a = 0; a < this.edges.length; a++) {
        var n = this.edges[a];
        if (!(n.dataIndex < 0)) {
          e.set(n.dataIndex, !0);
          for (var i = [n.node1], o = [n.node2], s = 0; s < i.length; ) {
            var l = i[s];
            s++, t.set(l.dataIndex, !0);
            for (var u = 0; u < l.inEdges.length; u++)
              e.set(l.inEdges[u].dataIndex, !0), i.push(l.inEdges[u].node1);
          }
          for (s = 0; s < o.length; ) {
            var f = o[s];
            s++, t.set(f.dataIndex, !0);
            for (var u = 0; u < f.outEdges.length; u++)
              e.set(f.outEdges[u].dataIndex, !0), o.push(f.outEdges[u].node2);
          }
        }
      }
      return {
        edge: e.keys(),
        node: t.keys()
      };
    }, r;
  }()
), XM = (
  /** @class */
  function() {
    function r(e, t, a) {
      this.dataIndex = -1, this.node1 = e, this.node2 = t, this.dataIndex = a == null ? -1 : a;
    }
    return r.prototype.getModel = function(e) {
      if (!(this.dataIndex < 0)) {
        var t = this.hostGraph, a = t.edgeData.getItemModel(this.dataIndex);
        return a.getModel(e);
      }
    }, r.prototype.getAdjacentDataIndices = function() {
      return {
        edge: [this.dataIndex],
        node: [this.node1.dataIndex, this.node2.dataIndex]
      };
    }, r.prototype.getTrajectoryDataIndices = function() {
      var e = X(), t = X();
      e.set(this.dataIndex, !0);
      for (var a = [this.node1], n = [this.node2], i = 0; i < a.length; ) {
        var o = a[i];
        i++, t.set(o.dataIndex, !0);
        for (var s = 0; s < o.inEdges.length; s++)
          e.set(o.inEdges[s].dataIndex, !0), a.push(o.inEdges[s].node1);
      }
      for (i = 0; i < n.length; ) {
        var l = n[i];
        i++, t.set(l.dataIndex, !0);
        for (var s = 0; s < l.outEdges.length; s++)
          e.set(l.outEdges[s].dataIndex, !0), n.push(l.outEdges[s].node2);
      }
      return {
        edge: e.keys(),
        node: t.keys()
      };
    }, r;
  }()
);
function qM(r, e) {
  return {
    /**
     * @param Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.
     */
    getValue: function(t) {
      var a = this[r][e];
      return a.getStore().get(a.getDimensionIndex(t || "value"), this.dataIndex);
    },
    // TODO: TYPE stricter type.
    setVisual: function(t, a) {
      this.dataIndex >= 0 && this[r][e].setItemVisual(this.dataIndex, t, a);
    },
    getVisual: function(t) {
      return this[r][e].getItemVisual(this.dataIndex, t);
    },
    setLayout: function(t, a) {
      this.dataIndex >= 0 && this[r][e].setItemLayout(this.dataIndex, t, a);
    },
    getLayout: function() {
      return this[r][e].getItemLayout(this.dataIndex);
    },
    getGraphicEl: function() {
      return this[r][e].getItemGraphicEl(this.dataIndex);
    },
    getRawIndex: function() {
      return this[r][e].getRawIndex(this.dataIndex);
    }
  };
}
te(Gn, qM("hostGraph", "data"));
te(XM, qM("hostGraph", "edgeData"));
const _H = mH;
function KM(r, e, t, a, n) {
  for (var i = new _H(a), o = 0; o < r.length; o++)
    i.addNode(jt(
      // Id, name, dataIndex
      r[o].id,
      r[o].name,
      o
    ), o);
  for (var s = [], l = [], u = 0, o = 0; o < e.length; o++) {
    var f = e[o], h = f.source, c = f.target;
    i.addEdge(h, c, u) && (l.push(f), s.push(jt(re(f.id, null), h + " > " + c)), u++);
  }
  var v = t.get("coordinateSystem"), d;
  if (v === "cartesian2d" || v === "polar")
    d = wa(r, t);
  else {
    var p = Oo.get(v), g = p ? p.dimensions || [] : [];
    vt(g, "value") < 0 && g.concat(["value"]);
    var y = Tl(r, {
      coordDimensions: g,
      encodeDefine: t.getEncode()
    }).dimensions;
    d = new Me(y, t), d.initData(r);
  }
  var m = new Me(["value"], t);
  return m.initData(l, s), n && n(d, m), EM({
    mainData: d,
    struct: i,
    structAttr: "graph",
    datas: {
      node: d,
      edge: m
    },
    datasAttr: {
      node: "data",
      edge: "edgeData"
    }
  }), i.update(), i;
}
var SH = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t.hasSymbolVisual = !0, t;
    }
    return e.prototype.init = function(t) {
      r.prototype.init.apply(this, arguments);
      var a = this;
      function n() {
        return a._categoriesData;
      }
      this.legendVisualProvider = new El(n, n), this.fillDataTextStyle(t.edges || t.links), this._updateCategoriesData();
    }, e.prototype.mergeOption = function(t) {
      r.prototype.mergeOption.apply(this, arguments), this.fillDataTextStyle(t.edges || t.links), this._updateCategoriesData();
    }, e.prototype.mergeDefaultAndTheme = function(t) {
      r.prototype.mergeDefaultAndTheme.apply(this, arguments), hi(t, "edgeLabel", ["show"]);
    }, e.prototype.getInitialData = function(t, a) {
      var n = t.edges || t.links || [], i = t.data || t.nodes || [], o = this;
      if (i && n) {
        eH(this);
        var s = KM(i, n, this, !0, l);
        return M(s.edges, function(u) {
          rH(u.node1, u.node2, this, u.dataIndex);
        }, this), s.data;
      }
      function l(u, f) {
        u.wrapMethod("getItemModel", function(d) {
          var p = o._categoriesModels, g = d.getShallow("category"), y = p[g];
          return y && (y.parentModel = d.parentModel, d.parentModel = y), d;
        });
        var h = kt.prototype.getModel;
        function c(d, p) {
          var g = h.call(this, d, p);
          return g.resolveParentPath = v, g;
        }
        f.wrapMethod("getItemModel", function(d) {
          return d.resolveParentPath = v, d.getModel = c, d;
        });
        function v(d) {
          if (d && (d[0] === "label" || d[1] === "label")) {
            var p = d.slice();
            return d[0] === "label" ? p[0] = "edgeLabel" : d[1] === "label" && (p[1] = "edgeLabel"), p;
          }
          return d;
        }
      }
    }, e.prototype.getGraph = function() {
      return this.getData().graph;
    }, e.prototype.getEdgeData = function() {
      return this.getGraph().edgeData;
    }, e.prototype.getCategoriesData = function() {
      return this._categoriesData;
    }, e.prototype.formatTooltip = function(t, a, n) {
      if (n === "edge") {
        var i = this.getData(), o = this.getDataParams(t, n), s = i.graph.getEdgeByIndex(t), l = i.getName(s.node1.dataIndex), u = i.getName(s.node2.dataIndex), f = [];
        return l != null && f.push(l), u != null && f.push(u), se("nameValue", {
          name: f.join(" > "),
          value: o.value,
          noValue: o.value == null
        });
      }
      var h = mC({
        series: this,
        dataIndex: t,
        multipleSeries: a
      });
      return h;
    }, e.prototype._updateCategoriesData = function() {
      var t = G(this.option.categories || [], function(n) {
        return n.value != null ? n : V({
          value: 0
        }, n);
      }), a = new Me(["value"], this);
      a.initData(t), this._categoriesData = a, this._categoriesModels = a.mapArray(function(n) {
        return a.getItemModel(n);
      });
    }, e.prototype.setZoom = function(t) {
      this.option.zoom = t;
    }, e.prototype.setCenter = function(t) {
      this.option.center = t;
    }, e.prototype.isAnimationEnabled = function() {
      return r.prototype.isAnimationEnabled.call(this) && !(this.get("layout") === "force" && this.get(["force", "layoutAnimation"]));
    }, e.type = "series.graph", e.dependencies = ["grid", "polar", "geo", "singleAxis", "calendar"], e.defaultOption = {
      // zlevel: 0,
      z: 2,
      coordinateSystem: "view",
      // Default option for all coordinate systems
      // xAxisIndex: 0,
      // yAxisIndex: 0,
      // polarIndex: 0,
      // geoIndex: 0,
      legendHoverLink: !0,
      layout: null,
      // Configuration of circular layout
      circular: {
        rotateLabel: !1
      },
      // Configuration of force directed layout
      force: {
        initLayout: null,
        // Node repulsion. Can be an array to represent range.
        repulsion: [0, 50],
        gravity: 0.1,
        // Initial friction
        friction: 0.6,
        // Edge length. Can be an array to represent range.
        edgeLength: 30,
        layoutAnimation: !0
      },
      left: "center",
      top: "center",
      // right: null,
      // bottom: null,
      // width: '80%',
      // height: '80%',
      symbol: "circle",
      symbolSize: 10,
      edgeSymbol: ["none", "none"],
      edgeSymbolSize: 10,
      edgeLabel: {
        position: "middle",
        distance: 5
      },
      draggable: !1,
      roam: !1,
      // Default on center of graph
      center: null,
      zoom: 1,
      // Symbol size scale ratio in roam
      nodeScaleRatio: 0.6,
      // cursor: null,
      // categories: [],
      // data: []
      // Or
      // nodes: []
      //
      // links: []
      // Or
      // edges: []
      label: {
        show: !1,
        formatter: "{b}"
      },
      itemStyle: {},
      lineStyle: {
        color: "#aaa",
        width: 1,
        opacity: 0.5
      },
      emphasis: {
        scale: !0,
        label: {
          show: !0
        }
      },
      select: {
        itemStyle: {
          borderColor: "#212121"
        }
      }
    }, e;
  }(Gt)
);
const xH = SH;
var wH = {
  type: "graphRoam",
  event: "graphRoam",
  update: "none"
};
function bH(r) {
  r.registerChartView(yH), r.registerSeriesModel(xH), r.registerProcessor(K3), r.registerVisual(j3), r.registerVisual(J3), r.registerLayout(aH), r.registerLayout(r.PRIORITY.VISUAL.POST_CHART_LAYOUT, iH), r.registerLayout(sH), r.registerCoordinateSystem("graphView", {
    dimensions: Rl.dimensions,
    create: uH
  }), r.registerAction({
    type: "focusNodeAdjacency",
    event: "focusNodeAdjacency",
    update: "series:focusNodeAdjacency"
  }, Xt), r.registerAction({
    type: "unfocusNodeAdjacency",
    event: "unfocusNodeAdjacency",
    update: "series:unfocusNodeAdjacency"
  }, Xt), r.registerAction(wH, function(e, t, a) {
    t.eachComponent({
      mainType: "series",
      query: e
    }, function(n) {
      var i = n.coordinateSystem, o = Ay(i, e, void 0, a);
      n.setCenter && n.setCenter(o.center), n.setZoom && n.setZoom(o.zoom);
    });
  });
}
var TH = (
  /** @class */
  function() {
    function r() {
      this.angle = 0, this.width = 10, this.r = 10, this.x = 0, this.y = 0;
    }
    return r;
  }()
), DH = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t) {
      var a = r.call(this, t) || this;
      return a.type = "pointer", a;
    }
    return e.prototype.getDefaultShape = function() {
      return new TH();
    }, e.prototype.buildPath = function(t, a) {
      var n = Math.cos, i = Math.sin, o = a.r, s = a.width, l = a.angle, u = a.x - n(l) * s * (s >= o / 3 ? 1 : 2), f = a.y - i(l) * s * (s >= o / 3 ? 1 : 2);
      l = a.angle - Math.PI / 2, t.moveTo(u, f), t.lineTo(a.x + n(l) * s, a.y + i(l) * s), t.lineTo(a.x + n(a.angle) * o, a.y + i(a.angle) * o), t.lineTo(a.x - n(l) * s, a.y - i(l) * s), t.lineTo(u, f);
    }, e;
  }(mt)
);
const CH = DH;
function AH(r, e) {
  var t = r.get("center"), a = e.getWidth(), n = e.getHeight(), i = Math.min(a, n), o = H(t[0], e.getWidth()), s = H(t[1], e.getHeight()), l = H(r.get("radius"), i / 2);
  return {
    cx: o,
    cy: s,
    r: l
  };
}
function Cu(r, e) {
  var t = r == null ? "" : r + "";
  return e && ($(e) ? t = e.replace("{value}", t) : K(e) && (t = e(r))), t;
}
var MH = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, a, n) {
      this.group.removeAll();
      var i = t.get(["axisLine", "lineStyle", "color"]), o = AH(t, n);
      this._renderMain(t, a, n, i, o), this._data = t.getData();
    }, e.prototype.dispose = function() {
    }, e.prototype._renderMain = function(t, a, n, i, o) {
      var s = this.group, l = t.get("clockwise"), u = -t.get("startAngle") / 180 * Math.PI, f = -t.get("endAngle") / 180 * Math.PI, h = t.getModel("axisLine"), c = h.get("roundCap"), v = c ? zf : ze, d = h.get("show"), p = h.getModel("lineStyle"), g = p.get("width"), y = [u, f];
      IT(y, !l), u = y[0], f = y[1];
      for (var m = f - u, _ = u, S = [], w = 0; d && w < i.length; w++) {
        var x = Math.min(Math.max(i[w][0], 0), 1);
        f = u + m * x;
        var b = new v({
          shape: {
            startAngle: _,
            endAngle: f,
            cx: o.cx,
            cy: o.cy,
            clockwise: l,
            r0: o.r - g,
            r: o.r
          },
          silent: !0
        });
        b.setStyle({
          fill: i[w][1]
        }), b.setStyle(p.getLineStyle(
          // Because we use sector to simulate arc
          // so the properties for stroking are useless
          ["color", "width"]
        )), S.push(b), _ = f;
      }
      S.reverse(), M(S, function(C) {
        return s.add(C);
      });
      var T = function(C) {
        if (C <= 0)
          return i[0][1];
        var D;
        for (D = 0; D < i.length; D++)
          if (i[D][0] >= C && (D === 0 ? 0 : i[D - 1][0]) < C)
            return i[D][1];
        return i[D - 1][1];
      };
      this._renderTicks(t, a, n, T, o, u, f, l, g), this._renderTitleAndDetail(t, a, n, T, o), this._renderAnchor(t, o), this._renderPointer(t, a, n, T, o, u, f, l, g);
    }, e.prototype._renderTicks = function(t, a, n, i, o, s, l, u, f) {
      for (var h = this.group, c = o.cx, v = o.cy, d = o.r, p = +t.get("min"), g = +t.get("max"), y = t.getModel("splitLine"), m = t.getModel("axisTick"), _ = t.getModel("axisLabel"), S = t.get("splitNumber"), w = m.get("splitNumber"), x = H(y.get("length"), d), b = H(m.get("length"), d), T = s, C = (l - s) / S, D = C / w, A = y.getModel("lineStyle").getLineStyle(), I = m.getModel("lineStyle").getLineStyle(), L = y.get("distance"), E, P, R = 0; R <= S; R++) {
        if (E = Math.cos(T), P = Math.sin(T), y.get("show")) {
          var k = L ? L + f : f, O = new ue({
            shape: {
              x1: E * (d - k) + c,
              y1: P * (d - k) + v,
              x2: E * (d - x - k) + c,
              y2: P * (d - x - k) + v
            },
            style: A,
            silent: !0
          });
          A.stroke === "auto" && O.setStyle({
            stroke: i(R / S)
          }), h.add(O);
        }
        if (_.get("show")) {
          var k = _.get("distance") + L, B = Cu(Yt(R / S * (g - p) + p), _.get("formatter")), F = i(R / S), W = E * (d - x - k) + c, Z = P * (d - x - k) + v, Q = _.get("rotate"), tt = 0;
          Q === "radial" ? (tt = -T + 2 * Math.PI, tt > Math.PI / 2 && (tt += Math.PI)) : Q === "tangential" ? tt = -T - Math.PI / 2 : At(Q) && (tt = Q * Math.PI / 180), tt === 0 ? h.add(new Ct({
            style: Ot(_, {
              text: B,
              x: W,
              y: Z,
              verticalAlign: P < -0.8 ? "top" : P > 0.8 ? "bottom" : "middle",
              align: E < -0.4 ? "left" : E > 0.4 ? "right" : "center"
            }, {
              inheritColor: F
            }),
            silent: !0
          })) : h.add(new Ct({
            style: Ot(_, {
              text: B,
              x: W,
              y: Z,
              verticalAlign: "middle",
              align: "center"
            }, {
              inheritColor: F
            }),
            silent: !0,
            originX: W,
            originY: Z,
            rotation: tt
          }));
        }
        if (m.get("show") && R !== S) {
          var k = m.get("distance");
          k = k ? k + f : f;
          for (var dt = 0; dt <= w; dt++) {
            E = Math.cos(T), P = Math.sin(T);
            var St = new ue({
              shape: {
                x1: E * (d - k) + c,
                y1: P * (d - k) + v,
                x2: E * (d - b - k) + c,
                y2: P * (d - b - k) + v
              },
              silent: !0,
              style: I
            });
            I.stroke === "auto" && St.setStyle({
              stroke: i((R + dt / w) / S)
            }), h.add(St), T += D;
          }
          T -= D;
        } else
          T += C;
      }
    }, e.prototype._renderPointer = function(t, a, n, i, o, s, l, u, f) {
      var h = this.group, c = this._data, v = this._progressEls, d = [], p = t.get(["pointer", "show"]), g = t.getModel("progress"), y = g.get("show"), m = t.getData(), _ = m.mapDimension("value"), S = +t.get("min"), w = +t.get("max"), x = [S, w], b = [s, l];
      function T(D, A) {
        var I = m.getItemModel(D), L = I.getModel("pointer"), E = H(L.get("width"), o.r), P = H(L.get("length"), o.r), R = t.get(["pointer", "icon"]), k = L.get("offsetCenter"), O = H(k[0], o.r), B = H(k[1], o.r), F = L.get("keepAspect"), W;
        return R ? W = Qt(R, O - E / 2, B - P, E, P, null, F) : W = new CH({
          shape: {
            angle: -Math.PI / 2,
            width: E,
            r: P,
            x: O,
            y: B
          }
        }), W.rotation = -(A + Math.PI / 2), W.x = o.cx, W.y = o.cy, W;
      }
      function C(D, A) {
        var I = g.get("roundCap"), L = I ? zf : ze, E = g.get("overlap"), P = E ? g.get("width") : f / m.count(), R = E ? o.r - P : o.r - (D + 1) * P, k = E ? o.r : o.r - D * P, O = new L({
          shape: {
            startAngle: s,
            endAngle: A,
            cx: o.cx,
            cy: o.cy,
            clockwise: u,
            r0: R,
            r: k
          }
        });
        return E && (O.z2 = w - m.get(_, D) % w), O;
      }
      (y || p) && (m.diff(c).add(function(D) {
        var A = m.get(_, D);
        if (p) {
          var I = T(D, s);
          Bt(I, {
            rotation: -((isNaN(+A) ? b[0] : Lt(A, x, b, !0)) + Math.PI / 2)
          }, t), h.add(I), m.setItemGraphicEl(D, I);
        }
        if (y) {
          var L = C(D, s), E = g.get("clip");
          Bt(L, {
            shape: {
              endAngle: Lt(A, x, b, E)
            }
          }, t), h.add(L), Kd(t.seriesIndex, m.dataType, D, L), d[D] = L;
        }
      }).update(function(D, A) {
        var I = m.get(_, D);
        if (p) {
          var L = c.getItemGraphicEl(A), E = L ? L.rotation : s, P = T(D, E);
          P.rotation = E, Mt(P, {
            rotation: -((isNaN(+I) ? b[0] : Lt(I, x, b, !0)) + Math.PI / 2)
          }, t), h.add(P), m.setItemGraphicEl(D, P);
        }
        if (y) {
          var R = v[A], k = R ? R.shape.endAngle : s, O = C(D, k), B = g.get("clip");
          Mt(O, {
            shape: {
              endAngle: Lt(I, x, b, B)
            }
          }, t), h.add(O), Kd(t.seriesIndex, m.dataType, D, O), d[D] = O;
        }
      }).execute(), m.each(function(D) {
        var A = m.getItemModel(D), I = A.getModel("emphasis"), L = I.get("focus"), E = I.get("blurScope"), P = I.get("disabled");
        if (p) {
          var R = m.getItemGraphicEl(D), k = m.getItemVisual(D, "style"), O = k.fill;
          if (R instanceof ge) {
            var B = R.style;
            R.useStyle(V({
              image: B.image,
              x: B.x,
              y: B.y,
              width: B.width,
              height: B.height
            }, k));
          } else
            R.useStyle(k), R.type !== "pointer" && R.setColor(O);
          R.setStyle(A.getModel(["pointer", "itemStyle"]).getItemStyle()), R.style.fill === "auto" && R.setStyle("fill", i(Lt(m.get(_, D), x, [0, 1], !0))), R.z2EmphasisLift = 0, de(R, A), Wt(R, L, E, P);
        }
        if (y) {
          var F = d[D];
          F.useStyle(m.getItemVisual(D, "style")), F.setStyle(A.getModel(["progress", "itemStyle"]).getItemStyle()), F.z2EmphasisLift = 0, de(F, A), Wt(F, L, E, P);
        }
      }), this._progressEls = d);
    }, e.prototype._renderAnchor = function(t, a) {
      var n = t.getModel("anchor"), i = n.get("show");
      if (i) {
        var o = n.get("size"), s = n.get("icon"), l = n.get("offsetCenter"), u = n.get("keepAspect"), f = Qt(s, a.cx - o / 2 + H(l[0], a.r), a.cy - o / 2 + H(l[1], a.r), o, o, null, u);
        f.z2 = n.get("showAbove") ? 1 : 0, f.setStyle(n.getModel("itemStyle").getItemStyle()), this.group.add(f);
      }
    }, e.prototype._renderTitleAndDetail = function(t, a, n, i, o) {
      var s = this, l = t.getData(), u = l.mapDimension("value"), f = +t.get("min"), h = +t.get("max"), c = new nt(), v = [], d = [], p = t.isAnimationEnabled(), g = t.get(["pointer", "showAbove"]);
      l.diff(this._data).add(function(y) {
        v[y] = new Ct({
          silent: !0
        }), d[y] = new Ct({
          silent: !0
        });
      }).update(function(y, m) {
        v[y] = s._titleEls[m], d[y] = s._detailEls[m];
      }).execute(), l.each(function(y) {
        var m = l.getItemModel(y), _ = l.get(u, y), S = new nt(), w = i(Lt(_, [f, h], [0, 1], !0)), x = m.getModel("title");
        if (x.get("show")) {
          var b = x.get("offsetCenter"), T = o.cx + H(b[0], o.r), C = o.cy + H(b[1], o.r), D = v[y];
          D.attr({
            z2: g ? 0 : 2,
            style: Ot(x, {
              x: T,
              y: C,
              text: l.getName(y),
              align: "center",
              verticalAlign: "middle"
            }, {
              inheritColor: w
            })
          }), S.add(D);
        }
        var A = m.getModel("detail");
        if (A.get("show")) {
          var I = A.get("offsetCenter"), L = o.cx + H(I[0], o.r), E = o.cy + H(I[1], o.r), P = H(A.get("width"), o.r), R = H(A.get("height"), o.r), k = t.get(["progress", "show"]) ? l.getItemVisual(y, "style").fill : w, D = d[y], O = A.get("formatter");
          D.attr({
            z2: g ? 0 : 2,
            style: Ot(A, {
              x: L,
              y: E,
              text: Cu(_, O),
              width: isNaN(P) ? null : P,
              height: isNaN(R) ? null : R,
              align: "center",
              verticalAlign: "middle"
            }, {
              inheritColor: k
            })
          }), xD(D, {
            normal: A
          }, _, function(F) {
            return Cu(F, O);
          }), p && wD(D, y, l, t, {
            getFormattedLabel: function(F, W, Z, Q, tt, dt) {
              return Cu(dt ? dt.interpolatedValue : _, O);
            }
          }), S.add(D);
        }
        c.add(S);
      }), this.group.add(c), this._titleEls = v, this._detailEls = d;
    }, e.type = "gauge", e;
  }(Vt)
);
const IH = MH;
var LH = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t.visualStyleAccessPath = "itemStyle", t;
    }
    return e.prototype.getInitialData = function(t, a) {
      return zo(this, ["value"]);
    }, e.type = "series.gauge", e.defaultOption = {
      // zlevel: 0,
      z: 2,
      colorBy: "data",
      // 默认全局居中
      center: ["50%", "50%"],
      legendHoverLink: !0,
      radius: "75%",
      startAngle: 225,
      endAngle: -45,
      clockwise: !0,
      // 最小值
      min: 0,
      // 最大值
      max: 100,
      // 分割段数，默认为10
      splitNumber: 10,
      // 坐标轴线
      axisLine: {
        // 默认显示，属性show控制显示与否
        show: !0,
        roundCap: !1,
        lineStyle: {
          color: [[1, "#E6EBF8"]],
          width: 10
        }
      },
      // 坐标轴线
      progress: {
        // 默认显示，属性show控制显示与否
        show: !1,
        overlap: !0,
        width: 10,
        roundCap: !1,
        clip: !0
      },
      // 分隔线
      splitLine: {
        // 默认显示，属性show控制显示与否
        show: !0,
        // 属性length控制线长
        length: 10,
        distance: 10,
        // 属性lineStyle（详见lineStyle）控制线条样式
        lineStyle: {
          color: "#63677A",
          width: 3,
          type: "solid"
        }
      },
      // 坐标轴小标记
      axisTick: {
        // 属性show控制显示与否，默认不显示
        show: !0,
        // 每份split细分多少段
        splitNumber: 5,
        // 属性length控制线长
        length: 6,
        distance: 10,
        // 属性lineStyle控制线条样式
        lineStyle: {
          color: "#63677A",
          width: 1,
          type: "solid"
        }
      },
      axisLabel: {
        show: !0,
        distance: 15,
        // formatter: null,
        color: "#464646",
        fontSize: 12,
        rotate: 0
      },
      pointer: {
        icon: null,
        offsetCenter: [0, 0],
        show: !0,
        showAbove: !0,
        length: "60%",
        width: 6,
        keepAspect: !1
      },
      anchor: {
        show: !1,
        showAbove: !1,
        size: 6,
        icon: "circle",
        offsetCenter: [0, 0],
        keepAspect: !1,
        itemStyle: {
          color: "#fff",
          borderWidth: 0,
          borderColor: "#5470c6"
        }
      },
      title: {
        show: !0,
        // x, y，单位px
        offsetCenter: [0, "20%"],
        // 其余属性默认使用全局文本样式，详见TEXTSTYLE
        color: "#464646",
        fontSize: 16,
        valueAnimation: !1
      },
      detail: {
        show: !0,
        backgroundColor: "rgba(0,0,0,0)",
        borderWidth: 0,
        borderColor: "#ccc",
        width: 100,
        height: null,
        padding: [5, 10],
        // x, y，单位px
        offsetCenter: [0, "40%"],
        // formatter: null,
        // 其余属性默认使用全局文本样式，详见TEXTSTYLE
        color: "#464646",
        fontSize: 30,
        fontWeight: "bold",
        lineHeight: 30,
        valueAnimation: !1
      }
    }, e;
  }(Gt)
);
const EH = LH;
function PH(r) {
  r.registerChartView(IH), r.registerSeriesModel(EH);
}
var RH = ["itemStyle", "opacity"], NH = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t, a) {
      var n = r.call(this) || this, i = n, o = new Fe(), s = new Ct();
      return i.setTextContent(s), n.setTextGuideLine(o), n.updateData(t, a, !0), n;
    }
    return e.prototype.updateData = function(t, a, n) {
      var i = this, o = t.hostModel, s = t.getItemModel(a), l = t.getItemLayout(a), u = s.getModel("emphasis"), f = s.get(RH);
      f = f == null ? 1 : f, n || Mr(i), i.useStyle(t.getItemVisual(a, "style")), i.style.lineJoin = "round", n ? (i.setShape({
        points: l.points
      }), i.style.opacity = 0, Bt(i, {
        style: {
          opacity: f
        }
      }, o, a)) : Mt(i, {
        style: {
          opacity: f
        },
        shape: {
          points: l.points
        }
      }, o, a), de(i, s), this._updateLabel(t, a), Wt(this, u.get("focus"), u.get("blurScope"), u.get("disabled"));
    }, e.prototype._updateLabel = function(t, a) {
      var n = this, i = this.getTextGuideLine(), o = n.getTextContent(), s = t.hostModel, l = t.getItemModel(a), u = t.getItemLayout(a), f = u.label, h = t.getItemVisual(a, "style"), c = h.fill;
      pe(
        // position will not be used in setLabelStyle
        o,
        oe(l),
        {
          labelFetcher: t.hostModel,
          labelDataIndex: a,
          defaultOpacity: h.opacity,
          defaultText: t.getName(a)
        },
        {
          normal: {
            align: f.textAlign,
            verticalAlign: f.verticalAlign
          }
        }
      ), n.setTextConfig({
        local: !0,
        inside: !!f.inside,
        insideStroke: c,
        // insideFill: 'auto',
        outsideFill: c
      });
      var v = f.linePoints;
      i.setShape({
        points: v
      }), n.textGuideLineConfig = {
        anchor: v ? new ut(v[0][0], v[0][1]) : null
      }, Mt(o, {
        style: {
          x: f.x,
          y: f.y
        }
      }, s, a), o.attr({
        rotation: f.rotation,
        originX: f.x,
        originY: f.y,
        z2: 10
      }), py(n, gy(l), {
        // Default use item visual color
        stroke: c
      });
    }, e;
  }(Ge)
), OH = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t.ignoreLabelLineUpdate = !0, t;
    }
    return e.prototype.render = function(t, a, n) {
      var i = t.getData(), o = this._data, s = this.group;
      i.diff(o).add(function(l) {
        var u = new NH(i, l);
        i.setItemGraphicEl(l, u), s.add(u);
      }).update(function(l, u) {
        var f = o.getItemGraphicEl(u);
        f.updateData(i, l), s.add(f), i.setItemGraphicEl(l, f);
      }).remove(function(l) {
        var u = o.getItemGraphicEl(l);
        qs(u, t, l);
      }).execute(), this._data = i;
    }, e.prototype.remove = function() {
      this.group.removeAll(), this._data = null;
    }, e.prototype.dispose = function() {
    }, e.type = "funnel", e;
  }(Vt)
);
const kH = OH;
var VH = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.init = function(t) {
      r.prototype.init.apply(this, arguments), this.legendVisualProvider = new El(Y(this.getData, this), Y(this.getRawData, this)), this._defaultLabelLine(t);
    }, e.prototype.getInitialData = function(t, a) {
      return zo(this, {
        coordDimensions: ["value"],
        encodeDefaulter: ot(Ug, this)
      });
    }, e.prototype._defaultLabelLine = function(t) {
      hi(t, "labelLine", ["show"]);
      var a = t.labelLine, n = t.emphasis.labelLine;
      a.show = a.show && t.label.show, n.show = n.show && t.emphasis.label.show;
    }, e.prototype.getDataParams = function(t) {
      var a = this.getData(), n = r.prototype.getDataParams.call(this, t), i = a.mapDimension("value"), o = a.getSum(i);
      return n.percent = o ? +(a.get(i, t) / o * 100).toFixed(2) : 0, n.$vars.push("percent"), n;
    }, e.type = "series.funnel", e.defaultOption = {
      // zlevel: 0,                  // 一级层叠
      z: 2,
      legendHoverLink: !0,
      colorBy: "data",
      left: 80,
      top: 60,
      right: 80,
      bottom: 60,
      // width: {totalWidth} - left - right,
      // height: {totalHeight} - top - bottom,
      // 默认取数据最小最大值
      // min: 0,
      // max: 100,
      minSize: "0%",
      maxSize: "100%",
      sort: "descending",
      orient: "vertical",
      gap: 0,
      funnelAlign: "center",
      label: {
        show: !0,
        position: "outer"
        // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调
      },
      labelLine: {
        show: !0,
        length: 20,
        lineStyle: {
          // color: 各异,
          width: 1
        }
      },
      itemStyle: {
        // color: 各异,
        borderColor: "#fff",
        borderWidth: 1
      },
      emphasis: {
        label: {
          show: !0
        }
      },
      select: {
        itemStyle: {
          borderColor: "#212121"
        }
      }
    }, e;
  }(Gt)
);
const BH = VH;
function zH(r, e) {
  return ae(r.getBoxLayoutParams(), {
    width: e.getWidth(),
    height: e.getHeight()
  });
}
function GH(r, e) {
  for (var t = r.mapDimension("value"), a = r.mapArray(t, function(l) {
    return l;
  }), n = [], i = e === "ascending", o = 0, s = r.count(); o < s; o++)
    n[o] = o;
  return K(e) ? n.sort(e) : e !== "none" && n.sort(function(l, u) {
    return i ? a[l] - a[u] : a[u] - a[l];
  }), n;
}
function FH(r) {
  var e = r.hostModel, t = e.get("orient");
  r.each(function(a) {
    var n = r.getItemModel(a), i = n.getModel("label"), o = i.get("position"), s = n.getModel("labelLine"), l = r.getItemLayout(a), u = l.points, f = o === "inner" || o === "inside" || o === "center" || o === "insideLeft" || o === "insideRight", h, c, v, d;
    if (f)
      o === "insideLeft" ? (c = (u[0][0] + u[3][0]) / 2 + 5, v = (u[0][1] + u[3][1]) / 2, h = "left") : o === "insideRight" ? (c = (u[1][0] + u[2][0]) / 2 - 5, v = (u[1][1] + u[2][1]) / 2, h = "right") : (c = (u[0][0] + u[1][0] + u[2][0] + u[3][0]) / 4, v = (u[0][1] + u[1][1] + u[2][1] + u[3][1]) / 4, h = "center"), d = [[c, v], [c, v]];
    else {
      var p = void 0, g = void 0, y = void 0, m = void 0, _ = s.get("length");
      ({}).NODE_ENV !== "production" && (t === "vertical" && ["top", "bottom"].indexOf(o) > -1 && (o = "left", console.warn("Position error: Funnel chart on vertical orient dose not support top and bottom.")), t === "horizontal" && ["left", "right"].indexOf(o) > -1 && (o = "bottom", console.warn("Position error: Funnel chart on horizontal orient dose not support left and right."))), o === "left" ? (p = (u[3][0] + u[0][0]) / 2, g = (u[3][1] + u[0][1]) / 2, y = p - _, c = y - 5, h = "right") : o === "right" ? (p = (u[1][0] + u[2][0]) / 2, g = (u[1][1] + u[2][1]) / 2, y = p + _, c = y + 5, h = "left") : o === "top" ? (p = (u[3][0] + u[0][0]) / 2, g = (u[3][1] + u[0][1]) / 2, m = g - _, v = m - 5, h = "center") : o === "bottom" ? (p = (u[1][0] + u[2][0]) / 2, g = (u[1][1] + u[2][1]) / 2, m = g + _, v = m + 5, h = "center") : o === "rightTop" ? (p = t === "horizontal" ? u[3][0] : u[1][0], g = t === "horizontal" ? u[3][1] : u[1][1], t === "horizontal" ? (m = g - _, v = m - 5, h = "center") : (y = p + _, c = y + 5, h = "top")) : o === "rightBottom" ? (p = u[2][0], g = u[2][1], t === "horizontal" ? (m = g + _, v = m + 5, h = "center") : (y = p + _, c = y + 5, h = "bottom")) : o === "leftTop" ? (p = u[0][0], g = t === "horizontal" ? u[0][1] : u[1][1], t === "horizontal" ? (m = g - _, v = m - 5, h = "center") : (y = p - _, c = y - 5, h = "right")) : o === "leftBottom" ? (p = t === "horizontal" ? u[1][0] : u[3][0], g = t === "horizontal" ? u[1][1] : u[2][1], t === "horizontal" ? (m = g + _, v = m + 5, h = "center") : (y = p - _, c = y - 5, h = "right")) : (p = (u[1][0] + u[2][0]) / 2, g = (u[1][1] + u[2][1]) / 2, t === "horizontal" ? (m = g + _, v = m + 5, h = "center") : (y = p + _, c = y + 5, h = "left")), t === "horizontal" ? (y = p, c = y) : (m = g, v = m), d = [[p, g], [y, m]];
    }
    l.label = {
      linePoints: d,
      x: c,
      y: v,
      verticalAlign: "middle",
      textAlign: h,
      inside: f
    };
  });
}
function HH(r, e) {
  r.eachSeriesByType("funnel", function(t) {
    var a = t.getData(), n = a.mapDimension("value"), i = t.get("sort"), o = zH(t, e), s = t.get("orient"), l = o.width, u = o.height, f = GH(a, i), h = o.x, c = o.y, v = s === "horizontal" ? [H(t.get("minSize"), u), H(t.get("maxSize"), u)] : [H(t.get("minSize"), l), H(t.get("maxSize"), l)], d = a.getDataExtent(n), p = t.get("min"), g = t.get("max");
    p == null && (p = Math.min(d[0], 0)), g == null && (g = d[1]);
    var y = t.get("funnelAlign"), m = t.get("gap"), _ = s === "horizontal" ? l : u, S = (_ - m * (a.count() - 1)) / a.count(), w = function(E, P) {
      if (s === "horizontal") {
        var R = a.get(n, E) || 0, k = Lt(R, [p, g], v, !0), O = void 0;
        switch (y) {
          case "top":
            O = c;
            break;
          case "center":
            O = c + (u - k) / 2;
            break;
          case "bottom":
            O = c + (u - k);
            break;
        }
        return [[P, O], [P, O + k]];
      }
      var B = a.get(n, E) || 0, F = Lt(B, [p, g], v, !0), W;
      switch (y) {
        case "left":
          W = h;
          break;
        case "center":
          W = h + (l - F) / 2;
          break;
        case "right":
          W = h + l - F;
          break;
      }
      return [[W, P], [W + F, P]];
    };
    i === "ascending" && (S = -S, m = -m, s === "horizontal" ? h += l : c += u, f = f.reverse());
    for (var x = 0; x < f.length; x++) {
      var b = f[x], T = f[x + 1], C = a.getItemModel(b);
      if (s === "horizontal") {
        var D = C.get(["itemStyle", "width"]);
        D == null ? D = S : (D = H(D, l), i === "ascending" && (D = -D));
        var A = w(b, h), I = w(T, h + D);
        h += D + m, a.setItemLayout(b, {
          points: A.concat(I.slice().reverse())
        });
      } else {
        var L = C.get(["itemStyle", "height"]);
        L == null ? L = S : (L = H(L, u), i === "ascending" && (L = -L));
        var A = w(b, c), I = w(T, c + L);
        c += L + m, a.setItemLayout(b, {
          points: A.concat(I.slice().reverse())
        });
      }
    }
    FH(a);
  });
}
function WH(r) {
  r.registerChartView(kH), r.registerSeriesModel(BH), r.registerLayout(HH), r.registerProcessor(Ll("funnel"));
}
var $H = 0.3, UH = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t._dataGroup = new nt(), t._initialized = !1, t;
    }
    return e.prototype.init = function() {
      this.group.add(this._dataGroup);
    }, e.prototype.render = function(t, a, n, i) {
      this._progressiveEls = null;
      var o = this._dataGroup, s = t.getData(), l = this._data, u = t.coordinateSystem, f = u.dimensions, h = JS(t);
      s.diff(l).add(c).update(v).remove(d).execute();
      function c(g) {
        var y = jS(s, o, g, f, u);
        Fv(y, s, g, h);
      }
      function v(g, y) {
        var m = l.getItemGraphicEl(y), _ = jM(s, g, f, u);
        s.setItemGraphicEl(g, m), Mt(m, {
          shape: {
            points: _
          }
        }, t, g), Mr(m), Fv(m, s, g, h);
      }
      function d(g) {
        var y = l.getItemGraphicEl(g);
        o.remove(y);
      }
      if (!this._initialized) {
        this._initialized = !0;
        var p = YH(u, t, function() {
          setTimeout(function() {
            o.removeClipPath();
          });
        });
        o.setClipPath(p);
      }
      this._data = s;
    }, e.prototype.incrementalPrepareRender = function(t, a, n) {
      this._initialized = !0, this._data = null, this._dataGroup.removeAll();
    }, e.prototype.incrementalRender = function(t, a, n) {
      for (var i = a.getData(), o = a.coordinateSystem, s = o.dimensions, l = JS(a), u = this._progressiveEls = [], f = t.start; f < t.end; f++) {
        var h = jS(i, this._dataGroup, f, s, o);
        h.incremental = !0, Fv(h, i, f, l), u.push(h);
      }
    }, e.prototype.remove = function() {
      this._dataGroup && this._dataGroup.removeAll(), this._data = null;
    }, e.type = "parallel", e;
  }(Vt)
);
function YH(r, e, t) {
  var a = r.model, n = r.getRect(), i = new Tt({
    shape: {
      x: n.x,
      y: n.y,
      width: n.width,
      height: n.height
    }
  }), o = a.get("layout") === "horizontal" ? "width" : "height";
  return i.setShape(o, 0), Bt(i, {
    shape: {
      width: n.width,
      height: n.height
    }
  }, e, t), i;
}
function jM(r, e, t, a) {
  for (var n = [], i = 0; i < t.length; i++) {
    var o = t[i], s = r.get(r.mapDimension(o), e);
    ZH(s, a.getAxis(o).type) || n.push(a.dataToPoint(s, o));
  }
  return n;
}
function jS(r, e, t, a, n) {
  var i = jM(r, t, a, n), o = new Fe({
    shape: {
      points: i
    },
    // silent: true,
    z2: 10
  });
  return e.add(o), r.setItemGraphicEl(t, o), o;
}
function JS(r) {
  var e = r.get("smooth", !0);
  return e === !0 && (e = $H), e = pa(e), fi(e) && (e = 0), {
    smooth: e
  };
}
function Fv(r, e, t, a) {
  r.useStyle(e.getItemVisual(t, "style")), r.style.fill = null, r.setShape("smooth", a.smooth);
  var n = e.getItemModel(t), i = n.getModel("emphasis");
  de(r, n, "lineStyle"), Wt(r, i.get("focus"), i.get("blurScope"), i.get("disabled"));
}
function ZH(r, e) {
  return e === "category" ? r == null : r == null || isNaN(r);
}
const XH = UH;
var qH = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t.visualStyleAccessPath = "lineStyle", t.visualDrawType = "stroke", t;
    }
    return e.prototype.getInitialData = function(t, a) {
      return wa(null, this, {
        useEncodeDefaulter: Y(KH, null, this)
      });
    }, e.prototype.getRawIndicesByActiveState = function(t) {
      var a = this.coordinateSystem, n = this.getData(), i = [];
      return a.eachActiveState(n, function(o, s) {
        t === o && i.push(n.getRawIndex(s));
      }), i;
    }, e.type = "series.parallel", e.dependencies = ["parallel"], e.defaultOption = {
      // zlevel: 0,
      z: 2,
      coordinateSystem: "parallel",
      parallelIndex: 0,
      label: {
        show: !1
      },
      inactiveOpacity: 0.05,
      activeOpacity: 1,
      lineStyle: {
        width: 1,
        opacity: 0.45,
        type: "solid"
      },
      emphasis: {
        label: {
          show: !1
        }
      },
      progressive: 500,
      smooth: !1,
      animationEasing: "linear"
    }, e;
  }(Gt)
);
function KH(r) {
  var e = r.ecModel.getComponent("parallel", r.get("parallelIndex"));
  if (e) {
    var t = {};
    return M(e.dimensions, function(a) {
      var n = jH(a);
      t[a] = n;
    }), t;
  }
}
function jH(r) {
  return +r.replace("dim", "");
}
const JH = qH;
var QH = ["lineStyle", "opacity"], t4 = {
  seriesType: "parallel",
  reset: function(r, e) {
    var t = r.coordinateSystem, a = {
      normal: r.get(["lineStyle", "opacity"]),
      active: r.get("activeOpacity"),
      inactive: r.get("inactiveOpacity")
    };
    return {
      progress: function(n, i) {
        t.eachActiveState(i, function(o, s) {
          var l = a[o];
          if (o === "normal" && i.hasItemOption) {
            var u = i.getItemModel(s).get(QH, !0);
            u != null && (l = u);
          }
          var f = i.ensureUniqueItemVisual(s, "style");
          f.opacity = l;
        }, n.start, n.end);
      }
    };
  }
};
const e4 = t4;
function r4(r) {
  a4(r), n4(r);
}
function a4(r) {
  if (!r.parallel) {
    var e = !1;
    M(r.series, function(t) {
      t && t.type === "parallel" && (e = !0);
    }), e && (r.parallel = [{}]);
  }
}
function n4(r) {
  var e = Pt(r.parallelAxis);
  M(e, function(t) {
    if (j(t)) {
      var a = t.parallelIndex || 0, n = Pt(r.parallel)[a];
      n && n.parallelAxisDefault && ht(t, n.parallelAxisDefault, !1);
    }
  });
}
var i4 = 5, o4 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, a, n) {
      this._model = t, this._api = n, this._handlers || (this._handlers = {}, M(s4, function(i, o) {
        n.getZr().on(o, this._handlers[o] = Y(i, this));
      }, this)), Vo(this, "_throttledDispatchExpand", t.get("axisExpandRate"), "fixRate");
    }, e.prototype.dispose = function(t, a) {
      tl(this, "_throttledDispatchExpand"), M(this._handlers, function(n, i) {
        a.getZr().off(i, n);
      }), this._handlers = null;
    }, e.prototype._throttledDispatchExpand = function(t) {
      this._dispatchExpand(t);
    }, e.prototype._dispatchExpand = function(t) {
      t && this._api.dispatchAction(V({
        type: "parallelAxisExpand"
      }, t));
    }, e.type = "parallel", e;
  }($t)
), s4 = {
  mousedown: function(r) {
    Hv(this, "click") && (this._mouseDownPoint = [r.offsetX, r.offsetY]);
  },
  mouseup: function(r) {
    var e = this._mouseDownPoint;
    if (Hv(this, "click") && e) {
      var t = [r.offsetX, r.offsetY], a = Math.pow(e[0] - t[0], 2) + Math.pow(e[1] - t[1], 2);
      if (a > i4)
        return;
      var n = this._model.coordinateSystem.getSlidedAxisExpandWindow([r.offsetX, r.offsetY]);
      n.behavior !== "none" && this._dispatchExpand({
        axisExpandWindow: n.axisExpandWindow
      });
    }
    this._mouseDownPoint = null;
  },
  mousemove: function(r) {
    if (!(this._mouseDownPoint || !Hv(this, "mousemove"))) {
      var e = this._model, t = e.coordinateSystem.getSlidedAxisExpandWindow([r.offsetX, r.offsetY]), a = t.behavior;
      a === "jump" && this._throttledDispatchExpand.debounceNextCall(e.get("axisExpandDebounce")), this._throttledDispatchExpand(a === "none" ? null : {
        axisExpandWindow: t.axisExpandWindow,
        // Jumping uses animation, and sliding suppresses animation.
        animation: a === "jump" ? null : {
          duration: 0
          // Disable animation.
        }
      });
    }
  }
};
function Hv(r, e) {
  var t = r._model;
  return t.get("axisExpandable") && t.get("axisExpandTriggerOn") === e;
}
const l4 = o4;
var u4 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.init = function() {
      r.prototype.init.apply(this, arguments), this.mergeOption({});
    }, e.prototype.mergeOption = function(t) {
      var a = this.option;
      t && ht(a, t, !0), this._initDimensions();
    }, e.prototype.contains = function(t, a) {
      var n = t.get("parallelIndex");
      return n != null && a.getComponent("parallel", n) === this;
    }, e.prototype.setAxisExpand = function(t) {
      M(["axisExpandable", "axisExpandCenter", "axisExpandCount", "axisExpandWidth", "axisExpandWindow"], function(a) {
        t.hasOwnProperty(a) && (this.option[a] = t[a]);
      }, this);
    }, e.prototype._initDimensions = function() {
      var t = this.dimensions = [], a = this.parallelAxisIndex = [], n = Et(this.ecModel.queryComponents({
        mainType: "parallelAxis"
      }), function(i) {
        return (i.get("parallelIndex") || 0) === this.componentIndex;
      }, this);
      M(n, function(i) {
        t.push("dim" + i.get("dim")), a.push(i.componentIndex);
      });
    }, e.type = "parallel", e.dependencies = ["parallelAxis"], e.layoutMode = "box", e.defaultOption = {
      // zlevel: 0,
      z: 0,
      left: 80,
      top: 60,
      right: 80,
      bottom: 60,
      // width: {totalWidth} - left - right,
      // height: {totalHeight} - top - bottom,
      layout: "horizontal",
      // FIXME
      // naming?
      axisExpandable: !1,
      axisExpandCenter: null,
      axisExpandCount: 0,
      axisExpandWidth: 50,
      axisExpandRate: 17,
      axisExpandDebounce: 50,
      // [out, in, jumpTarget]. In percentage. If use [null, 0.05], null means full.
      // Do not doc to user until necessary.
      axisExpandSlideTriggerArea: [-0.15, 0.05, 0.4],
      axisExpandTriggerOn: "click",
      parallelAxisDefault: null
    }, e;
  }(xt)
);
const f4 = u4;
var h4 = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t, a, n, i, o) {
      var s = r.call(this, t, a, n) || this;
      return s.type = i || "value", s.axisIndex = o, s;
    }
    return e.prototype.isHorizontal = function() {
      return this.coordinateSystem.getModel().get("layout") !== "horizontal";
    }, e;
  }(Lr)
);
const c4 = h4;
function Di(r, e, t, a, n, i) {
  r = r || 0;
  var o = t[1] - t[0];
  if (n != null && (n = $i(n, [0, o])), i != null && (i = Math.max(i, n != null ? n : 0)), a === "all") {
    var s = Math.abs(e[1] - e[0]);
    s = $i(s, [0, o]), n = i = $i(s, [n, i]), a = 0;
  }
  e[0] = $i(e[0], t), e[1] = $i(e[1], t);
  var l = Wv(e, a);
  e[a] += r;
  var u = n || 0, f = t.slice();
  l.sign < 0 ? f[0] += u : f[1] -= u, e[a] = $i(e[a], f);
  var h;
  return h = Wv(e, a), n != null && (h.sign !== l.sign || h.span < n) && (e[1 - a] = e[a] + l.sign * n), h = Wv(e, a), i != null && h.span > i && (e[1 - a] = e[a] + h.sign * i), e;
}
function Wv(r, e) {
  var t = r[e] - r[1 - e];
  return {
    span: Math.abs(t),
    sign: t > 0 ? -1 : t < 0 ? 1 : e ? -1 : 1
  };
}
function $i(r, e) {
  return Math.min(e[1] != null ? e[1] : 1 / 0, Math.max(e[0] != null ? e[0] : -1 / 0, r));
}
var $v = M, JM = Math.min, QM = Math.max, QS = Math.floor, v4 = Math.ceil, tx = Yt, d4 = Math.PI, p4 = (
  /** @class */
  function() {
    function r(e, t, a) {
      this.type = "parallel", this._axesMap = X(), this._axesLayout = {}, this.dimensions = e.dimensions, this._model = e, this._init(e, t, a);
    }
    return r.prototype._init = function(e, t, a) {
      var n = e.dimensions, i = e.parallelAxisIndex;
      $v(n, function(o, s) {
        var l = i[s], u = t.getComponent("parallelAxis", l), f = this._axesMap.set(o, new c4(o, Bh(u), [0, 0], u.get("type"), l)), h = f.type === "category";
        f.onBand = h && u.get("boundaryGap"), f.inverse = u.get("inverse"), u.axis = f, f.model = u, f.coordinateSystem = u.coordinateSystem = this;
      }, this);
    }, r.prototype.update = function(e, t) {
      this._updateAxesFromSeries(this._model, e);
    }, r.prototype.containPoint = function(e) {
      var t = this._makeLayoutInfo(), a = t.axisBase, n = t.layoutBase, i = t.pixelDimIndex, o = e[1 - i], s = e[i];
      return o >= a && o <= a + t.axisLength && s >= n && s <= n + t.layoutLength;
    }, r.prototype.getModel = function() {
      return this._model;
    }, r.prototype._updateAxesFromSeries = function(e, t) {
      t.eachSeries(function(a) {
        if (e.contains(a, t)) {
          var n = a.getData();
          $v(this.dimensions, function(i) {
            var o = this._axesMap.get(i);
            o.scale.unionExtentFromData(n, n.mapDimension(i)), go(o.scale, o.model);
          }, this);
        }
      }, this);
    }, r.prototype.resize = function(e, t) {
      this._rect = ae(e.getBoxLayoutParams(), {
        width: t.getWidth(),
        height: t.getHeight()
      }), this._layoutAxes();
    }, r.prototype.getRect = function() {
      return this._rect;
    }, r.prototype._makeLayoutInfo = function() {
      var e = this._model, t = this._rect, a = ["x", "y"], n = ["width", "height"], i = e.get("layout"), o = i === "horizontal" ? 0 : 1, s = t[n[o]], l = [0, s], u = this.dimensions.length, f = Au(e.get("axisExpandWidth"), l), h = Au(e.get("axisExpandCount") || 0, [0, u]), c = e.get("axisExpandable") && u > 3 && u > h && h > 1 && f > 0 && s > 0, v = e.get("axisExpandWindow"), d;
      if (v)
        d = Au(v[1] - v[0], l), v[1] = v[0] + d;
      else {
        d = Au(f * (h - 1), l);
        var p = e.get("axisExpandCenter") || QS(u / 2);
        v = [f * p - d / 2], v[1] = v[0] + d;
      }
      var g = (s - d) / (u - h);
      g < 3 && (g = 0);
      var y = [QS(tx(v[0] / f, 1)) + 1, v4(tx(v[1] / f, 1)) - 1], m = g / f * v[0];
      return {
        layout: i,
        pixelDimIndex: o,
        layoutBase: t[a[o]],
        layoutLength: s,
        axisBase: t[a[1 - o]],
        axisLength: t[n[1 - o]],
        axisExpandable: c,
        axisExpandWidth: f,
        axisCollapseWidth: g,
        axisExpandWindow: v,
        axisCount: u,
        winInnerIndices: y,
        axisExpandWindow0Pos: m
      };
    }, r.prototype._layoutAxes = function() {
      var e = this._rect, t = this._axesMap, a = this.dimensions, n = this._makeLayoutInfo(), i = n.layout;
      t.each(function(o) {
        var s = [0, n.axisLength], l = o.inverse ? 1 : 0;
        o.setExtent(s[l], s[1 - l]);
      }), $v(a, function(o, s) {
        var l = (n.axisExpandable ? y4 : g4)(s, n), u = {
          horizontal: {
            x: l.position,
            y: n.axisLength
          },
          vertical: {
            x: 0,
            y: l.position
          }
        }, f = {
          horizontal: d4 / 2,
          vertical: 0
        }, h = [u[i].x + e.x, u[i].y + e.y], c = f[i], v = fr();
        _i(v, v, c), Zr(v, v, h), this._axesLayout[o] = {
          position: h,
          rotation: c,
          transform: v,
          axisNameAvailableWidth: l.axisNameAvailableWidth,
          axisLabelShow: l.axisLabelShow,
          nameTruncateMaxWidth: l.nameTruncateMaxWidth,
          tickDirection: 1,
          labelDirection: 1
        };
      }, this);
    }, r.prototype.getAxis = function(e) {
      return this._axesMap.get(e);
    }, r.prototype.dataToPoint = function(e, t) {
      return this.axisCoordToPoint(this._axesMap.get(t).dataToCoord(e), t);
    }, r.prototype.eachActiveState = function(e, t, a, n) {
      a == null && (a = 0), n == null && (n = e.count());
      var i = this._axesMap, o = this.dimensions, s = [], l = [];
      M(o, function(g) {
        s.push(e.mapDimension(g)), l.push(i.get(g).model);
      });
      for (var u = this.hasAxisBrushed(), f = a; f < n; f++) {
        var h = void 0;
        if (!u)
          h = "normal";
        else {
          h = "active";
          for (var c = e.getValues(s, f), v = 0, d = o.length; v < d; v++) {
            var p = l[v].getActiveState(c[v]);
            if (p === "inactive") {
              h = "inactive";
              break;
            }
          }
        }
        t(h, f);
      }
    }, r.prototype.hasAxisBrushed = function() {
      for (var e = this.dimensions, t = this._axesMap, a = !1, n = 0, i = e.length; n < i; n++)
        t.get(e[n]).model.getActiveState() !== "normal" && (a = !0);
      return a;
    }, r.prototype.axisCoordToPoint = function(e, t) {
      var a = this._axesLayout[t];
      return Dr([e, 0], a.transform);
    }, r.prototype.getAxisLayout = function(e) {
      return at(this._axesLayout[e]);
    }, r.prototype.getSlidedAxisExpandWindow = function(e) {
      var t = this._makeLayoutInfo(), a = t.pixelDimIndex, n = t.axisExpandWindow.slice(), i = n[1] - n[0], o = [0, t.axisExpandWidth * (t.axisCount - 1)];
      if (!this.containPoint(e))
        return {
          behavior: "none",
          axisExpandWindow: n
        };
      var s = e[a] - t.layoutBase - t.axisExpandWindow0Pos, l, u = "slide", f = t.axisCollapseWidth, h = this._model.get("axisExpandSlideTriggerArea"), c = h[0] != null;
      if (f)
        c && f && s < i * h[0] ? (u = "jump", l = s - i * h[2]) : c && f && s > i * (1 - h[0]) ? (u = "jump", l = s - i * (1 - h[2])) : (l = s - i * h[1]) >= 0 && (l = s - i * (1 - h[1])) <= 0 && (l = 0), l *= t.axisExpandWidth / f, l ? Di(l, n, o, "all") : u = "none";
      else {
        var v = n[1] - n[0], d = o[1] * s / v;
        n = [QM(0, d - v / 2)], n[1] = JM(o[1], n[0] + v), n[0] = n[1] - v;
      }
      return {
        axisExpandWindow: n,
        behavior: u
      };
    }, r;
  }()
);
function Au(r, e) {
  return JM(QM(r, e[0]), e[1]);
}
function g4(r, e) {
  var t = e.layoutLength / (e.axisCount - 1);
  return {
    position: t * r,
    axisNameAvailableWidth: t,
    axisLabelShow: !0
  };
}
function y4(r, e) {
  var t = e.layoutLength, a = e.axisExpandWidth, n = e.axisCount, i = e.axisCollapseWidth, o = e.winInnerIndices, s, l = i, u = !1, f;
  return r < o[0] ? (s = r * i, f = i) : r <= o[1] ? (s = e.axisExpandWindow0Pos + r * a - e.axisExpandWindow[0], l = a, u = !0) : (s = t - (n - 1 - r) * i, f = i), {
    position: s,
    axisNameAvailableWidth: l,
    axisLabelShow: u,
    nameTruncateMaxWidth: f
  };
}
const m4 = p4;
function _4(r, e) {
  var t = [];
  return r.eachComponent("parallel", function(a, n) {
    var i = new m4(a, r, e);
    i.name = "parallel_" + n, i.resize(a, e), a.coordinateSystem = i, i.model = a, t.push(i);
  }), r.eachSeries(function(a) {
    if (a.get("coordinateSystem") === "parallel") {
      var n = a.getReferringComponents("parallel", Jt).models[0];
      a.coordinateSystem = n.coordinateSystem;
    }
  }), t;
}
var S4 = {
  create: _4
};
const x4 = S4;
var tI = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t.activeIntervals = [], t;
    }
    return e.prototype.getAreaSelectStyle = function() {
      return vi([
        ["fill", "color"],
        ["lineWidth", "borderWidth"],
        ["stroke", "borderColor"],
        ["width", "width"],
        ["opacity", "opacity"]
        // Option decal is in `DecalObject` but style.decal is in `PatternObject`.
        // So do not transfer decal directly.
      ])(this.getModel("areaSelectStyle"));
    }, e.prototype.setActiveIntervals = function(t) {
      var a = this.activeIntervals = at(t);
      if (a)
        for (var n = a.length - 1; n >= 0; n--)
          sr(a[n]);
    }, e.prototype.getActiveState = function(t) {
      var a = this.activeIntervals;
      if (!a.length)
        return "normal";
      if (t == null || isNaN(+t))
        return "inactive";
      if (a.length === 1) {
        var n = a[0];
        if (n[0] <= t && t <= n[1])
          return "active";
      } else
        for (var i = 0, o = a.length; i < o; i++)
          if (a[i][0] <= t && t <= a[i][1])
            return "active";
      return "inactive";
    }, e;
  }(xt)
);
te(tI, Cl);
const ex = tI;
var gi = !0, hl = Math.min, _o = Math.max, w4 = Math.pow, b4 = 1e4, T4 = 6, D4 = 6, rx = "globalPan", C4 = {
  w: [0, 0],
  e: [0, 1],
  n: [1, 0],
  s: [1, 1]
}, A4 = {
  w: "ew",
  e: "ew",
  n: "ns",
  s: "ns",
  ne: "nesw",
  sw: "nesw",
  nw: "nwse",
  se: "nwse"
}, ax = {
  brushStyle: {
    lineWidth: 2,
    stroke: "rgba(210,219,238,0.3)",
    fill: "#D2DBEE"
  },
  transformable: !0,
  brushMode: "single",
  removeOnClick: !1
}, M4 = 0, I4 = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t) {
      var a = r.call(this) || this;
      return a._track = [], a._covers = [], a._handlers = {}, {}.NODE_ENV !== "production" && J(t), a._zr = t, a.group = new nt(), a._uid = "brushController_" + M4++, M(k4, function(n, i) {
        this._handlers[i] = Y(n, this);
      }, a), a;
    }
    return e.prototype.enableBrush = function(t) {
      return {}.NODE_ENV !== "production" && J(this._mounted), this._brushType && this._doDisableBrush(), t.brushType && this._doEnableBrush(t), this;
    }, e.prototype._doEnableBrush = function(t) {
      var a = this._zr;
      this._enableGlobalPan || zG(a, rx, this._uid), M(this._handlers, function(n, i) {
        a.on(i, n);
      }), this._brushType = t.brushType, this._brushOption = ht(at(ax), t, !0);
    }, e.prototype._doDisableBrush = function() {
      var t = this._zr;
      GG(t, rx, this._uid), M(this._handlers, function(a, n) {
        t.off(n, a);
      }), this._brushType = this._brushOption = null;
    }, e.prototype.setPanels = function(t) {
      if (t && t.length) {
        var a = this._panels = {};
        M(t, function(n) {
          a[n.panelId] = at(n);
        });
      } else
        this._panels = null;
      return this;
    }, e.prototype.mount = function(t) {
      t = t || {}, {}.NODE_ENV !== "production" && (this._mounted = !0), this._enableGlobalPan = t.enableGlobalPan;
      var a = this.group;
      return this._zr.add(a), a.attr({
        x: t.x || 0,
        y: t.y || 0,
        rotation: t.rotation || 0,
        scaleX: t.scaleX || 1,
        scaleY: t.scaleY || 1
      }), this._transform = a.getLocalTransform(), this;
    }, e.prototype.updateCovers = function(t) {
      ({}).NODE_ENV !== "production" && J(this._mounted), t = G(t, function(c) {
        return ht(at(ax), c, !0);
      });
      var a = "\0-brush-index-", n = this._covers, i = this._covers = [], o = this, s = this._creatingCover;
      return new ma(n, t, u, l).add(f).update(f).remove(h).execute(), this;
      function l(c, v) {
        return (c.id != null ? c.id : a + v) + "-" + c.brushType;
      }
      function u(c, v) {
        return l(c.__brushOption, v);
      }
      function f(c, v) {
        var d = t[c];
        if (v != null && n[v] === s)
          i[c] = n[v];
        else {
          var p = i[c] = v != null ? (n[v].__brushOption = d, n[v]) : rI(o, eI(o, d));
          By(o, p);
        }
      }
      function h(c) {
        n[c] !== s && o.group.remove(n[c]);
      }
    }, e.prototype.unmount = function() {
      if (!({}.NODE_ENV !== "production" && !this._mounted))
        return this.enableBrush(!1), Gp(this), this._zr.remove(this.group), {}.NODE_ENV !== "production" && (this._mounted = !1), this;
    }, e.prototype.dispose = function() {
      this.unmount(), this.off();
    }, e;
  }(cr)
);
function eI(r, e) {
  var t = Uh[e.brushType].createCover(r, e);
  return t.__brushOption = e, nI(t, e), r.group.add(t), t;
}
function rI(r, e) {
  var t = zy(e);
  return t.endCreating && (t.endCreating(r, e), nI(e, e.__brushOption)), e;
}
function aI(r, e) {
  var t = e.__brushOption;
  zy(e).updateCoverShape(r, e, t.range, t);
}
function nI(r, e) {
  var t = e.z;
  t == null && (t = b4), r.traverse(function(a) {
    a.z = t, a.z2 = t;
  });
}
function By(r, e) {
  zy(e).updateCommon(r, e), aI(r, e);
}
function zy(r) {
  return Uh[r.__brushOption.brushType];
}
function Gy(r, e, t) {
  var a = r._panels;
  if (!a)
    return gi;
  var n, i = r._transform;
  return M(a, function(o) {
    o.isTargetByCursor(e, t, i) && (n = o);
  }), n;
}
function iI(r, e) {
  var t = r._panels;
  if (!t)
    return gi;
  var a = e.__brushOption.panelId;
  return a != null ? t[a] : gi;
}
function Gp(r) {
  var e = r._covers, t = e.length;
  return M(e, function(a) {
    r.group.remove(a);
  }, r), e.length = 0, !!t;
}
function yi(r, e) {
  var t = G(r._covers, function(a) {
    var n = a.__brushOption, i = at(n.range);
    return {
      brushType: n.brushType,
      panelId: n.panelId,
      range: i
    };
  });
  r.trigger("brush", {
    areas: t,
    isEnd: !!e.isEnd,
    removeOnClick: !!e.removeOnClick
  });
}
function L4(r) {
  var e = r._track;
  if (!e.length)
    return !1;
  var t = e[e.length - 1], a = e[0], n = t[0] - a[0], i = t[1] - a[1], o = w4(n * n + i * i, 0.5);
  return o > T4;
}
function oI(r) {
  var e = r.length - 1;
  return e < 0 && (e = 0), [r[0], r[e]];
}
function sI(r, e, t, a) {
  var n = new nt();
  return n.add(new Tt({
    name: "main",
    style: Fy(t),
    silent: !0,
    draggable: !0,
    cursor: "move",
    drift: ot(nx, r, e, n, ["n", "s", "w", "e"]),
    ondragend: ot(yi, e, {
      isEnd: !0
    })
  })), M(a, function(i) {
    n.add(new Tt({
      name: i.join(""),
      style: {
        opacity: 0
      },
      draggable: !0,
      silent: !0,
      invisible: !0,
      drift: ot(nx, r, e, n, i),
      ondragend: ot(yi, e, {
        isEnd: !0
      })
    }));
  }), n;
}
function lI(r, e, t, a) {
  var n = a.brushStyle.lineWidth || 0, i = _o(n, D4), o = t[0][0], s = t[1][0], l = o - n / 2, u = s - n / 2, f = t[0][1], h = t[1][1], c = f - i + n / 2, v = h - i + n / 2, d = f - o, p = h - s, g = d + n, y = p + n;
  aa(r, e, "main", o, s, d, p), a.transformable && (aa(r, e, "w", l, u, i, y), aa(r, e, "e", c, u, i, y), aa(r, e, "n", l, u, g, i), aa(r, e, "s", l, v, g, i), aa(r, e, "nw", l, u, i, i), aa(r, e, "ne", c, u, i, i), aa(r, e, "sw", l, v, i, i), aa(r, e, "se", c, v, i, i));
}
function Fp(r, e) {
  var t = e.__brushOption, a = t.transformable, n = e.childAt(0);
  n.useStyle(Fy(t)), n.attr({
    silent: !a,
    cursor: a ? "move" : "default"
  }), M([["w"], ["e"], ["n"], ["s"], ["s", "e"], ["s", "w"], ["n", "e"], ["n", "w"]], function(i) {
    var o = e.childOfName(i.join("")), s = i.length === 1 ? Hp(r, i[0]) : P4(r, i);
    o && o.attr({
      silent: !a,
      invisible: !a,
      cursor: a ? A4[s] + "-resize" : null
    });
  });
}
function aa(r, e, t, a, n, i, o) {
  var s = e.childOfName(t);
  s && s.setShape(N4(Hy(r, e, [[a, n], [a + i, n + o]])));
}
function Fy(r) {
  return et({
    strokeNoScale: !0
  }, r.brushStyle);
}
function uI(r, e, t, a) {
  var n = [hl(r, t), hl(e, a)], i = [_o(r, t), _o(e, a)];
  return [
    [n[0], i[0]],
    [n[1], i[1]]
    // y range
  ];
}
function E4(r) {
  return ii(r.group);
}
function Hp(r, e) {
  var t = {
    w: "left",
    e: "right",
    n: "top",
    s: "bottom"
  }, a = {
    left: "w",
    right: "e",
    top: "n",
    bottom: "s"
  }, n = bh(t[e], E4(r));
  return a[n];
}
function P4(r, e) {
  var t = [Hp(r, e[0]), Hp(r, e[1])];
  return (t[0] === "e" || t[0] === "w") && t.reverse(), t.join("");
}
function nx(r, e, t, a, n, i) {
  var o = t.__brushOption, s = r.toRectRange(o.range), l = fI(e, n, i);
  M(a, function(u) {
    var f = C4[u];
    s[f[0]][f[1]] += l[f[0]];
  }), o.range = r.fromRectRange(uI(s[0][0], s[1][0], s[0][1], s[1][1])), By(e, t), yi(e, {
    isEnd: !1
  });
}
function R4(r, e, t, a) {
  var n = e.__brushOption.range, i = fI(r, t, a);
  M(n, function(o) {
    o[0] += i[0], o[1] += i[1];
  }), By(r, e), yi(r, {
    isEnd: !1
  });
}
function fI(r, e, t) {
  var a = r.group, n = a.transformCoordToLocal(e, t), i = a.transformCoordToLocal(0, 0);
  return [n[0] - i[0], n[1] - i[1]];
}
function Hy(r, e, t) {
  var a = iI(r, e);
  return a && a !== gi ? a.clipPath(t, r._transform) : at(t);
}
function N4(r) {
  var e = hl(r[0][0], r[1][0]), t = hl(r[0][1], r[1][1]), a = _o(r[0][0], r[1][0]), n = _o(r[0][1], r[1][1]);
  return {
    x: e,
    y: t,
    width: a - e,
    height: n - t
  };
}
function O4(r, e, t) {
  if (
    // Check active
    !(!r._brushType || V4(r, e.offsetX, e.offsetY))
  ) {
    var a = r._zr, n = r._covers, i = Gy(r, e, t);
    if (!r._dragging)
      for (var o = 0; o < n.length; o++) {
        var s = n[o].__brushOption;
        if (i && (i === gi || s.panelId === i.panelId) && Uh[s.brushType].contain(n[o], t[0], t[1]))
          return;
      }
    i && a.setCursorStyle("crosshair");
  }
}
function Wp(r) {
  var e = r.event;
  e.preventDefault && e.preventDefault();
}
function $p(r, e, t) {
  return r.childOfName("main").contain(e, t);
}
function hI(r, e, t, a) {
  var n = r._creatingCover, i = r._creatingPanel, o = r._brushOption, s;
  if (r._track.push(t.slice()), L4(r) || n) {
    if (i && !n) {
      o.brushMode === "single" && Gp(r);
      var l = at(o);
      l.brushType = ix(l.brushType, i), l.panelId = i === gi ? null : i.panelId, n = r._creatingCover = eI(r, l), r._covers.push(n);
    }
    if (n) {
      var u = Uh[ix(r._brushType, i)], f = n.__brushOption;
      f.range = u.getCreatingRange(Hy(r, n, r._track)), a && (rI(r, n), u.updateCommon(r, n)), aI(r, n), s = {
        isEnd: a
      };
    }
  } else
    a && o.brushMode === "single" && o.removeOnClick && Gy(r, e, t) && Gp(r) && (s = {
      isEnd: a,
      removeOnClick: !0
    });
  return s;
}
function ix(r, e) {
  return r === "auto" ? ({}.NODE_ENV !== "production" && J(e && e.defaultBrushType, 'MUST have defaultBrushType when brushType is "atuo"'), e.defaultBrushType) : r;
}
var k4 = {
  mousedown: function(r) {
    if (this._dragging)
      ox(this, r);
    else if (!r.target || !r.target.draggable) {
      Wp(r);
      var e = this.group.transformCoordToLocal(r.offsetX, r.offsetY);
      this._creatingCover = null;
      var t = this._creatingPanel = Gy(this, r, e);
      t && (this._dragging = !0, this._track = [e.slice()]);
    }
  },
  mousemove: function(r) {
    var e = r.offsetX, t = r.offsetY, a = this.group.transformCoordToLocal(e, t);
    if (O4(this, r, a), this._dragging) {
      Wp(r);
      var n = hI(this, r, a, !1);
      n && yi(this, n);
    }
  },
  mouseup: function(r) {
    ox(this, r);
  }
};
function ox(r, e) {
  if (r._dragging) {
    Wp(e);
    var t = e.offsetX, a = e.offsetY, n = r.group.transformCoordToLocal(t, a), i = hI(r, e, n, !0);
    r._dragging = !1, r._track = [], r._creatingCover = null, i && yi(r, i);
  }
}
function V4(r, e, t) {
  var a = r._zr;
  return e < 0 || e > a.getWidth() || t < 0 || t > a.getHeight();
}
var Uh = {
  lineX: sx(0),
  lineY: sx(1),
  rect: {
    createCover: function(r, e) {
      function t(a) {
        return a;
      }
      return sI({
        toRectRange: t,
        fromRectRange: t
      }, r, e, [["w"], ["e"], ["n"], ["s"], ["s", "e"], ["s", "w"], ["n", "e"], ["n", "w"]]);
    },
    getCreatingRange: function(r) {
      var e = oI(r);
      return uI(e[1][0], e[1][1], e[0][0], e[0][1]);
    },
    updateCoverShape: function(r, e, t, a) {
      lI(r, e, t, a);
    },
    updateCommon: Fp,
    contain: $p
  },
  polygon: {
    createCover: function(r, e) {
      var t = new nt();
      return t.add(new Fe({
        name: "main",
        style: Fy(e),
        silent: !0
      })), t;
    },
    getCreatingRange: function(r) {
      return r;
    },
    endCreating: function(r, e) {
      e.remove(e.childAt(0)), e.add(new Ge({
        name: "main",
        draggable: !0,
        drift: ot(R4, r, e),
        ondragend: ot(yi, r, {
          isEnd: !0
        })
      }));
    },
    updateCoverShape: function(r, e, t, a) {
      e.childAt(0).setShape({
        points: Hy(r, e, t)
      });
    },
    updateCommon: Fp,
    contain: $p
  }
};
function sx(r) {
  return {
    createCover: function(e, t) {
      return sI({
        toRectRange: function(a) {
          var n = [a, [0, 100]];
          return r && n.reverse(), n;
        },
        fromRectRange: function(a) {
          return a[r];
        }
      }, e, t, [[["w"], ["e"]], [["n"], ["s"]]][r]);
    },
    getCreatingRange: function(e) {
      var t = oI(e), a = hl(t[0][r], t[1][r]), n = _o(t[0][r], t[1][r]);
      return [a, n];
    },
    updateCoverShape: function(e, t, a, n) {
      var i, o = iI(e, t);
      if (o !== gi && o.getLinearBrushOtherExtent)
        i = o.getLinearBrushOtherExtent(r);
      else {
        var s = e._zr;
        i = [0, [s.getWidth(), s.getHeight()][1 - r]];
      }
      var l = [a, i];
      r && l.reverse(), lI(e, t, l, n);
    },
    updateCommon: Fp,
    contain: $p
  };
}
const Wy = I4;
function cI(r) {
  return r = $y(r), function(e) {
    return yD(e, r);
  };
}
function vI(r, e) {
  return r = $y(r), function(t) {
    var a = e != null ? e : t, n = a ? r.width : r.height, i = a ? r.x : r.y;
    return [i, i + (n || 0)];
  };
}
function dI(r, e, t) {
  var a = $y(r);
  return function(n, i) {
    return a.contain(i[0], i[1]) && !Fh(n, e, t);
  };
}
function $y(r) {
  return ct.create(r);
}
var B4 = ["axisLine", "axisTickLabel", "axisName"], z4 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.init = function(t, a) {
      r.prototype.init.apply(this, arguments), (this._brushController = new Wy(a.getZr())).on("brush", Y(this._onBrush, this));
    }, e.prototype.render = function(t, a, n, i) {
      if (!G4(t, a, i)) {
        this.axisModel = t, this.api = n, this.group.removeAll();
        var o = this._axisGroup;
        if (this._axisGroup = new nt(), this.group.add(this._axisGroup), !!t.get("show")) {
          var s = H4(t, a), l = s.coordinateSystem, u = t.getAreaSelectStyle(), f = u.width, h = t.axis.dim, c = l.getAxisLayout(h), v = V({
            strokeContainThreshold: f
          }, c), d = new _a(t, v);
          M(B4, d.add, d), this._axisGroup.add(d.getGroup()), this._refreshBrushController(v, u, t, s, f, n), Sl(o, this._axisGroup, t);
        }
      }
    }, e.prototype._refreshBrushController = function(t, a, n, i, o, s) {
      var l = n.axis.getExtent(), u = l[1] - l[0], f = Math.min(30, Math.abs(u) * 0.1), h = ct.create({
        x: l[0],
        y: -o / 2,
        width: u,
        height: o
      });
      h.x -= f, h.width += 2 * f, this._brushController.mount({
        enableGlobalPan: !0,
        rotation: t.rotation,
        x: t.position[0],
        y: t.position[1]
      }).setPanels([{
        panelId: "pl",
        clipPath: cI(h),
        isTargetByCursor: dI(h, s, i),
        getLinearBrushOtherExtent: vI(h, 0)
      }]).enableBrush({
        brushType: "lineX",
        brushStyle: a,
        removeOnClick: !0
      }).updateCovers(F4(n));
    }, e.prototype._onBrush = function(t) {
      var a = t.areas, n = this.axisModel, i = n.axis, o = G(a, function(s) {
        return [i.coordToData(s.range[0], !0), i.coordToData(s.range[1], !0)];
      });
      (!n.option.realtime === t.isEnd || t.removeOnClick) && this.api.dispatchAction({
        type: "axisAreaSelect",
        parallelAxisId: n.id,
        intervals: o
      });
    }, e.prototype.dispose = function() {
      this._brushController.dispose();
    }, e.type = "parallelAxis", e;
  }($t)
);
function G4(r, e, t) {
  return t && t.type === "axisAreaSelect" && e.findComponents({
    mainType: "parallelAxis",
    query: t
  })[0] === r;
}
function F4(r) {
  var e = r.axis;
  return G(r.activeIntervals, function(t) {
    return {
      brushType: "lineX",
      panelId: "pl",
      range: [e.dataToCoord(t[0], !0), e.dataToCoord(t[1], !0)]
    };
  });
}
function H4(r, e) {
  return e.getComponent("parallel", r.get("parallelIndex"));
}
const W4 = z4;
var $4 = {
  type: "axisAreaSelect",
  event: "axisAreaSelected"
  // update: 'updateVisual'
};
function U4(r) {
  r.registerAction($4, function(e, t) {
    t.eachComponent({
      mainType: "parallelAxis",
      query: e
    }, function(a) {
      a.axis.model.setActiveIntervals(e.intervals);
    });
  }), r.registerAction("parallelAxisExpand", function(e, t) {
    t.eachComponent({
      mainType: "parallel",
      query: e
    }, function(a) {
      a.setAxisExpand(e);
    });
  });
}
var Y4 = {
  type: "value",
  areaSelectStyle: {
    width: 20,
    borderWidth: 1,
    borderColor: "rgba(160,197,232)",
    color: "rgba(160,197,232)",
    opacity: 0.3
  },
  realtime: !0,
  z: 10
};
function pI(r) {
  r.registerComponentView(l4), r.registerComponentModel(f4), r.registerCoordinateSystem("parallel", x4), r.registerPreprocessor(r4), r.registerComponentModel(ex), r.registerComponentView(W4), mo(r, "parallel", ex, Y4), U4(r);
}
function Z4(r) {
  yt(pI), r.registerChartView(XH), r.registerSeriesModel(JH), r.registerVisual(r.PRIORITY.VISUAL.BRUSH, e4);
}
var X4 = (
  /** @class */
  function() {
    function r() {
      this.x1 = 0, this.y1 = 0, this.x2 = 0, this.y2 = 0, this.cpx1 = 0, this.cpy1 = 0, this.cpx2 = 0, this.cpy2 = 0, this.extent = 0;
    }
    return r;
  }()
), q4 = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t) {
      return r.call(this, t) || this;
    }
    return e.prototype.getDefaultShape = function() {
      return new X4();
    }, e.prototype.buildPath = function(t, a) {
      var n = a.extent;
      t.moveTo(a.x1, a.y1), t.bezierCurveTo(a.cpx1, a.cpy1, a.cpx2, a.cpy2, a.x2, a.y2), a.orient === "vertical" ? (t.lineTo(a.x2 + n, a.y2), t.bezierCurveTo(a.cpx2 + n, a.cpy2, a.cpx1 + n, a.cpy1, a.x1 + n, a.y1)) : (t.lineTo(a.x2, a.y2 + n), t.bezierCurveTo(a.cpx2, a.cpy2 + n, a.cpx1, a.cpy1 + n, a.x1, a.y1 + n)), t.closePath();
    }, e.prototype.highlight = function() {
      ga(this);
    }, e.prototype.downplay = function() {
      ya(this);
    }, e;
  }(mt)
), K4 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t._focusAdjacencyDisabled = !1, t;
    }
    return e.prototype.render = function(t, a, n) {
      var i = this, o = t.getGraph(), s = this.group, l = t.layoutInfo, u = l.width, f = l.height, h = t.getData(), c = t.getData("edge"), v = t.get("orient");
      this._model = t, s.removeAll(), s.x = l.x, s.y = l.y, o.eachEdge(function(d) {
        var p = new q4(), g = it(p);
        g.dataIndex = d.dataIndex, g.seriesIndex = t.seriesIndex, g.dataType = "edge";
        var y = d.getModel(), m = y.getModel("lineStyle"), _ = m.get("curveness"), S = d.node1.getLayout(), w = d.node1.getModel(), x = w.get("localX"), b = w.get("localY"), T = d.node2.getLayout(), C = d.node2.getModel(), D = C.get("localX"), A = C.get("localY"), I = d.getLayout(), L, E, P, R, k, O, B, F;
        p.shape.extent = Math.max(1, I.dy), p.shape.orient = v, v === "vertical" ? (L = (x != null ? x * u : S.x) + I.sy, E = (b != null ? b * f : S.y) + S.dy, P = (D != null ? D * u : T.x) + I.ty, R = A != null ? A * f : T.y, k = L, O = E * (1 - _) + R * _, B = P, F = E * _ + R * (1 - _)) : (L = (x != null ? x * u : S.x) + S.dx, E = (b != null ? b * f : S.y) + I.sy, P = D != null ? D * u : T.x, R = (A != null ? A * f : T.y) + I.ty, k = L * (1 - _) + P * _, O = E, B = L * _ + P * (1 - _), F = R), p.setShape({
          x1: L,
          y1: E,
          x2: P,
          y2: R,
          cpx1: k,
          cpy1: O,
          cpx2: B,
          cpy2: F
        }), p.useStyle(m.getItemStyle()), lx(p.style, v, d);
        var W = "" + y.get("value"), Z = oe(y, "edgeLabel");
        pe(p, Z, {
          labelFetcher: {
            getFormattedLabel: function(dt, St, pt, rt, gt, st) {
              return t.getFormattedLabel(
                dt,
                St,
                "edge",
                rt,
                // ensure edgeLabel formatter is provided
                // to prevent the inheritance from `label.formatter` of the series
                lr(gt, Z.normal && Z.normal.get("formatter"), W),
                st
              );
            }
          },
          labelDataIndex: d.dataIndex,
          defaultText: W
        }), p.setTextConfig({
          position: "inside"
        });
        var Q = y.getModel("emphasis");
        de(p, y, "lineStyle", function(dt) {
          var St = dt.getItemStyle();
          return lx(St, v, d), St;
        }), s.add(p), c.setItemGraphicEl(d.dataIndex, p);
        var tt = Q.get("focus");
        Wt(p, tt === "adjacency" ? d.getAdjacentDataIndices() : tt === "trajectory" ? d.getTrajectoryDataIndices() : tt, Q.get("blurScope"), Q.get("disabled"));
      }), o.eachNode(function(d) {
        var p = d.getLayout(), g = d.getModel(), y = g.get("localX"), m = g.get("localY"), _ = g.getModel("emphasis"), S = new Tt({
          shape: {
            x: y != null ? y * u : p.x,
            y: m != null ? m * f : p.y,
            width: p.dx,
            height: p.dy
          },
          style: g.getModel("itemStyle").getItemStyle(),
          z2: 10
        });
        pe(S, oe(g), {
          labelFetcher: {
            getFormattedLabel: function(x, b) {
              return t.getFormattedLabel(x, b, "node");
            }
          },
          labelDataIndex: d.dataIndex,
          defaultText: d.id
        }), S.disableLabelAnimation = !0, S.setStyle("fill", d.getVisual("color")), S.setStyle("decal", d.getVisual("style").decal), de(S, g), s.add(S), h.setItemGraphicEl(d.dataIndex, S), it(S).dataType = "node";
        var w = _.get("focus");
        Wt(S, w === "adjacency" ? d.getAdjacentDataIndices() : w === "trajectory" ? d.getTrajectoryDataIndices() : w, _.get("blurScope"), _.get("disabled"));
      }), h.eachItemGraphicEl(function(d, p) {
        var g = h.getItemModel(p);
        g.get("draggable") && (d.drift = function(y, m) {
          i._focusAdjacencyDisabled = !0, this.shape.x += y, this.shape.y += m, this.dirty(), n.dispatchAction({
            type: "dragNode",
            seriesId: t.id,
            dataIndex: h.getRawIndex(p),
            localX: this.shape.x / u,
            localY: this.shape.y / f
          });
        }, d.ondragend = function() {
          i._focusAdjacencyDisabled = !1;
        }, d.draggable = !0, d.cursor = "move");
      }), !this._data && t.isAnimationEnabled() && s.setClipPath(j4(s.getBoundingRect(), t, function() {
        s.removeClipPath();
      })), this._data = t.getData();
    }, e.prototype.dispose = function() {
    }, e.type = "sankey", e;
  }(Vt)
);
function lx(r, e, t) {
  switch (r.fill) {
    case "source":
      r.fill = t.node1.getVisual("color"), r.decal = t.node1.getVisual("style").decal;
      break;
    case "target":
      r.fill = t.node2.getVisual("color"), r.decal = t.node2.getVisual("style").decal;
      break;
    case "gradient":
      var a = t.node1.getVisual("color"), n = t.node2.getVisual("color");
      $(a) && $(n) && (r.fill = new _l(0, 0, +(e === "horizontal"), +(e === "vertical"), [{
        color: a,
        offset: 0
      }, {
        color: n,
        offset: 1
      }]));
  }
}
function j4(r, e, t) {
  var a = new Tt({
    shape: {
      x: r.x - 10,
      y: r.y - 10,
      width: 0,
      height: r.height + 20
    }
  });
  return Bt(a, {
    shape: {
      width: r.width + 20
    }
  }, e, t), a;
}
const J4 = K4;
var Q4 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.getInitialData = function(t, a) {
      var n = t.edges || t.links, i = t.data || t.nodes, o = t.levels;
      this.levelModels = [];
      for (var s = this.levelModels, l = 0; l < o.length; l++)
        if (o[l].depth != null && o[l].depth >= 0)
          s[o[l].depth] = new kt(o[l], this, a);
        else if ({}.NODE_ENV !== "production")
          throw new Error("levels[i].depth is mandatory and should be natural number");
      if (i && n) {
        var u = KM(i, n, this, !0, f);
        return u.data;
      }
      function f(h, c) {
        h.wrapMethod("getItemModel", function(v, d) {
          var p = v.parentModel, g = p.getData().getItemLayout(d);
          if (g) {
            var y = g.depth, m = p.levelModels[y];
            m && (v.parentModel = m);
          }
          return v;
        }), c.wrapMethod("getItemModel", function(v, d) {
          var p = v.parentModel, g = p.getGraph().getEdgeByIndex(d), y = g.node1.getLayout();
          if (y) {
            var m = y.depth, _ = p.levelModels[m];
            _ && (v.parentModel = _);
          }
          return v;
        });
      }
    }, e.prototype.setNodePosition = function(t, a) {
      var n = this.option.data || this.option.nodes, i = n[t];
      i.localX = a[0], i.localY = a[1];
    }, e.prototype.getGraph = function() {
      return this.getData().graph;
    }, e.prototype.getEdgeData = function() {
      return this.getGraph().edgeData;
    }, e.prototype.formatTooltip = function(t, a, n) {
      function i(v) {
        return isNaN(v) || v == null;
      }
      if (n === "edge") {
        var o = this.getDataParams(t, n), s = o.data, l = o.value, u = s.source + " -- " + s.target;
        return se("nameValue", {
          name: u,
          value: l,
          noValue: i(l)
        });
      } else {
        var f = this.getGraph().getNodeByIndex(t), h = f.getLayout().value, c = this.getDataParams(t, n).data.name;
        return se("nameValue", {
          name: c != null ? c + "" : null,
          value: h,
          noValue: i(h)
        });
      }
    }, e.prototype.optionUpdated = function() {
    }, e.prototype.getDataParams = function(t, a) {
      var n = r.prototype.getDataParams.call(this, t, a);
      if (n.value == null && a === "node") {
        var i = this.getGraph().getNodeByIndex(t), o = i.getLayout().value;
        n.value = o;
      }
      return n;
    }, e.type = "series.sankey", e.defaultOption = {
      // zlevel: 0,
      z: 2,
      coordinateSystem: "view",
      left: "5%",
      top: "5%",
      right: "20%",
      bottom: "5%",
      orient: "horizontal",
      nodeWidth: 20,
      nodeGap: 8,
      draggable: !0,
      layoutIterations: 32,
      label: {
        show: !0,
        position: "right",
        fontSize: 12
      },
      edgeLabel: {
        show: !1,
        fontSize: 12
      },
      levels: [],
      nodeAlign: "justify",
      lineStyle: {
        color: "#314656",
        opacity: 0.2,
        curveness: 0.5
      },
      emphasis: {
        label: {
          show: !0
        },
        lineStyle: {
          opacity: 0.5
        }
      },
      select: {
        itemStyle: {
          borderColor: "#212121"
        }
      },
      animationEasing: "linear",
      animationDuration: 1e3
    }, e;
  }(Gt)
);
const tW = Q4;
function eW(r, e) {
  r.eachSeriesByType("sankey", function(t) {
    var a = t.get("nodeWidth"), n = t.get("nodeGap"), i = rW(t, e);
    t.layoutInfo = i;
    var o = i.width, s = i.height, l = t.getGraph(), u = l.nodes, f = l.edges;
    nW(u);
    var h = Et(u, function(p) {
      return p.getLayout().value === 0;
    }), c = h.length !== 0 ? 0 : t.get("layoutIterations"), v = t.get("orient"), d = t.get("nodeAlign");
    aW(u, f, a, n, o, s, c, v, d);
  });
}
function rW(r, e) {
  return ae(r.getBoxLayoutParams(), {
    width: e.getWidth(),
    height: e.getHeight()
  });
}
function aW(r, e, t, a, n, i, o, s, l) {
  iW(r, e, t, n, i, s, l), uW(r, e, i, n, a, o, s), mW(r, s);
}
function nW(r) {
  M(r, function(e) {
    var t = Ka(e.outEdges, Uf), a = Ka(e.inEdges, Uf), n = e.getValue() || 0, i = Math.max(t, a, n);
    e.setLayout({
      value: i
    }, !0);
  });
}
function iW(r, e, t, a, n, i, o) {
  for (var s = [], l = [], u = [], f = [], h = 0, c = 0; c < e.length; c++)
    s[c] = 1;
  for (var c = 0; c < r.length; c++)
    l[c] = r[c].inEdges.length, l[c] === 0 && u.push(r[c]);
  for (var v = -1; u.length; ) {
    for (var d = 0; d < u.length; d++) {
      var p = u[d], g = p.hostGraph.data.getRawDataItem(p.dataIndex), y = g.depth != null && g.depth >= 0;
      y && g.depth > v && (v = g.depth), p.setLayout({
        depth: y ? g.depth : h
      }, !0), i === "vertical" ? p.setLayout({
        dy: t
      }, !0) : p.setLayout({
        dx: t
      }, !0);
      for (var m = 0; m < p.outEdges.length; m++) {
        var _ = p.outEdges[m], S = e.indexOf(_);
        s[S] = 0;
        var w = _.node2, x = r.indexOf(w);
        --l[x] === 0 && f.indexOf(w) < 0 && f.push(w);
      }
    }
    ++h, u = f, f = [];
  }
  for (var c = 0; c < s.length; c++)
    if (s[c] === 1)
      throw new Error("Sankey is a DAG, the original data has cycle!");
  var b = v > h - 1 ? v : h - 1;
  o && o !== "left" && oW(r, o, i, b);
  var T = i === "vertical" ? (n - t) / b : (a - t) / b;
  lW(r, T, i);
}
function gI(r) {
  var e = r.hostGraph.data.getRawDataItem(r.dataIndex);
  return e.depth != null && e.depth >= 0;
}
function oW(r, e, t, a) {
  if (e === "right") {
    for (var n = [], i = r, o = 0; i.length; ) {
      for (var s = 0; s < i.length; s++) {
        var l = i[s];
        l.setLayout({
          skNodeHeight: o
        }, !0);
        for (var u = 0; u < l.inEdges.length; u++) {
          var f = l.inEdges[u];
          n.indexOf(f.node1) < 0 && n.push(f.node1);
        }
      }
      i = n, n = [], ++o;
    }
    M(r, function(h) {
      gI(h) || h.setLayout({
        depth: Math.max(0, a - h.getLayout().skNodeHeight)
      }, !0);
    });
  } else
    e === "justify" && sW(r, a);
}
function sW(r, e) {
  M(r, function(t) {
    !gI(t) && !t.outEdges.length && t.setLayout({
      depth: e
    }, !0);
  });
}
function lW(r, e, t) {
  M(r, function(a) {
    var n = a.getLayout().depth * e;
    t === "vertical" ? a.setLayout({
      y: n
    }, !0) : a.setLayout({
      x: n
    }, !0);
  });
}
function uW(r, e, t, a, n, i, o) {
  var s = fW(r, o);
  hW(s, e, t, a, n, o), Uv(s, n, t, a, o);
  for (var l = 1; i > 0; i--)
    l *= 0.99, cW(s, l, o), Uv(s, n, t, a, o), yW(s, l, o), Uv(s, n, t, a, o);
}
function fW(r, e) {
  var t = [], a = e === "vertical" ? "y" : "x", n = Yd(r, function(i) {
    return i.getLayout()[a];
  });
  return n.keys.sort(function(i, o) {
    return i - o;
  }), M(n.keys, function(i) {
    t.push(n.buckets.get(i));
  }), t;
}
function hW(r, e, t, a, n, i) {
  var o = 1 / 0;
  M(r, function(s) {
    var l = s.length, u = 0;
    M(s, function(h) {
      u += h.getLayout().value;
    });
    var f = i === "vertical" ? (a - (l - 1) * n) / u : (t - (l - 1) * n) / u;
    f < o && (o = f);
  }), M(r, function(s) {
    M(s, function(l, u) {
      var f = l.getLayout().value * o;
      i === "vertical" ? (l.setLayout({
        x: u
      }, !0), l.setLayout({
        dx: f
      }, !0)) : (l.setLayout({
        y: u
      }, !0), l.setLayout({
        dy: f
      }, !0));
    });
  }), M(e, function(s) {
    var l = +s.getValue() * o;
    s.setLayout({
      dy: l
    }, !0);
  });
}
function Uv(r, e, t, a, n) {
  var i = n === "vertical" ? "x" : "y";
  M(r, function(o) {
    o.sort(function(p, g) {
      return p.getLayout()[i] - g.getLayout()[i];
    });
    for (var s, l, u, f = 0, h = o.length, c = n === "vertical" ? "dx" : "dy", v = 0; v < h; v++)
      l = o[v], u = f - l.getLayout()[i], u > 0 && (s = l.getLayout()[i] + u, n === "vertical" ? l.setLayout({
        x: s
      }, !0) : l.setLayout({
        y: s
      }, !0)), f = l.getLayout()[i] + l.getLayout()[c] + e;
    var d = n === "vertical" ? a : t;
    if (u = f - e - d, u > 0) {
      s = l.getLayout()[i] - u, n === "vertical" ? l.setLayout({
        x: s
      }, !0) : l.setLayout({
        y: s
      }, !0), f = s;
      for (var v = h - 2; v >= 0; --v)
        l = o[v], u = l.getLayout()[i] + l.getLayout()[c] + e - f, u > 0 && (s = l.getLayout()[i] - u, n === "vertical" ? l.setLayout({
          x: s
        }, !0) : l.setLayout({
          y: s
        }, !0)), f = l.getLayout()[i];
    }
  });
}
function cW(r, e, t) {
  M(r.slice().reverse(), function(a) {
    M(a, function(n) {
      if (n.outEdges.length) {
        var i = Ka(n.outEdges, vW, t) / Ka(n.outEdges, Uf);
        if (isNaN(i)) {
          var o = n.outEdges.length;
          i = o ? Ka(n.outEdges, dW, t) / o : 0;
        }
        if (t === "vertical") {
          var s = n.getLayout().x + (i - on(n, t)) * e;
          n.setLayout({
            x: s
          }, !0);
        } else {
          var l = n.getLayout().y + (i - on(n, t)) * e;
          n.setLayout({
            y: l
          }, !0);
        }
      }
    });
  });
}
function vW(r, e) {
  return on(r.node2, e) * r.getValue();
}
function dW(r, e) {
  return on(r.node2, e);
}
function pW(r, e) {
  return on(r.node1, e) * r.getValue();
}
function gW(r, e) {
  return on(r.node1, e);
}
function on(r, e) {
  return e === "vertical" ? r.getLayout().x + r.getLayout().dx / 2 : r.getLayout().y + r.getLayout().dy / 2;
}
function Uf(r) {
  return r.getValue();
}
function Ka(r, e, t) {
  for (var a = 0, n = r.length, i = -1; ++i < n; ) {
    var o = +e(r[i], t);
    isNaN(o) || (a += o);
  }
  return a;
}
function yW(r, e, t) {
  M(r, function(a) {
    M(a, function(n) {
      if (n.inEdges.length) {
        var i = Ka(n.inEdges, pW, t) / Ka(n.inEdges, Uf);
        if (isNaN(i)) {
          var o = n.inEdges.length;
          i = o ? Ka(n.inEdges, gW, t) / o : 0;
        }
        if (t === "vertical") {
          var s = n.getLayout().x + (i - on(n, t)) * e;
          n.setLayout({
            x: s
          }, !0);
        } else {
          var l = n.getLayout().y + (i - on(n, t)) * e;
          n.setLayout({
            y: l
          }, !0);
        }
      }
    });
  });
}
function mW(r, e) {
  var t = e === "vertical" ? "x" : "y";
  M(r, function(a) {
    a.outEdges.sort(function(n, i) {
      return n.node2.getLayout()[t] - i.node2.getLayout()[t];
    }), a.inEdges.sort(function(n, i) {
      return n.node1.getLayout()[t] - i.node1.getLayout()[t];
    });
  }), M(r, function(a) {
    var n = 0, i = 0;
    M(a.outEdges, function(o) {
      o.setLayout({
        sy: n
      }, !0), n += o.getLayout().dy;
    }), M(a.inEdges, function(o) {
      o.setLayout({
        ty: i
      }, !0), i += o.getLayout().dy;
    });
  });
}
function _W(r) {
  r.eachSeriesByType("sankey", function(e) {
    var t = e.getGraph(), a = t.nodes, n = t.edges;
    if (a.length) {
      var i = 1 / 0, o = -1 / 0;
      M(a, function(s) {
        var l = s.getLayout().value;
        l < i && (i = l), l > o && (o = l);
      }), M(a, function(s) {
        var l = new ce({
          type: "color",
          mappingMethod: "linear",
          dataExtent: [i, o],
          visual: e.get("color")
        }), u = l.mapValueToVisual(s.getLayout().value), f = s.getModel().get(["itemStyle", "color"]);
        f != null ? (s.setVisual("color", f), s.setVisual("style", {
          fill: f
        })) : (s.setVisual("color", u), s.setVisual("style", {
          fill: u
        }));
      });
    }
    n.length && M(n, function(s) {
      var l = s.getModel().get("lineStyle");
      s.setVisual("style", l);
    });
  });
}
function SW(r) {
  r.registerChartView(J4), r.registerSeriesModel(tW), r.registerLayout(eW), r.registerVisual(_W), r.registerAction({
    type: "dragNode",
    event: "dragnode",
    // here can only use 'update' now, other value is not support in echarts.
    update: "update"
  }, function(e, t) {
    t.eachComponent({
      mainType: "series",
      subType: "sankey",
      query: e
    }, function(a) {
      a.setNodePosition(e.dataIndex, [e.localX, e.localY]);
    });
  });
}
var yI = (
  /** @class */
  function() {
    function r() {
    }
    return r.prototype.getInitialData = function(e, t) {
      var a, n = t.getComponent("xAxis", this.get("xAxisIndex")), i = t.getComponent("yAxis", this.get("yAxisIndex")), o = n.get("type"), s = i.get("type"), l;
      o === "category" ? (e.layout = "horizontal", a = n.getOrdinalMeta(), l = !0) : s === "category" ? (e.layout = "vertical", a = i.getOrdinalMeta(), l = !0) : e.layout = e.layout || "horizontal";
      var u = ["x", "y"], f = e.layout === "horizontal" ? 0 : 1, h = this._baseAxisDim = u[f], c = u[1 - f], v = [n, i], d = v[f].get("type"), p = v[1 - f].get("type"), g = e.data;
      if (g && l) {
        var y = [];
        M(g, function(S, w) {
          var x;
          z(S) ? (x = S.slice(), S.unshift(w)) : z(S.value) ? (x = V({}, S), x.value = x.value.slice(), S.value.unshift(w)) : x = S, y.push(x);
        }), e.data = y;
      }
      var m = this.defaultValueDimensions, _ = [{
        name: h,
        type: Rf(d),
        ordinalMeta: a,
        otherDims: {
          tooltip: !1,
          itemName: 0
        },
        dimsDef: ["base"]
      }, {
        name: c,
        type: Rf(p),
        dimsDef: m.slice()
      }];
      return zo(this, {
        coordDimensions: _,
        dimensionsCount: m.length + 1,
        encodeDefaulter: ot(WD, _, this)
      });
    }, r.prototype.getBaseAxis = function() {
      var e = this._baseAxisDim;
      return this.ecModel.getComponent(e + "Axis", this.get(e + "AxisIndex")).axis;
    }, r;
  }()
), mI = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t.defaultValueDimensions = [{
        name: "min",
        defaultTooltip: !0
      }, {
        name: "Q1",
        defaultTooltip: !0
      }, {
        name: "median",
        defaultTooltip: !0
      }, {
        name: "Q3",
        defaultTooltip: !0
      }, {
        name: "max",
        defaultTooltip: !0
      }], t.visualDrawType = "stroke", t;
    }
    return e.type = "series.boxplot", e.dependencies = ["xAxis", "yAxis", "grid"], e.defaultOption = {
      // zlevel: 0,
      z: 2,
      coordinateSystem: "cartesian2d",
      legendHoverLink: !0,
      layout: null,
      boxWidth: [7, 50],
      itemStyle: {
        color: "#fff",
        borderWidth: 1
      },
      emphasis: {
        scale: !0,
        itemStyle: {
          borderWidth: 2,
          shadowBlur: 5,
          shadowOffsetX: 1,
          shadowOffsetY: 1,
          shadowColor: "rgba(0,0,0,0.2)"
        }
      },
      animationDuration: 800
    }, e;
  }(Gt)
);
te(mI, yI, !0);
const xW = mI;
var wW = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, a, n) {
      var i = t.getData(), o = this.group, s = this._data;
      this._data || o.removeAll();
      var l = t.get("layout") === "horizontal" ? 1 : 0;
      i.diff(s).add(function(u) {
        if (i.hasValue(u)) {
          var f = i.getItemLayout(u), h = ux(f, i, u, l, !0);
          i.setItemGraphicEl(u, h), o.add(h);
        }
      }).update(function(u, f) {
        var h = s.getItemGraphicEl(f);
        if (!i.hasValue(u)) {
          o.remove(h);
          return;
        }
        var c = i.getItemLayout(u);
        h ? (Mr(h), _I(c, h, i, u)) : h = ux(c, i, u, l), o.add(h), i.setItemGraphicEl(u, h);
      }).remove(function(u) {
        var f = s.getItemGraphicEl(u);
        f && o.remove(f);
      }).execute(), this._data = i;
    }, e.prototype.remove = function(t) {
      var a = this.group, n = this._data;
      this._data = null, n && n.eachItemGraphicEl(function(i) {
        i && a.remove(i);
      });
    }, e.type = "boxplot", e;
  }(Vt)
), bW = (
  /** @class */
  function() {
    function r() {
    }
    return r;
  }()
), TW = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t) {
      var a = r.call(this, t) || this;
      return a.type = "boxplotBoxPath", a;
    }
    return e.prototype.getDefaultShape = function() {
      return new bW();
    }, e.prototype.buildPath = function(t, a) {
      var n = a.points, i = 0;
      for (t.moveTo(n[i][0], n[i][1]), i++; i < 4; i++)
        t.lineTo(n[i][0], n[i][1]);
      for (t.closePath(); i < n.length; i++)
        t.moveTo(n[i][0], n[i][1]), i++, t.lineTo(n[i][0], n[i][1]);
    }, e;
  }(mt)
);
function ux(r, e, t, a, n) {
  var i = r.ends, o = new TW({
    shape: {
      points: n ? DW(i, a, r) : i
    }
  });
  return _I(r, o, e, t, n), o;
}
function _I(r, e, t, a, n) {
  var i = t.hostModel, o = wl[n ? "initProps" : "updateProps"];
  o(e, {
    shape: {
      points: r.ends
    }
  }, i, a), e.useStyle(t.getItemVisual(a, "style")), e.style.strokeNoScale = !0, e.z2 = 100;
  var s = t.getItemModel(a), l = s.getModel("emphasis");
  de(e, s), Wt(e, l.get("focus"), l.get("blurScope"), l.get("disabled"));
}
function DW(r, e, t) {
  return G(r, function(a) {
    return a = a.slice(), a[e] = t.initBaseline, a;
  });
}
const CW = wW;
var Hs = M;
function AW(r) {
  var e = MW(r);
  Hs(e, function(t) {
    var a = t.seriesModels;
    a.length && (IW(t), Hs(a, function(n, i) {
      LW(n, t.boxOffsetList[i], t.boxWidthList[i]);
    }));
  });
}
function MW(r) {
  var e = [], t = [];
  return r.eachSeriesByType("boxplot", function(a) {
    var n = a.getBaseAxis(), i = vt(t, n);
    i < 0 && (i = t.length, t[i] = n, e[i] = {
      axis: n,
      seriesModels: []
    }), e[i].seriesModels.push(a);
  }), e;
}
function IW(r) {
  var e = r.axis, t = r.seriesModels, a = t.length, n = r.boxWidthList = [], i = r.boxOffsetList = [], o = [], s;
  if (e.type === "category")
    s = e.getBandWidth();
  else {
    var l = 0;
    Hs(t, function(d) {
      l = Math.max(l, d.getData().count());
    });
    var u = e.getExtent();
    s = Math.abs(u[1] - u[0]) / l;
  }
  Hs(t, function(d) {
    var p = d.get("boxWidth");
    z(p) || (p = [p, p]), o.push([H(p[0], s) || 0, H(p[1], s) || 0]);
  });
  var f = s * 0.8 - 2, h = f / a * 0.3, c = (f - h * (a - 1)) / a, v = c / 2 - f / 2;
  Hs(t, function(d, p) {
    i.push(v), v += h + c, n.push(Math.min(Math.max(c, o[p][0]), o[p][1]));
  });
}
function LW(r, e, t) {
  var a = r.coordinateSystem, n = r.getData(), i = t / 2, o = r.get("layout") === "horizontal" ? 0 : 1, s = 1 - o, l = ["x", "y"], u = n.mapDimension(l[o]), f = n.mapDimensionsAll(l[s]);
  if (u == null || f.length < 5)
    return;
  for (var h = 0; h < n.count(); h++) {
    var c = n.get(u, h), v = _(c, f[2], h), d = _(c, f[0], h), p = _(c, f[1], h), g = _(c, f[3], h), y = _(c, f[4], h), m = [];
    S(m, p, !1), S(m, g, !0), m.push(d, p, y, g), w(m, d), w(m, y), w(m, v), n.setItemLayout(h, {
      initBaseline: v[s],
      ends: m
    });
  }
  function _(x, b, T) {
    var C = n.get(b, T), D = [];
    D[o] = x, D[s] = C;
    var A;
    return isNaN(x) || isNaN(C) ? A = [NaN, NaN] : (A = a.dataToPoint(D), A[o] += e), A;
  }
  function S(x, b, T) {
    var C = b.slice(), D = b.slice();
    C[o] += i, D[o] -= i, T ? x.push(C, D) : x.push(D, C);
  }
  function w(x, b) {
    var T = b.slice(), C = b.slice();
    T[o] -= i, C[o] += i, x.push(T, C);
  }
}
function EW(r, e) {
  e = e || {};
  for (var t = [], a = [], n = e.boundIQR, i = n === "none" || n === 0, o = 0; o < r.length; o++) {
    var s = sr(r[o].slice()), l = _c(s, 0.25), u = _c(s, 0.5), f = _c(s, 0.75), h = s[0], c = s[s.length - 1], v = (n == null ? 1.5 : n) * (f - l), d = i ? h : Math.max(h, l - v), p = i ? c : Math.min(c, f + v), g = e.itemNameFormatter, y = K(g) ? g({
      value: o
    }) : $(g) ? g.replace("{value}", o + "") : o + "";
    t.push([y, d, l, u, f, p]);
    for (var m = 0; m < s.length; m++) {
      var _ = s[m];
      if (_ < d || _ > p) {
        var S = [y, _];
        a.push(S);
      }
    }
  }
  return {
    boxData: t,
    outliers: a
  };
}
var PW = {
  type: "echarts:boxplot",
  transform: function(e) {
    var t = e.upstream;
    if (t.sourceFormat !== we) {
      var a = "";
      ({}).NODE_ENV !== "production" && (a = Ie("source data is not applicable for this boxplot transform. Expect number[][].")), It(a);
    }
    var n = EW(t.getRawData(), e.config);
    return [{
      dimensions: ["ItemName", "Low", "Q1", "Q2", "Q3", "High"],
      data: n.boxData
    }, {
      data: n.outliers
    }];
  }
};
function RW(r) {
  r.registerSeriesModel(xW), r.registerChartView(CW), r.registerLayout(AW), r.registerTransform(PW);
}
var NW = ["color", "borderColor"], OW = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, a, n) {
      this.group.removeClipPath(), this._progressiveEls = null, this._updateDrawMode(t), this._isLargeDraw ? this._renderLarge(t) : this._renderNormal(t);
    }, e.prototype.incrementalPrepareRender = function(t, a, n) {
      this._clear(), this._updateDrawMode(t);
    }, e.prototype.incrementalRender = function(t, a, n, i) {
      this._progressiveEls = [], this._isLargeDraw ? this._incrementalRenderLarge(t, a) : this._incrementalRenderNormal(t, a);
    }, e.prototype.eachRendered = function(t) {
      un(this._progressiveEls || this.group, t);
    }, e.prototype._updateDrawMode = function(t) {
      var a = t.pipelineContext.large;
      (this._isLargeDraw == null || a !== this._isLargeDraw) && (this._isLargeDraw = a, this._clear());
    }, e.prototype._renderNormal = function(t) {
      var a = t.getData(), n = this._data, i = this.group, o = a.getLayout("isSimpleBox"), s = t.get("clip", !0), l = t.coordinateSystem, u = l.getArea && l.getArea();
      this._data || i.removeAll(), a.diff(n).add(function(f) {
        if (a.hasValue(f)) {
          var h = a.getItemLayout(f);
          if (s && fx(u, h))
            return;
          var c = Yv(h, f, !0);
          Bt(c, {
            shape: {
              points: h.ends
            }
          }, t, f), Zv(c, a, f, o), i.add(c), a.setItemGraphicEl(f, c);
        }
      }).update(function(f, h) {
        var c = n.getItemGraphicEl(h);
        if (!a.hasValue(f)) {
          i.remove(c);
          return;
        }
        var v = a.getItemLayout(f);
        if (s && fx(u, v)) {
          i.remove(c);
          return;
        }
        c ? (Mt(c, {
          shape: {
            points: v.ends
          }
        }, t, f), Mr(c)) : c = Yv(v), Zv(c, a, f, o), i.add(c), a.setItemGraphicEl(f, c);
      }).remove(function(f) {
        var h = n.getItemGraphicEl(f);
        h && i.remove(h);
      }).execute(), this._data = a;
    }, e.prototype._renderLarge = function(t) {
      this._clear(), hx(t, this.group);
      var a = t.get("clip", !0) ? Gh(t.coordinateSystem, !1, t) : null;
      a ? this.group.setClipPath(a) : this.group.removeClipPath();
    }, e.prototype._incrementalRenderNormal = function(t, a) {
      for (var n = a.getData(), i = n.getLayout("isSimpleBox"), o; (o = t.next()) != null; ) {
        var s = n.getItemLayout(o), l = Yv(s);
        Zv(l, n, o, i), l.incremental = !0, this.group.add(l), this._progressiveEls.push(l);
      }
    }, e.prototype._incrementalRenderLarge = function(t, a) {
      hx(a, this.group, this._progressiveEls, !0);
    }, e.prototype.remove = function(t) {
      this._clear();
    }, e.prototype._clear = function() {
      this.group.removeAll(), this._data = null;
    }, e.type = "candlestick", e;
  }(Vt)
), kW = (
  /** @class */
  function() {
    function r() {
    }
    return r;
  }()
), VW = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t) {
      var a = r.call(this, t) || this;
      return a.type = "normalCandlestickBox", a;
    }
    return e.prototype.getDefaultShape = function() {
      return new kW();
    }, e.prototype.buildPath = function(t, a) {
      var n = a.points;
      this.__simpleBox ? (t.moveTo(n[4][0], n[4][1]), t.lineTo(n[6][0], n[6][1])) : (t.moveTo(n[0][0], n[0][1]), t.lineTo(n[1][0], n[1][1]), t.lineTo(n[2][0], n[2][1]), t.lineTo(n[3][0], n[3][1]), t.closePath(), t.moveTo(n[4][0], n[4][1]), t.lineTo(n[5][0], n[5][1]), t.moveTo(n[6][0], n[6][1]), t.lineTo(n[7][0], n[7][1]));
    }, e;
  }(mt)
);
function Yv(r, e, t) {
  var a = r.ends;
  return new VW({
    shape: {
      points: t ? BW(a, r) : a
    },
    z2: 100
  });
}
function fx(r, e) {
  for (var t = !0, a = 0; a < e.ends.length; a++)
    if (r.contain(e.ends[a][0], e.ends[a][1])) {
      t = !1;
      break;
    }
  return t;
}
function Zv(r, e, t, a) {
  var n = e.getItemModel(t);
  r.useStyle(e.getItemVisual(t, "style")), r.style.strokeNoScale = !0, r.__simpleBox = a, de(r, n);
}
function BW(r, e) {
  return G(r, function(t) {
    return t = t.slice(), t[1] = e.initBaseline, t;
  });
}
var zW = (
  /** @class */
  function() {
    function r() {
    }
    return r;
  }()
), Xv = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t) {
      var a = r.call(this, t) || this;
      return a.type = "largeCandlestickBox", a;
    }
    return e.prototype.getDefaultShape = function() {
      return new zW();
    }, e.prototype.buildPath = function(t, a) {
      for (var n = a.points, i = 0; i < n.length; )
        if (this.__sign === n[i++]) {
          var o = n[i++];
          t.moveTo(o, n[i++]), t.lineTo(o, n[i++]);
        } else
          i += 3;
    }, e;
  }(mt)
);
function hx(r, e, t, a) {
  var n = r.getData(), i = n.getLayout("largePoints"), o = new Xv({
    shape: {
      points: i
    },
    __sign: 1,
    ignoreCoarsePointer: !0
  });
  e.add(o);
  var s = new Xv({
    shape: {
      points: i
    },
    __sign: -1,
    ignoreCoarsePointer: !0
  });
  e.add(s);
  var l = new Xv({
    shape: {
      points: i
    },
    __sign: 0,
    ignoreCoarsePointer: !0
  });
  e.add(l), qv(1, o, r), qv(-1, s, r), qv(0, l, r), a && (o.incremental = !0, s.incremental = !0), t && t.push(o, s);
}
function qv(r, e, t, a) {
  var n = t.get(["itemStyle", r > 0 ? "borderColor" : "borderColor0"]) || t.get(["itemStyle", r > 0 ? "color" : "color0"]);
  r === 0 && (n = t.get(["itemStyle", "borderColorDoji"]));
  var i = t.getModel("itemStyle").getItemStyle(NW);
  e.useStyle(i), e.style.fill = null, e.style.stroke = n;
}
const GW = OW;
var SI = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t.defaultValueDimensions = [{
        name: "open",
        defaultTooltip: !0
      }, {
        name: "close",
        defaultTooltip: !0
      }, {
        name: "lowest",
        defaultTooltip: !0
      }, {
        name: "highest",
        defaultTooltip: !0
      }], t;
    }
    return e.prototype.getShadowDim = function() {
      return "open";
    }, e.prototype.brushSelector = function(t, a, n) {
      var i = a.getItemLayout(t);
      return i && n.rect(i.brushRect);
    }, e.type = "series.candlestick", e.dependencies = ["xAxis", "yAxis", "grid"], e.defaultOption = {
      // zlevel: 0,
      z: 2,
      coordinateSystem: "cartesian2d",
      legendHoverLink: !0,
      // xAxisIndex: 0,
      // yAxisIndex: 0,
      layout: null,
      clip: !0,
      itemStyle: {
        color: "#eb5454",
        color0: "#47b262",
        borderColor: "#eb5454",
        borderColor0: "#47b262",
        borderColorDoji: null,
        // borderColor: '#d24040',
        // borderColor0: '#398f4f',
        borderWidth: 1
      },
      emphasis: {
        scale: !0,
        itemStyle: {
          borderWidth: 2
        }
      },
      barMaxWidth: null,
      barMinWidth: null,
      barWidth: null,
      large: !0,
      largeThreshold: 600,
      progressive: 3e3,
      progressiveThreshold: 1e4,
      progressiveChunkMode: "mod",
      animationEasing: "linear",
      animationDuration: 300
    }, e;
  }(Gt)
);
te(SI, yI, !0);
const FW = SI;
function HW(r) {
  !r || !z(r.series) || M(r.series, function(e) {
    j(e) && e.type === "k" && (e.type = "candlestick");
  });
}
var WW = ["itemStyle", "borderColor"], $W = ["itemStyle", "borderColor0"], UW = ["itemStyle", "borderColorDoji"], YW = ["itemStyle", "color"], ZW = ["itemStyle", "color0"], XW = {
  seriesType: "candlestick",
  plan: ko(),
  // For legend.
  performRawSeries: !0,
  reset: function(r, e) {
    function t(i, o) {
      return o.get(i > 0 ? YW : ZW);
    }
    function a(i, o) {
      return o.get(i === 0 ? UW : i > 0 ? WW : $W);
    }
    if (!e.isSeriesFiltered(r)) {
      var n = r.pipelineContext.large;
      return !n && {
        progress: function(i, o) {
          for (var s; (s = i.next()) != null; ) {
            var l = o.getItemModel(s), u = o.getItemLayout(s).sign, f = l.getItemStyle();
            f.fill = t(u, l), f.stroke = a(u, l) || f.fill;
            var h = o.ensureUniqueItemVisual(s, "style");
            V(h, f);
          }
        }
      };
    }
  }
};
const qW = XW;
var KW = {
  seriesType: "candlestick",
  plan: ko(),
  reset: function(r) {
    var e = r.coordinateSystem, t = r.getData(), a = jW(r, t), n = 0, i = 1, o = ["x", "y"], s = t.getDimensionIndex(t.mapDimension(o[n])), l = G(t.mapDimensionsAll(o[i]), t.getDimensionIndex, t), u = l[0], f = l[1], h = l[2], c = l[3];
    if (t.setLayout({
      candleWidth: a,
      // The value is experimented visually.
      isSimpleBox: a <= 1.3
    }), s < 0 || l.length < 4)
      return;
    return {
      progress: r.pipelineContext.large ? d : v
    };
    function v(p, g) {
      for (var y, m = g.getStore(); (y = p.next()) != null; ) {
        var _ = m.get(s, y), S = m.get(u, y), w = m.get(f, y), x = m.get(h, y), b = m.get(c, y), T = Math.min(S, w), C = Math.max(S, w), D = k(T, _), A = k(C, _), I = k(x, _), L = k(b, _), E = [];
        O(E, A, 0), O(E, D, 1), E.push(F(L), F(A), F(I), F(D));
        var P = g.getItemModel(y), R = !!P.get(["itemStyle", "borderColorDoji"]);
        g.setItemLayout(y, {
          sign: cx(m, y, S, w, f, R),
          initBaseline: S > w ? A[i] : D[i],
          ends: E,
          brushRect: B(x, b, _)
        });
      }
      function k(W, Z) {
        var Q = [];
        return Q[n] = Z, Q[i] = W, isNaN(Z) || isNaN(W) ? [NaN, NaN] : e.dataToPoint(Q);
      }
      function O(W, Z, Q) {
        var tt = Z.slice(), dt = Z.slice();
        tt[n] = Xu(tt[n] + a / 2, 1, !1), dt[n] = Xu(dt[n] - a / 2, 1, !0), Q ? W.push(tt, dt) : W.push(dt, tt);
      }
      function B(W, Z, Q) {
        var tt = k(W, Q), dt = k(Z, Q);
        return tt[n] -= a / 2, dt[n] -= a / 2, {
          x: tt[0],
          y: tt[1],
          width: a,
          height: dt[1] - tt[1]
        };
      }
      function F(W) {
        return W[n] = Xu(W[n], 1), W;
      }
    }
    function d(p, g) {
      for (var y = Wr(p.count * 4), m = 0, _, S = [], w = [], x, b = g.getStore(), T = !!r.get(["itemStyle", "borderColorDoji"]); (x = p.next()) != null; ) {
        var C = b.get(s, x), D = b.get(u, x), A = b.get(f, x), I = b.get(h, x), L = b.get(c, x);
        if (isNaN(C) || isNaN(I) || isNaN(L)) {
          y[m++] = NaN, m += 3;
          continue;
        }
        y[m++] = cx(b, x, D, A, f, T), S[n] = C, S[i] = I, _ = e.dataToPoint(S, null, w), y[m++] = _ ? _[0] : NaN, y[m++] = _ ? _[1] : NaN, S[i] = L, _ = e.dataToPoint(S, null, w), y[m++] = _ ? _[1] : NaN;
      }
      g.setLayout("largePoints", y);
    }
  }
};
function cx(r, e, t, a, n, i) {
  var o;
  return t > a ? o = -1 : t < a ? o = 1 : o = i ? 0 : e > 0 ? r.get(n, e - 1) <= a ? 1 : -1 : (
    // No record of previous, set to be positive
    1
  ), o;
}
function jW(r, e) {
  var t = r.getBaseAxis(), a, n = t.type === "category" ? t.getBandWidth() : (a = t.getExtent(), Math.abs(a[1] - a[0]) / e.count()), i = H(ft(r.get("barMaxWidth"), n), n), o = H(ft(r.get("barMinWidth"), 1), n), s = r.get("barWidth");
  return s != null ? H(s, n) : Math.max(Math.min(n / 2, i), o);
}
const JW = KW;
function QW(r) {
  r.registerChartView(GW), r.registerSeriesModel(FW), r.registerPreprocessor(HW), r.registerVisual(qW), r.registerLayout(JW);
}
function vx(r, e) {
  var t = e.rippleEffectColor || e.color;
  r.eachChild(function(a) {
    a.attr({
      z: e.z,
      zlevel: e.zlevel,
      style: {
        stroke: e.brushType === "stroke" ? t : null,
        fill: e.brushType === "fill" ? t : null
      }
    });
  });
}
var t$ = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t, a) {
      var n = r.call(this) || this, i = new Al(t, a), o = new nt();
      return n.add(i), n.add(o), n.updateData(t, a), n;
    }
    return e.prototype.stopEffectAnimation = function() {
      this.childAt(1).removeAll();
    }, e.prototype.startEffectAnimation = function(t) {
      for (var a = t.symbolType, n = t.color, i = t.rippleNumber, o = this.childAt(1), s = 0; s < i; s++) {
        var l = Qt(a, -1, -1, 2, 2, n);
        l.attr({
          style: {
            strokeNoScale: !0
          },
          z2: 99,
          silent: !0,
          scaleX: 0.5,
          scaleY: 0.5
        });
        var u = -s / i * t.period + t.effectOffset;
        l.animate("", !0).when(t.period, {
          scaleX: t.rippleScale / 2,
          scaleY: t.rippleScale / 2
        }).delay(u).start(), l.animateStyle(!0).when(t.period, {
          opacity: 0
        }).delay(u).start(), o.add(l);
      }
      vx(o, t);
    }, e.prototype.updateEffectAnimation = function(t) {
      for (var a = this._effectCfg, n = this.childAt(1), i = ["symbolType", "period", "rippleScale", "rippleNumber"], o = 0; o < i.length; o++) {
        var s = i[o];
        if (a[s] !== t[s]) {
          this.stopEffectAnimation(), this.startEffectAnimation(t);
          return;
        }
      }
      vx(n, t);
    }, e.prototype.highlight = function() {
      ga(this);
    }, e.prototype.downplay = function() {
      ya(this);
    }, e.prototype.getSymbolType = function() {
      var t = this.childAt(0);
      return t && t.getSymbolType();
    }, e.prototype.updateData = function(t, a) {
      var n = this, i = t.hostModel;
      this.childAt(0).updateData(t, a);
      var o = this.childAt(1), s = t.getItemModel(a), l = t.getItemVisual(a, "symbol"), u = Bo(t.getItemVisual(a, "symbolSize")), f = t.getItemVisual(a, "style"), h = f && f.fill, c = s.getModel("emphasis");
      o.setScale(u), o.traverse(function(g) {
        g.setStyle("fill", h);
      });
      var v = xi(t.getItemVisual(a, "symbolOffset"), u);
      v && (o.x = v[0], o.y = v[1]);
      var d = t.getItemVisual(a, "symbolRotate");
      o.rotation = (d || 0) * Math.PI / 180 || 0;
      var p = {};
      p.showEffectOn = i.get("showEffectOn"), p.rippleScale = s.get(["rippleEffect", "scale"]), p.brushType = s.get(["rippleEffect", "brushType"]), p.period = s.get(["rippleEffect", "period"]) * 1e3, p.effectOffset = a / t.count(), p.z = i.getShallow("z") || 0, p.zlevel = i.getShallow("zlevel") || 0, p.symbolType = l, p.color = h, p.rippleEffectColor = s.get(["rippleEffect", "color"]), p.rippleNumber = s.get(["rippleEffect", "number"]), p.showEffectOn === "render" ? (this._effectCfg ? this.updateEffectAnimation(p) : this.startEffectAnimation(p), this._effectCfg = p) : (this._effectCfg = null, this.stopEffectAnimation(), this.onHoverStateChange = function(g) {
        g === "emphasis" ? p.showEffectOn !== "render" && n.startEffectAnimation(p) : g === "normal" && p.showEffectOn !== "render" && n.stopEffectAnimation();
      }), this._effectCfg = p, Wt(this, c.get("focus"), c.get("blurScope"), c.get("disabled"));
    }, e.prototype.fadeOut = function(t) {
      t && t();
    }, e;
  }(nt)
);
const e$ = t$;
var r$ = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.init = function() {
      this._symbolDraw = new Ml(e$);
    }, e.prototype.render = function(t, a, n) {
      var i = t.getData(), o = this._symbolDraw;
      o.updateData(i, {
        clipShape: this._getClipShape(t)
      }), this.group.add(o.group);
    }, e.prototype._getClipShape = function(t) {
      var a = t.coordinateSystem, n = a && a.getArea && a.getArea();
      return t.get("clip", !0) ? n : null;
    }, e.prototype.updateTransform = function(t, a, n) {
      var i = t.getData();
      this.group.dirty();
      var o = Il("").reset(t, a, n);
      o.progress && o.progress({
        start: 0,
        end: i.count(),
        count: i.count()
      }, i), this._symbolDraw.updateLayout();
    }, e.prototype._updateGroupTransform = function(t) {
      var a = t.coordinateSystem;
      a && a.getRoamTransform && (this.group.transform = L2(a.getRoamTransform()), this.group.decomposeTransform());
    }, e.prototype.remove = function(t, a) {
      this._symbolDraw && this._symbolDraw.remove(!0);
    }, e.type = "effectScatter", e;
  }(Vt)
);
const a$ = r$;
var n$ = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t.hasSymbolVisual = !0, t;
    }
    return e.prototype.getInitialData = function(t, a) {
      return wa(null, this, {
        useEncodeDefaulter: !0
      });
    }, e.prototype.brushSelector = function(t, a, n) {
      return n.point(a.getItemLayout(t));
    }, e.type = "series.effectScatter", e.dependencies = ["grid", "polar"], e.defaultOption = {
      coordinateSystem: "cartesian2d",
      // zlevel: 0,
      z: 2,
      legendHoverLink: !0,
      effectType: "ripple",
      progressive: 0,
      // When to show the effect, option: 'render'|'emphasis'
      showEffectOn: "render",
      clip: !0,
      // Ripple effect config
      rippleEffect: {
        period: 4,
        // Scale of ripple
        scale: 2.5,
        // Brush type can be fill or stroke
        brushType: "fill",
        // Ripple number
        number: 3
      },
      universalTransition: {
        divideShape: "clone"
      },
      // Cartesian coordinate system
      // xAxisIndex: 0,
      // yAxisIndex: 0,
      // Polar coordinate system
      // polarIndex: 0,
      // Geo coordinate system
      // geoIndex: 0,
      // symbol: null,        // 图形类型
      symbolSize: 10
      // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2
      // symbolRotate: null,  // 图形旋转控制
      // itemStyle: {
      //     opacity: 1
      // }
    }, e;
  }(Gt)
);
const i$ = n$;
function o$(r) {
  r.registerChartView(a$), r.registerSeriesModel(i$), r.registerLayout(Il("effectScatter"));
}
var s$ = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t, a, n) {
      var i = r.call(this) || this;
      return i.add(i.createLine(t, a, n)), i._updateEffectSymbol(t, a), i;
    }
    return e.prototype.createLine = function(t, a, n) {
      return new ky(t, a, n);
    }, e.prototype._updateEffectSymbol = function(t, a) {
      var n = t.getItemModel(a), i = n.getModel("effect"), o = i.get("symbolSize"), s = i.get("symbol");
      z(o) || (o = [o, o]);
      var l = t.getItemVisual(a, "style"), u = i.get("color") || l && l.stroke, f = this.childAt(1);
      this._symbolType !== s && (this.remove(f), f = Qt(s, -0.5, -0.5, 1, 1, u), f.z2 = 100, f.culling = !0, this.add(f)), f && (f.setStyle("shadowColor", u), f.setStyle(i.getItemStyle(["color"])), f.scaleX = o[0], f.scaleY = o[1], f.setColor(u), this._symbolType = s, this._symbolScale = o, this._updateEffectAnimation(t, i, a));
    }, e.prototype._updateEffectAnimation = function(t, a, n) {
      var i = this.childAt(1);
      if (i) {
        var o = t.getItemLayout(n), s = a.get("period") * 1e3, l = a.get("loop"), u = a.get("roundTrip"), f = a.get("constantSpeed"), h = jt(a.get("delay"), function(v) {
          return v / t.count() * s / 3;
        });
        if (i.ignore = !0, this._updateAnimationPoints(i, o), f > 0 && (s = this._getLineLength(i) / f * 1e3), s !== this._period || l !== this._loop || u !== this._roundTrip) {
          i.stopAnimation();
          var c = void 0;
          K(h) ? c = h(n) : c = h, i.__t > 0 && (c = -s * i.__t), this._animateSymbol(i, s, c, l, u);
        }
        this._period = s, this._loop = l, this._roundTrip = u;
      }
    }, e.prototype._animateSymbol = function(t, a, n, i, o) {
      if (a > 0) {
        t.__t = 0;
        var s = this, l = t.animate("", i).when(o ? a * 2 : a, {
          __t: o ? 2 : 1
        }).delay(n).during(function() {
          s._updateSymbolPosition(t);
        });
        i || l.done(function() {
          s.remove(t);
        }), l.start();
      }
    }, e.prototype._getLineLength = function(t) {
      return za(t.__p1, t.__cp1) + za(t.__cp1, t.__p2);
    }, e.prototype._updateAnimationPoints = function(t, a) {
      t.__p1 = a[0], t.__p2 = a[1], t.__cp1 = a[2] || [(a[0][0] + a[1][0]) / 2, (a[0][1] + a[1][1]) / 2];
    }, e.prototype.updateData = function(t, a, n) {
      this.childAt(0).updateData(t, a, n), this._updateEffectSymbol(t, a);
    }, e.prototype._updateSymbolPosition = function(t) {
      var a = t.__p1, n = t.__p2, i = t.__cp1, o = t.__t < 1 ? t.__t : 2 - t.__t, s = [t.x, t.y], l = s.slice(), u = le, f = Pd;
      s[0] = u(a[0], i[0], n[0], o), s[1] = u(a[1], i[1], n[1], o);
      var h = t.__t < 1 ? f(a[0], i[0], n[0], o) : f(n[0], i[0], a[0], 1 - o), c = t.__t < 1 ? f(a[1], i[1], n[1], o) : f(n[1], i[1], a[1], 1 - o);
      t.rotation = -Math.atan2(c, h) - Math.PI / 2, (this._symbolType === "line" || this._symbolType === "rect" || this._symbolType === "roundRect") && (t.__lastT !== void 0 && t.__lastT < t.__t ? (t.scaleY = za(l, s) * 1.05, o === 1 && (s[0] = l[0] + (s[0] - l[0]) / 2, s[1] = l[1] + (s[1] - l[1]) / 2)) : t.__lastT === 1 ? t.scaleY = 2 * za(a, s) : t.scaleY = this._symbolScale[1]), t.__lastT = t.__t, t.ignore = !1, t.x = s[0], t.y = s[1];
    }, e.prototype.updateLayout = function(t, a) {
      this.childAt(0).updateLayout(t, a);
      var n = t.getItemModel(a).getModel("effect");
      this._updateEffectAnimation(t, n, a);
    }, e;
  }(nt)
);
const xI = s$;
var l$ = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t, a, n) {
      var i = r.call(this) || this;
      return i._createPolyline(t, a, n), i;
    }
    return e.prototype._createPolyline = function(t, a, n) {
      var i = t.getItemLayout(a), o = new Fe({
        shape: {
          points: i
        }
      });
      this.add(o), this._updateCommonStl(t, a, n);
    }, e.prototype.updateData = function(t, a, n) {
      var i = t.hostModel, o = this.childAt(0), s = {
        shape: {
          points: t.getItemLayout(a)
        }
      };
      Mt(o, s, i, a), this._updateCommonStl(t, a, n);
    }, e.prototype._updateCommonStl = function(t, a, n) {
      var i = this.childAt(0), o = t.getItemModel(a), s = n && n.emphasisLineStyle, l = n && n.focus, u = n && n.blurScope, f = n && n.emphasisDisabled;
      if (!n || t.hasItemOption) {
        var h = o.getModel("emphasis");
        s = h.getModel("lineStyle").getLineStyle(), f = h.get("disabled"), l = h.get("focus"), u = h.get("blurScope");
      }
      i.useStyle(t.getItemVisual(a, "style")), i.style.fill = null, i.style.strokeNoScale = !0;
      var c = i.ensureState("emphasis");
      c.style = s, Wt(this, l, u, f);
    }, e.prototype.updateLayout = function(t, a) {
      var n = this.childAt(0);
      n.setShape("points", t.getItemLayout(a));
    }, e;
  }(nt)
);
const wI = l$;
var u$ = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t._lastFrame = 0, t._lastFramePercent = 0, t;
    }
    return e.prototype.createLine = function(t, a, n) {
      return new wI(t, a, n);
    }, e.prototype._updateAnimationPoints = function(t, a) {
      this._points = a;
      for (var n = [0], i = 0, o = 1; o < a.length; o++) {
        var s = a[o - 1], l = a[o];
        i += za(s, l), n.push(i);
      }
      if (i === 0) {
        this._length = 0;
        return;
      }
      for (var o = 0; o < n.length; o++)
        n[o] /= i;
      this._offsets = n, this._length = i;
    }, e.prototype._getLineLength = function() {
      return this._length;
    }, e.prototype._updateSymbolPosition = function(t) {
      var a = t.__t < 1 ? t.__t : 2 - t.__t, n = this._points, i = this._offsets, o = n.length;
      if (i) {
        var s = this._lastFrame, l;
        if (a < this._lastFramePercent) {
          var u = Math.min(s + 1, o - 1);
          for (l = u; l >= 0 && !(i[l] <= a); l--)
            ;
          l = Math.min(l, o - 2);
        } else {
          for (l = s; l < o && !(i[l] > a); l++)
            ;
          l = Math.min(l - 1, o - 2);
        }
        var f = (a - i[l]) / (i[l + 1] - i[l]), h = n[l], c = n[l + 1];
        t.x = h[0] * (1 - f) + f * c[0], t.y = h[1] * (1 - f) + f * c[1];
        var v = t.__t < 1 ? c[0] - h[0] : h[0] - c[0], d = t.__t < 1 ? c[1] - h[1] : h[1] - c[1];
        t.rotation = -Math.atan2(d, v) - Math.PI / 2, this._lastFrame = l, this._lastFramePercent = a, t.ignore = !1;
      }
    }, e;
  }(xI)
);
const f$ = u$;
var h$ = (
  /** @class */
  function() {
    function r() {
      this.polyline = !1, this.curveness = 0, this.segs = [];
    }
    return r;
  }()
), c$ = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t) {
      var a = r.call(this, t) || this;
      return a._off = 0, a.hoverDataIdx = -1, a;
    }
    return e.prototype.reset = function() {
      this.notClear = !1, this._off = 0;
    }, e.prototype.getDefaultStyle = function() {
      return {
        stroke: "#000",
        fill: null
      };
    }, e.prototype.getDefaultShape = function() {
      return new h$();
    }, e.prototype.buildPath = function(t, a) {
      var n = a.segs, i = a.curveness, o;
      if (a.polyline)
        for (o = this._off; o < n.length; ) {
          var s = n[o++];
          if (s > 0) {
            t.moveTo(n[o++], n[o++]);
            for (var l = 1; l < s; l++)
              t.lineTo(n[o++], n[o++]);
          }
        }
      else
        for (o = this._off; o < n.length; ) {
          var u = n[o++], f = n[o++], h = n[o++], c = n[o++];
          if (t.moveTo(u, f), i > 0) {
            var v = (u + h) / 2 - (f - c) * i, d = (f + c) / 2 - (h - u) * i;
            t.quadraticCurveTo(v, d, h, c);
          } else
            t.lineTo(h, c);
        }
      this.incremental && (this._off = o, this.notClear = !0);
    }, e.prototype.findDataIndex = function(t, a) {
      var n = this.shape, i = n.segs, o = n.curveness, s = this.style.lineWidth;
      if (n.polyline)
        for (var l = 0, u = 0; u < i.length; ) {
          var f = i[u++];
          if (f > 0)
            for (var h = i[u++], c = i[u++], v = 1; v < f; v++) {
              var d = i[u++], p = i[u++];
              if (Va(h, c, d, p, s, t, a))
                return l;
            }
          l++;
        }
      else
        for (var l = 0, u = 0; u < i.length; ) {
          var h = i[u++], c = i[u++], d = i[u++], p = i[u++];
          if (o > 0) {
            var g = (h + d) / 2 - (c - p) * o, y = (c + p) / 2 - (d - h) * o;
            if (LT(h, c, g, y, d, p, s, t, a))
              return l;
          } else if (Va(h, c, d, p, s, t, a))
            return l;
          l++;
        }
      return -1;
    }, e.prototype.contain = function(t, a) {
      var n = this.transformCoordToLocal(t, a), i = this.getBoundingRect();
      if (t = n[0], a = n[1], i.contain(t, a)) {
        var o = this.hoverDataIdx = this.findDataIndex(t, a);
        return o >= 0;
      }
      return this.hoverDataIdx = -1, !1;
    }, e.prototype.getBoundingRect = function() {
      var t = this._rect;
      if (!t) {
        for (var a = this.shape, n = a.segs, i = 1 / 0, o = 1 / 0, s = -1 / 0, l = -1 / 0, u = 0; u < n.length; ) {
          var f = n[u++], h = n[u++];
          i = Math.min(f, i), s = Math.max(f, s), o = Math.min(h, o), l = Math.max(h, l);
        }
        t = this._rect = new ct(i, o, s, l);
      }
      return t;
    }, e;
  }(mt)
), v$ = (
  /** @class */
  function() {
    function r() {
      this.group = new nt();
    }
    return r.prototype.updateData = function(e) {
      this._clear();
      var t = this._create();
      t.setShape({
        segs: e.getLayout("linesPoints")
      }), this._setCommon(t, e);
    }, r.prototype.incrementalPrepareUpdate = function(e) {
      this.group.removeAll(), this._clear();
    }, r.prototype.incrementalUpdate = function(e, t) {
      var a = this._newAdded[0], n = t.getLayout("linesPoints"), i = a && a.shape.segs;
      if (i && i.length < 2e4) {
        var o = i.length, s = new Float32Array(o + n.length);
        s.set(i), s.set(n, o), a.setShape({
          segs: s
        });
      } else {
        this._newAdded = [];
        var l = this._create();
        l.incremental = !0, l.setShape({
          segs: n
        }), this._setCommon(l, t), l.__startIndex = e.start;
      }
    }, r.prototype.remove = function() {
      this._clear();
    }, r.prototype.eachRendered = function(e) {
      this._newAdded[0] && e(this._newAdded[0]);
    }, r.prototype._create = function() {
      var e = new c$({
        cursor: "default",
        ignoreCoarsePointer: !0
      });
      return this._newAdded.push(e), this.group.add(e), e;
    }, r.prototype._setCommon = function(e, t, a) {
      var n = t.hostModel;
      e.setShape({
        polyline: n.get("polyline"),
        curveness: n.get(["lineStyle", "curveness"])
      }), e.useStyle(n.getModel("lineStyle").getLineStyle()), e.style.strokeNoScale = !0;
      var i = t.getVisual("style");
      i && i.stroke && e.setStyle("stroke", i.stroke), e.setStyle("fill", null);
      var o = it(e);
      o.seriesIndex = n.seriesIndex, e.on("mousemove", function(s) {
        o.dataIndex = null;
        var l = e.hoverDataIdx;
        l > 0 && (o.dataIndex = l + e.__startIndex);
      });
    }, r.prototype._clear = function() {
      this._newAdded = [], this.group.removeAll();
    }, r;
  }()
);
const d$ = v$;
var p$ = {
  seriesType: "lines",
  plan: ko(),
  reset: function(r) {
    var e = r.coordinateSystem;
    if (!e) {
      ({}).NODE_ENV !== "production" && ve("The lines series must have a coordinate system.");
      return;
    }
    var t = r.get("polyline"), a = r.pipelineContext.large;
    return {
      progress: function(n, i) {
        var o = [];
        if (a) {
          var s = void 0, l = n.end - n.start;
          if (t) {
            for (var u = 0, f = n.start; f < n.end; f++)
              u += r.getLineCoordsCount(f);
            s = new Float32Array(l + u * 2);
          } else
            s = new Float32Array(l * 4);
          for (var h = 0, c = [], f = n.start; f < n.end; f++) {
            var v = r.getLineCoords(f, o);
            t && (s[h++] = v);
            for (var d = 0; d < v; d++)
              c = e.dataToPoint(o[d], !1, c), s[h++] = c[0], s[h++] = c[1];
          }
          i.setLayout("linesPoints", s);
        } else
          for (var f = n.start; f < n.end; f++) {
            var p = i.getItemModel(f), v = r.getLineCoords(f, o), g = [];
            if (t)
              for (var y = 0; y < v; y++)
                g.push(e.dataToPoint(o[y]));
            else {
              g[0] = e.dataToPoint(o[0]), g[1] = e.dataToPoint(o[1]);
              var m = p.get(["lineStyle", "curveness"]);
              +m && (g[2] = [(g[0][0] + g[1][0]) / 2 - (g[0][1] - g[1][1]) * m, (g[0][1] + g[1][1]) / 2 - (g[1][0] - g[0][0]) * m]);
            }
            i.setItemLayout(f, g);
          }
      }
    };
  }
};
const bI = p$;
var g$ = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, a, n) {
      var i = t.getData(), o = this._updateLineDraw(i, t), s = t.get("zlevel"), l = t.get(["effect", "trailLength"]), u = n.getZr(), f = u.painter.getType() === "svg";
      f || u.painter.getLayer(s).clear(!0), this._lastZlevel != null && !f && u.configLayer(this._lastZlevel, {
        motionBlur: !1
      }), this._showEffect(t) && l > 0 && (f ? {}.NODE_ENV !== "production" && console.warn("SVG render mode doesn't support lines with trail effect") : u.configLayer(s, {
        motionBlur: !0,
        lastFrameAlpha: Math.max(Math.min(l / 10 + 0.9, 1), 0)
      })), o.updateData(i);
      var h = t.get("clip", !0) && Gh(t.coordinateSystem, !1, t);
      h ? this.group.setClipPath(h) : this.group.removeClipPath(), this._lastZlevel = s, this._finished = !0;
    }, e.prototype.incrementalPrepareRender = function(t, a, n) {
      var i = t.getData(), o = this._updateLineDraw(i, t);
      o.incrementalPrepareUpdate(i), this._clearLayer(n), this._finished = !1;
    }, e.prototype.incrementalRender = function(t, a, n) {
      this._lineDraw.incrementalUpdate(t, a.getData()), this._finished = t.end === a.getData().count();
    }, e.prototype.eachRendered = function(t) {
      this._lineDraw && this._lineDraw.eachRendered(t);
    }, e.prototype.updateTransform = function(t, a, n) {
      var i = t.getData(), o = t.pipelineContext;
      if (!this._finished || o.large || o.progressiveRender)
        return {
          update: !0
        };
      var s = bI.reset(t, a, n);
      s.progress && s.progress({
        start: 0,
        end: i.count(),
        count: i.count()
      }, i), this._lineDraw.updateLayout(), this._clearLayer(n);
    }, e.prototype._updateLineDraw = function(t, a) {
      var n = this._lineDraw, i = this._showEffect(a), o = !!a.get("polyline"), s = a.pipelineContext, l = s.large;
      return {}.NODE_ENV !== "production" && i && l && console.warn("Large lines not support effect"), (!n || i !== this._hasEffet || o !== this._isPolyline || l !== this._isLargeDraw) && (n && n.remove(), n = this._lineDraw = l ? new d$() : new Vy(o ? i ? f$ : wI : i ? xI : ky), this._hasEffet = i, this._isPolyline = o, this._isLargeDraw = l), this.group.add(n.group), n;
    }, e.prototype._showEffect = function(t) {
      return !!t.get(["effect", "show"]);
    }, e.prototype._clearLayer = function(t) {
      var a = t.getZr(), n = a.painter.getType() === "svg";
      !n && this._lastZlevel != null && a.painter.getLayer(this._lastZlevel).clear(!0);
    }, e.prototype.remove = function(t, a) {
      this._lineDraw && this._lineDraw.remove(), this._lineDraw = null, this._clearLayer(a);
    }, e.prototype.dispose = function(t, a) {
      this.remove(t, a);
    }, e.type = "lines", e;
  }(Vt)
);
const y$ = g$;
var m$ = typeof Uint32Array > "u" ? Array : Uint32Array, _$ = typeof Float64Array > "u" ? Array : Float64Array;
function dx(r) {
  var e = r.data;
  e && e[0] && e[0][0] && e[0][0].coord && ({}.NODE_ENV !== "production" && console.warn("Lines data configuration has been changed to { coords:[[1,2],[2,3]] }"), r.data = G(e, function(t) {
    var a = [t[0].coord, t[1].coord], n = {
      coords: a
    };
    return t[0].name && (n.fromName = t[0].name), t[1].name && (n.toName = t[1].name), vg([n, t[0], t[1]]);
  }));
}
var S$ = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t.visualStyleAccessPath = "lineStyle", t.visualDrawType = "stroke", t;
    }
    return e.prototype.init = function(t) {
      t.data = t.data || [], dx(t);
      var a = this._processFlatCoordsArray(t.data);
      this._flatCoords = a.flatCoords, this._flatCoordsOffset = a.flatCoordsOffset, a.flatCoords && (t.data = new Float32Array(a.count)), r.prototype.init.apply(this, arguments);
    }, e.prototype.mergeOption = function(t) {
      if (dx(t), t.data) {
        var a = this._processFlatCoordsArray(t.data);
        this._flatCoords = a.flatCoords, this._flatCoordsOffset = a.flatCoordsOffset, a.flatCoords && (t.data = new Float32Array(a.count));
      }
      r.prototype.mergeOption.apply(this, arguments);
    }, e.prototype.appendData = function(t) {
      var a = this._processFlatCoordsArray(t.data);
      a.flatCoords && (this._flatCoords ? (this._flatCoords = sf(this._flatCoords, a.flatCoords), this._flatCoordsOffset = sf(this._flatCoordsOffset, a.flatCoordsOffset)) : (this._flatCoords = a.flatCoords, this._flatCoordsOffset = a.flatCoordsOffset), t.data = new Float32Array(a.count)), this.getRawData().appendData(t.data);
    }, e.prototype._getCoordsFromItemModel = function(t) {
      var a = this.getData().getItemModel(t), n = a.option instanceof Array ? a.option : a.getShallow("coords");
      if ({}.NODE_ENV !== "production" && !(n instanceof Array && n.length > 0 && n[0] instanceof Array))
        throw new Error("Invalid coords " + JSON.stringify(n) + ". Lines must have 2d coords array in data item.");
      return n;
    }, e.prototype.getLineCoordsCount = function(t) {
      return this._flatCoordsOffset ? this._flatCoordsOffset[t * 2 + 1] : this._getCoordsFromItemModel(t).length;
    }, e.prototype.getLineCoords = function(t, a) {
      if (this._flatCoordsOffset) {
        for (var n = this._flatCoordsOffset[t * 2], i = this._flatCoordsOffset[t * 2 + 1], o = 0; o < i; o++)
          a[o] = a[o] || [], a[o][0] = this._flatCoords[n + o * 2], a[o][1] = this._flatCoords[n + o * 2 + 1];
        return i;
      } else {
        for (var s = this._getCoordsFromItemModel(t), o = 0; o < s.length; o++)
          a[o] = a[o] || [], a[o][0] = s[o][0], a[o][1] = s[o][1];
        return s.length;
      }
    }, e.prototype._processFlatCoordsArray = function(t) {
      var a = 0;
      if (this._flatCoords && (a = this._flatCoords.length), At(t[0])) {
        for (var n = t.length, i = new m$(n), o = new _$(n), s = 0, l = 0, u = 0, f = 0; f < n; ) {
          u++;
          var h = t[f++];
          i[l++] = s + a, i[l++] = h;
          for (var c = 0; c < h; c++) {
            var v = t[f++], d = t[f++];
            if (o[s++] = v, o[s++] = d, f > n && {}.NODE_ENV !== "production")
              throw new Error("Invalid data format.");
          }
        }
        return {
          flatCoordsOffset: new Uint32Array(i.buffer, 0, l),
          flatCoords: o,
          count: u
        };
      }
      return {
        flatCoordsOffset: null,
        flatCoords: null,
        count: t.length
      };
    }, e.prototype.getInitialData = function(t, a) {
      if ({}.NODE_ENV !== "production") {
        var n = Oo.get(t.coordinateSystem);
        if (!n)
          throw new Error("Unknown coordinate system " + t.coordinateSystem);
      }
      var i = new Me(["value"], this);
      return i.hasItemOption = !1, i.initData(t.data, [], function(o, s, l, u) {
        if (o instanceof Array)
          return NaN;
        i.hasItemOption = !0;
        var f = o.value;
        if (f != null)
          return f instanceof Array ? f[u] : f;
      }), i;
    }, e.prototype.formatTooltip = function(t, a, n) {
      var i = this.getData(), o = i.getItemModel(t), s = o.get("name");
      if (s)
        return s;
      var l = o.get("fromName"), u = o.get("toName"), f = [];
      return l != null && f.push(l), u != null && f.push(u), se("nameValue", {
        name: f.join(" > ")
      });
    }, e.prototype.preventIncremental = function() {
      return !!this.get(["effect", "show"]);
    }, e.prototype.getProgressive = function() {
      var t = this.option.progressive;
      return t == null ? this.option.large ? 1e4 : this.get("progressive") : t;
    }, e.prototype.getProgressiveThreshold = function() {
      var t = this.option.progressiveThreshold;
      return t == null ? this.option.large ? 2e4 : this.get("progressiveThreshold") : t;
    }, e.prototype.getZLevelKey = function() {
      var t = this.getModel("effect"), a = t.get("trailLength");
      return this.getData().count() > this.getProgressiveThreshold() ? this.id : t.get("show") && a > 0 ? a + "" : "";
    }, e.type = "series.lines", e.dependencies = ["grid", "polar", "geo", "calendar"], e.defaultOption = {
      coordinateSystem: "geo",
      // zlevel: 0,
      z: 2,
      legendHoverLink: !0,
      // Cartesian coordinate system
      xAxisIndex: 0,
      yAxisIndex: 0,
      symbol: ["none", "none"],
      symbolSize: [10, 10],
      // Geo coordinate system
      geoIndex: 0,
      effect: {
        show: !1,
        period: 4,
        constantSpeed: 0,
        symbol: "circle",
        symbolSize: 3,
        loop: !0,
        trailLength: 0.2
      },
      large: !1,
      // Available when large is true
      largeThreshold: 2e3,
      polyline: !1,
      clip: !0,
      label: {
        show: !1,
        position: "end"
        // distance: 5,
        // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调
      },
      lineStyle: {
        opacity: 0.5
      }
    }, e;
  }(Gt)
);
const x$ = S$;
function Mu(r) {
  return r instanceof Array || (r = [r, r]), r;
}
var w$ = {
  seriesType: "lines",
  reset: function(r) {
    var e = Mu(r.get("symbol")), t = Mu(r.get("symbolSize")), a = r.getData();
    a.setVisual("fromSymbol", e && e[0]), a.setVisual("toSymbol", e && e[1]), a.setVisual("fromSymbolSize", t && t[0]), a.setVisual("toSymbolSize", t && t[1]);
    function n(i, o) {
      var s = i.getItemModel(o), l = Mu(s.getShallow("symbol", !0)), u = Mu(s.getShallow("symbolSize", !0));
      l[0] && i.setItemVisual(o, "fromSymbol", l[0]), l[1] && i.setItemVisual(o, "toSymbol", l[1]), u[0] && i.setItemVisual(o, "fromSymbolSize", u[0]), u[1] && i.setItemVisual(o, "toSymbolSize", u[1]);
    }
    return {
      dataEach: a.hasItemOption ? n : null
    };
  }
};
const b$ = w$;
function T$(r) {
  r.registerChartView(y$), r.registerSeriesModel(x$), r.registerLayout(bI), r.registerVisual(b$);
}
var D$ = 256, C$ = (
  /** @class */
  function() {
    function r() {
      this.blurSize = 30, this.pointSize = 20, this.maxOpacity = 1, this.minOpacity = 0, this._gradientPixels = {
        inRange: null,
        outOfRange: null
      };
      var e = Ja.createCanvas();
      this.canvas = e;
    }
    return r.prototype.update = function(e, t, a, n, i, o) {
      var s = this._getBrush(), l = this._getGradient(i, "inRange"), u = this._getGradient(i, "outOfRange"), f = this.pointSize + this.blurSize, h = this.canvas, c = h.getContext("2d"), v = e.length;
      h.width = t, h.height = a;
      for (var d = 0; d < v; ++d) {
        var p = e[d], g = p[0], y = p[1], m = p[2], _ = n(m);
        c.globalAlpha = _, c.drawImage(s, g - f, y - f);
      }
      if (!h.width || !h.height)
        return h;
      for (var S = c.getImageData(0, 0, h.width, h.height), w = S.data, x = 0, b = w.length, T = this.minOpacity, C = this.maxOpacity, D = C - T; x < b; ) {
        var _ = w[x + 3] / 256, A = Math.floor(_ * (D$ - 1)) * 4;
        if (_ > 0) {
          var I = o(_) ? l : u;
          _ > 0 && (_ = _ * D + T), w[x++] = I[A], w[x++] = I[A + 1], w[x++] = I[A + 2], w[x++] = I[A + 3] * _ * 256;
        } else
          x += 4;
      }
      return c.putImageData(S, 0, 0), h;
    }, r.prototype._getBrush = function() {
      var e = this._brushCanvas || (this._brushCanvas = Ja.createCanvas()), t = this.pointSize + this.blurSize, a = t * 2;
      e.width = a, e.height = a;
      var n = e.getContext("2d");
      return n.clearRect(0, 0, a, a), n.shadowOffsetX = a, n.shadowBlur = this.blurSize, n.shadowColor = "#000", n.beginPath(), n.arc(-t, t, this.pointSize, 0, Math.PI * 2, !0), n.closePath(), n.fill(), e;
    }, r.prototype._getGradient = function(e, t) {
      for (var a = this._gradientPixels, n = a[t] || (a[t] = new Uint8ClampedArray(256 * 4)), i = [0, 0, 0, 0], o = 0, s = 0; s < 256; s++)
        e[t](s / 255, !0, i), n[o++] = i[0], n[o++] = i[1], n[o++] = i[2], n[o++] = i[3];
      return n;
    }, r;
  }()
);
const A$ = C$;
function M$(r, e, t) {
  var a = r[1] - r[0];
  e = G(e, function(o) {
    return {
      interval: [(o.interval[0] - r[0]) / a, (o.interval[1] - r[0]) / a]
    };
  });
  var n = e.length, i = 0;
  return function(o) {
    var s;
    for (s = i; s < n; s++) {
      var l = e[s].interval;
      if (l[0] <= o && o <= l[1]) {
        i = s;
        break;
      }
    }
    if (s === n)
      for (s = i - 1; s >= 0; s--) {
        var l = e[s].interval;
        if (l[0] <= o && o <= l[1]) {
          i = s;
          break;
        }
      }
    return s >= 0 && s < n && t[s];
  };
}
function I$(r, e) {
  var t = r[1] - r[0];
  return e = [(e[0] - r[0]) / t, (e[1] - r[0]) / t], function(a) {
    return a >= e[0] && a <= e[1];
  };
}
function px(r) {
  var e = r.dimensions;
  return e[0] === "lng" && e[1] === "lat";
}
var L$ = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, a, n) {
      var i;
      if (a.eachComponent("visualMap", function(s) {
        s.eachTargetSeries(function(l) {
          l === t && (i = s);
        });
      }), {}.NODE_ENV !== "production" && !i)
        throw new Error("Heatmap must use with visualMap");
      this._progressiveEls = null, this.group.removeAll();
      var o = t.coordinateSystem;
      o.type === "cartesian2d" || o.type === "calendar" ? this._renderOnCartesianAndCalendar(t, n, 0, t.getData().count()) : px(o) && this._renderOnGeo(o, t, i, n);
    }, e.prototype.incrementalPrepareRender = function(t, a, n) {
      this.group.removeAll();
    }, e.prototype.incrementalRender = function(t, a, n, i) {
      var o = a.coordinateSystem;
      o && (px(o) ? this.render(a, n, i) : (this._progressiveEls = [], this._renderOnCartesianAndCalendar(a, i, t.start, t.end, !0)));
    }, e.prototype.eachRendered = function(t) {
      un(this._progressiveEls || this.group, t);
    }, e.prototype._renderOnCartesianAndCalendar = function(t, a, n, i, o) {
      var s = t.coordinateSystem, l = bi(s, "cartesian2d"), u, f, h, c;
      if (l) {
        var v = s.getAxis("x"), d = s.getAxis("y");
        if ({}.NODE_ENV !== "production") {
          if (!(v.type === "category" && d.type === "category"))
            throw new Error("Heatmap on cartesian must have two category axes");
          if (!(v.onBand && d.onBand))
            throw new Error("Heatmap on cartesian must have two axes with boundaryGap true");
        }
        u = v.getBandWidth() + 0.5, f = d.getBandWidth() + 0.5, h = v.scale.getExtent(), c = d.scale.getExtent();
      }
      for (var p = this.group, g = t.getData(), y = t.getModel(["emphasis", "itemStyle"]).getItemStyle(), m = t.getModel(["blur", "itemStyle"]).getItemStyle(), _ = t.getModel(["select", "itemStyle"]).getItemStyle(), S = t.get(["itemStyle", "borderRadius"]), w = oe(t), x = t.getModel("emphasis"), b = x.get("focus"), T = x.get("blurScope"), C = x.get("disabled"), D = l ? [g.mapDimension("x"), g.mapDimension("y"), g.mapDimension("value")] : [g.mapDimension("time"), g.mapDimension("value")], A = n; A < i; A++) {
        var I = void 0, L = g.getItemVisual(A, "style");
        if (l) {
          var E = g.get(D[0], A), P = g.get(D[1], A);
          if (isNaN(g.get(D[2], A)) || isNaN(E) || isNaN(P) || E < h[0] || E > h[1] || P < c[0] || P > c[1])
            continue;
          var R = s.dataToPoint([E, P]);
          I = new Tt({
            shape: {
              x: R[0] - u / 2,
              y: R[1] - f / 2,
              width: u,
              height: f
            },
            style: L
          });
        } else {
          if (isNaN(g.get(D[1], A)))
            continue;
          I = new Tt({
            z2: 1,
            shape: s.dataToRect([g.get(D[0], A)]).contentShape,
            style: L
          });
        }
        if (g.hasItemOption) {
          var k = g.getItemModel(A), O = k.getModel("emphasis");
          y = O.getModel("itemStyle").getItemStyle(), m = k.getModel(["blur", "itemStyle"]).getItemStyle(), _ = k.getModel(["select", "itemStyle"]).getItemStyle(), S = k.get(["itemStyle", "borderRadius"]), b = O.get("focus"), T = O.get("blurScope"), C = O.get("disabled"), w = oe(k);
        }
        I.shape.r = S;
        var B = t.getRawValue(A), F = "-";
        B && B[2] != null && (F = B[2] + ""), pe(I, w, {
          labelFetcher: t,
          labelDataIndex: A,
          defaultOpacity: L.opacity,
          defaultText: F
        }), I.ensureState("emphasis").style = y, I.ensureState("blur").style = m, I.ensureState("select").style = _, Wt(I, b, T, C), I.incremental = o, o && (I.states.emphasis.hoverLayer = !0), p.add(I), g.setItemGraphicEl(A, I), this._progressiveEls && this._progressiveEls.push(I);
      }
    }, e.prototype._renderOnGeo = function(t, a, n, i) {
      var o = n.targetVisuals.inRange, s = n.targetVisuals.outOfRange, l = a.getData(), u = this._hmLayer || this._hmLayer || new A$();
      u.blurSize = a.get("blurSize"), u.pointSize = a.get("pointSize"), u.minOpacity = a.get("minOpacity"), u.maxOpacity = a.get("maxOpacity");
      var f = t.getViewRect().clone(), h = t.getRoamTransform();
      f.applyTransform(h);
      var c = Math.max(f.x, 0), v = Math.max(f.y, 0), d = Math.min(f.width + f.x, i.getWidth()), p = Math.min(f.height + f.y, i.getHeight()), g = d - c, y = p - v, m = [l.mapDimension("lng"), l.mapDimension("lat"), l.mapDimension("value")], _ = l.mapArray(m, function(b, T, C) {
        var D = t.dataToPoint([b, T]);
        return D[0] -= c, D[1] -= v, D.push(C), D;
      }), S = n.getExtent(), w = n.type === "visualMap.continuous" ? I$(S, n.option.range) : M$(S, n.getPieceList(), n.option.selected);
      u.update(_, g, y, o.color.getNormalizer(), {
        inRange: o.color.getColorMapper(),
        outOfRange: s.color.getColorMapper()
      }, w);
      var x = new ge({
        style: {
          width: g,
          height: y,
          x: c,
          y: v,
          image: u.canvas
        },
        silent: !0
      });
      this.group.add(x);
    }, e.type = "heatmap", e;
  }(Vt)
);
const E$ = L$;
var P$ = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.getInitialData = function(t, a) {
      return wa(null, this, {
        generateCoord: "value"
      });
    }, e.prototype.preventIncremental = function() {
      var t = Oo.get(this.get("coordinateSystem"));
      if (t && t.dimensions)
        return t.dimensions[0] === "lng" && t.dimensions[1] === "lat";
    }, e.type = "series.heatmap", e.dependencies = ["grid", "geo", "calendar"], e.defaultOption = {
      coordinateSystem: "cartesian2d",
      // zlevel: 0,
      z: 2,
      // Cartesian coordinate system
      // xAxisIndex: 0,
      // yAxisIndex: 0,
      // Geo coordinate system
      geoIndex: 0,
      blurSize: 30,
      pointSize: 20,
      maxOpacity: 1,
      minOpacity: 0,
      select: {
        itemStyle: {
          borderColor: "#212121"
        }
      }
    }, e;
  }(Gt)
);
const R$ = P$;
function N$(r) {
  r.registerChartView(E$), r.registerSeriesModel(R$);
}
var O$ = ["itemStyle", "borderWidth"], gx = [{
  xy: "x",
  wh: "width",
  index: 0,
  posDesc: ["left", "right"]
}, {
  xy: "y",
  wh: "height",
  index: 1,
  posDesc: ["top", "bottom"]
}], Kv = new jr(), k$ = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, a, n) {
      var i = this.group, o = t.getData(), s = this._data, l = t.coordinateSystem, u = l.getBaseAxis(), f = u.isHorizontal(), h = l.master.getRect(), c = {
        ecSize: {
          width: n.getWidth(),
          height: n.getHeight()
        },
        seriesModel: t,
        coordSys: l,
        coordSysExtent: [[h.x, h.x + h.width], [h.y, h.y + h.height]],
        isHorizontal: f,
        valueDim: gx[+f],
        categoryDim: gx[1 - +f]
      };
      return o.diff(s).add(function(v) {
        if (o.hasValue(v)) {
          var d = mx(o, v), p = yx(o, v, d, c), g = _x(o, c, p);
          o.setItemGraphicEl(v, g), i.add(g), xx(g, c, p);
        }
      }).update(function(v, d) {
        var p = s.getItemGraphicEl(d);
        if (!o.hasValue(v)) {
          i.remove(p);
          return;
        }
        var g = mx(o, v), y = yx(o, v, g, c), m = II(o, y);
        p && m !== p.__pictorialShapeStr && (i.remove(p), o.setItemGraphicEl(v, null), p = null), p ? W$(p, c, y) : p = _x(o, c, y, !0), o.setItemGraphicEl(v, p), p.__pictorialSymbolMeta = y, i.add(p), xx(p, c, y);
      }).remove(function(v) {
        var d = s.getItemGraphicEl(v);
        d && Sx(s, v, d.__pictorialSymbolMeta.animationModel, d);
      }).execute(), this._data = o, this.group;
    }, e.prototype.remove = function(t, a) {
      var n = this.group, i = this._data;
      t.get("animation") ? i && i.eachItemGraphicEl(function(o) {
        Sx(i, it(o).dataIndex, t, o);
      }) : n.removeAll();
    }, e.type = "pictorialBar", e;
  }(Vt)
);
function yx(r, e, t, a) {
  var n = r.getItemLayout(e), i = t.get("symbolRepeat"), o = t.get("symbolClip"), s = t.get("symbolPosition") || "start", l = t.get("symbolRotate"), u = (l || 0) * Math.PI / 180 || 0, f = t.get("symbolPatternSize") || 2, h = t.isAnimationEnabled(), c = {
    dataIndex: e,
    layout: n,
    itemModel: t,
    symbolType: r.getItemVisual(e, "symbol") || "circle",
    style: r.getItemVisual(e, "style"),
    symbolClip: o,
    symbolRepeat: i,
    symbolRepeatDirection: t.get("symbolRepeatDirection"),
    symbolPatternSize: f,
    rotation: u,
    animationModel: h ? t : null,
    hoverScale: h && t.get(["emphasis", "scale"]),
    z2: t.getShallow("z", !0) || 0
  };
  V$(t, i, n, a, c), B$(r, e, n, i, o, c.boundingLength, c.pxSign, f, a, c), z$(t, c.symbolScale, u, a, c);
  var v = c.symbolSize, d = xi(t.get("symbolOffset"), v);
  return G$(t, v, n, i, o, d, s, c.valueLineWidth, c.boundingLength, c.repeatCutLength, a, c), c;
}
function V$(r, e, t, a, n) {
  var i = a.valueDim, o = r.get("symbolBoundingData"), s = a.coordSys.getOtherAxis(a.coordSys.getBaseAxis()), l = s.toGlobalCoord(s.dataToCoord(0)), u = 1 - +(t[i.wh] <= 0), f;
  if (z(o)) {
    var h = [jv(s, o[0]) - l, jv(s, o[1]) - l];
    h[1] < h[0] && h.reverse(), f = h[u];
  } else
    o != null ? f = jv(s, o) - l : e ? f = a.coordSysExtent[i.index][u] - l : f = t[i.wh];
  n.boundingLength = f, e && (n.repeatCutLength = t[i.wh]), n.pxSign = f > 0 ? 1 : -1;
}
function jv(r, e) {
  return r.toGlobalCoord(r.dataToCoord(r.scale.parse(e)));
}
function B$(r, e, t, a, n, i, o, s, l, u) {
  var f = l.valueDim, h = l.categoryDim, c = Math.abs(t[h.wh]), v = r.getItemVisual(e, "symbolSize"), d;
  z(v) ? d = v.slice() : v == null ? d = ["100%", "100%"] : d = [v, v], d[h.index] = H(d[h.index], c), d[f.index] = H(d[f.index], a ? c : Math.abs(i)), u.symbolSize = d;
  var p = u.symbolScale = [d[0] / s, d[1] / s];
  p[f.index] *= (l.isHorizontal ? -1 : 1) * o;
}
function z$(r, e, t, a, n) {
  var i = r.get(O$) || 0;
  i && (Kv.attr({
    scaleX: e[0],
    scaleY: e[1],
    rotation: t
  }), Kv.updateTransform(), i /= Kv.getLineScale(), i *= e[a.valueDim.index]), n.valueLineWidth = i || 0;
}
function G$(r, e, t, a, n, i, o, s, l, u, f, h) {
  var c = f.categoryDim, v = f.valueDim, d = h.pxSign, p = Math.max(e[v.index] + s, 0), g = p;
  if (a) {
    var y = Math.abs(l), m = jt(r.get("symbolMargin"), "15%") + "", _ = !1;
    m.lastIndexOf("!") === m.length - 1 && (_ = !0, m = m.slice(0, m.length - 1));
    var S = H(m, e[v.index]), w = Math.max(p + S * 2, 0), x = _ ? 0 : S * 2, b = bg(a), T = b ? a : bx((y + x) / w), C = y - T * p;
    S = C / 2 / (_ ? T : Math.max(T - 1, 1)), w = p + S * 2, x = _ ? 0 : S * 2, !b && a !== "fixed" && (T = u ? bx((Math.abs(u) + x) / w) : 0), g = T * w - x, h.repeatTimes = T, h.symbolMargin = S;
  }
  var D = d * (g / 2), A = h.pathPosition = [];
  A[c.index] = t[c.wh] / 2, A[v.index] = o === "start" ? D : o === "end" ? l - D : l / 2, i && (A[0] += i[0], A[1] += i[1]);
  var I = h.bundlePosition = [];
  I[c.index] = t[c.xy], I[v.index] = t[v.xy];
  var L = h.barRectShape = V({}, t);
  L[v.wh] = d * Math.max(Math.abs(t[v.wh]), Math.abs(A[v.index] + D)), L[c.wh] = t[c.wh];
  var E = h.clipShape = {};
  E[c.xy] = -t[c.xy], E[c.wh] = f.ecSize[c.wh], E[v.xy] = 0, E[v.wh] = t[v.wh];
}
function TI(r) {
  var e = r.symbolPatternSize, t = Qt(
    // Consider texture img, make a big size.
    r.symbolType,
    -e / 2,
    -e / 2,
    e,
    e
  );
  return t.attr({
    culling: !0
  }), t.type !== "image" && t.setStyle({
    strokeNoScale: !0
  }), t;
}
function DI(r, e, t, a) {
  var n = r.__pictorialBundle, i = t.symbolSize, o = t.valueLineWidth, s = t.pathPosition, l = e.valueDim, u = t.repeatTimes || 0, f = 0, h = i[e.valueDim.index] + o + t.symbolMargin * 2;
  for (Uy(r, function(p) {
    p.__pictorialAnimationIndex = f, p.__pictorialRepeatTimes = u, f < u ? uo(p, null, d(f), t, a) : uo(p, null, {
      scaleX: 0,
      scaleY: 0
    }, t, a, function() {
      n.remove(p);
    }), f++;
  }); f < u; f++) {
    var c = TI(t);
    c.__pictorialAnimationIndex = f, c.__pictorialRepeatTimes = u, n.add(c);
    var v = d(f);
    uo(c, {
      x: v.x,
      y: v.y,
      scaleX: 0,
      scaleY: 0
    }, {
      scaleX: v.scaleX,
      scaleY: v.scaleY,
      rotation: v.rotation
    }, t, a);
  }
  function d(p) {
    var g = s.slice(), y = t.pxSign, m = p;
    return (t.symbolRepeatDirection === "start" ? y > 0 : y < 0) && (m = u - 1 - p), g[l.index] = h * (m - u / 2 + 0.5) + s[l.index], {
      x: g[0],
      y: g[1],
      scaleX: t.symbolScale[0],
      scaleY: t.symbolScale[1],
      rotation: t.rotation
    };
  }
}
function CI(r, e, t, a) {
  var n = r.__pictorialBundle, i = r.__pictorialMainPath;
  i ? uo(i, null, {
    x: t.pathPosition[0],
    y: t.pathPosition[1],
    scaleX: t.symbolScale[0],
    scaleY: t.symbolScale[1],
    rotation: t.rotation
  }, t, a) : (i = r.__pictorialMainPath = TI(t), n.add(i), uo(i, {
    x: t.pathPosition[0],
    y: t.pathPosition[1],
    scaleX: 0,
    scaleY: 0,
    rotation: t.rotation
  }, {
    scaleX: t.symbolScale[0],
    scaleY: t.symbolScale[1]
  }, t, a));
}
function AI(r, e, t) {
  var a = V({}, e.barRectShape), n = r.__pictorialBarRect;
  n ? uo(n, null, {
    shape: a
  }, e, t) : (n = r.__pictorialBarRect = new Tt({
    z2: 2,
    shape: a,
    silent: !0,
    style: {
      stroke: "transparent",
      fill: "transparent",
      lineWidth: 0
    }
  }), n.disableMorphing = !0, r.add(n));
}
function MI(r, e, t, a) {
  if (t.symbolClip) {
    var n = r.__pictorialClipPath, i = V({}, t.clipShape), o = e.valueDim, s = t.animationModel, l = t.dataIndex;
    if (n)
      Mt(n, {
        shape: i
      }, s, l);
    else {
      i[o.wh] = 0, n = new Tt({
        shape: i
      }), r.__pictorialBundle.setClipPath(n), r.__pictorialClipPath = n;
      var u = {};
      u[o.wh] = t.clipShape[o.wh], wl[a ? "updateProps" : "initProps"](n, {
        shape: u
      }, s, l);
    }
  }
}
function mx(r, e) {
  var t = r.getItemModel(e);
  return t.getAnimationDelayParams = F$, t.isAnimationEnabled = H$, t;
}
function F$(r) {
  return {
    index: r.__pictorialAnimationIndex,
    count: r.__pictorialRepeatTimes
  };
}
function H$() {
  return this.parentModel.isAnimationEnabled() && !!this.getShallow("animation");
}
function _x(r, e, t, a) {
  var n = new nt(), i = new nt();
  return n.add(i), n.__pictorialBundle = i, i.x = t.bundlePosition[0], i.y = t.bundlePosition[1], t.symbolRepeat ? DI(n, e, t) : CI(n, e, t), AI(n, t, a), MI(n, e, t, a), n.__pictorialShapeStr = II(r, t), n.__pictorialSymbolMeta = t, n;
}
function W$(r, e, t) {
  var a = t.animationModel, n = t.dataIndex, i = r.__pictorialBundle;
  Mt(i, {
    x: t.bundlePosition[0],
    y: t.bundlePosition[1]
  }, a, n), t.symbolRepeat ? DI(r, e, t, !0) : CI(r, e, t, !0), AI(r, t, !0), MI(r, e, t, !0);
}
function Sx(r, e, t, a) {
  var n = a.__pictorialBarRect;
  n && n.removeTextContent();
  var i = [];
  Uy(a, function(o) {
    i.push(o);
  }), a.__pictorialMainPath && i.push(a.__pictorialMainPath), a.__pictorialClipPath && (t = null), M(i, function(o) {
    en(o, {
      scaleX: 0,
      scaleY: 0
    }, t, e, function() {
      a.parent && a.parent.remove(a);
    });
  }), r.setItemGraphicEl(e, null);
}
function II(r, e) {
  return [r.getItemVisual(e.dataIndex, "symbol") || "none", !!e.symbolRepeat, !!e.symbolClip].join(":");
}
function Uy(r, e, t) {
  M(r.__pictorialBundle.children(), function(a) {
    a !== r.__pictorialBarRect && e.call(t, a);
  });
}
function uo(r, e, t, a, n, i) {
  e && r.attr(e), a.symbolClip && !n ? t && r.attr(t) : t && wl[n ? "updateProps" : "initProps"](r, t, a.animationModel, a.dataIndex, i);
}
function xx(r, e, t) {
  var a = t.dataIndex, n = t.itemModel, i = n.getModel("emphasis"), o = i.getModel("itemStyle").getItemStyle(), s = n.getModel(["blur", "itemStyle"]).getItemStyle(), l = n.getModel(["select", "itemStyle"]).getItemStyle(), u = n.getShallow("cursor"), f = i.get("focus"), h = i.get("blurScope"), c = i.get("scale");
  Uy(r, function(p) {
    if (p instanceof ge) {
      var g = p.style;
      p.useStyle(V({
        // TODO other properties like dx, dy ?
        image: g.image,
        x: g.x,
        y: g.y,
        width: g.width,
        height: g.height
      }, t.style));
    } else
      p.useStyle(t.style);
    var y = p.ensureState("emphasis");
    y.style = o, c && (y.scaleX = p.scaleX * 1.1, y.scaleY = p.scaleY * 1.1), p.ensureState("blur").style = s, p.ensureState("select").style = l, u && (p.cursor = u), p.z2 = t.z2;
  });
  var v = e.valueDim.posDesc[+(t.boundingLength > 0)], d = r.__pictorialBarRect;
  pe(d, oe(n), {
    labelFetcher: e.seriesModel,
    labelDataIndex: a,
    defaultText: yo(e.seriesModel.getData(), a),
    inheritColor: t.style.fill,
    defaultOpacity: t.style.opacity,
    defaultOutsidePosition: v
  }), Wt(r, f, h, i.get("disabled"));
}
function bx(r) {
  var e = Math.round(r);
  return Math.abs(r - e) < 1e-4 ? e : Math.ceil(r);
}
const $$ = k$;
var U$ = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t.hasSymbolVisual = !0, t.defaultSymbol = "roundRect", t;
    }
    return e.prototype.getInitialData = function(t) {
      return t.stack = null, r.prototype.getInitialData.apply(this, arguments);
    }, e.type = "series.pictorialBar", e.dependencies = ["grid"], e.defaultOption = fn(Bf.defaultOption, {
      symbol: "circle",
      symbolSize: null,
      symbolRotate: null,
      symbolPosition: null,
      symbolOffset: null,
      symbolMargin: null,
      symbolRepeat: !1,
      symbolRepeatDirection: "end",
      symbolClip: !1,
      symbolBoundingData: null,
      symbolPatternSize: 400,
      barGap: "-100%",
      // z can be set in data item, which is z2 actually.
      // Disable progressive
      progressive: 0,
      emphasis: {
        // By default pictorialBar do not hover scale. Hover scale is not suitable
        // for the case that both has foreground and background.
        scale: !1
      },
      select: {
        itemStyle: {
          borderColor: "#212121"
        }
      }
    }), e;
  }(Bf)
);
const Y$ = U$;
function Z$(r) {
  r.registerChartView($$), r.registerSeriesModel(Y$), r.registerLayout(r.PRIORITY.VISUAL.LAYOUT, ot(fA, "pictorialBar")), r.registerLayout(r.PRIORITY.VISUAL.PROGRESSIVE_LAYOUT, hA("pictorialBar"));
}
var X$ = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t._layers = [], t;
    }
    return e.prototype.render = function(t, a, n) {
      var i = t.getData(), o = this, s = this.group, l = t.getLayerSeries(), u = i.getLayout("layoutInfo"), f = u.rect, h = u.boundaryGap;
      s.x = 0, s.y = f.y + h[0];
      function c(g) {
        return g.name;
      }
      var v = new ma(this._layersSeries || [], l, c, c), d = [];
      v.add(Y(p, this, "add")).update(Y(p, this, "update")).remove(Y(p, this, "remove")).execute();
      function p(g, y, m) {
        var _ = o._layers;
        if (g === "remove") {
          s.remove(_[y]);
          return;
        }
        for (var S = [], w = [], x, b = l[y].indices, T = 0; T < b.length; T++) {
          var C = i.getItemLayout(b[T]), D = C.x, A = C.y0, I = C.y;
          S.push(D, A), w.push(D, A + I), x = i.getItemVisual(b[T], "style");
        }
        var L, E = i.getItemLayout(b[0]), P = t.getModel("label"), R = P.get("margin"), k = t.getModel("emphasis");
        if (g === "add") {
          var O = d[y] = new nt();
          L = new QA({
            shape: {
              points: S,
              stackedOnPoints: w,
              smooth: 0.4,
              stackedOnSmooth: 0.4,
              smoothConstraint: !1
            },
            z2: 0
          }), O.add(L), s.add(O), t.isAnimationEnabled() && L.setClipPath(q$(L.getBoundingRect(), t, function() {
            L.removeClipPath();
          }));
        } else {
          var O = _[m];
          L = O.childAt(0), s.add(O), d[y] = O, Mt(L, {
            shape: {
              points: S,
              stackedOnPoints: w
            }
          }, t), Mr(L);
        }
        pe(L, oe(t), {
          labelDataIndex: b[T - 1],
          defaultText: i.getName(b[T - 1]),
          inheritColor: x.fill
        }, {
          normal: {
            verticalAlign: "middle"
            // align: 'right'
          }
        }), L.setTextConfig({
          position: null,
          local: !0
        });
        var B = L.getTextContent();
        B && (B.x = E.x - R, B.y = E.y0 + E.y / 2), L.useStyle(x), i.setItemGraphicEl(y, L), de(L, t), Wt(L, k.get("focus"), k.get("blurScope"), k.get("disabled"));
      }
      this._layersSeries = l, this._layers = d;
    }, e.type = "themeRiver", e;
  }(Vt)
);
function q$(r, e, t) {
  var a = new Tt({
    shape: {
      x: r.x - 10,
      y: r.y - 10,
      width: 0,
      height: r.height + 20
    }
  });
  return Bt(a, {
    shape: {
      x: r.x - 50,
      width: r.width + 100,
      height: r.height + 20
    }
  }, e, t), a;
}
const K$ = X$;
var Jv = 2, j$ = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.init = function(t) {
      r.prototype.init.apply(this, arguments), this.legendVisualProvider = new El(Y(this.getData, this), Y(this.getRawData, this));
    }, e.prototype.fixData = function(t) {
      var a = t.length, n = {}, i = Yd(t, function(c) {
        return n.hasOwnProperty(c[0] + "") || (n[c[0] + ""] = -1), c[2];
      }), o = [];
      i.buckets.each(function(c, v) {
        o.push({
          name: v,
          dataList: c
        });
      });
      for (var s = o.length, l = 0; l < s; ++l) {
        for (var u = o[l].name, f = 0; f < o[l].dataList.length; ++f) {
          var h = o[l].dataList[f][0] + "";
          n[h] = l;
        }
        for (var h in n)
          n.hasOwnProperty(h) && n[h] !== l && (n[h] = l, t[a] = [h, 0, u], a++);
      }
      return t;
    }, e.prototype.getInitialData = function(t, a) {
      for (var n = this.getReferringComponents("singleAxis", Jt).models[0], i = n.get("type"), o = Et(t.data, function(d) {
        return d[2] !== void 0;
      }), s = this.fixData(o || []), l = [], u = this.nameMap = X(), f = 0, h = 0; h < s.length; ++h)
        l.push(s[h][Jv]), u.get(s[h][Jv]) || (u.set(s[h][Jv], f), f++);
      var c = Tl(s, {
        coordDimensions: ["single"],
        dimensionsDefine: [{
          name: "time",
          type: Rf(i)
        }, {
          name: "value",
          type: "float"
        }, {
          name: "name",
          type: "ordinal"
        }],
        encodeDefine: {
          single: 0,
          value: 1,
          itemName: 2
        }
      }).dimensions, v = new Me(c, this);
      return v.initData(s), v;
    }, e.prototype.getLayerSeries = function() {
      for (var t = this.getData(), a = t.count(), n = [], i = 0; i < a; ++i)
        n[i] = i;
      var o = t.mapDimension("single"), s = Yd(n, function(u) {
        return t.get("name", u);
      }), l = [];
      return s.buckets.each(function(u, f) {
        u.sort(function(h, c) {
          return t.get(o, h) - t.get(o, c);
        }), l.push({
          name: f,
          indices: u
        });
      }), l;
    }, e.prototype.getAxisTooltipData = function(t, a, n) {
      z(t) || (t = t ? [t] : []);
      for (var i = this.getData(), o = this.getLayerSeries(), s = [], l = o.length, u, f = 0; f < l; ++f) {
        for (var h = Number.MAX_VALUE, c = -1, v = o[f].indices.length, d = 0; d < v; ++d) {
          var p = i.get(t[0], o[f].indices[d]), g = Math.abs(p - a);
          g <= h && (u = p, h = g, c = o[f].indices[d]);
        }
        s.push(c);
      }
      return {
        dataIndices: s,
        nestestValue: u
      };
    }, e.prototype.formatTooltip = function(t, a, n) {
      var i = this.getData(), o = i.getName(t), s = i.get(i.mapDimension("value"), t);
      return se("nameValue", {
        name: o,
        value: s
      });
    }, e.type = "series.themeRiver", e.dependencies = ["singleAxis"], e.defaultOption = {
      // zlevel: 0,
      z: 2,
      colorBy: "data",
      coordinateSystem: "singleAxis",
      // gap in axis's orthogonal orientation
      boundaryGap: ["10%", "10%"],
      // legendHoverLink: true,
      singleAxisIndex: 0,
      animationEasing: "linear",
      label: {
        margin: 4,
        show: !0,
        position: "left",
        fontSize: 11
      },
      emphasis: {
        label: {
          show: !0
        }
      }
    }, e;
  }(Gt)
);
const J$ = j$;
function Q$(r, e) {
  r.eachSeriesByType("themeRiver", function(t) {
    var a = t.getData(), n = t.coordinateSystem, i = {}, o = n.getRect();
    i.rect = o;
    var s = t.get("boundaryGap"), l = n.getAxis();
    if (i.boundaryGap = s, l.orient === "horizontal") {
      s[0] = H(s[0], o.height), s[1] = H(s[1], o.height);
      var u = o.height - s[0] - s[1];
      Tx(a, t, u);
    } else {
      s[0] = H(s[0], o.width), s[1] = H(s[1], o.width);
      var f = o.width - s[0] - s[1];
      Tx(a, t, f);
    }
    a.setLayout("layoutInfo", i);
  });
}
function Tx(r, e, t) {
  if (r.count())
    for (var a = e.coordinateSystem, n = e.getLayerSeries(), i = r.mapDimension("single"), o = r.mapDimension("value"), s = G(n, function(g) {
      return G(g.indices, function(y) {
        var m = a.dataToPoint(r.get(i, y));
        return m[1] = r.get(o, y), m;
      });
    }), l = tU(s), u = l.y0, f = t / l.max, h = n.length, c = n[0].indices.length, v, d = 0; d < c; ++d) {
      v = u[d] * f, r.setItemLayout(n[0].indices[d], {
        layerIndex: 0,
        x: s[0][d][0],
        y0: v,
        y: s[0][d][1] * f
      });
      for (var p = 1; p < h; ++p)
        v += s[p - 1][d][1] * f, r.setItemLayout(n[p].indices[d], {
          layerIndex: p,
          x: s[p][d][0],
          y0: v,
          y: s[p][d][1] * f
        });
    }
}
function tU(r) {
  for (var e = r.length, t = r[0].length, a = [], n = [], i = 0, o = 0; o < t; ++o) {
    for (var s = 0, l = 0; l < e; ++l)
      s += r[l][o][1];
    s > i && (i = s), a.push(s);
  }
  for (var u = 0; u < t; ++u)
    n[u] = (i - a[u]) / 2;
  i = 0;
  for (var f = 0; f < t; ++f) {
    var h = a[f] + n[f];
    h > i && (i = h);
  }
  return {
    y0: n,
    max: i
  };
}
function eU(r) {
  r.registerChartView(K$), r.registerSeriesModel(J$), r.registerLayout(Q$), r.registerProcessor(Ll("themeRiver"));
}
var rU = 2, aU = 4, nU = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t, a, n, i) {
      var o = r.call(this) || this;
      o.z2 = rU, o.textConfig = {
        inside: !0
      }, it(o).seriesIndex = a.seriesIndex;
      var s = new Ct({
        z2: aU,
        silent: t.getModel().get(["label", "silent"])
      });
      return o.setTextContent(s), o.updateData(!0, t, a, n, i), o;
    }
    return e.prototype.updateData = function(t, a, n, i, o) {
      this.node = a, a.piece = this, n = n || this._seriesModel, i = i || this._ecModel;
      var s = this;
      it(s).dataIndex = a.dataIndex;
      var l = a.getModel(), u = l.getModel("emphasis"), f = a.getLayout(), h = V({}, f);
      h.label = null;
      var c = a.getVisual("style");
      c.lineJoin = "bevel";
      var v = a.getVisual("decal");
      v && (c.decal = po(v, o));
      var d = Qn(l.getModel("itemStyle"), h, !0);
      V(h, d), M(Le, function(m) {
        var _ = s.ensureState(m), S = l.getModel([m, "itemStyle"]);
        _.style = S.getItemStyle();
        var w = Qn(S, h);
        w && (_.shape = w);
      }), t ? (s.setShape(h), s.shape.r = f.r0, Bt(s, {
        shape: {
          r: f.r
        }
      }, n, a.dataIndex)) : (Mt(s, {
        shape: h
      }, n), Mr(s)), s.useStyle(c), this._updateLabel(n);
      var p = l.getShallow("cursor");
      p && s.attr("cursor", p), this._seriesModel = n || this._seriesModel, this._ecModel = i || this._ecModel;
      var g = u.get("focus"), y = g === "ancestor" ? a.getAncestorsIndices() : g === "descendant" ? a.getDescendantIndices() : g;
      Wt(this, y, u.get("blurScope"), u.get("disabled"));
    }, e.prototype._updateLabel = function(t) {
      var a = this, n = this.node.getModel(), i = n.getModel("label"), o = this.node.getLayout(), s = o.endAngle - o.startAngle, l = (o.startAngle + o.endAngle) / 2, u = Math.cos(l), f = Math.sin(l), h = this, c = h.getTextContent(), v = this.node.dataIndex, d = i.get("minAngle") / 180 * Math.PI, p = i.get("show") && !(d != null && Math.abs(s) < d);
      c.ignore = !p, M(Xs, function(y) {
        var m = y === "normal" ? n.getModel("label") : n.getModel([y, "label"]), _ = y === "normal", S = _ ? c : c.ensureState(y), w = t.getFormattedLabel(v, y);
        _ && (w = w || a.node.name), S.style = Ot(m, {}, null, y !== "normal", !0), w && (S.style.text = w);
        var x = m.get("show");
        x != null && !_ && (S.ignore = !x);
        var b = g(m, "position"), T = _ ? h : h.states[y], C = T.style.fill;
        T.textConfig = {
          outsideFill: m.get("color") === "inherit" ? C : null,
          inside: b !== "outside"
        };
        var D, A = g(m, "distance") || 0, I = g(m, "align");
        b === "outside" ? (D = o.r + A, I = l > Math.PI / 2 ? "right" : "left") : !I || I === "center" ? (s === 2 * Math.PI && o.r0 === 0 ? D = 0 : D = (o.r + o.r0) / 2, I = "center") : I === "left" ? (D = o.r0 + A, l > Math.PI / 2 && (I = "right")) : I === "right" && (D = o.r - A, l > Math.PI / 2 && (I = "left")), S.style.align = I, S.style.verticalAlign = g(m, "verticalAlign") || "middle", S.x = D * u + o.cx, S.y = D * f + o.cy;
        var L = g(m, "rotate"), E = 0;
        L === "radial" ? (E = xr(-l), E > Math.PI / 2 && E < Math.PI * 1.5 && (E += Math.PI)) : L === "tangential" ? (E = Math.PI / 2 - l, E > Math.PI / 2 ? E -= Math.PI : E < -Math.PI / 2 && (E += Math.PI)) : At(L) && (E = L * Math.PI / 180), S.rotation = xr(E);
      });
      function g(y, m) {
        var _ = y.get(m);
        return _ == null ? i.get(m) : _;
      }
      c.dirtyStyle();
    }, e;
  }(ze)
);
const Dx = nU;
var Up = "sunburstRootToNode", Cx = "sunburstHighlight", iU = "sunburstUnhighlight";
function oU(r) {
  r.registerAction({
    type: Up,
    update: "updateView"
  }, function(e, t) {
    t.eachComponent({
      mainType: "series",
      subType: "sunburst",
      query: e
    }, a);
    function a(n, i) {
      var o = sl(e, [Up], n);
      if (o) {
        var s = n.getViewRoot();
        s && (e.direction = Ly(s, o.node) ? "rollUp" : "drillDown"), n.resetViewRoot(o.node);
      }
    }
  }), r.registerAction({
    type: Cx,
    update: "none"
  }, function(e, t, a) {
    e = V({}, e), t.eachComponent({
      mainType: "series",
      subType: "sunburst",
      query: e
    }, n);
    function n(i) {
      var o = sl(e, [Cx], i);
      o && (e.dataIndex = o.node.dataIndex);
    }
    ({}).NODE_ENV !== "production" && Kt("sunburstHighlight", "highlight"), a.dispatchAction(V(e, {
      type: "highlight"
    }));
  }), r.registerAction({
    type: iU,
    update: "updateView"
  }, function(e, t, a) {
    e = V({}, e), {}.NODE_ENV !== "production" && Kt("sunburstUnhighlight", "downplay"), a.dispatchAction(V(e, {
      type: "downplay"
    }));
  });
}
var sU = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, a, n, i) {
      var o = this;
      this.seriesModel = t, this.api = n, this.ecModel = a;
      var s = t.getData(), l = s.tree.root, u = t.getViewRoot(), f = this.group, h = t.get("renderLabelForZeroData"), c = [];
      u.eachNode(function(m) {
        c.push(m);
      });
      var v = this._oldChildren || [];
      d(c, v), y(l, u), this._initEvents(), this._oldChildren = c;
      function d(m, _) {
        if (m.length === 0 && _.length === 0)
          return;
        new ma(_, m, S, S).add(w).update(w).remove(ot(w, null)).execute();
        function S(x) {
          return x.getId();
        }
        function w(x, b) {
          var T = x == null ? null : m[x], C = b == null ? null : _[b];
          p(T, C);
        }
      }
      function p(m, _) {
        if (!h && m && !m.getValue() && (m = null), m !== l && _ !== l) {
          if (_ && _.piece)
            m ? (_.piece.updateData(!1, m, t, a, n), s.setItemGraphicEl(m.dataIndex, _.piece)) : g(_);
          else if (m) {
            var S = new Dx(m, t, a, n);
            f.add(S), s.setItemGraphicEl(m.dataIndex, S);
          }
        }
      }
      function g(m) {
        m && m.piece && (f.remove(m.piece), m.piece = null);
      }
      function y(m, _) {
        _.depth > 0 ? (o.virtualPiece ? o.virtualPiece.updateData(!1, m, t, a, n) : (o.virtualPiece = new Dx(m, t, a, n), f.add(o.virtualPiece)), _.piece.off("click"), o.virtualPiece.on("click", function(S) {
          o._rootToNode(_.parentNode);
        })) : o.virtualPiece && (f.remove(o.virtualPiece), o.virtualPiece = null);
      }
    }, e.prototype._initEvents = function() {
      var t = this;
      this.group.off("click"), this.group.on("click", function(a) {
        var n = !1, i = t.seriesModel.getViewRoot();
        i.eachNode(function(o) {
          if (!n && o.piece && o.piece === a.target) {
            var s = o.getModel().get("nodeClick");
            if (s === "rootToNode")
              t._rootToNode(o);
            else if (s === "link") {
              var l = o.getModel(), u = l.get("link");
              if (u) {
                var f = l.get("target", !0) || "_blank";
                bf(u, f);
              }
            }
            n = !0;
          }
        });
      });
    }, e.prototype._rootToNode = function(t) {
      t !== this.seriesModel.getViewRoot() && this.api.dispatchAction({
        type: Up,
        from: this.uid,
        seriesId: this.seriesModel.id,
        targetNode: t
      });
    }, e.prototype.containPoint = function(t, a) {
      var n = a.getData(), i = n.getItemLayout(0);
      if (i) {
        var o = t[0] - i.cx, s = t[1] - i.cy, l = Math.sqrt(o * o + s * s);
        return l <= i.r && l >= i.r0;
      }
    }, e.type = "sunburst", e;
  }(Vt)
);
const lU = sU;
var uU = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t.ignoreStyleOnData = !0, t;
    }
    return e.prototype.getInitialData = function(t, a) {
      var n = {
        name: t.name,
        children: t.data
      };
      LI(n);
      var i = this._levelModels = G(t.levels || [], function(l) {
        return new kt(l, this, a);
      }, this), o = Iy.createTree(n, this, s);
      function s(l) {
        l.wrapMethod("getItemModel", function(u, f) {
          var h = o.getNodeByDataIndex(f), c = i[h.depth];
          return c && (u.parentModel = c), u;
        });
      }
      return o.data;
    }, e.prototype.optionUpdated = function() {
      this.resetViewRoot();
    }, e.prototype.getDataParams = function(t) {
      var a = r.prototype.getDataParams.apply(this, arguments), n = this.getData().tree.getNodeByDataIndex(t);
      return a.treePathInfo = Wh(n, this), a;
    }, e.prototype.getLevelModel = function(t) {
      return this._levelModels && this._levelModels[t.depth];
    }, e.prototype.getViewRoot = function() {
      return this._viewRoot;
    }, e.prototype.resetViewRoot = function(t) {
      t ? this._viewRoot = t : t = this._viewRoot;
      var a = this.getRawData().tree.root;
      (!t || t !== a && !a.contains(t)) && (this._viewRoot = a);
    }, e.prototype.enableAriaDecal = function() {
      NM(this);
    }, e.type = "series.sunburst", e.defaultOption = {
      // zlevel: 0,
      z: 2,
      // 默认全局居中
      center: ["50%", "50%"],
      radius: [0, "75%"],
      // 默认顺时针
      clockwise: !0,
      startAngle: 90,
      // 最小角度改为0
      minAngle: 0,
      // If still show when all data zero.
      stillShowZeroSum: !0,
      // 'rootToNode', 'link', or false
      nodeClick: "rootToNode",
      renderLabelForZeroData: !1,
      label: {
        // could be: 'radial', 'tangential', or 'none'
        rotate: "radial",
        show: !0,
        opacity: 1,
        // 'left' is for inner side of inside, and 'right' is for outer
        // side for inside
        align: "center",
        position: "inside",
        distance: 5,
        silent: !0
      },
      itemStyle: {
        borderWidth: 1,
        borderColor: "white",
        borderType: "solid",
        shadowBlur: 0,
        shadowColor: "rgba(0, 0, 0, 0.2)",
        shadowOffsetX: 0,
        shadowOffsetY: 0,
        opacity: 1
      },
      emphasis: {
        focus: "descendant"
      },
      blur: {
        itemStyle: {
          opacity: 0.2
        },
        label: {
          opacity: 0.1
        }
      },
      // Animation type can be expansion, scale.
      animationType: "expansion",
      animationDuration: 1e3,
      animationDurationUpdate: 500,
      data: [],
      /**
       * Sort order.
       *
       * Valid values: 'desc', 'asc', null, or callback function.
       * 'desc' and 'asc' for descend and ascendant order;
       * null for not sorting;
       * example of callback function:
       * function(nodeA, nodeB) {
       *     return nodeA.getValue() - nodeB.getValue();
       * }
       */
      sort: "desc"
    }, e;
  }(Gt)
);
function LI(r) {
  var e = 0;
  M(r.children, function(a) {
    LI(a);
    var n = a.value;
    z(n) && (n = n[0]), e += n;
  });
  var t = r.value;
  z(t) && (t = t[0]), (t == null || isNaN(t)) && (t = e), t < 0 && (t = 0), z(r.value) ? r.value[0] = t : r.value = t;
}
const fU = uU;
var Ax = Math.PI / 180;
function hU(r, e, t) {
  e.eachSeriesByType(r, function(a) {
    var n = a.get("center"), i = a.get("radius");
    z(i) || (i = [0, i]), z(n) || (n = [n, n]);
    var o = t.getWidth(), s = t.getHeight(), l = Math.min(o, s), u = H(n[0], o), f = H(n[1], s), h = H(i[0], l / 2), c = H(i[1], l / 2), v = -a.get("startAngle") * Ax, d = a.get("minAngle") * Ax, p = a.getData().tree.root, g = a.getViewRoot(), y = g.depth, m = a.get("sort");
    m != null && EI(g, m);
    var _ = 0;
    M(g.children, function(R) {
      !isNaN(R.getValue()) && _++;
    });
    var S = g.getValue(), w = Math.PI / (S || _) * 2, x = g.depth > 0, b = g.height - (x ? -1 : 1), T = (c - h) / (b || 1), C = a.get("clockwise"), D = a.get("stillShowZeroSum"), A = C ? 1 : -1, I = function(R, k) {
      if (R) {
        var O = k;
        if (R !== p) {
          var B = R.getValue(), F = S === 0 && D ? w : B * w;
          F < d && (F = d), O = k + A * F;
          var W = R.depth - y - (x ? -1 : 1), Z = h + T * W, Q = h + T * (W + 1), tt = a.getLevelModel(R);
          if (tt) {
            var dt = tt.get("r0", !0), St = tt.get("r", !0), pt = tt.get("radius", !0);
            pt != null && (dt = pt[0], St = pt[1]), dt != null && (Z = H(dt, l / 2)), St != null && (Q = H(St, l / 2));
          }
          R.setLayout({
            angle: F,
            startAngle: k,
            endAngle: O,
            clockwise: C,
            cx: u,
            cy: f,
            r0: Z,
            r: Q
          });
        }
        if (R.children && R.children.length) {
          var rt = 0;
          M(R.children, function(gt) {
            rt += I(gt, k + rt);
          });
        }
        return O - k;
      }
    };
    if (x) {
      var L = h, E = h + T, P = Math.PI * 2;
      p.setLayout({
        angle: P,
        startAngle: v,
        endAngle: v + P,
        clockwise: C,
        cx: u,
        cy: f,
        r0: L,
        r: E
      });
    }
    I(g, v);
  });
}
function EI(r, e) {
  var t = r.children || [];
  r.children = cU(t, e), t.length && M(r.children, function(a) {
    EI(a, e);
  });
}
function cU(r, e) {
  if (K(e)) {
    var t = G(r, function(n, i) {
      var o = n.getValue();
      return {
        params: {
          depth: n.depth,
          height: n.height,
          dataIndex: n.dataIndex,
          getValue: function() {
            return o;
          }
        },
        index: i
      };
    });
    return t.sort(function(n, i) {
      return e(n.params, i.params);
    }), G(t, function(n) {
      return r[n.index];
    });
  } else {
    var a = e === "asc";
    return r.sort(function(n, i) {
      var o = (n.getValue() - i.getValue()) * (a ? 1 : -1);
      return o === 0 ? (n.dataIndex - i.dataIndex) * (a ? -1 : 1) : o;
    });
  }
}
function vU(r) {
  var e = {};
  function t(a, n, i) {
    for (var o = a; o && o.depth > 1; )
      o = o.parentNode;
    var s = n.getColorFromPalette(o.name || o.dataIndex + "", e);
    return a.depth > 1 && $(s) && (s = Od(s, (a.depth - 1) / (i - 1) * 0.5)), s;
  }
  r.eachSeriesByType("sunburst", function(a) {
    var n = a.getData(), i = n.tree;
    i.eachNode(function(o) {
      var s = o.getModel(), l = s.getModel("itemStyle").getItemStyle();
      l.fill || (l.fill = t(o, a, i.root.height));
      var u = n.ensureUniqueItemVisual(o.dataIndex, "style");
      V(u, l);
    });
  });
}
function dU(r) {
  r.registerChartView(lU), r.registerSeriesModel(fU), r.registerLayout(ot(hU, "sunburst")), r.registerProcessor(ot(Ll, "sunburst")), r.registerVisual(vU), oU(r);
}
var Mx = {
  color: "fill",
  borderColor: "stroke"
}, pU = {
  symbol: 1,
  symbolSize: 1,
  symbolKeepAspect: 1,
  legendIcon: 1,
  visualMeta: 1,
  liftZ: 1,
  decal: 1
}, ca = Dt(), gU = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.optionUpdated = function() {
      this.currentZLevel = this.get("zlevel", !0), this.currentZ = this.get("z", !0);
    }, e.prototype.getInitialData = function(t, a) {
      return wa(null, this);
    }, e.prototype.getDataParams = function(t, a, n) {
      var i = r.prototype.getDataParams.call(this, t, a);
      return n && (i.info = ca(n).info), i;
    }, e.type = "series.custom", e.dependencies = ["grid", "polar", "geo", "singleAxis", "calendar"], e.defaultOption = {
      coordinateSystem: "cartesian2d",
      // zlevel: 0,
      z: 2,
      legendHoverLink: !0,
      // Custom series will not clip by default.
      // Some case will use custom series to draw label
      // For example https://echarts.apache.org/examples/en/editor.html?c=custom-gantt-flight
      clip: !1
      // Cartesian coordinate system
      // xAxisIndex: 0,
      // yAxisIndex: 0,
      // Polar coordinate system
      // polarIndex: 0,
      // Geo coordinate system
      // geoIndex: 0,
    }, e;
  }(Gt)
);
const yU = gU;
function mU(r, e) {
  return e = e || [0, 0], G(["x", "y"], function(t, a) {
    var n = this.getAxis(t), i = e[a], o = r[a] / 2;
    return n.type === "category" ? n.getBandWidth() : Math.abs(n.dataToCoord(i - o) - n.dataToCoord(i + o));
  }, this);
}
function _U(r) {
  var e = r.master.getRect();
  return {
    coordSys: {
      // The name exposed to user is always 'cartesian2d' but not 'grid'.
      type: "cartesian2d",
      x: e.x,
      y: e.y,
      width: e.width,
      height: e.height
    },
    api: {
      coord: function(t) {
        return r.dataToPoint(t);
      },
      size: Y(mU, r)
    }
  };
}
function SU(r, e) {
  return e = e || [0, 0], G([0, 1], function(t) {
    var a = e[t], n = r[t] / 2, i = [], o = [];
    return i[t] = a - n, o[t] = a + n, i[1 - t] = o[1 - t] = e[1 - t], Math.abs(this.dataToPoint(i)[t] - this.dataToPoint(o)[t]);
  }, this);
}
function xU(r) {
  var e = r.getBoundingRect();
  return {
    coordSys: {
      type: "geo",
      x: e.x,
      y: e.y,
      width: e.width,
      height: e.height,
      zoom: r.getZoom()
    },
    api: {
      coord: function(t) {
        return r.dataToPoint(t);
      },
      size: Y(SU, r)
    }
  };
}
function wU(r, e) {
  var t = this.getAxis(), a = e instanceof Array ? e[0] : e, n = (r instanceof Array ? r[0] : r) / 2;
  return t.type === "category" ? t.getBandWidth() : Math.abs(t.dataToCoord(a - n) - t.dataToCoord(a + n));
}
function bU(r) {
  var e = r.getRect();
  return {
    coordSys: {
      type: "singleAxis",
      x: e.x,
      y: e.y,
      width: e.width,
      height: e.height
    },
    api: {
      coord: function(t) {
        return r.dataToPoint(t);
      },
      size: Y(wU, r)
    }
  };
}
function TU(r, e) {
  return e = e || [0, 0], G(["Radius", "Angle"], function(t, a) {
    var n = "get" + t + "Axis", i = this[n](), o = e[a], s = r[a] / 2, l = i.type === "category" ? i.getBandWidth() : Math.abs(i.dataToCoord(o - s) - i.dataToCoord(o + s));
    return t === "Angle" && (l = l * Math.PI / 180), l;
  }, this);
}
function DU(r) {
  var e = r.getRadiusAxis(), t = r.getAngleAxis(), a = e.getExtent();
  return a[0] > a[1] && a.reverse(), {
    coordSys: {
      type: "polar",
      cx: r.cx,
      cy: r.cy,
      r: a[1],
      r0: a[0]
    },
    api: {
      coord: function(n) {
        var i = e.dataToRadius(n[0]), o = t.dataToAngle(n[1]), s = r.coordToPoint([i, o]);
        return s.push(i, o * Math.PI / 180), s;
      },
      size: Y(TU, r)
    }
  };
}
function CU(r) {
  var e = r.getRect(), t = r.getRangeInfo();
  return {
    coordSys: {
      type: "calendar",
      x: e.x,
      y: e.y,
      width: e.width,
      height: e.height,
      cellWidth: r.getCellWidth(),
      cellHeight: r.getCellHeight(),
      rangeInfo: {
        start: t.start,
        end: t.end,
        weeks: t.weeks,
        dayCount: t.allDay
      }
    },
    api: {
      coord: function(a, n) {
        return r.dataToPoint(a, n);
      }
    }
  };
}
var Ix = {};
function PI(r, e, t, a) {
  return r && (r.legacy || r.legacy !== !1 && !t && !a && e !== "tspan" && (e === "text" || U(r, "text")));
}
function RI(r, e, t) {
  var a = r, n, i, o;
  if (e === "text")
    o = a;
  else {
    o = {}, U(a, "text") && (o.text = a.text), U(a, "rich") && (o.rich = a.rich), U(a, "textFill") && (o.fill = a.textFill), U(a, "textStroke") && (o.stroke = a.textStroke), U(a, "fontFamily") && (o.fontFamily = a.fontFamily), U(a, "fontSize") && (o.fontSize = a.fontSize), U(a, "fontStyle") && (o.fontStyle = a.fontStyle), U(a, "fontWeight") && (o.fontWeight = a.fontWeight), i = {
      type: "text",
      style: o,
      // ec4 does not support rectText trigger.
      // And when text position is different in normal and emphasis
      // => hover text trigger emphasis;
      // => text position changed, leave mouse pointer immediately;
      // That might cause incorrect state.
      silent: !0
    }, n = {};
    var s = U(a, "textPosition");
    t ? n.position = s ? a.textPosition : "inside" : s && (n.position = a.textPosition), U(a, "textPosition") && (n.position = a.textPosition), U(a, "textOffset") && (n.offset = a.textOffset), U(a, "textRotation") && (n.rotation = a.textRotation), U(a, "textDistance") && (n.distance = a.textDistance);
  }
  return Lx(o, r), M(o.rich, function(l) {
    Lx(l, l);
  }), {
    textConfig: n,
    textContent: i
  };
}
function Lx(r, e) {
  e && (e.font = e.textFont || e.font, U(e, "textStrokeWidth") && (r.lineWidth = e.textStrokeWidth), U(e, "textAlign") && (r.align = e.textAlign), U(e, "textVerticalAlign") && (r.verticalAlign = e.textVerticalAlign), U(e, "textLineHeight") && (r.lineHeight = e.textLineHeight), U(e, "textWidth") && (r.width = e.textWidth), U(e, "textHeight") && (r.height = e.textHeight), U(e, "textBackgroundColor") && (r.backgroundColor = e.textBackgroundColor), U(e, "textPadding") && (r.padding = e.textPadding), U(e, "textBorderColor") && (r.borderColor = e.textBorderColor), U(e, "textBorderWidth") && (r.borderWidth = e.textBorderWidth), U(e, "textBorderRadius") && (r.borderRadius = e.textBorderRadius), U(e, "textBoxShadowColor") && (r.shadowColor = e.textBoxShadowColor), U(e, "textBoxShadowBlur") && (r.shadowBlur = e.textBoxShadowBlur), U(e, "textBoxShadowOffsetX") && (r.shadowOffsetX = e.textBoxShadowOffsetX), U(e, "textBoxShadowOffsetY") && (r.shadowOffsetY = e.textBoxShadowOffsetY));
}
function Ex(r, e, t) {
  var a = r;
  a.textPosition = a.textPosition || t.position || "inside", t.offset != null && (a.textOffset = t.offset), t.rotation != null && (a.textRotation = t.rotation), t.distance != null && (a.textDistance = t.distance);
  var n = a.textPosition.indexOf("inside") >= 0, i = r.fill || "#000";
  Px(a, e);
  var o = a.textFill == null;
  return n ? o && (a.textFill = t.insideFill || "#fff", !a.textStroke && t.insideStroke && (a.textStroke = t.insideStroke), !a.textStroke && (a.textStroke = i), a.textStrokeWidth == null && (a.textStrokeWidth = 2)) : (o && (a.textFill = r.fill || t.outsideFill || "#000"), !a.textStroke && t.outsideStroke && (a.textStroke = t.outsideStroke)), a.text = e.text, a.rich = e.rich, M(e.rich, function(s) {
    Px(s, s);
  }), a;
}
function Px(r, e) {
  e && (U(e, "fill") && (r.textFill = e.fill), U(e, "stroke") && (r.textStroke = e.fill), U(e, "lineWidth") && (r.textStrokeWidth = e.lineWidth), U(e, "font") && (r.font = e.font), U(e, "fontStyle") && (r.fontStyle = e.fontStyle), U(e, "fontWeight") && (r.fontWeight = e.fontWeight), U(e, "fontSize") && (r.fontSize = e.fontSize), U(e, "fontFamily") && (r.fontFamily = e.fontFamily), U(e, "align") && (r.textAlign = e.align), U(e, "verticalAlign") && (r.textVerticalAlign = e.verticalAlign), U(e, "lineHeight") && (r.textLineHeight = e.lineHeight), U(e, "width") && (r.textWidth = e.width), U(e, "height") && (r.textHeight = e.height), U(e, "backgroundColor") && (r.textBackgroundColor = e.backgroundColor), U(e, "padding") && (r.textPadding = e.padding), U(e, "borderColor") && (r.textBorderColor = e.borderColor), U(e, "borderWidth") && (r.textBorderWidth = e.borderWidth), U(e, "borderRadius") && (r.textBorderRadius = e.borderRadius), U(e, "shadowColor") && (r.textBoxShadowColor = e.shadowColor), U(e, "shadowBlur") && (r.textBoxShadowBlur = e.shadowBlur), U(e, "shadowOffsetX") && (r.textBoxShadowOffsetX = e.shadowOffsetX), U(e, "shadowOffsetY") && (r.textBoxShadowOffsetY = e.shadowOffsetY), U(e, "textShadowColor") && (r.textShadowColor = e.textShadowColor), U(e, "textShadowBlur") && (r.textShadowBlur = e.textShadowBlur), U(e, "textShadowOffsetX") && (r.textShadowOffsetX = e.textShadowOffsetX), U(e, "textShadowOffsetY") && (r.textShadowOffsetY = e.textShadowOffsetY));
}
function Rx(r, e) {
  if ({}.NODE_ENV !== "production") {
    var t = r + "^_^" + e;
    Ix[t] || (console.warn('[ECharts] DEPRECATED: "' + r + '" has been deprecated. ' + e), Ix[t] = !0);
  }
}
var NI = {
  position: ["x", "y"],
  scale: ["scaleX", "scaleY"],
  origin: ["originX", "originY"]
}, Nx = _t(NI), Yf = Yr(Xr, function(r, e) {
  return r[e] = 1, r;
}, {}), Ox = Xr.join(", "), Zf = ["", "style", "shape", "extra"], So = Dt();
function Yy(r, e, t, a, n) {
  var i = r + "Animation", o = Ao(r, a, n) || {}, s = So(e).userDuring;
  return o.duration > 0 && (o.during = s ? Y(EU, {
    el: e,
    userDuring: s
  }) : null, o.setToFinal = !0, o.scope = r), V(o, t[i]), o;
}
function tf(r, e, t, a) {
  a = a || {};
  var n = a.dataIndex, i = a.isInit, o = a.clearStyle, s = t.isAnimationEnabled(), l = So(r), u = e.style;
  l.userDuring = e.during;
  var f = {}, h = {};
  if (RU(r, e, h), Vx("shape", e, h), Vx("extra", e, h), !i && s && (PU(r, e, f), kx("shape", r, e, f), kx("extra", r, e, f), NU(r, e, u, f)), h.style = u, AU(r, h, o), IU(r, e), s)
    if (i) {
      var c = {};
      M(Zf, function(d) {
        var p = d ? e[d] : e;
        p && p.enterFrom && (d && (c[d] = c[d] || {}), V(d ? c[d] : c, p.enterFrom));
      });
      var v = Yy("enter", r, e, t, n);
      v.duration > 0 && r.animateFrom(c, v);
    } else
      MU(r, e, n || 0, t, f);
  OI(r, e), u ? r.dirty() : r.markRedraw();
}
function OI(r, e) {
  for (var t = So(r).leaveToProps, a = 0; a < Zf.length; a++) {
    var n = Zf[a], i = n ? e[n] : e;
    i && i.leaveTo && (t || (t = So(r).leaveToProps = {}), n && (t[n] = t[n] || {}), V(n ? t[n] : t, i.leaveTo));
  }
}
function Yh(r, e, t, a) {
  if (r) {
    var n = r.parent, i = So(r).leaveToProps;
    if (i) {
      var o = Yy("update", r, e, t, 0);
      o.done = function() {
        n.remove(r), a && a();
      }, r.animateTo(i, o);
    } else
      n.remove(r), a && a();
  }
}
function ui(r) {
  return r === "all";
}
function AU(r, e, t) {
  var a = e.style;
  if (!r.isGroup && a) {
    if (t) {
      r.useStyle({});
      for (var n = r.animators, i = 0; i < n.length; i++) {
        var o = n[i];
        o.targetName === "style" && o.changeTarget(r.style);
      }
    }
    r.setStyle(a);
  }
  e && (e.style = null, e && r.attr(e), e.style = a);
}
function MU(r, e, t, a, n) {
  if (n) {
    var i = Yy("update", r, e, a, t);
    i.duration > 0 && r.animateFrom(n, i);
  }
}
function IU(r, e) {
  U(e, "silent") && (r.silent = e.silent), U(e, "ignore") && (r.ignore = e.ignore), r instanceof hr && U(e, "invisible") && (r.invisible = e.invisible), r instanceof mt && U(e, "autoBatch") && (r.autoBatch = e.autoBatch);
}
var kr = {}, LU = {
  // Usually other props do not need to be changed in animation during.
  setTransform: function(r, e) {
    return {}.NODE_ENV !== "production" && J(U(Yf, r), "Only " + Ox + " available in `setTransform`."), kr.el[r] = e, this;
  },
  getTransform: function(r) {
    return {}.NODE_ENV !== "production" && J(U(Yf, r), "Only " + Ox + " available in `getTransform`."), kr.el[r];
  },
  setShape: function(r, e) {
    ({}).NODE_ENV !== "production" && Ui(r);
    var t = kr.el, a = t.shape || (t.shape = {});
    return a[r] = e, t.dirtyShape && t.dirtyShape(), this;
  },
  getShape: function(r) {
    ({}).NODE_ENV !== "production" && Ui(r);
    var e = kr.el.shape;
    if (e)
      return e[r];
  },
  setStyle: function(r, e) {
    ({}).NODE_ENV !== "production" && Ui(r);
    var t = kr.el, a = t.style;
    return a && ({}.NODE_ENV !== "production" && fi(e) && Ft("style." + r + " must not be assigned with NaN."), a[r] = e, t.dirtyStyle && t.dirtyStyle()), this;
  },
  getStyle: function(r) {
    ({}).NODE_ENV !== "production" && Ui(r);
    var e = kr.el.style;
    if (e)
      return e[r];
  },
  setExtra: function(r, e) {
    ({}).NODE_ENV !== "production" && Ui(r);
    var t = kr.el.extra || (kr.el.extra = {});
    return t[r] = e, this;
  },
  getExtra: function(r) {
    ({}).NODE_ENV !== "production" && Ui(r);
    var e = kr.el.extra;
    if (e)
      return e[r];
  }
};
function Ui(r) {
  if ({}.NODE_ENV !== "production" && (r === "transition" || r === "enterFrom" || r === "leaveTo"))
    throw new Error('key must not be "' + r + '"');
}
function EU() {
  var r = this, e = r.el;
  if (e) {
    var t = So(e).userDuring, a = r.userDuring;
    if (t !== a) {
      r.el = r.userDuring = null;
      return;
    }
    kr.el = e, a(LU);
  }
}
function kx(r, e, t, a) {
  var n = t[r];
  if (n) {
    var i = e[r], o;
    if (i) {
      var s = t.transition, l = n.transition;
      if (l)
        if (!o && (o = a[r] = {}), ui(l))
          V(o, i);
        else
          for (var u = Pt(l), f = 0; f < u.length; f++) {
            var h = u[f], c = i[h];
            o[h] = c;
          }
      else if (ui(s) || vt(s, r) >= 0) {
        !o && (o = a[r] = {});
        for (var v = _t(i), f = 0; f < v.length; f++) {
          var h = v[f], c = i[h];
          OU(n[h], c) && (o[h] = c);
        }
      }
    }
  }
}
function Vx(r, e, t) {
  var a = e[r];
  if (a)
    for (var n = t[r] = {}, i = _t(a), o = 0; o < i.length; o++) {
      var s = i[o];
      n[s] = Ls(a[s]);
    }
}
function PU(r, e, t) {
  for (var a = e.transition, n = ui(a) ? Xr : Pt(a || []), i = 0; i < n.length; i++) {
    var o = n[i];
    if (!(o === "style" || o === "shape" || o === "extra")) {
      var s = r[o];
      ({}).NODE_ENV !== "production" && kI(o, "el.transition"), t[o] = s;
    }
  }
}
function RU(r, e, t) {
  for (var a = 0; a < Nx.length; a++) {
    var n = Nx[a], i = NI[n], o = e[n];
    o && (t[i[0]] = o[0], t[i[1]] = o[1]);
  }
  for (var a = 0; a < Xr.length; a++) {
    var s = Xr[a];
    e[s] != null && (t[s] = e[s]);
  }
}
function NU(r, e, t, a) {
  if (t) {
    var n = r.style, i;
    if (n) {
      var o = t.transition, s = e.transition;
      if (o && !ui(o)) {
        var l = Pt(o);
        !i && (i = a.style = {});
        for (var u = 0; u < l.length; u++) {
          var f = l[u], h = n[f];
          i[f] = h;
        }
      } else if (r.getAnimationStyleProps && (ui(s) || ui(o) || vt(s, "style") >= 0)) {
        var c = r.getAnimationStyleProps(), v = c ? c.style : null;
        if (v) {
          !i && (i = a.style = {});
          for (var d = _t(t), u = 0; u < d.length; u++) {
            var f = d[u];
            if (v[f]) {
              var h = n[f];
              i[f] = h;
            }
          }
        }
      }
    }
  }
}
function OU(r, e) {
  return xe(r) ? r !== e : r != null && isFinite(r);
}
var kI;
({}).NODE_ENV !== "production" && (kI = function(r, e) {
  U(Yf, r) || Ft("Prop `" + r + "` is not a permitted in `" + e + "`. Only `" + _t(Yf).join("`, `") + "` are permitted.");
});
var VI = Dt(), kU = ["percent", "easing", "shape", "style", "extra"];
function BI(r) {
  r.stopAnimation("keyframe"), r.attr(VI(r));
}
function Xf(r, e, t) {
  if (!(!t.isAnimationEnabled() || !e)) {
    if (z(e)) {
      M(e, function(s) {
        Xf(r, s, t);
      });
      return;
    }
    var a = e.keyframes, n = e.duration;
    if (t && n == null) {
      var i = Ao("enter", t, 0);
      n = i && i.duration;
    }
    if (!(!a || !n)) {
      var o = VI(r);
      M(Zf, function(s) {
        if (!(s && !r[s])) {
          var l, u = !1;
          a.sort(function(f, h) {
            return f.percent - h.percent;
          }), M(a, function(f) {
            var h = r.animators, c = s ? f[s] : f;
            if ({}.NODE_ENV !== "production" && f.percent >= 1 && (u = !0), !!c) {
              var v = _t(c);
              if (s || (v = Et(v, function(g) {
                return vt(kU, g) < 0;
              })), !!v.length) {
                l || (l = r.animate(s, e.loop, !0), l.scope = "keyframe");
                for (var d = 0; d < h.length; d++)
                  h[d] !== l && h[d].targetName === l.targetName && h[d].stopTracks(v);
                s && (o[s] = o[s] || {});
                var p = s ? o[s] : o;
                M(v, function(g) {
                  p[g] = ((s ? r[s] : r) || {})[g];
                }), l.whenWithKeys(n * f.percent, c, v, f.easing);
              }
            }
          }), l && ({}.NODE_ENV !== "production" && (u || Ft("End frame with percent: 1 is missing in the keyframeAnimation.", !0)), l.delay(e.delay || 0).duration(n).start(e.easing));
        }
      });
    }
  }
}
var va = "emphasis", Ya = "normal", Zy = "blur", Xy = "select", sn = [Ya, va, Zy, Xy], Qv = {
  normal: ["itemStyle"],
  emphasis: [va, "itemStyle"],
  blur: [Zy, "itemStyle"],
  select: [Xy, "itemStyle"]
}, td = {
  normal: ["label"],
  emphasis: [va, "label"],
  blur: [Zy, "label"],
  select: [Xy, "label"]
}, VU = ["x", "y"], BU = "e\0\0", je = {
  normal: {},
  emphasis: {},
  blur: {},
  select: {}
}, Bx = {
  cartesian2d: _U,
  geo: xU,
  single: bU,
  polar: DU,
  calendar: CU
};
function qf(r) {
  return r instanceof mt;
}
function Yp(r) {
  return r instanceof hr;
}
function zU(r, e) {
  e.copyTransform(r), Yp(e) && Yp(r) && (e.setStyle(r.style), e.z = r.z, e.z2 = r.z2, e.zlevel = r.zlevel, e.invisible = r.invisible, e.ignore = r.ignore, qf(e) && qf(r) && e.setShape(r.shape));
}
var GU = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, a, n, i) {
      this._progressiveEls = null;
      var o = this._data, s = t.getData(), l = this.group, u = zx(t, s, a, n);
      o || l.removeAll(), s.diff(o).add(function(h) {
        ed(n, null, h, u(h, i), t, l, s);
      }).remove(function(h) {
        var c = o.getItemGraphicEl(h);
        c && Yh(c, ca(c).option, t);
      }).update(function(h, c) {
        var v = o.getItemGraphicEl(c);
        ed(n, v, h, u(h, i), t, l, s);
      }).execute();
      var f = t.get("clip", !0) ? Gh(t.coordinateSystem, !1, t) : null;
      f ? l.setClipPath(f) : l.removeClipPath(), this._data = s;
    }, e.prototype.incrementalPrepareRender = function(t, a, n) {
      this.group.removeAll(), this._data = null;
    }, e.prototype.incrementalRender = function(t, a, n, i, o) {
      var s = a.getData(), l = zx(a, s, n, i), u = this._progressiveEls = [];
      function f(v) {
        v.isGroup || (v.incremental = !0, v.ensureState("emphasis").hoverLayer = !0);
      }
      for (var h = t.start; h < t.end; h++) {
        var c = ed(null, null, h, l(h, o), a, this.group, s);
        c && (c.traverse(f), u.push(c));
      }
    }, e.prototype.eachRendered = function(t) {
      un(this._progressiveEls || this.group, t);
    }, e.prototype.filterForExposedEvent = function(t, a, n, i) {
      var o = a.element;
      if (o == null || n.name === o)
        return !0;
      for (; (n = n.__hostTarget || n.parent) && n !== this.group; )
        if (n.name === o)
          return !0;
      return !1;
    }, e.type = "custom", e;
  }(Vt)
);
const FU = GU;
function qy(r) {
  var e = r.type, t;
  if (e === "path") {
    var a = r.shape, n = a.width != null && a.height != null ? {
      x: a.x || 0,
      y: a.y || 0,
      width: a.width,
      height: a.height
    } : null, i = FI(a);
    t = wh(i, null, n, a.layout || "center"), ca(t).customPathData = i;
  } else if (e === "image")
    t = new ge({}), ca(t).customImagePath = r.style.image;
  else if (e === "text")
    t = new Ct({});
  else if (e === "group")
    t = new nt();
  else {
    if (e === "compoundPath")
      throw new Error('"compoundPath" is not supported yet.');
    var o = Bg(e);
    if (!o) {
      var s = "";
      ({}).NODE_ENV !== "production" && (s = 'graphic type "' + e + '" can not be found.'), It(s);
    }
    t = new o();
  }
  return ca(t).customGraphicType = e, t.name = r.name, t.z2EmphasisLift = 1, t.z2SelectLift = 1, t;
}
function Ky(r, e, t, a, n, i, o) {
  BI(e);
  var s = n && n.normal.cfg;
  s && e.setTextConfig(s), a && a.transition == null && (a.transition = VU);
  var l = a && a.style;
  if (l) {
    if (e.type === "text") {
      var u = l;
      U(u, "textFill") && (u.fill = u.textFill), U(u, "textStroke") && (u.stroke = u.textStroke);
    }
    var f = void 0, h = qf(e) ? l.decal : null;
    r && h && (h.dirty = !0, f = po(h, r)), l.__decalPattern = f;
  }
  if (Yp(e) && l) {
    var f = l.__decalPattern;
    f && (l.decal = f);
  }
  tf(e, a, i, {
    dataIndex: t,
    isInit: o,
    clearStyle: !0
  }), Xf(e, a.keyframeAnimation, i);
}
function zI(r, e, t, a, n) {
  var i = e.isGroup ? null : e, o = n && n[r].cfg;
  if (i) {
    var s = i.ensureState(r);
    if (a === !1) {
      var l = i.getState(r);
      l && (l.style = null);
    } else
      s.style = a || null;
    o && (s.textConfig = o), di(i);
  }
}
function HU(r, e, t) {
  if (!r.isGroup) {
    var a = r, n = t.currentZ, i = t.currentZLevel;
    a.z = n, a.zlevel = i;
    var o = e.z2;
    o != null && (a.z2 = o || 0);
    for (var s = 0; s < sn.length; s++)
      WU(a, e, sn[s]);
  }
}
function WU(r, e, t) {
  var a = t === Ya, n = a ? e : Kf(e, t), i = n ? n.z2 : null, o;
  i != null && (o = a ? r : r.ensureState(t), o.z2 = i || 0);
}
function zx(r, e, t, a) {
  var n = r.get("renderItem"), i = r.coordinateSystem, o = {};
  i && ({}.NODE_ENV !== "production" && (J(n, "series.render is required."), J(i.prepareCustoms || Bx[i.type], "This coordSys does not support custom series.")), o = i.prepareCustoms ? i.prepareCustoms(i) : Bx[i.type](i));
  for (var s = et({
    getWidth: a.getWidth,
    getHeight: a.getHeight,
    getZr: a.getZr,
    getDevicePixelRatio: a.getDevicePixelRatio,
    value: S,
    style: x,
    ordinalRawValue: w,
    styleEmphasis: b,
    visual: D,
    barLayout: A,
    currentSeriesIndices: I,
    font: L
  }, o.api || {}), l = {
    // The life cycle of context: current round of rendering.
    // The global life cycle is probably not necessary, because
    // user can store global status by themselves.
    context: {},
    seriesId: r.id,
    seriesName: r.name,
    seriesIndex: r.seriesIndex,
    coordSys: o.coordSys,
    dataInsideLength: e.count(),
    encode: $U(r.getData())
  }, u, f, h = {}, c = {}, v = {}, d = {}, p = 0; p < sn.length; p++) {
    var g = sn[p];
    v[g] = r.getModel(Qv[g]), d[g] = r.getModel(td[g]);
  }
  function y(E) {
    return E === u ? f || (f = e.getItemModel(E)) : e.getItemModel(E);
  }
  function m(E, P) {
    return e.hasItemOption ? E === u ? h[P] || (h[P] = y(E).getModel(Qv[P])) : y(E).getModel(Qv[P]) : v[P];
  }
  function _(E, P) {
    return e.hasItemOption ? E === u ? c[P] || (c[P] = y(E).getModel(td[P])) : y(E).getModel(td[P]) : d[P];
  }
  return function(E, P) {
    return u = E, f = null, h = {}, c = {}, n && n(et({
      dataIndexInside: E,
      dataIndex: e.getRawIndex(E),
      // Can be used for optimization when zoom or roam.
      actionType: P ? P.type : null
    }, l), s);
  };
  function S(E, P) {
    return P == null && (P = u), e.getStore().get(e.getDimensionIndex(E || 0), P);
  }
  function w(E, P) {
    P == null && (P = u), E = E || 0;
    var R = e.getDimensionInfo(E);
    if (!R) {
      var k = e.getDimensionIndex(E);
      return k >= 0 ? e.getStore().get(k, P) : void 0;
    }
    var O = e.get(R.name, P), B = R && R.ordinalMeta;
    return B ? B.categories[O] : O;
  }
  function x(E, P) {
    ({}).NODE_ENV !== "production" && Rx("api.style", "Please write literal style directly instead."), P == null && (P = u);
    var R = e.getItemVisual(P, "style"), k = R && R.fill, O = R && R.opacity, B = m(P, Ya).getItemStyle();
    k != null && (B.fill = k), O != null && (B.opacity = O);
    var F = {
      inheritColor: $(k) ? k : "#000"
    }, W = _(P, Ya), Z = Ot(W, null, F, !1, !0);
    Z.text = W.getShallow("show") ? ft(r.getFormattedLabel(P, Ya), yo(e, P)) : null;
    var Q = xf(W, F, !1);
    return C(E, B), B = Ex(B, Z, Q), E && T(B, E), B.legacy = !0, B;
  }
  function b(E, P) {
    ({}).NODE_ENV !== "production" && Rx("api.styleEmphasis", "Please write literal style directly instead."), P == null && (P = u);
    var R = m(P, va).getItemStyle(), k = _(P, va), O = Ot(k, null, null, !0, !0);
    O.text = k.getShallow("show") ? lr(r.getFormattedLabel(P, va), r.getFormattedLabel(P, Ya), yo(e, P)) : null;
    var B = xf(k, null, !0);
    return C(E, R), R = Ex(R, O, B), E && T(R, E), R.legacy = !0, R;
  }
  function T(E, P) {
    for (var R in P)
      U(P, R) && (E[R] = P[R]);
  }
  function C(E, P) {
    E && (E.textFill && (P.textFill = E.textFill), E.textPosition && (P.textPosition = E.textPosition));
  }
  function D(E, P) {
    if (P == null && (P = u), U(Mx, E)) {
      var R = e.getItemVisual(P, "style");
      return R ? R[Mx[E]] : null;
    }
    if (U(pU, E))
      return e.getItemVisual(P, E);
  }
  function A(E) {
    if (i.type === "cartesian2d") {
      var P = i.getBaseAxis();
      return ZV(et({
        axis: P
      }, E));
    }
  }
  function I() {
    return t.getCurrentSeriesIndices();
  }
  function L(E) {
    return SD(E, t);
  }
}
function $U(r) {
  var e = {};
  return M(r.dimensions, function(t) {
    var a = r.getDimensionInfo(t);
    if (!a.isExtraCoord) {
      var n = a.coordDim, i = e[n] = e[n] || [];
      i[a.coordDimIndex] = r.getDimensionIndex(t);
    }
  }), e;
}
function ed(r, e, t, a, n, i, o) {
  if (!a) {
    i.remove(e);
    return;
  }
  var s = jy(r, e, t, a, n, i);
  return s && o.setItemGraphicEl(t, s), s && Wt(s, a.focus, a.blurScope, a.emphasisDisabled), s;
}
function jy(r, e, t, a, n, i) {
  ({}).NODE_ENV !== "production" && J(a, "should not have an null/undefined element setting");
  var o = -1, s = e;
  e && GI(e, a, n) && (o = vt(i.childrenRef(), e), e = null);
  var l = !e, u = e;
  u ? u.clearStates() : (u = qy(a), s && zU(s, u)), a.morph === !1 ? u.disableMorphing = !0 : u.disableMorphing && (u.disableMorphing = !1), je.normal.cfg = je.normal.conOpt = je.emphasis.cfg = je.emphasis.conOpt = je.blur.cfg = je.blur.conOpt = je.select.cfg = je.select.conOpt = null, je.isLegacy = !1, YU(u, t, a, n, l, je), UU(u, t, a, n, l), Ky(r, u, t, a, je, n, l), U(a, "info") && (ca(u).info = a.info);
  for (var f = 0; f < sn.length; f++) {
    var h = sn[f];
    if (h !== Ya) {
      var c = Kf(a, h), v = Jy(a, c, h);
      zI(h, u, c, v, je);
    }
  }
  return HU(u, a, n), a.type === "group" && ZU(r, u, t, a, n), o >= 0 ? i.replaceAt(u, o) : i.add(u), u;
}
function GI(r, e, t) {
  var a = ca(r), n = e.type, i = e.shape, o = e.style;
  return (
    // Always create new if universal transition is enabled.
    // Because we do transition after render. It needs to know what old element is. Replacement will loose it.
    t.isUniversalTransitionEnabled() || n != null && n !== a.customGraphicType || n === "path" && jU(i) && FI(i) !== a.customPathData || n === "image" && U(o, "image") && o.image !== a.customImagePath
  );
}
function UU(r, e, t, a, n) {
  var i = t.clipPath;
  if (i === !1)
    r && r.getClipPath() && r.removeClipPath();
  else if (i) {
    var o = r.getClipPath();
    o && GI(o, i, a) && (o = null), o || (o = qy(i), {}.NODE_ENV !== "production" && J(qf(o), "Only any type of `path` can be used in `clipPath`, rather than " + o.type + "."), r.setClipPath(o)), Ky(null, o, e, i, null, a, n);
  }
}
function YU(r, e, t, a, n, i) {
  if (!r.isGroup) {
    Gx(t, null, i), Gx(t, va, i);
    var o = i.normal.conOpt, s = i.emphasis.conOpt, l = i.blur.conOpt, u = i.select.conOpt;
    if (o != null || s != null || u != null || l != null) {
      var f = r.getTextContent();
      if (o === !1)
        f && r.removeTextContent();
      else {
        o = i.normal.conOpt = o || {
          type: "text"
        }, f ? f.clearStates() : (f = qy(o), r.setTextContent(f)), Ky(null, f, e, o, null, a, n);
        for (var h = o && o.style, c = 0; c < sn.length; c++) {
          var v = sn[c];
          if (v !== Ya) {
            var d = i[v].conOpt;
            zI(v, f, d, Jy(o, d, v), null);
          }
        }
        h ? f.dirty() : f.markRedraw();
      }
    }
  }
}
function Gx(r, e, t) {
  var a = e ? Kf(r, e) : r, n = e ? Jy(r, a, va) : r.style, i = r.type, o = a ? a.textConfig : null, s = r.textContent, l = s ? e ? Kf(s, e) : s : null;
  if (n && // Because emphasis style has little info to detect legacy,
  // if normal is legacy, emphasis is trade as legacy.
  (t.isLegacy || PI(n, i, !!o, !!l))) {
    t.isLegacy = !0;
    var u = RI(n, i, !e);
    !o && u.textConfig && (o = u.textConfig), !l && u.textContent && (l = u.textContent);
  }
  if (!e && l) {
    var f = l;
    !f.type && (f.type = "text"), {}.NODE_ENV !== "production" && J(f.type === "text", 'textContent.type must be "text"');
  }
  var h = e ? t[e] : t.normal;
  h.cfg = o, h.conOpt = l;
}
function Kf(r, e) {
  return e ? r ? r[e] : null : r;
}
function Jy(r, e, t) {
  var a = e && e.style;
  return a == null && t === va && r && (a = r.styleEmphasis), a;
}
function ZU(r, e, t, a, n) {
  var i = a.children, o = i ? i.length : 0, s = a.$mergeChildren, l = s === "byName" || a.diffChildrenByName, u = s === !1;
  if (!(!o && !l && !u)) {
    if (l) {
      qU({
        api: r,
        oldChildren: e.children() || [],
        newChildren: i || [],
        dataIndex: t,
        seriesModel: n,
        group: e
      });
      return;
    }
    u && e.removeAll();
    for (var f = 0; f < o; f++) {
      var h = i[f], c = e.childAt(f);
      h ? (h.ignore == null && (h.ignore = !1), jy(r, c, t, h, n, e)) : ({}.NODE_ENV !== "production" && J(c, "renderItem should not return a group containing elements as null/undefined/{} if they do not exist before."), c.ignore = !0);
    }
    for (var v = e.childCount() - 1; v >= f; v--) {
      var d = e.childAt(v);
      XU(e, d, n);
    }
  }
}
function XU(r, e, t) {
  e && Yh(e, ca(r).option, t);
}
function qU(r) {
  new ma(r.oldChildren, r.newChildren, Fx, Fx, r).add(Hx).update(Hx).remove(KU).execute();
}
function Fx(r, e) {
  var t = r && r.name;
  return t != null ? t : BU + e;
}
function Hx(r, e) {
  var t = this.context, a = r != null ? t.newChildren[r] : null, n = e != null ? t.oldChildren[e] : null;
  jy(t.api, n, t.dataIndex, a, t.seriesModel, t.group);
}
function KU(r) {
  var e = this.context, t = e.oldChildren[r];
  t && Yh(t, ca(t).option, e.seriesModel);
}
function FI(r) {
  return r && (r.pathData || r.d);
}
function jU(r) {
  return r && (U(r, "pathData") || U(r, "d"));
}
function JU(r) {
  r.registerChartView(FU), r.registerSeriesModel(yU);
}
var $n = Dt(), Wx = at, rd = Y, QU = (
  /** @class */
  function() {
    function r() {
      this._dragging = !1, this.animationThreshold = 15;
    }
    return r.prototype.render = function(e, t, a, n) {
      var i = t.get("value"), o = t.get("status");
      if (this._axisModel = e, this._axisPointerModel = t, this._api = a, !(!n && this._lastValue === i && this._lastStatus === o)) {
        this._lastValue = i, this._lastStatus = o;
        var s = this._group, l = this._handle;
        if (!o || o === "hide") {
          s && s.hide(), l && l.hide();
          return;
        }
        s && s.show(), l && l.show();
        var u = {};
        this.makeElOption(u, i, e, t, a);
        var f = u.graphicKey;
        f !== this._lastGraphicKey && this.clear(a), this._lastGraphicKey = f;
        var h = this._moveAnimation = this.determineAnimation(e, t);
        if (!s)
          s = this._group = new nt(), this.createPointerEl(s, u, e, t), this.createLabelEl(s, u, e, t), a.getZr().add(s);
        else {
          var c = ot($x, t, h);
          this.updatePointerEl(s, u, c), this.updateLabelEl(s, u, c, t);
        }
        Yx(s, t, !0), this._renderHandle(i);
      }
    }, r.prototype.remove = function(e) {
      this.clear(e);
    }, r.prototype.dispose = function(e) {
      this.clear(e);
    }, r.prototype.determineAnimation = function(e, t) {
      var a = t.get("animation"), n = e.axis, i = n.type === "category", o = t.get("snap");
      if (!o && !i)
        return !1;
      if (a === "auto" || a == null) {
        var s = this.animationThreshold;
        if (i && n.getBandWidth() > s)
          return !0;
        if (o) {
          var l = wy(e).seriesDataCount, u = n.getExtent();
          return Math.abs(u[0] - u[1]) / l > s;
        }
        return !1;
      }
      return a === !0;
    }, r.prototype.makeElOption = function(e, t, a, n, i) {
    }, r.prototype.createPointerEl = function(e, t, a, n) {
      var i = t.pointer;
      if (i) {
        var o = $n(e).pointerEl = new wl[i.type](Wx(t.pointer));
        e.add(o);
      }
    }, r.prototype.createLabelEl = function(e, t, a, n) {
      if (t.label) {
        var i = $n(e).labelEl = new Ct(Wx(t.label));
        e.add(i), Ux(i, n);
      }
    }, r.prototype.updatePointerEl = function(e, t, a) {
      var n = $n(e).pointerEl;
      n && t.pointer && (n.setStyle(t.pointer.style), a(n, {
        shape: t.pointer.shape
      }));
    }, r.prototype.updateLabelEl = function(e, t, a, n) {
      var i = $n(e).labelEl;
      i && (i.setStyle(t.label.style), a(i, {
        // Consider text length change in vertical axis, animation should
        // be used on shape, otherwise the effect will be weird.
        // TODOTODO
        // shape: elOption.label.shape,
        x: t.label.x,
        y: t.label.y
      }), Ux(i, n));
    }, r.prototype._renderHandle = function(e) {
      if (!(this._dragging || !this.updateHandleTransform)) {
        var t = this._axisPointerModel, a = this._api.getZr(), n = this._handle, i = t.getModel("handle"), o = t.get("status");
        if (!i.get("show") || !o || o === "hide") {
          n && a.remove(n), this._handle = null;
          return;
        }
        var s;
        this._handle || (s = !0, n = this._handle = xl(i.get("icon"), {
          cursor: "move",
          draggable: !0,
          onmousemove: function(u) {
            da(u.event);
          },
          onmousedown: rd(this._onHandleDragMove, this, 0, 0),
          drift: rd(this._onHandleDragMove, this),
          ondragend: rd(this._onHandleDragEnd, this)
        }), a.add(n)), Yx(n, t, !1), n.setStyle(i.getItemStyle(null, ["color", "borderColor", "borderWidth", "opacity", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY"]));
        var l = i.get("size");
        z(l) || (l = [l, l]), n.scaleX = l[0] / 2, n.scaleY = l[1] / 2, Vo(this, "_doDispatchAxisPointer", i.get("throttle") || 0, "fixRate"), this._moveHandleToValue(e, s);
      }
    }, r.prototype._moveHandleToValue = function(e, t) {
      $x(this._axisPointerModel, !t && this._moveAnimation, this._handle, ad(this.getHandleTransform(e, this._axisModel, this._axisPointerModel)));
    }, r.prototype._onHandleDragMove = function(e, t) {
      var a = this._handle;
      if (a) {
        this._dragging = !0;
        var n = this.updateHandleTransform(ad(a), [e, t], this._axisModel, this._axisPointerModel);
        this._payloadInfo = n, a.stopAnimation(), a.attr(ad(n)), $n(a).lastProp = null, this._doDispatchAxisPointer();
      }
    }, r.prototype._doDispatchAxisPointer = function() {
      var e = this._handle;
      if (e) {
        var t = this._payloadInfo, a = this._axisModel;
        this._api.dispatchAction({
          type: "updateAxisPointer",
          x: t.cursorPoint[0],
          y: t.cursorPoint[1],
          tooltipOption: t.tooltipOption,
          axesInfo: [{
            axisDim: a.axis.dim,
            axisIndex: a.componentIndex
          }]
        });
      }
    }, r.prototype._onHandleDragEnd = function() {
      this._dragging = !1;
      var e = this._handle;
      if (e) {
        var t = this._axisPointerModel.get("value");
        this._moveHandleToValue(t), this._api.dispatchAction({
          type: "hideTip"
        });
      }
    }, r.prototype.clear = function(e) {
      this._lastValue = null, this._lastStatus = null;
      var t = e.getZr(), a = this._group, n = this._handle;
      t && a && (this._lastGraphicKey = null, a && t.remove(a), n && t.remove(n), this._group = null, this._handle = null, this._payloadInfo = null), tl(this, "_doDispatchAxisPointer");
    }, r.prototype.doClear = function() {
    }, r.prototype.buildLabel = function(e, t, a) {
      return a = a || 0, {
        x: e[a],
        y: e[1 - a],
        width: t[a],
        height: t[1 - a]
      };
    }, r;
  }()
);
function $x(r, e, t, a) {
  HI($n(t).lastProp, a) || ($n(t).lastProp = a, e ? Mt(t, a, r) : (t.stopAnimation(), t.attr(a)));
}
function HI(r, e) {
  if (j(r) && j(e)) {
    var t = !0;
    return M(e, function(a, n) {
      t = t && HI(r[n], a);
    }), !!t;
  } else
    return r === e;
}
function Ux(r, e) {
  r[e.get(["label", "show"]) ? "show" : "hide"]();
}
function ad(r) {
  return {
    x: r.x || 0,
    y: r.y || 0,
    rotation: r.rotation || 0
  };
}
function Yx(r, e, t) {
  var a = e.get("z"), n = e.get("zlevel");
  r && r.traverse(function(i) {
    i.type !== "group" && (a != null && (i.z = a), n != null && (i.zlevel = n), i.silent = t);
  });
}
const Qy = QU;
function tm(r) {
  var e = r.get("type"), t = r.getModel(e + "Style"), a;
  return e === "line" ? (a = t.getLineStyle(), a.fill = null) : e === "shadow" && (a = t.getAreaStyle(), a.stroke = null), a;
}
function WI(r, e, t, a, n) {
  var i = t.get("value"), o = $I(i, e.axis, e.ecModel, t.get("seriesDataIndices"), {
    precision: t.get(["label", "precision"]),
    formatter: t.get(["label", "formatter"])
  }), s = t.getModel("label"), l = Eo(s.get("padding") || 0), u = s.getFont(), f = gl(o, u), h = n.position, c = f.width + l[1] + l[3], v = f.height + l[0] + l[2], d = n.align;
  d === "right" && (h[0] -= c), d === "center" && (h[0] -= c / 2);
  var p = n.verticalAlign;
  p === "bottom" && (h[1] -= v), p === "middle" && (h[1] -= v / 2), t6(h, c, v, a);
  var g = s.get("backgroundColor");
  (!g || g === "auto") && (g = e.get(["axisLine", "lineStyle", "color"])), r.label = {
    // shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},
    x: h[0],
    y: h[1],
    style: Ot(s, {
      text: o,
      font: u,
      fill: s.getTextColor(),
      padding: l,
      backgroundColor: g
    }),
    // Label should be over axisPointer.
    z2: 10
  };
}
function t6(r, e, t, a) {
  var n = a.getWidth(), i = a.getHeight();
  r[0] = Math.min(r[0] + e, n) - e, r[1] = Math.min(r[1] + t, i) - t, r[0] = Math.max(r[0], 0), r[1] = Math.max(r[1], 0);
}
function $I(r, e, t, a, n) {
  r = e.scale.parse(r);
  var i = e.scale.getLabel({
    value: r
  }, {
    // If `precision` is set, width can be fixed (like '12.00500'), which
    // helps to debounce when when moving label.
    precision: n.precision
  }), o = n.formatter;
  if (o) {
    var s = {
      value: vy(e, {
        value: r
      }),
      axisDimension: e.dim,
      axisIndex: e.index,
      seriesData: []
    };
    M(a, function(l) {
      var u = t.getSeriesByIndex(l.seriesIndex), f = l.dataIndexInside, h = u && u.getDataParams(f);
      h && s.seriesData.push(h);
    }), $(o) ? i = o.replace("{value}", i) : K(o) && (i = o(s));
  }
  return i;
}
function em(r, e, t) {
  var a = fr();
  return _i(a, a, t.rotation), Zr(a, a, t.position), Dr([r.dataToCoord(e), (t.labelOffset || 0) + (t.labelDirection || 1) * (t.labelMargin || 0)], a);
}
function UI(r, e, t, a, n, i) {
  var o = _a.innerTextLayout(t.rotation, 0, t.labelDirection);
  t.labelMargin = n.get(["label", "margin"]), WI(e, a, n, i, {
    position: em(a.axis, r, t),
    align: o.textAlign,
    verticalAlign: o.textVerticalAlign
  });
}
function rm(r, e, t) {
  return t = t || 0, {
    x1: r[t],
    y1: r[1 - t],
    x2: e[t],
    y2: e[1 - t]
  };
}
function YI(r, e, t) {
  return t = t || 0, {
    x: r[t],
    y: r[1 - t],
    width: e[t],
    height: e[1 - t]
  };
}
function Zx(r, e, t, a, n, i) {
  return {
    cx: r,
    cy: e,
    r0: t,
    r: a,
    startAngle: n,
    endAngle: i,
    clockwise: !0
  };
}
var e6 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return e.prototype.makeElOption = function(t, a, n, i, o) {
      var s = n.axis, l = s.grid, u = i.get("type"), f = Xx(l, s).getOtherAxis(s).getGlobalExtent(), h = s.toGlobalCoord(s.dataToCoord(a, !0));
      if (u && u !== "none") {
        var c = tm(i), v = r6[u](s, h, f);
        v.style = c, t.graphicKey = v.type, t.pointer = v;
      }
      var d = Ip(l.model, n);
      UI(
        // @ts-ignore
        a,
        t,
        d,
        n,
        i,
        o
      );
    }, e.prototype.getHandleTransform = function(t, a, n) {
      var i = Ip(a.axis.grid.model, a, {
        labelInside: !1
      });
      i.labelMargin = n.get(["handle", "margin"]);
      var o = em(a.axis, t, i);
      return {
        x: o[0],
        y: o[1],
        rotation: i.rotation + (i.labelDirection < 0 ? Math.PI : 0)
      };
    }, e.prototype.updateHandleTransform = function(t, a, n, i) {
      var o = n.axis, s = o.grid, l = o.getGlobalExtent(!0), u = Xx(s, o).getOtherAxis(o).getGlobalExtent(), f = o.dim === "x" ? 0 : 1, h = [t.x, t.y];
      h[f] += a[f], h[f] = Math.min(l[1], h[f]), h[f] = Math.max(l[0], h[f]);
      var c = (u[1] + u[0]) / 2, v = [c, c];
      v[f] = h[f];
      var d = [{
        verticalAlign: "middle"
      }, {
        align: "center"
      }];
      return {
        x: h[0],
        y: h[1],
        rotation: t.rotation,
        cursorPoint: v,
        tooltipOption: d[f]
      };
    }, e;
  }(Qy)
);
function Xx(r, e) {
  var t = {};
  return t[e.dim + "AxisIndex"] = e.index, r.getCartesian(t);
}
var r6 = {
  line: function(r, e, t) {
    var a = rm([e, t[0]], [e, t[1]], qx(r));
    return {
      type: "Line",
      subPixelOptimize: !0,
      shape: a
    };
  },
  shadow: function(r, e, t) {
    var a = Math.max(1, r.getBandWidth()), n = t[1] - t[0];
    return {
      type: "Rect",
      shape: YI([e - a / 2, t[0]], [a, n], qx(r))
    };
  }
};
function qx(r) {
  return r.dim === "x" ? 0 : 1;
}
const a6 = e6;
var n6 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.type = "axisPointer", e.defaultOption = {
      // 'auto' means that show when triggered by tooltip or handle.
      show: "auto",
      // zlevel: 0,
      z: 50,
      type: "line",
      // axispointer triggered by tootip determine snap automatically,
      // see `modelHelper`.
      snap: !1,
      triggerTooltip: !0,
      triggerEmphasis: !0,
      value: null,
      status: null,
      link: [],
      // Do not set 'auto' here, otherwise global animation: false
      // will not effect at this axispointer.
      animation: null,
      animationDurationUpdate: 200,
      lineStyle: {
        color: "#B9BEC9",
        width: 1,
        type: "dashed"
      },
      shadowStyle: {
        color: "rgba(210,219,238,0.2)"
      },
      label: {
        show: !0,
        formatter: null,
        precision: "auto",
        margin: 3,
        color: "#fff",
        padding: [5, 7, 5, 7],
        backgroundColor: "auto",
        borderColor: null,
        borderWidth: 0,
        borderRadius: 3
      },
      handle: {
        show: !1,
        // eslint-disable-next-line
        icon: "M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z",
        size: 45,
        // handle margin is from symbol center to axis, which is stable when circular move.
        margin: 50,
        // color: '#1b8bbd'
        // color: '#2f4554'
        color: "#333",
        shadowBlur: 3,
        shadowColor: "#aaa",
        shadowOffsetX: 0,
        shadowOffsetY: 2,
        // For mobile performance
        throttle: 40
      }
    }, e;
  }(xt)
);
const i6 = n6;
var sa = Dt(), o6 = M;
function ZI(r, e, t) {
  if (!bt.node) {
    var a = e.getZr();
    sa(a).records || (sa(a).records = {}), s6(a, e);
    var n = sa(a).records[r] || (sa(a).records[r] = {});
    n.handler = t;
  }
}
function s6(r, e) {
  if (sa(r).initialized)
    return;
  sa(r).initialized = !0, t("click", ot(Kx, "click")), t("mousemove", ot(Kx, "mousemove")), t("globalout", u6);
  function t(a, n) {
    r.on(a, function(i) {
      var o = f6(e);
      o6(sa(r).records, function(s) {
        s && n(s, i, o.dispatchAction);
      }), l6(o.pendings, e);
    });
  }
}
function l6(r, e) {
  var t = r.showTip.length, a = r.hideTip.length, n;
  t ? n = r.showTip[t - 1] : a && (n = r.hideTip[a - 1]), n && (n.dispatchAction = null, e.dispatchAction(n));
}
function u6(r, e, t) {
  r.handler("leave", null, t);
}
function Kx(r, e, t, a) {
  e.handler(r, t, a);
}
function f6(r) {
  var e = {
    showTip: [],
    hideTip: []
  }, t = function(a) {
    var n = e[a.type];
    n ? n.push(a) : (a.dispatchAction = t, r.dispatchAction(a));
  };
  return {
    dispatchAction: t,
    pendings: e
  };
}
function Zp(r, e) {
  if (!bt.node) {
    var t = e.getZr(), a = (sa(t).records || {})[r];
    a && (sa(t).records[r] = null);
  }
}
var h6 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, a, n) {
      var i = a.getComponent("tooltip"), o = t.get("triggerOn") || i && i.get("triggerOn") || "mousemove|click";
      ZI("axisPointer", n, function(s, l, u) {
        o !== "none" && (s === "leave" || o.indexOf(s) >= 0) && u({
          type: "updateAxisPointer",
          currTrigger: s,
          x: l && l.offsetX,
          y: l && l.offsetY
        });
      });
    }, e.prototype.remove = function(t, a) {
      Zp("axisPointer", a);
    }, e.prototype.dispose = function(t, a) {
      Zp("axisPointer", a);
    }, e.type = "axisPointer", e;
  }($t)
);
const c6 = h6;
function XI(r, e) {
  var t = [], a = r.seriesIndex, n;
  if (a == null || !(n = e.getSeriesByIndex(a)))
    return {
      point: []
    };
  var i = n.getData(), o = ci(i, r);
  if (o == null || o < 0 || z(o))
    return {
      point: []
    };
  var s = i.getItemGraphicEl(o), l = n.coordinateSystem;
  if (n.getTooltipPosition)
    t = n.getTooltipPosition(o) || [];
  else if (l && l.dataToPoint)
    if (r.isStacked) {
      var u = l.getBaseAxis(), f = l.getOtherAxis(u), h = f.dim, c = u.dim, v = h === "x" || h === "radius" ? 1 : 0, d = i.mapDimension(c), p = [];
      p[v] = i.get(d, o), p[1 - v] = i.get(i.getCalculationInfo("stackResultDimension"), o), t = l.dataToPoint(p) || [];
    } else
      t = l.dataToPoint(i.getValues(G(l.dimensions, function(y) {
        return i.mapDimension(y);
      }), o)) || [];
  else if (s) {
    var g = s.getBoundingRect().clone();
    g.applyTransform(s.transform), t = [g.x + g.width / 2, g.y + g.height / 2];
  }
  return {
    point: t,
    el: s
  };
}
var jx = Dt();
function v6(r, e, t) {
  var a = r.currTrigger, n = [r.x, r.y], i = r, o = r.dispatchAction || Y(t.dispatchAction, t), s = e.getComponent("axisPointer").coordSysAxesInfo;
  if (s) {
    ef(n) && (n = XI({
      seriesIndex: i.seriesIndex,
      // Do not use dataIndexInside from other ec instance.
      // FIXME: auto detect it?
      dataIndex: i.dataIndex
    }, e).point);
    var l = ef(n), u = i.axesInfo, f = s.axesInfo, h = a === "leave" || ef(n), c = {}, v = {}, d = {
      list: [],
      map: {}
    }, p = {
      showPointer: ot(p6, v),
      showTooltip: ot(g6, d)
    };
    M(s.coordSysMap, function(y, m) {
      var _ = l || y.containPoint(n);
      M(s.coordSysAxesInfo[m], function(S, w) {
        var x = S.axis, b = S6(u, S);
        if (!h && _ && (!u || b)) {
          var T = b && b.value;
          T == null && !l && (T = x.pointToData(n)), T != null && Jx(S, T, p, !1, c);
        }
      });
    });
    var g = {};
    return M(f, function(y, m) {
      var _ = y.linkGroup;
      _ && !v[m] && M(_.axesInfo, function(S, w) {
        var x = v[w];
        if (S !== y && x) {
          var b = x.value;
          _.mapper && (b = y.axis.scale.parse(_.mapper(b, Qx(S), Qx(y)))), g[y.key] = b;
        }
      });
    }), M(g, function(y, m) {
      Jx(f[m], y, p, !0, c);
    }), y6(v, f, c), m6(d, n, r, o), _6(f, o, t), c;
  }
}
function Jx(r, e, t, a, n) {
  var i = r.axis;
  if (!(i.scale.isBlank() || !i.containData(e))) {
    if (!r.involveSeries) {
      t.showPointer(r, e);
      return;
    }
    var o = d6(e, r), s = o.payloadBatch, l = o.snapToValue;
    s[0] && n.seriesIndex == null && V(n, s[0]), !a && r.snap && i.containData(l) && l != null && (e = l), t.showPointer(r, e, s), t.showTooltip(r, o, l);
  }
}
function d6(r, e) {
  var t = e.axis, a = t.dim, n = r, i = [], o = Number.MAX_VALUE, s = -1;
  return M(e.seriesModels, function(l, u) {
    var f = l.getData().mapDimensionsAll(a), h, c;
    if (l.getAxisTooltipData) {
      var v = l.getAxisTooltipData(f, r, t);
      c = v.dataIndices, h = v.nestestValue;
    } else {
      if (c = l.getData().indicesOfNearest(
        f[0],
        r,
        // Add a threshold to avoid find the wrong dataIndex
        // when data length is not same.
        // false,
        t.type === "category" ? 0.5 : null
      ), !c.length)
        return;
      h = l.getData().get(f[0], c[0]);
    }
    if (!(h == null || !isFinite(h))) {
      var d = r - h, p = Math.abs(d);
      p <= o && ((p < o || d >= 0 && s < 0) && (o = p, s = d, n = h, i.length = 0), M(c, function(g) {
        i.push({
          seriesIndex: l.seriesIndex,
          dataIndexInside: g,
          dataIndex: l.getData().getRawIndex(g)
        });
      }));
    }
  }), {
    payloadBatch: i,
    snapToValue: n
  };
}
function p6(r, e, t, a) {
  r[e.key] = {
    value: t,
    payloadBatch: a
  };
}
function g6(r, e, t, a) {
  var n = t.payloadBatch, i = e.axis, o = i.model, s = e.axisPointerModel;
  if (!(!e.triggerTooltip || !n.length)) {
    var l = e.coordSys.model, u = ol(l), f = r.map[u];
    f || (f = r.map[u] = {
      coordSysId: l.id,
      coordSysIndex: l.componentIndex,
      coordSysType: l.type,
      coordSysMainType: l.mainType,
      dataByAxis: []
    }, r.list.push(f)), f.dataByAxis.push({
      axisDim: i.dim,
      axisIndex: o.componentIndex,
      axisType: o.type,
      axisId: o.id,
      value: a,
      // Caustion: viewHelper.getValueLabel is actually on "view stage", which
      // depends that all models have been updated. So it should not be performed
      // here. Considering axisPointerModel used here is volatile, which is hard
      // to be retrieve in TooltipView, we prepare parameters here.
      valueLabelOpt: {
        precision: s.get(["label", "precision"]),
        formatter: s.get(["label", "formatter"])
      },
      seriesDataIndices: n.slice()
    });
  }
}
function y6(r, e, t) {
  var a = t.axesInfo = [];
  M(e, function(n, i) {
    var o = n.axisPointerModel.option, s = r[i];
    s ? (!n.useHandle && (o.status = "show"), o.value = s.value, o.seriesDataIndices = (s.payloadBatch || []).slice()) : !n.useHandle && (o.status = "hide"), o.status === "show" && a.push({
      axisDim: n.axis.dim,
      axisIndex: n.axis.model.componentIndex,
      value: o.value
    });
  });
}
function m6(r, e, t, a) {
  if (ef(e) || !r.list.length) {
    a({
      type: "hideTip"
    });
    return;
  }
  var n = ((r.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};
  a({
    type: "showTip",
    escapeConnect: !0,
    x: e[0],
    y: e[1],
    tooltipOption: t.tooltipOption,
    position: t.position,
    dataIndexInside: n.dataIndexInside,
    dataIndex: n.dataIndex,
    seriesIndex: n.seriesIndex,
    dataByCoordSys: r.list
  });
}
function _6(r, e, t) {
  var a = t.getZr(), n = "axisPointerLastHighlights", i = jx(a)[n] || {}, o = jx(a)[n] = {};
  M(r, function(u, f) {
    var h = u.axisPointerModel.option;
    h.status === "show" && u.triggerEmphasis && M(h.seriesDataIndices, function(c) {
      var v = c.seriesIndex + " | " + c.dataIndex;
      o[v] = c;
    });
  });
  var s = [], l = [];
  M(i, function(u, f) {
    !o[f] && l.push(u);
  }), M(o, function(u, f) {
    !i[f] && s.push(u);
  }), l.length && t.dispatchAction({
    type: "downplay",
    escapeConnect: !0,
    // Not blur others when highlight in axisPointer.
    notBlur: !0,
    batch: l
  }), s.length && t.dispatchAction({
    type: "highlight",
    escapeConnect: !0,
    // Not blur others when highlight in axisPointer.
    notBlur: !0,
    batch: s
  });
}
function S6(r, e) {
  for (var t = 0; t < (r || []).length; t++) {
    var a = r[t];
    if (e.axis.dim === a.axisDim && e.axis.model.componentIndex === a.axisIndex)
      return a;
  }
}
function Qx(r) {
  var e = r.axis.model, t = {}, a = t.axisDim = r.axis.dim;
  return t.axisIndex = t[a + "AxisIndex"] = e.componentIndex, t.axisName = t[a + "AxisName"] = e.name, t.axisId = t[a + "AxisId"] = e.id, t;
}
function ef(r) {
  return !r || r[0] == null || isNaN(r[0]) || r[1] == null || isNaN(r[1]);
}
function Nl(r) {
  Ti.registerAxisPointerClass("CartesianAxisPointer", a6), r.registerComponentModel(i6), r.registerComponentView(c6), r.registerPreprocessor(function(e) {
    if (e) {
      (!e.axisPointer || e.axisPointer.length === 0) && (e.axisPointer = {});
      var t = e.axisPointer.link;
      t && !z(t) && (e.axisPointer.link = [t]);
    }
  }), r.registerProcessor(r.PRIORITY.PROCESSOR.STATISTIC, function(e, t) {
    e.getComponent("axisPointer").coordSysAxesInfo = lG(e, t);
  }), r.registerAction({
    type: "updateAxisPointer",
    event: "updateAxisPointer",
    update: ":updateAxisPointer"
  }, v6);
}
function x6(r) {
  yt(_M), yt(Nl);
}
var w6 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return e.prototype.makeElOption = function(t, a, n, i, o) {
      var s = n.axis;
      s.dim === "angle" && (this.animationThreshold = Math.PI / 18);
      var l = s.polar, u = l.getOtherAxis(s), f = u.getExtent(), h = s.dataToCoord(a), c = i.get("type");
      if (c && c !== "none") {
        var v = tm(i), d = T6[c](s, l, h, f);
        d.style = v, t.graphicKey = d.type, t.pointer = d;
      }
      var p = i.get(["label", "margin"]), g = b6(a, n, i, l, p);
      WI(t, n, i, o, g);
    }, e;
  }(Qy)
);
function b6(r, e, t, a, n) {
  var i = e.axis, o = i.dataToCoord(r), s = a.getAngleAxis().getExtent()[0];
  s = s / 180 * Math.PI;
  var l = a.getRadiusAxis().getExtent(), u, f, h;
  if (i.dim === "radius") {
    var c = fr();
    _i(c, c, s), Zr(c, c, [a.cx, a.cy]), u = Dr([o, -n], c);
    var v = e.getModel("axisLabel").get("rotate") || 0, d = _a.innerTextLayout(s, v * Math.PI / 180, -1);
    f = d.textAlign, h = d.textVerticalAlign;
  } else {
    var p = l[1];
    u = a.coordToPoint([p + n, o]);
    var g = a.cx, y = a.cy;
    f = Math.abs(u[0] - g) / p < 0.3 ? "center" : u[0] > g ? "left" : "right", h = Math.abs(u[1] - y) / p < 0.3 ? "middle" : u[1] > y ? "top" : "bottom";
  }
  return {
    position: u,
    align: f,
    verticalAlign: h
  };
}
var T6 = {
  line: function(r, e, t, a) {
    return r.dim === "angle" ? {
      type: "Line",
      shape: rm(e.coordToPoint([a[0], t]), e.coordToPoint([a[1], t]))
    } : {
      type: "Circle",
      shape: {
        cx: e.cx,
        cy: e.cy,
        r: t
      }
    };
  },
  shadow: function(r, e, t, a) {
    var n = Math.max(1, r.getBandWidth()), i = Math.PI / 180;
    return r.dim === "angle" ? {
      type: "Sector",
      shape: Zx(
        e.cx,
        e.cy,
        a[0],
        a[1],
        // In ECharts y is negative if angle is positive
        (-t - n / 2) * i,
        (-t + n / 2) * i
      )
    } : {
      type: "Sector",
      shape: Zx(e.cx, e.cy, t - n / 2, t + n / 2, 0, Math.PI * 2)
    };
  }
};
const D6 = w6;
var C6 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.findAxisModel = function(t) {
      var a, n = this.ecModel;
      return n.eachComponent(t, function(i) {
        i.getCoordSysModel() === this && (a = i);
      }, this), a;
    }, e.type = "polar", e.dependencies = ["radiusAxis", "angleAxis"], e.defaultOption = {
      // zlevel: 0,
      z: 0,
      center: ["50%", "50%"],
      radius: "80%"
    }, e;
  }(xt)
);
const A6 = C6;
var am = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return e.prototype.getCoordSysModel = function() {
      return this.getReferringComponents("polar", Jt).models[0];
    }, e.type = "polarAxis", e;
  }(xt)
);
te(am, Cl);
var M6 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.type = "angleAxis", e;
  }(am)
), I6 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.type = "radiusAxis", e;
  }(am)
), nm = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t, a) {
      return r.call(this, "radius", t, a) || this;
    }
    return e.prototype.pointToData = function(t, a) {
      return this.polar.pointToData(t, a)[this.dim === "radius" ? 0 : 1];
    }, e;
  }(Lr)
);
nm.prototype.dataToRadius = Lr.prototype.dataToCoord;
nm.prototype.radiusToData = Lr.prototype.coordToData;
const L6 = nm;
var E6 = Dt(), im = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t, a) {
      return r.call(this, "angle", t, a || [0, 360]) || this;
    }
    return e.prototype.pointToData = function(t, a) {
      return this.polar.pointToData(t, a)[this.dim === "radius" ? 0 : 1];
    }, e.prototype.calculateCategoryInterval = function() {
      var t = this, a = t.getLabelModel(), n = t.scale, i = n.getExtent(), o = n.count();
      if (i[1] - i[0] < 1)
        return 0;
      var s = i[0], l = t.dataToCoord(s + 1) - t.dataToCoord(s), u = Math.abs(l), f = gl(s == null ? "" : s + "", a.getFont(), "center", "top"), h = Math.max(f.height, 7), c = h / u;
      isNaN(c) && (c = 1 / 0);
      var v = Math.max(0, Math.floor(c)), d = E6(t.model), p = d.lastAutoInterval, g = d.lastTickCount;
      return p != null && g != null && Math.abs(p - v) <= 1 && Math.abs(g - o) <= 1 && p > v ? v = p : (d.lastTickCount = o, d.lastAutoInterval = v), v;
    }, e;
  }(Lr)
);
im.prototype.dataToAngle = Lr.prototype.dataToCoord;
im.prototype.angleToData = Lr.prototype.coordToData;
const P6 = im;
var qI = ["radius", "angle"], R6 = (
  /** @class */
  function() {
    function r(e) {
      this.dimensions = qI, this.type = "polar", this.cx = 0, this.cy = 0, this._radiusAxis = new L6(), this._angleAxis = new P6(), this.axisPointerEnabled = !0, this.name = e || "", this._radiusAxis.polar = this._angleAxis.polar = this;
    }
    return r.prototype.containPoint = function(e) {
      var t = this.pointToCoord(e);
      return this._radiusAxis.contain(t[0]) && this._angleAxis.contain(t[1]);
    }, r.prototype.containData = function(e) {
      return this._radiusAxis.containData(e[0]) && this._angleAxis.containData(e[1]);
    }, r.prototype.getAxis = function(e) {
      var t = "_" + e + "Axis";
      return this[t];
    }, r.prototype.getAxes = function() {
      return [this._radiusAxis, this._angleAxis];
    }, r.prototype.getAxesByScale = function(e) {
      var t = [], a = this._angleAxis, n = this._radiusAxis;
      return a.scale.type === e && t.push(a), n.scale.type === e && t.push(n), t;
    }, r.prototype.getAngleAxis = function() {
      return this._angleAxis;
    }, r.prototype.getRadiusAxis = function() {
      return this._radiusAxis;
    }, r.prototype.getOtherAxis = function(e) {
      var t = this._angleAxis;
      return e === t ? this._radiusAxis : t;
    }, r.prototype.getBaseAxis = function() {
      return this.getAxesByScale("ordinal")[0] || this.getAxesByScale("time")[0] || this.getAngleAxis();
    }, r.prototype.getTooltipAxes = function(e) {
      var t = e != null && e !== "auto" ? this.getAxis(e) : this.getBaseAxis();
      return {
        baseAxes: [t],
        otherAxes: [this.getOtherAxis(t)]
      };
    }, r.prototype.dataToPoint = function(e, t) {
      return this.coordToPoint([this._radiusAxis.dataToRadius(e[0], t), this._angleAxis.dataToAngle(e[1], t)]);
    }, r.prototype.pointToData = function(e, t) {
      var a = this.pointToCoord(e);
      return [this._radiusAxis.radiusToData(a[0], t), this._angleAxis.angleToData(a[1], t)];
    }, r.prototype.pointToCoord = function(e) {
      var t = e[0] - this.cx, a = e[1] - this.cy, n = this.getAngleAxis(), i = n.getExtent(), o = Math.min(i[0], i[1]), s = Math.max(i[0], i[1]);
      n.inverse ? o = s - 360 : s = o + 360;
      var l = Math.sqrt(t * t + a * a);
      t /= l, a /= l;
      for (var u = Math.atan2(-a, t) / Math.PI * 180, f = u < o ? 1 : -1; u < o || u > s; )
        u += f * 360;
      return [l, u];
    }, r.prototype.coordToPoint = function(e) {
      var t = e[0], a = e[1] / 180 * Math.PI, n = Math.cos(a) * t + this.cx, i = -Math.sin(a) * t + this.cy;
      return [n, i];
    }, r.prototype.getArea = function() {
      var e = this.getAngleAxis(), t = this.getRadiusAxis(), a = t.getExtent().slice();
      a[0] > a[1] && a.reverse();
      var n = e.getExtent(), i = Math.PI / 180;
      return {
        cx: this.cx,
        cy: this.cy,
        r0: a[0],
        r: a[1],
        startAngle: -n[0] * i,
        endAngle: -n[1] * i,
        clockwise: e.inverse,
        contain: function(o, s) {
          var l = o - this.cx, u = s - this.cy, f = l * l + u * u - 1e-4, h = this.r, c = this.r0;
          return f <= h * h && f >= c * c;
        }
      };
    }, r.prototype.convertToPixel = function(e, t, a) {
      var n = tw(t);
      return n === this ? this.dataToPoint(a) : null;
    }, r.prototype.convertFromPixel = function(e, t, a) {
      var n = tw(t);
      return n === this ? this.pointToData(a) : null;
    }, r;
  }()
);
function tw(r) {
  var e = r.seriesModel, t = r.polarModel;
  return t && t.coordinateSystem || e && e.coordinateSystem;
}
const N6 = R6;
function O6(r, e, t) {
  var a = e.get("center"), n = t.getWidth(), i = t.getHeight();
  r.cx = H(a[0], n), r.cy = H(a[1], i);
  var o = r.getRadiusAxis(), s = Math.min(n, i) / 2, l = e.get("radius");
  l == null ? l = [0, "100%"] : z(l) || (l = [0, l]);
  var u = [H(l[0], s), H(l[1], s)];
  o.inverse ? o.setExtent(u[1], u[0]) : o.setExtent(u[0], u[1]);
}
function k6(r, e) {
  var t = this, a = t.getAngleAxis(), n = t.getRadiusAxis();
  if (a.scale.setExtent(1 / 0, -1 / 0), n.scale.setExtent(1 / 0, -1 / 0), r.eachSeries(function(s) {
    if (s.coordinateSystem === t) {
      var l = s.getData();
      M(Nf(l, "radius"), function(u) {
        n.scale.unionExtentFromData(l, u);
      }), M(Nf(l, "angle"), function(u) {
        a.scale.unionExtentFromData(l, u);
      });
    }
  }), go(a.scale, a.model), go(n.scale, n.model), a.type === "category" && !a.onBand) {
    var i = a.getExtent(), o = 360 / a.scale.count();
    a.inverse ? i[1] += o : i[1] -= o, a.setExtent(i[0], i[1]);
  }
}
function V6(r) {
  return r.mainType === "angleAxis";
}
function ew(r, e) {
  if (r.type = e.get("type"), r.scale = Bh(e), r.onBand = e.get("boundaryGap") && r.type === "category", r.inverse = e.get("inverse"), V6(e)) {
    r.inverse = r.inverse !== e.get("clockwise");
    var t = e.get("startAngle");
    r.setExtent(t, t + (r.inverse ? -360 : 360));
  }
  e.axis = r, r.model = e;
}
var B6 = {
  dimensions: qI,
  create: function(r, e) {
    var t = [];
    return r.eachComponent("polar", function(a, n) {
      var i = new N6(n + "");
      i.update = k6;
      var o = i.getRadiusAxis(), s = i.getAngleAxis(), l = a.findAxisModel("radiusAxis"), u = a.findAxisModel("angleAxis");
      ew(o, l), ew(s, u), O6(i, a, e), t.push(i), a.coordinateSystem = i, i.model = a;
    }), r.eachSeries(function(a) {
      if (a.get("coordinateSystem") === "polar") {
        var n = a.getReferringComponents("polar", Jt).models[0];
        if ({}.NODE_ENV !== "production" && !n)
          throw new Error('Polar "' + jt(a.get("polarIndex"), a.get("polarId"), 0) + '" not found');
        a.coordinateSystem = n.coordinateSystem;
      }
    }), t;
  }
};
const z6 = B6;
var G6 = ["axisLine", "axisLabel", "axisTick", "minorTick", "splitLine", "minorSplitLine", "splitArea"];
function Iu(r, e, t) {
  e[1] > e[0] && (e = e.slice().reverse());
  var a = r.coordToPoint([e[0], t]), n = r.coordToPoint([e[1], t]);
  return {
    x1: a[0],
    y1: a[1],
    x2: n[0],
    y2: n[1]
  };
}
function Lu(r) {
  var e = r.getRadiusAxis();
  return e.inverse ? 0 : 1;
}
function rw(r) {
  var e = r[0], t = r[r.length - 1];
  e && t && Math.abs(Math.abs(e.coord - t.coord) - 360) < 1e-4 && r.pop();
}
var F6 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t.axisPointerClass = "PolarAxisPointer", t;
    }
    return e.prototype.render = function(t, a) {
      if (this.group.removeAll(), !!t.get("show")) {
        var n = t.axis, i = n.polar, o = i.getRadiusAxis().getExtent(), s = n.getTicksCoords(), l = n.getMinorTicksCoords(), u = G(n.getViewLabels(), function(f) {
          f = at(f);
          var h = n.scale, c = h.type === "ordinal" ? h.getRawOrdinalNumber(f.tickValue) : f.tickValue;
          return f.coord = n.dataToCoord(c), f;
        });
        rw(u), rw(s), M(G6, function(f) {
          t.get([f, "show"]) && (!n.scale.isBlank() || f === "axisLine") && H6[f](this.group, t, i, s, l, o, u);
        }, this);
      }
    }, e.type = "angleAxis", e;
  }(Ti)
), H6 = {
  axisLine: function(r, e, t, a, n, i) {
    var o = e.getModel(["axisLine", "lineStyle"]), s = Lu(t), l = s ? 0 : 1, u;
    i[l] === 0 ? u = new jr({
      shape: {
        cx: t.cx,
        cy: t.cy,
        r: i[s]
      },
      style: o.getLineStyle(),
      z2: 1,
      silent: !0
    }) : u = new Sh({
      shape: {
        cx: t.cx,
        cy: t.cy,
        r: i[s],
        r0: i[l]
      },
      style: o.getLineStyle(),
      z2: 1,
      silent: !0
    }), u.style.fill = null, r.add(u);
  },
  axisTick: function(r, e, t, a, n, i) {
    var o = e.getModel("axisTick"), s = (o.get("inside") ? -1 : 1) * o.get("length"), l = i[Lu(t)], u = G(a, function(f) {
      return new ue({
        shape: Iu(t, [l, l + s], f.coord)
      });
    });
    r.add(ir(u, {
      style: et(o.getModel("lineStyle").getLineStyle(), {
        stroke: e.get(["axisLine", "lineStyle", "color"])
      })
    }));
  },
  minorTick: function(r, e, t, a, n, i) {
    if (n.length) {
      for (var o = e.getModel("axisTick"), s = e.getModel("minorTick"), l = (o.get("inside") ? -1 : 1) * s.get("length"), u = i[Lu(t)], f = [], h = 0; h < n.length; h++)
        for (var c = 0; c < n[h].length; c++)
          f.push(new ue({
            shape: Iu(t, [u, u + l], n[h][c].coord)
          }));
      r.add(ir(f, {
        style: et(s.getModel("lineStyle").getLineStyle(), et(o.getLineStyle(), {
          stroke: e.get(["axisLine", "lineStyle", "color"])
        }))
      }));
    }
  },
  axisLabel: function(r, e, t, a, n, i, o) {
    var s = e.getCategories(!0), l = e.getModel("axisLabel"), u = l.get("margin"), f = e.get("triggerEvent");
    M(o, function(h, c) {
      var v = l, d = h.tickValue, p = i[Lu(t)], g = t.coordToPoint([p + u, h.coord]), y = t.cx, m = t.cy, _ = Math.abs(g[0] - y) / p < 0.3 ? "center" : g[0] > y ? "left" : "right", S = Math.abs(g[1] - m) / p < 0.3 ? "middle" : g[1] > m ? "top" : "bottom";
      if (s && s[d]) {
        var w = s[d];
        j(w) && w.textStyle && (v = new kt(w.textStyle, l, l.ecModel));
      }
      var x = new Ct({
        silent: _a.isLabelSilent(e),
        style: Ot(v, {
          x: g[0],
          y: g[1],
          fill: v.getTextColor() || e.get(["axisLine", "lineStyle", "color"]),
          text: h.formattedLabel,
          align: _,
          verticalAlign: S
        })
      });
      if (r.add(x), f) {
        var b = _a.makeAxisEventDataBase(e);
        b.targetType = "axisLabel", b.value = h.rawLabel, it(x).eventData = b;
      }
    }, this);
  },
  splitLine: function(r, e, t, a, n, i) {
    var o = e.getModel("splitLine"), s = o.getModel("lineStyle"), l = s.get("color"), u = 0;
    l = l instanceof Array ? l : [l];
    for (var f = [], h = 0; h < a.length; h++) {
      var c = u++ % l.length;
      f[c] = f[c] || [], f[c].push(new ue({
        shape: Iu(t, i, a[h].coord)
      }));
    }
    for (var h = 0; h < f.length; h++)
      r.add(ir(f[h], {
        style: et({
          stroke: l[h % l.length]
        }, s.getLineStyle()),
        silent: !0,
        z: e.get("z")
      }));
  },
  minorSplitLine: function(r, e, t, a, n, i) {
    if (n.length) {
      for (var o = e.getModel("minorSplitLine"), s = o.getModel("lineStyle"), l = [], u = 0; u < n.length; u++)
        for (var f = 0; f < n[u].length; f++)
          l.push(new ue({
            shape: Iu(t, i, n[u][f].coord)
          }));
      r.add(ir(l, {
        style: s.getLineStyle(),
        silent: !0,
        z: e.get("z")
      }));
    }
  },
  splitArea: function(r, e, t, a, n, i) {
    if (a.length) {
      var o = e.getModel("splitArea"), s = o.getModel("areaStyle"), l = s.get("color"), u = 0;
      l = l instanceof Array ? l : [l];
      for (var f = [], h = Math.PI / 180, c = -a[0].coord * h, v = Math.min(i[0], i[1]), d = Math.max(i[0], i[1]), p = e.get("clockwise"), g = 1, y = a.length; g <= y; g++) {
        var m = g === y ? a[0].coord : a[g].coord, _ = u++ % l.length;
        f[_] = f[_] || [], f[_].push(new ze({
          shape: {
            cx: t.cx,
            cy: t.cy,
            r0: v,
            r: d,
            startAngle: c,
            endAngle: -m * h,
            clockwise: p
          },
          silent: !0
        })), c = -m * h;
      }
      for (var g = 0; g < f.length; g++)
        r.add(ir(f[g], {
          style: et({
            fill: l[g % l.length]
          }, s.getAreaStyle()),
          silent: !0
        }));
    }
  }
};
const W6 = F6;
var $6 = ["axisLine", "axisTickLabel", "axisName"], U6 = ["splitLine", "splitArea", "minorSplitLine"], Y6 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t.axisPointerClass = "PolarAxisPointer", t;
    }
    return e.prototype.render = function(t, a) {
      if (this.group.removeAll(), !!t.get("show")) {
        var n = this._axisGroup, i = this._axisGroup = new nt();
        this.group.add(i);
        var o = t.axis, s = o.polar, l = s.getAngleAxis(), u = o.getTicksCoords(), f = o.getMinorTicksCoords(), h = l.getExtent()[0], c = o.getExtent(), v = X6(s, t, h), d = new _a(t, v);
        M($6, d.add, d), i.add(d.getGroup()), Sl(n, i, t), M(U6, function(p) {
          t.get([p, "show"]) && !o.scale.isBlank() && Z6[p](this.group, t, s, h, c, u, f);
        }, this);
      }
    }, e.type = "radiusAxis", e;
  }(Ti)
), Z6 = {
  splitLine: function(r, e, t, a, n, i) {
    var o = e.getModel("splitLine"), s = o.getModel("lineStyle"), l = s.get("color"), u = 0;
    l = l instanceof Array ? l : [l];
    for (var f = [], h = 0; h < i.length; h++) {
      var c = u++ % l.length;
      f[c] = f[c] || [], f[c].push(new jr({
        shape: {
          cx: t.cx,
          cy: t.cy,
          // ensure circle radius >= 0
          r: Math.max(i[h].coord, 0)
        }
      }));
    }
    for (var h = 0; h < f.length; h++)
      r.add(ir(f[h], {
        style: et({
          stroke: l[h % l.length],
          fill: null
        }, s.getLineStyle()),
        silent: !0
      }));
  },
  minorSplitLine: function(r, e, t, a, n, i, o) {
    if (o.length) {
      for (var s = e.getModel("minorSplitLine"), l = s.getModel("lineStyle"), u = [], f = 0; f < o.length; f++)
        for (var h = 0; h < o[f].length; h++)
          u.push(new jr({
            shape: {
              cx: t.cx,
              cy: t.cy,
              r: o[f][h].coord
            }
          }));
      r.add(ir(u, {
        style: et({
          fill: null
        }, l.getLineStyle()),
        silent: !0
      }));
    }
  },
  splitArea: function(r, e, t, a, n, i) {
    if (i.length) {
      var o = e.getModel("splitArea"), s = o.getModel("areaStyle"), l = s.get("color"), u = 0;
      l = l instanceof Array ? l : [l];
      for (var f = [], h = i[0].coord, c = 1; c < i.length; c++) {
        var v = u++ % l.length;
        f[v] = f[v] || [], f[v].push(new ze({
          shape: {
            cx: t.cx,
            cy: t.cy,
            r0: h,
            r: i[c].coord,
            startAngle: 0,
            endAngle: Math.PI * 2
          },
          silent: !0
        })), h = i[c].coord;
      }
      for (var c = 0; c < f.length; c++)
        r.add(ir(f[c], {
          style: et({
            fill: l[c % l.length]
          }, s.getAreaStyle()),
          silent: !0
        }));
    }
  }
};
function X6(r, e, t) {
  return {
    position: [r.cx, r.cy],
    rotation: t / 180 * Math.PI,
    labelDirection: -1,
    tickDirection: -1,
    nameDirection: 1,
    labelRotate: e.getModel("axisLabel").get("rotate"),
    // Over splitLine and splitArea
    z2: 1
  };
}
const q6 = Y6;
function KI(r) {
  return r.get("stack") || "__ec_stack_" + r.seriesIndex;
}
function jI(r, e) {
  return e.dim + r.model.componentIndex;
}
function K6(r, e, t) {
  var a = {}, n = j6(Et(e.getSeriesByType(r), function(i) {
    return !e.isSeriesFiltered(i) && i.coordinateSystem && i.coordinateSystem.type === "polar";
  }));
  e.eachSeriesByType(r, function(i) {
    if (i.coordinateSystem.type === "polar") {
      var o = i.getData(), s = i.coordinateSystem, l = s.getBaseAxis(), u = jI(s, l), f = KI(i), h = n[u][f], c = h.offset, v = h.width, d = s.getOtherAxis(l), p = i.coordinateSystem.cx, g = i.coordinateSystem.cy, y = i.get("barMinHeight") || 0, m = i.get("barMinAngle") || 0;
      a[f] = a[f] || [];
      for (var _ = o.mapDimension(d.dim), S = o.mapDimension(l.dim), w = an(
        o,
        _
        /* , baseDim */
      ), x = l.dim !== "radius" || !i.get("roundCap", !0), b = d.dataToCoord(0), T = 0, C = o.count(); T < C; T++) {
        var D = o.get(_, T), A = o.get(S, T), I = D >= 0 ? "p" : "n", L = b;
        w && (a[f][A] || (a[f][A] = {
          p: b,
          n: b
          // Negative stack
        }), L = a[f][A][I]);
        var E = void 0, P = void 0, R = void 0, k = void 0;
        if (d.dim === "radius") {
          var O = d.dataToCoord(D) - b, B = l.dataToCoord(A);
          Math.abs(O) < y && (O = (O < 0 ? -1 : 1) * y), E = L, P = L + O, R = B - c, k = R - v, w && (a[f][A][I] = P);
        } else {
          var F = d.dataToCoord(D, x) - b, W = l.dataToCoord(A);
          Math.abs(F) < m && (F = (F < 0 ? -1 : 1) * m), E = W + c, P = E + v, R = L, k = L + F, w && (a[f][A][I] = k);
        }
        o.setItemLayout(T, {
          cx: p,
          cy: g,
          r0: E,
          r: P,
          // Consider that positive angle is anti-clockwise,
          // while positive radian of sector is clockwise
          startAngle: -R * Math.PI / 180,
          endAngle: -k * Math.PI / 180,
          /**
           * Keep the same logic with bar in catesion: use end value to
           * control direction. Notice that if clockwise is true (by
           * default), the sector will always draw clockwisely, no matter
           * whether endAngle is greater or less than startAngle.
           */
          clockwise: R >= k
        });
      }
    }
  });
}
function j6(r) {
  var e = {};
  M(r, function(a, n) {
    var i = a.getData(), o = a.coordinateSystem, s = o.getBaseAxis(), l = jI(o, s), u = s.getExtent(), f = s.type === "category" ? s.getBandWidth() : Math.abs(u[1] - u[0]) / i.count(), h = e[l] || {
      bandWidth: f,
      remainedWidth: f,
      autoWidthCount: 0,
      categoryGap: "20%",
      gap: "30%",
      stacks: {}
    }, c = h.stacks;
    e[l] = h;
    var v = KI(a);
    c[v] || h.autoWidthCount++, c[v] = c[v] || {
      width: 0,
      maxWidth: 0
    };
    var d = H(a.get("barWidth"), f), p = H(a.get("barMaxWidth"), f), g = a.get("barGap"), y = a.get("barCategoryGap");
    d && !c[v].width && (d = Math.min(h.remainedWidth, d), c[v].width = d, h.remainedWidth -= d), p && (c[v].maxWidth = p), g != null && (h.gap = g), y != null && (h.categoryGap = y);
  });
  var t = {};
  return M(e, function(a, n) {
    t[n] = {};
    var i = a.stacks, o = a.bandWidth, s = H(a.categoryGap, o), l = H(a.gap, 1), u = a.remainedWidth, f = a.autoWidthCount, h = (u - s) / (f + (f - 1) * l);
    h = Math.max(h, 0), M(i, function(p, g) {
      var y = p.maxWidth;
      y && y < h && (y = Math.min(y, u), p.width && (y = Math.min(y, p.width)), u -= y, p.width = y, f--);
    }), h = (u - s) / (f + (f - 1) * l), h = Math.max(h, 0);
    var c = 0, v;
    M(i, function(p, g) {
      p.width || (p.width = h), v = p, c += p.width * (1 + l);
    }), v && (c -= v.width * l);
    var d = -c / 2;
    M(i, function(p, g) {
      t[n][g] = t[n][g] || {
        offset: d,
        width: p.width
      }, d += p.width * (1 + l);
    });
  }), t;
}
var J6 = {
  startAngle: 90,
  clockwise: !0,
  splitNumber: 12,
  axisLabel: {
    rotate: 0
  }
}, Q6 = {
  splitNumber: 5
}, t8 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.type = "polar", e;
  }($t)
);
function e8(r) {
  yt(Nl), Ti.registerAxisPointerClass("PolarAxisPointer", D6), r.registerCoordinateSystem("polar", z6), r.registerComponentModel(A6), r.registerComponentView(t8), mo(r, "angle", M6, J6), mo(r, "radius", I6, Q6), r.registerComponentView(W6), r.registerComponentView(q6), r.registerLayout(ot(K6, "bar"));
}
function Xp(r, e) {
  e = e || {};
  var t = r.coordinateSystem, a = r.axis, n = {}, i = a.position, o = a.orient, s = t.getRect(), l = [s.x, s.x + s.width, s.y, s.y + s.height], u = {
    horizontal: {
      top: l[2],
      bottom: l[3]
    },
    vertical: {
      left: l[0],
      right: l[1]
    }
  };
  n.position = [o === "vertical" ? u.vertical[i] : l[0], o === "horizontal" ? u.horizontal[i] : l[3]];
  var f = {
    horizontal: 0,
    vertical: 1
  };
  n.rotation = Math.PI / 2 * f[o];
  var h = {
    top: -1,
    bottom: 1,
    right: 1,
    left: -1
  };
  n.labelDirection = n.tickDirection = n.nameDirection = h[i], r.get(["axisTick", "inside"]) && (n.tickDirection = -n.tickDirection), jt(e.labelInside, r.get(["axisLabel", "inside"])) && (n.labelDirection = -n.labelDirection);
  var c = e.rotate;
  return c == null && (c = r.get(["axisLabel", "rotate"])), n.labelRotation = i === "top" ? -c : c, n.z2 = 1, n;
}
var r8 = ["axisLine", "axisTickLabel", "axisName"], a8 = ["splitArea", "splitLine"], n8 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t.axisPointerClass = "SingleAxisPointer", t;
    }
    return e.prototype.render = function(t, a, n, i) {
      var o = this.group;
      o.removeAll();
      var s = this._axisGroup;
      this._axisGroup = new nt();
      var l = Xp(t), u = new _a(t, l);
      M(r8, u.add, u), o.add(this._axisGroup), o.add(u.getGroup()), M(a8, function(f) {
        t.get([f, "show"]) && i8[f](this, this.group, this._axisGroup, t);
      }, this), Sl(s, this._axisGroup, t), r.prototype.render.call(this, t, a, n, i);
    }, e.prototype.remove = function() {
      gM(this);
    }, e.type = "singleAxis", e;
  }(Ti)
), i8 = {
  splitLine: function(r, e, t, a) {
    var n = a.axis;
    if (!n.scale.isBlank()) {
      var i = a.getModel("splitLine"), o = i.getModel("lineStyle"), s = o.get("color");
      s = s instanceof Array ? s : [s];
      for (var l = o.get("width"), u = a.coordinateSystem.getRect(), f = n.isHorizontal(), h = [], c = 0, v = n.getTicksCoords({
        tickModel: i
      }), d = [], p = [], g = 0; g < v.length; ++g) {
        var y = n.toGlobalCoord(v[g].coord);
        f ? (d[0] = y, d[1] = u.y, p[0] = y, p[1] = u.y + u.height) : (d[0] = u.x, d[1] = y, p[0] = u.x + u.width, p[1] = y);
        var m = new ue({
          shape: {
            x1: d[0],
            y1: d[1],
            x2: p[0],
            y2: p[1]
          },
          silent: !0
        });
        co(m.shape, l);
        var _ = c++ % s.length;
        h[_] = h[_] || [], h[_].push(m);
      }
      for (var S = o.getLineStyle(["color"]), g = 0; g < h.length; ++g)
        e.add(ir(h[g], {
          style: et({
            stroke: s[g % s.length]
          }, S),
          silent: !0
        }));
    }
  },
  splitArea: function(r, e, t, a) {
    pM(r, t, a, a);
  }
};
const o8 = n8;
var JI = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.getCoordSysModel = function() {
      return this;
    }, e.type = "singleAxis", e.layoutMode = "box", e.defaultOption = {
      left: "5%",
      top: "5%",
      right: "5%",
      bottom: "5%",
      type: "value",
      position: "bottom",
      orient: "horizontal",
      axisLine: {
        show: !0,
        lineStyle: {
          width: 1,
          type: "solid"
        }
      },
      // Single coordinate system and single axis is the,
      // which is used as the parent tooltip model.
      // same model, so we set default tooltip show as true.
      tooltip: {
        show: !0
      },
      axisTick: {
        show: !0,
        length: 6,
        lineStyle: {
          width: 1
        }
      },
      axisLabel: {
        show: !0,
        interval: "auto"
      },
      splitLine: {
        show: !0,
        lineStyle: {
          type: "dashed",
          opacity: 0.2
        }
      }
    }, e;
  }(xt)
);
te(JI, Cl.prototype);
const nd = JI;
var s8 = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t, a, n, i, o) {
      var s = r.call(this, t, a, n) || this;
      return s.type = i || "value", s.position = o || "bottom", s;
    }
    return e.prototype.isHorizontal = function() {
      var t = this.position;
      return t === "top" || t === "bottom";
    }, e.prototype.pointToData = function(t, a) {
      return this.coordinateSystem.pointToData(t)[0];
    }, e;
  }(Lr)
);
const l8 = s8;
var QI = ["single"], u8 = (
  /** @class */
  function() {
    function r(e, t, a) {
      this.type = "single", this.dimension = "single", this.dimensions = QI, this.axisPointerEnabled = !0, this.model = e, this._init(e, t, a);
    }
    return r.prototype._init = function(e, t, a) {
      var n = this.dimension, i = new l8(n, Bh(e), [0, 0], e.get("type"), e.get("position")), o = i.type === "category";
      i.onBand = o && e.get("boundaryGap"), i.inverse = e.get("inverse"), i.orient = e.get("orient"), e.axis = i, i.model = e, i.coordinateSystem = this, this._axis = i;
    }, r.prototype.update = function(e, t) {
      e.eachSeries(function(a) {
        if (a.coordinateSystem === this) {
          var n = a.getData();
          M(n.mapDimensionsAll(this.dimension), function(i) {
            this._axis.scale.unionExtentFromData(n, i);
          }, this), go(this._axis.scale, this._axis.model);
        }
      }, this);
    }, r.prototype.resize = function(e, t) {
      this._rect = ae({
        left: e.get("left"),
        top: e.get("top"),
        right: e.get("right"),
        bottom: e.get("bottom"),
        width: e.get("width"),
        height: e.get("height")
      }, {
        width: t.getWidth(),
        height: t.getHeight()
      }), this._adjustAxis();
    }, r.prototype.getRect = function() {
      return this._rect;
    }, r.prototype._adjustAxis = function() {
      var e = this._rect, t = this._axis, a = t.isHorizontal(), n = a ? [0, e.width] : [0, e.height], i = t.inverse ? 1 : 0;
      t.setExtent(n[i], n[1 - i]), this._updateAxisTransform(t, a ? e.x : e.y);
    }, r.prototype._updateAxisTransform = function(e, t) {
      var a = e.getExtent(), n = a[0] + a[1], i = e.isHorizontal();
      e.toGlobalCoord = i ? function(o) {
        return o + t;
      } : function(o) {
        return n - o + t;
      }, e.toLocalCoord = i ? function(o) {
        return o - t;
      } : function(o) {
        return n - o + t;
      };
    }, r.prototype.getAxis = function() {
      return this._axis;
    }, r.prototype.getBaseAxis = function() {
      return this._axis;
    }, r.prototype.getAxes = function() {
      return [this._axis];
    }, r.prototype.getTooltipAxes = function() {
      return {
        baseAxes: [this.getAxis()],
        // Empty otherAxes
        otherAxes: []
      };
    }, r.prototype.containPoint = function(e) {
      var t = this.getRect(), a = this.getAxis(), n = a.orient;
      return n === "horizontal" ? a.contain(a.toLocalCoord(e[0])) && e[1] >= t.y && e[1] <= t.y + t.height : a.contain(a.toLocalCoord(e[1])) && e[0] >= t.y && e[0] <= t.y + t.height;
    }, r.prototype.pointToData = function(e) {
      var t = this.getAxis();
      return [t.coordToData(t.toLocalCoord(e[t.orient === "horizontal" ? 0 : 1]))];
    }, r.prototype.dataToPoint = function(e) {
      var t = this.getAxis(), a = this.getRect(), n = [], i = t.orient === "horizontal" ? 0 : 1;
      return e instanceof Array && (e = e[0]), n[i] = t.toGlobalCoord(t.dataToCoord(+e)), n[1 - i] = i === 0 ? a.y + a.height / 2 : a.x + a.width / 2, n;
    }, r.prototype.convertToPixel = function(e, t, a) {
      var n = aw(t);
      return n === this ? this.dataToPoint(a) : null;
    }, r.prototype.convertFromPixel = function(e, t, a) {
      var n = aw(t);
      return n === this ? this.pointToData(a) : null;
    }, r;
  }()
);
function aw(r) {
  var e = r.seriesModel, t = r.singleAxisModel;
  return t && t.coordinateSystem || e && e.coordinateSystem;
}
function f8(r, e) {
  var t = [];
  return r.eachComponent("singleAxis", function(a, n) {
    var i = new u8(a, r, e);
    i.name = "single_" + n, i.resize(a, e), a.coordinateSystem = i, t.push(i);
  }), r.eachSeries(function(a) {
    if (a.get("coordinateSystem") === "singleAxis") {
      var n = a.getReferringComponents("singleAxis", Jt).models[0];
      a.coordinateSystem = n && n.coordinateSystem;
    }
  }), t;
}
var h8 = {
  create: f8,
  dimensions: QI
};
const c8 = h8;
var nw = ["x", "y"], v8 = ["width", "height"], d8 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return e.prototype.makeElOption = function(t, a, n, i, o) {
      var s = n.axis, l = s.coordinateSystem, u = id(l, 1 - jf(s)), f = l.dataToPoint(a)[0], h = i.get("type");
      if (h && h !== "none") {
        var c = tm(i), v = p8[h](s, f, u);
        v.style = c, t.graphicKey = v.type, t.pointer = v;
      }
      var d = Xp(n);
      UI(
        // @ts-ignore
        a,
        t,
        d,
        n,
        i,
        o
      );
    }, e.prototype.getHandleTransform = function(t, a, n) {
      var i = Xp(a, {
        labelInside: !1
      });
      i.labelMargin = n.get(["handle", "margin"]);
      var o = em(a.axis, t, i);
      return {
        x: o[0],
        y: o[1],
        rotation: i.rotation + (i.labelDirection < 0 ? Math.PI : 0)
      };
    }, e.prototype.updateHandleTransform = function(t, a, n, i) {
      var o = n.axis, s = o.coordinateSystem, l = jf(o), u = id(s, l), f = [t.x, t.y];
      f[l] += a[l], f[l] = Math.min(u[1], f[l]), f[l] = Math.max(u[0], f[l]);
      var h = id(s, 1 - l), c = (h[1] + h[0]) / 2, v = [c, c];
      return v[l] = f[l], {
        x: f[0],
        y: f[1],
        rotation: t.rotation,
        cursorPoint: v,
        tooltipOption: {
          verticalAlign: "middle"
        }
      };
    }, e;
  }(Qy)
), p8 = {
  line: function(r, e, t) {
    var a = rm([e, t[0]], [e, t[1]], jf(r));
    return {
      type: "Line",
      subPixelOptimize: !0,
      shape: a
    };
  },
  shadow: function(r, e, t) {
    var a = r.getBandWidth(), n = t[1] - t[0];
    return {
      type: "Rect",
      shape: YI([e - a / 2, t[0]], [a, n], jf(r))
    };
  }
};
function jf(r) {
  return r.isHorizontal() ? 0 : 1;
}
function id(r, e) {
  var t = r.getRect();
  return [t[nw[e]], t[nw[e]] + t[v8[e]]];
}
const g8 = d8;
var y8 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.type = "single", e;
  }($t)
);
function m8(r) {
  yt(Nl), Ti.registerAxisPointerClass("SingleAxisPointer", g8), r.registerComponentView(y8), r.registerComponentView(o8), r.registerComponentModel(nd), mo(r, "single", nd, nd.defaultOption), r.registerCoordinateSystem("single", c8);
}
var _8 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.init = function(t, a, n) {
      var i = Po(t);
      r.prototype.init.apply(this, arguments), iw(t, i);
    }, e.prototype.mergeOption = function(t) {
      r.prototype.mergeOption.apply(this, arguments), iw(this.option, t);
    }, e.prototype.getCellSize = function() {
      return this.option.cellSize;
    }, e.type = "calendar", e.defaultOption = {
      // zlevel: 0,
      z: 2,
      left: 80,
      top: 60,
      cellSize: 20,
      // horizontal vertical
      orient: "horizontal",
      // month separate line style
      splitLine: {
        show: !0,
        lineStyle: {
          color: "#000",
          width: 1,
          type: "solid"
        }
      },
      // rect style  temporarily unused emphasis
      itemStyle: {
        color: "#fff",
        borderWidth: 1,
        borderColor: "#ccc"
      },
      // week text style
      dayLabel: {
        show: !0,
        firstDay: 0,
        // start end
        position: "start",
        margin: "50%",
        color: "#000"
      },
      // month text style
      monthLabel: {
        show: !0,
        // start end
        position: "start",
        margin: 5,
        // center or left
        align: "center",
        formatter: null,
        color: "#000"
      },
      // year text style
      yearLabel: {
        show: !0,
        // top bottom left right
        position: null,
        margin: 30,
        formatter: null,
        color: "#ccc",
        fontFamily: "sans-serif",
        fontWeight: "bolder",
        fontSize: 20
      }
    }, e;
  }(xt)
);
function iw(r, e) {
  var t = r.cellSize, a;
  z(t) ? a = t : a = r.cellSize = [t, t], a.length === 1 && (a[1] = a[0]);
  var n = G([0, 1], function(i) {
    return TN(e, i) && (a[i] = "auto"), a[i] != null && a[i] !== "auto";
  });
  rn(r, e, {
    type: "box",
    ignoreSize: n
  });
}
const S8 = _8;
var x8 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, a, n) {
      var i = this.group;
      i.removeAll();
      var o = t.coordinateSystem, s = o.getRangeInfo(), l = o.getOrient(), u = a.getLocaleModel();
      this._renderDayRect(t, s, i), this._renderLines(t, s, l, i), this._renderYearText(t, s, l, i), this._renderMonthText(t, u, l, i), this._renderWeekText(t, u, s, l, i);
    }, e.prototype._renderDayRect = function(t, a, n) {
      for (var i = t.coordinateSystem, o = t.getModel("itemStyle").getItemStyle(), s = i.getCellWidth(), l = i.getCellHeight(), u = a.start.time; u <= a.end.time; u = i.getNextNDay(u, 1).time) {
        var f = i.dataToRect([u], !1).tl, h = new Tt({
          shape: {
            x: f[0],
            y: f[1],
            width: s,
            height: l
          },
          cursor: "default",
          style: o
        });
        n.add(h);
      }
    }, e.prototype._renderLines = function(t, a, n, i) {
      var o = this, s = t.coordinateSystem, l = t.getModel(["splitLine", "lineStyle"]).getLineStyle(), u = t.get(["splitLine", "show"]), f = l.lineWidth;
      this._tlpoints = [], this._blpoints = [], this._firstDayOfMonth = [], this._firstDayPoints = [];
      for (var h = a.start, c = 0; h.time <= a.end.time; c++) {
        d(h.formatedDate), c === 0 && (h = s.getDateInfo(a.start.y + "-" + a.start.m));
        var v = h.date;
        v.setMonth(v.getMonth() + 1), h = s.getDateInfo(v);
      }
      d(s.getNextNDay(a.end.time, 1).formatedDate);
      function d(p) {
        o._firstDayOfMonth.push(s.getDateInfo(p)), o._firstDayPoints.push(s.dataToRect([p], !1).tl);
        var g = o._getLinePointsOfOneWeek(t, p, n);
        o._tlpoints.push(g[0]), o._blpoints.push(g[g.length - 1]), u && o._drawSplitline(g, l, i);
      }
      u && this._drawSplitline(o._getEdgesPoints(o._tlpoints, f, n), l, i), u && this._drawSplitline(o._getEdgesPoints(o._blpoints, f, n), l, i);
    }, e.prototype._getEdgesPoints = function(t, a, n) {
      var i = [t[0].slice(), t[t.length - 1].slice()], o = n === "horizontal" ? 0 : 1;
      return i[0][o] = i[0][o] - a / 2, i[1][o] = i[1][o] + a / 2, i;
    }, e.prototype._drawSplitline = function(t, a, n) {
      var i = new Fe({
        z2: 20,
        shape: {
          points: t
        },
        style: a
      });
      n.add(i);
    }, e.prototype._getLinePointsOfOneWeek = function(t, a, n) {
      for (var i = t.coordinateSystem, o = i.getDateInfo(a), s = [], l = 0; l < 7; l++) {
        var u = i.getNextNDay(o.time, l), f = i.dataToRect([u.time], !1);
        s[2 * u.day] = f.tl, s[2 * u.day + 1] = f[n === "horizontal" ? "bl" : "tr"];
      }
      return s;
    }, e.prototype._formatterLabel = function(t, a) {
      return $(t) && t ? xN(t, a) : K(t) ? t(a) : a.nameMap;
    }, e.prototype._yearTextPositionControl = function(t, a, n, i, o) {
      var s = a[0], l = a[1], u = ["center", "bottom"];
      i === "bottom" ? (l += o, u = ["center", "top"]) : i === "left" ? s -= o : i === "right" ? (s += o, u = ["center", "top"]) : l -= o;
      var f = 0;
      return (i === "left" || i === "right") && (f = Math.PI / 2), {
        rotation: f,
        x: s,
        y: l,
        style: {
          align: u[0],
          verticalAlign: u[1]
        }
      };
    }, e.prototype._renderYearText = function(t, a, n, i) {
      var o = t.getModel("yearLabel");
      if (o.get("show")) {
        var s = o.get("margin"), l = o.get("position");
        l || (l = n !== "horizontal" ? "top" : "left");
        var u = [this._tlpoints[this._tlpoints.length - 1], this._blpoints[0]], f = (u[0][0] + u[1][0]) / 2, h = (u[0][1] + u[1][1]) / 2, c = n === "horizontal" ? 0 : 1, v = {
          top: [f, u[c][1]],
          bottom: [f, u[1 - c][1]],
          left: [u[1 - c][0], h],
          right: [u[c][0], h]
        }, d = a.start.y;
        +a.end.y > +a.start.y && (d = d + "-" + a.end.y);
        var p = o.get("formatter"), g = {
          start: a.start.y,
          end: a.end.y,
          nameMap: d
        }, y = this._formatterLabel(p, g), m = new Ct({
          z2: 30,
          style: Ot(o, {
            text: y
          })
        });
        m.attr(this._yearTextPositionControl(m, v[l], n, l, s)), i.add(m);
      }
    }, e.prototype._monthTextPositionControl = function(t, a, n, i, o) {
      var s = "left", l = "top", u = t[0], f = t[1];
      return n === "horizontal" ? (f = f + o, a && (s = "center"), i === "start" && (l = "bottom")) : (u = u + o, a && (l = "middle"), i === "start" && (s = "right")), {
        x: u,
        y: f,
        align: s,
        verticalAlign: l
      };
    }, e.prototype._renderMonthText = function(t, a, n, i) {
      var o = t.getModel("monthLabel");
      if (o.get("show")) {
        var s = o.get("nameMap"), l = o.get("margin"), u = o.get("position"), f = o.get("align"), h = [this._tlpoints, this._blpoints];
        (!s || $(s)) && (s && (a = np(s) || a), s = a.get(["time", "monthAbbr"]) || []);
        var c = u === "start" ? 0 : 1, v = n === "horizontal" ? 0 : 1;
        l = u === "start" ? -l : l;
        for (var d = f === "center", p = 0; p < h[c].length - 1; p++) {
          var g = h[c][p].slice(), y = this._firstDayOfMonth[p];
          if (d) {
            var m = this._firstDayPoints[p];
            g[v] = (m[v] + h[0][p + 1][v]) / 2;
          }
          var _ = o.get("formatter"), S = s[+y.m - 1], w = {
            yyyy: y.y,
            yy: (y.y + "").slice(2),
            MM: y.m,
            M: +y.m,
            nameMap: S
          }, x = this._formatterLabel(_, w), b = new Ct({
            z2: 30,
            style: V(Ot(o, {
              text: x
            }), this._monthTextPositionControl(g, d, n, u, l))
          });
          i.add(b);
        }
      }
    }, e.prototype._weekTextPositionControl = function(t, a, n, i, o) {
      var s = "center", l = "middle", u = t[0], f = t[1], h = n === "start";
      return a === "horizontal" ? (u = u + i + (h ? 1 : -1) * o[0] / 2, s = h ? "right" : "left") : (f = f + i + (h ? 1 : -1) * o[1] / 2, l = h ? "bottom" : "top"), {
        x: u,
        y: f,
        align: s,
        verticalAlign: l
      };
    }, e.prototype._renderWeekText = function(t, a, n, i, o) {
      var s = t.getModel("dayLabel");
      if (s.get("show")) {
        var l = t.coordinateSystem, u = s.get("position"), f = s.get("nameMap"), h = s.get("margin"), c = l.getFirstDayOfWeek();
        if (!f || $(f)) {
          f && (a = np(f) || a);
          var v = a.get(["time", "dayOfWeekShort"]);
          f = v || G(a.get(["time", "dayOfWeekAbbr"]), function(w) {
            return w[0];
          });
        }
        var d = l.getNextNDay(n.end.time, 7 - n.lweek).time, p = [l.getCellWidth(), l.getCellHeight()];
        h = H(h, Math.min(p[1], p[0])), u === "start" && (d = l.getNextNDay(n.start.time, -(7 + n.fweek)).time, h = -h);
        for (var g = 0; g < 7; g++) {
          var y = l.getNextNDay(d, g), m = l.dataToRect([y.time], !1).center, _ = g;
          _ = Math.abs((g + c) % 7);
          var S = new Ct({
            z2: 30,
            style: V(Ot(s, {
              text: f[_]
            }), this._weekTextPositionControl(m, i, u, h, p))
          });
          o.add(S);
        }
      }
    }, e.type = "calendar", e;
  }($t)
);
const w8 = x8;
var od = 864e5, b8 = (
  /** @class */
  function() {
    function r(e, t, a) {
      this.type = "calendar", this.dimensions = r.dimensions, this.getDimensionsInfo = r.getDimensionsInfo, this._model = e;
    }
    return r.getDimensionsInfo = function() {
      return [{
        name: "time",
        type: "time"
      }, "value"];
    }, r.prototype.getRangeInfo = function() {
      return this._rangeInfo;
    }, r.prototype.getModel = function() {
      return this._model;
    }, r.prototype.getRect = function() {
      return this._rect;
    }, r.prototype.getCellWidth = function() {
      return this._sw;
    }, r.prototype.getCellHeight = function() {
      return this._sh;
    }, r.prototype.getOrient = function() {
      return this._orient;
    }, r.prototype.getFirstDayOfWeek = function() {
      return this._firstDayOfWeek;
    }, r.prototype.getDateInfo = function(e) {
      e = qr(e);
      var t = e.getFullYear(), a = e.getMonth() + 1, n = a < 10 ? "0" + a : "" + a, i = e.getDate(), o = i < 10 ? "0" + i : "" + i, s = e.getDay();
      return s = Math.abs((s + 7 - this.getFirstDayOfWeek()) % 7), {
        y: t + "",
        m: n,
        d: o,
        day: s,
        time: e.getTime(),
        formatedDate: t + "-" + n + "-" + o,
        date: e
      };
    }, r.prototype.getNextNDay = function(e, t) {
      return t = t || 0, t === 0 ? this.getDateInfo(e) : (e = new Date(this.getDateInfo(e).time), e.setDate(e.getDate() + t), this.getDateInfo(e));
    }, r.prototype.update = function(e, t) {
      this._firstDayOfWeek = +this._model.getModel("dayLabel").get("firstDay"), this._orient = this._model.get("orient"), this._lineWidth = this._model.getModel("itemStyle").getItemStyle().lineWidth || 0, this._rangeInfo = this._getRangeInfo(this._initRangeOption());
      var a = this._rangeInfo.weeks || 1, n = ["width", "height"], i = this._model.getCellSize().slice(), o = this._model.getBoxLayoutParams(), s = this._orient === "horizontal" ? [a, 7] : [7, a];
      M([0, 1], function(h) {
        f(i, h) && (o[n[h]] = i[h] * s[h]);
      });
      var l = {
        width: t.getWidth(),
        height: t.getHeight()
      }, u = this._rect = ae(o, l);
      M([0, 1], function(h) {
        f(i, h) || (i[h] = u[n[h]] / s[h]);
      });
      function f(h, c) {
        return h[c] != null && h[c] !== "auto";
      }
      this._sw = i[0], this._sh = i[1];
    }, r.prototype.dataToPoint = function(e, t) {
      z(e) && (e = e[0]), t == null && (t = !0);
      var a = this.getDateInfo(e), n = this._rangeInfo, i = a.formatedDate;
      if (t && !(a.time >= n.start.time && a.time < n.end.time + od))
        return [NaN, NaN];
      var o = a.day, s = this._getRangeInfo([n.start.time, i]).nthWeek;
      return this._orient === "vertical" ? [this._rect.x + o * this._sw + this._sw / 2, this._rect.y + s * this._sh + this._sh / 2] : [this._rect.x + s * this._sw + this._sw / 2, this._rect.y + o * this._sh + this._sh / 2];
    }, r.prototype.pointToData = function(e) {
      var t = this.pointToDate(e);
      return t && t.time;
    }, r.prototype.dataToRect = function(e, t) {
      var a = this.dataToPoint(e, t);
      return {
        contentShape: {
          x: a[0] - (this._sw - this._lineWidth) / 2,
          y: a[1] - (this._sh - this._lineWidth) / 2,
          width: this._sw - this._lineWidth,
          height: this._sh - this._lineWidth
        },
        center: a,
        tl: [a[0] - this._sw / 2, a[1] - this._sh / 2],
        tr: [a[0] + this._sw / 2, a[1] - this._sh / 2],
        br: [a[0] + this._sw / 2, a[1] + this._sh / 2],
        bl: [a[0] - this._sw / 2, a[1] + this._sh / 2]
      };
    }, r.prototype.pointToDate = function(e) {
      var t = Math.floor((e[0] - this._rect.x) / this._sw) + 1, a = Math.floor((e[1] - this._rect.y) / this._sh) + 1, n = this._rangeInfo.range;
      return this._orient === "vertical" ? this._getDateByWeeksAndDay(a, t - 1, n) : this._getDateByWeeksAndDay(t, a - 1, n);
    }, r.prototype.convertToPixel = function(e, t, a) {
      var n = ow(t);
      return n === this ? n.dataToPoint(a) : null;
    }, r.prototype.convertFromPixel = function(e, t, a) {
      var n = ow(t);
      return n === this ? n.pointToData(a) : null;
    }, r.prototype.containPoint = function(e) {
      return console.warn("Not implemented."), !1;
    }, r.prototype._initRangeOption = function() {
      var e = this._model.get("range"), t;
      if (z(e) && e.length === 1 && (e = e[0]), z(e))
        t = e;
      else {
        var a = e.toString();
        if (/^\d{4}$/.test(a) && (t = [a + "-01-01", a + "-12-31"]), /^\d{4}[\/|-]\d{1,2}$/.test(a)) {
          var n = this.getDateInfo(a), i = n.date;
          i.setMonth(i.getMonth() + 1);
          var o = this.getNextNDay(i, -1);
          t = [n.formatedDate, o.formatedDate];
        }
        /^\d{4}[\/|-]\d{1,2}[\/|-]\d{1,2}$/.test(a) && (t = [a, a]);
      }
      if (!t)
        return {}.NODE_ENV !== "production" && br("Invalid date range."), e;
      var s = this._getRangeInfo(t);
      return s.start.time > s.end.time && t.reverse(), t;
    }, r.prototype._getRangeInfo = function(e) {
      var t = [this.getDateInfo(e[0]), this.getDateInfo(e[1])], a;
      t[0].time > t[1].time && (a = !0, t.reverse());
      var n = Math.floor(t[1].time / od) - Math.floor(t[0].time / od) + 1, i = new Date(t[0].time), o = i.getDate(), s = t[1].date.getDate();
      i.setDate(o + n - 1);
      var l = i.getDate();
      if (l !== s)
        for (var u = i.getTime() - t[1].time > 0 ? 1 : -1; (l = i.getDate()) !== s && (i.getTime() - t[1].time) * u > 0; )
          n -= u, i.setDate(l - u);
      var f = Math.floor((n + t[0].day + 6) / 7), h = a ? -f + 1 : f - 1;
      return a && t.reverse(), {
        range: [t[0].formatedDate, t[1].formatedDate],
        start: t[0],
        end: t[1],
        allDay: n,
        weeks: f,
        // From 0.
        nthWeek: h,
        fweek: t[0].day,
        lweek: t[1].day
      };
    }, r.prototype._getDateByWeeksAndDay = function(e, t, a) {
      var n = this._getRangeInfo(a);
      if (e > n.weeks || e === 0 && t < n.fweek || e === n.weeks && t > n.lweek)
        return null;
      var i = (e - 1) * 7 - n.fweek + t, o = new Date(n.start.time);
      return o.setDate(+n.start.d + i), this.getDateInfo(o);
    }, r.create = function(e, t) {
      var a = [];
      return e.eachComponent("calendar", function(n) {
        var i = new r(n);
        a.push(i), n.coordinateSystem = i;
      }), e.eachSeries(function(n) {
        n.get("coordinateSystem") === "calendar" && (n.coordinateSystem = a[n.get("calendarIndex") || 0]);
      }), a;
    }, r.dimensions = ["time", "value"], r;
  }()
);
function ow(r) {
  var e = r.calendarModel, t = r.seriesModel, a = e ? e.coordinateSystem : t ? t.coordinateSystem : null;
  return a;
}
const T8 = b8;
function D8(r) {
  r.registerComponentModel(S8), r.registerComponentView(w8), r.registerCoordinateSystem("calendar", T8);
}
function C8(r, e) {
  var t = r.existing;
  if (e.id = r.keyInfo.id, !e.type && t && (e.type = t.type), e.parentId == null) {
    var a = e.parentOption;
    a ? e.parentId = a.id : t && (e.parentId = t.parentId);
  }
  e.parentOption = null;
}
function sw(r, e) {
  var t;
  return M(e, function(a) {
    r[a] != null && r[a] !== "auto" && (t = !0);
  }), t;
}
function A8(r, e, t) {
  var a = V({}, t), n = r[e], i = t.$action || "merge";
  if (i === "merge")
    if (n) {
      if ({}.NODE_ENV !== "production") {
        var o = t.type;
        J(!o || n.type === o, 'Please set $action: "replace" to change `type`');
      }
      ht(n, a, !0), rn(n, a, {
        ignoreSize: !0
      }), zD(t, n), Eu(t, n), Eu(t, n, "shape"), Eu(t, n, "style"), Eu(t, n, "extra"), t.clipPath = n.clipPath;
    } else
      r[e] = a;
  else
    i === "replace" ? r[e] = a : i === "remove" && n && (r[e] = null);
}
var tL = ["transition", "enterFrom", "leaveTo"], M8 = tL.concat(["enterAnimation", "updateAnimation", "leaveAnimation"]);
function Eu(r, e, t) {
  if (t && (!r[t] && e[t] && (r[t] = {}), r = r[t], e = e[t]), !(!r || !e))
    for (var a = t ? tL : M8, n = 0; n < a.length; n++) {
      var i = a[n];
      r[i] == null && e[i] != null && (r[i] = e[i]);
    }
}
function I8(r, e) {
  if (r && (r.hv = e.hv = [
    // Rigid body, don't care about `width`.
    sw(e, ["left", "right"]),
    // Rigid body, don't care about `height`.
    sw(e, ["top", "bottom"])
  ], r.type === "group")) {
    var t = r, a = e;
    t.width == null && (t.width = a.width = 0), t.height == null && (t.height = a.height = 0);
  }
}
var L8 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t.preventAutoZ = !0, t;
    }
    return e.prototype.mergeOption = function(t, a) {
      var n = this.option.elements;
      this.option.elements = null, r.prototype.mergeOption.call(this, t, a), this.option.elements = n;
    }, e.prototype.optionUpdated = function(t, a) {
      var n = this.option, i = (a ? n : t).elements, o = n.elements = a ? [] : n.elements, s = [];
      this._flatten(i, s, null);
      var l = ST(o, s, "normalMerge"), u = this._elOptionsToUpdate = [];
      M(l, function(f, h) {
        var c = f.newOption;
        ({}).NODE_ENV !== "production" && J(j(c) || f.existing, "Empty graphic option definition"), c && (u.push(c), C8(f, c), A8(o, h, c), I8(o[h], c));
      }, this), n.elements = Et(o, function(f) {
        return f && delete f.$action, f != null;
      });
    }, e.prototype._flatten = function(t, a, n) {
      M(t, function(i) {
        if (i) {
          n && (i.parentOption = n), a.push(i);
          var o = i.children;
          o && o.length && this._flatten(o, a, i), delete i.children;
        }
      }, this);
    }, e.prototype.useElOptionsToUpdate = function() {
      var t = this._elOptionsToUpdate;
      return this._elOptionsToUpdate = null, t;
    }, e.type = "graphic", e.defaultOption = {
      elements: []
      // parentId: null
    }, e;
  }(xt)
), lw = {
  // Reserved but not supported in graphic component.
  path: null,
  compoundPath: null,
  // Supported in graphic component.
  group: nt,
  image: ge,
  text: Ct
}, rr = Dt(), E8 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.init = function() {
      this._elMap = X();
    }, e.prototype.render = function(t, a, n) {
      t !== this._lastGraphicModel && this._clear(), this._lastGraphicModel = t, this._updateElements(t), this._relocate(t, n);
    }, e.prototype._updateElements = function(t) {
      var a = t.useElOptionsToUpdate();
      if (a) {
        var n = this._elMap, i = this.group, o = t.get("z"), s = t.get("zlevel");
        M(a, function(l) {
          var u = re(l.id, null), f = u != null ? n.get(u) : null, h = re(l.parentId, null), c = h != null ? n.get(h) : i, v = l.type, d = l.style;
          v === "text" && d && l.hv && l.hv[1] && (d.textVerticalAlign = d.textBaseline = d.verticalAlign = d.align = null);
          var p = l.textContent, g = l.textConfig;
          if (d && PI(d, v, !!g, !!p)) {
            var y = RI(d, v, !0);
            !g && y.textConfig && (g = l.textConfig = y.textConfig), !p && y.textContent && (p = y.textContent);
          }
          var m = P8(l);
          ({}).NODE_ENV !== "production" && f && J(c === f.parent, "Changing parent is not supported.");
          var _ = l.$action || "merge", S = _ === "merge", w = _ === "replace";
          if (S) {
            var x = !f, b = f;
            x ? b = uw(u, c, l.type, n) : (b && (rr(b).isNew = !1), BI(b)), b && (tf(b, m, t, {
              isInit: x
            }), fw(b, l, o, s));
          } else if (w) {
            rf(f, l, n, t);
            var T = uw(u, c, l.type, n);
            T && (tf(T, m, t, {
              isInit: !0
            }), fw(T, l, o, s));
          } else
            _ === "remove" && (OI(f, l), rf(f, l, n, t));
          var C = n.get(u);
          if (C && p)
            if (S) {
              var D = C.getTextContent();
              D ? D.attr(p) : C.setTextContent(new Ct(p));
            } else
              w && C.setTextContent(new Ct(p));
          if (C) {
            var A = l.clipPath;
            if (A) {
              var I = A.type, L = void 0, x = !1;
              if (S) {
                var E = C.getClipPath();
                x = !E || rr(E).type !== I, L = x ? qp(I) : E;
              } else
                w && (x = !0, L = qp(I));
              C.setClipPath(L), tf(L, A, t, {
                isInit: x
              }), Xf(L, A.keyframeAnimation, t);
            }
            var P = rr(C);
            C.setTextConfig(g), P.option = l, R8(C, t, l), Mo({
              el: C,
              componentModel: t,
              itemName: C.name,
              itemTooltipOption: l.tooltip
            }), Xf(C, l.keyframeAnimation, t);
          }
        });
      }
    }, e.prototype._relocate = function(t, a) {
      for (var n = t.option.elements, i = this.group, o = this._elMap, s = a.getWidth(), l = a.getHeight(), u = ["x", "y"], f = 0; f < n.length; f++) {
        var h = n[f], c = re(h.id, null), v = c != null ? o.get(c) : null;
        if (!(!v || !v.isGroup)) {
          var d = v.parent, p = d === i, g = rr(v), y = rr(d);
          g.width = H(g.option.width, p ? s : y.width) || 0, g.height = H(g.option.height, p ? l : y.height) || 0;
        }
      }
      for (var f = n.length - 1; f >= 0; f--) {
        var h = n[f], c = re(h.id, null), v = c != null ? o.get(c) : null;
        if (v) {
          var d = v.parent, y = rr(d), m = d === i ? {
            width: s,
            height: l
          } : {
            width: y.width,
            height: y.height
          }, _ = {}, S = Lh(v, h, m, null, {
            hv: h.hv,
            boundingMode: h.bounding
          }, _);
          if (!rr(v).isNew && S) {
            for (var w = h.transition, x = {}, b = 0; b < u.length; b++) {
              var T = u[b], C = _[T];
              w && (ui(w) || vt(w, T) >= 0) ? x[T] = C : v[T] = C;
            }
            Mt(v, x, t, 0);
          } else
            v.attr(_);
        }
      }
    }, e.prototype._clear = function() {
      var t = this, a = this._elMap;
      a.each(function(n) {
        rf(n, rr(n).option, a, t._lastGraphicModel);
      }), this._elMap = X();
    }, e.prototype.dispose = function() {
      this._clear();
    }, e.type = "graphic", e;
  }($t)
);
function qp(r) {
  ({}).NODE_ENV !== "production" && J(r, "graphic type MUST be set");
  var e = U(lw, r) ? lw[r] : Bg(r);
  ({}).NODE_ENV !== "production" && J(e, "graphic type " + r + " can not be found");
  var t = new e({});
  return rr(t).type = r, t;
}
function uw(r, e, t, a) {
  var n = qp(t);
  return e.add(n), a.set(r, n), rr(n).id = r, rr(n).isNew = !0, n;
}
function rf(r, e, t, a) {
  var n = r && r.parent;
  n && (r.type === "group" && r.traverse(function(i) {
    rf(i, e, t, a);
  }), Yh(r, e, a), t.removeKey(rr(r).id));
}
function fw(r, e, t, a) {
  r.isGroup || M([
    ["cursor", hr.prototype.cursor],
    // We should not support configure z and zlevel in the element level.
    // But seems we didn't limit it previously. So here still use it to avoid breaking.
    ["zlevel", a || 0],
    ["z", t || 0],
    // z2 must not be null/undefined, otherwise sort error may occur.
    ["z2", 0]
  ], function(n) {
    var i = n[0];
    U(e, i) ? r[i] = ft(e[i], n[1]) : r[i] == null && (r[i] = n[1]);
  }), M(_t(e), function(n) {
    if (n.indexOf("on") === 0) {
      var i = e[n];
      r[n] = K(i) ? i : null;
    }
  }), U(e, "draggable") && (r.draggable = e.draggable), e.name != null && (r.name = e.name), e.id != null && (r.id = e.id);
}
function P8(r) {
  return r = V({}, r), M(["id", "parentId", "$action", "hv", "bounding", "textContent", "clipPath"].concat(BD), function(e) {
    delete r[e];
  }), r;
}
function R8(r, e, t) {
  var a = it(r).eventData;
  !r.silent && !r.ignore && !a && (a = it(r).eventData = {
    componentType: "graphic",
    componentIndex: e.componentIndex,
    name: r.name
  }), a && (a.info = t.info);
}
function N8(r) {
  r.registerComponentModel(L8), r.registerComponentView(E8), r.registerPreprocessor(function(e) {
    var t = e.graphic;
    z(t) ? !t[0] || !t[0].elements ? e.graphic = [{
      elements: t
    }] : e.graphic = [e.graphic[0]] : t && !t.elements && (e.graphic = [{
      elements: [t]
    }]);
  });
}
var hw = ["x", "y", "radius", "angle", "single"], O8 = ["cartesian2d", "polar", "singleAxis"];
function k8(r) {
  var e = r.get("coordinateSystem");
  return vt(O8, e) >= 0;
}
function Za(r) {
  return {}.NODE_ENV !== "production" && J(r), r + "Axis";
}
function V8(r, e) {
  var t = X(), a = [], n = X();
  r.eachComponent({
    mainType: "dataZoom",
    query: e
  }, function(f) {
    n.get(f.uid) || s(f);
  });
  var i;
  do
    i = !1, r.eachComponent("dataZoom", o);
  while (i);
  function o(f) {
    !n.get(f.uid) && l(f) && (s(f), i = !0);
  }
  function s(f) {
    n.set(f.uid, !0), a.push(f), u(f);
  }
  function l(f) {
    var h = !1;
    return f.eachTargetAxis(function(c, v) {
      var d = t.get(c);
      d && d[v] && (h = !0);
    }), h;
  }
  function u(f) {
    f.eachTargetAxis(function(h, c) {
      (t.get(h) || t.set(h, []))[c] = !0;
    });
  }
  return a;
}
function eL(r) {
  var e = r.ecModel, t = {
    infoList: [],
    infoMap: X()
  };
  return r.eachTargetAxis(function(a, n) {
    var i = e.getComponent(Za(a), n);
    if (i) {
      var o = i.getCoordSysModel();
      if (o) {
        var s = o.uid, l = t.infoMap.get(s);
        l || (l = {
          model: o,
          axisModels: []
        }, t.infoList.push(l), t.infoMap.set(s, l)), l.axisModels.push(i);
      }
    }
  }), t;
}
var sd = (
  /** @class */
  function() {
    function r() {
      this.indexList = [], this.indexMap = [];
    }
    return r.prototype.add = function(e) {
      this.indexMap[e] || (this.indexList.push(e), this.indexMap[e] = !0);
    }, r;
  }()
), B8 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t._autoThrottle = !0, t._noTarget = !0, t._rangePropMode = ["percent", "percent"], t;
    }
    return e.prototype.init = function(t, a, n) {
      var i = cw(t);
      this.settledOption = i, this.mergeDefaultAndTheme(t, n), this._doInit(i);
    }, e.prototype.mergeOption = function(t) {
      var a = cw(t);
      ht(this.option, t, !0), ht(this.settledOption, a, !0), this._doInit(a);
    }, e.prototype._doInit = function(t) {
      var a = this.option;
      this._setDefaultThrottle(t), this._updateRangeUse(t);
      var n = this.settledOption;
      M([["start", "startValue"], ["end", "endValue"]], function(i, o) {
        this._rangePropMode[o] === "value" && (a[i[0]] = n[i[0]] = null);
      }, this), this._resetTarget();
    }, e.prototype._resetTarget = function() {
      var t = this.get("orient", !0), a = this._targetAxisInfoMap = X(), n = this._fillSpecifiedTargetAxis(a);
      n ? this._orient = t || this._makeAutoOrientByTargetAxis() : (this._orient = t || "horizontal", this._fillAutoTargetAxisByOrient(a, this._orient)), this._noTarget = !0, a.each(function(i) {
        i.indexList.length && (this._noTarget = !1);
      }, this);
    }, e.prototype._fillSpecifiedTargetAxis = function(t) {
      var a = !1;
      return M(hw, function(n) {
        var i = this.getReferringComponents(Za(n), eP);
        if (i.specified) {
          a = !0;
          var o = new sd();
          M(i.models, function(s) {
            o.add(s.componentIndex);
          }), t.set(n, o);
        }
      }, this), a;
    }, e.prototype._fillAutoTargetAxisByOrient = function(t, a) {
      var n = this.ecModel, i = !0;
      if (i) {
        var o = a === "vertical" ? "y" : "x", s = n.findComponents({
          mainType: o + "Axis"
        });
        l(s, o);
      }
      if (i) {
        var s = n.findComponents({
          mainType: "singleAxis",
          filter: function(f) {
            return f.get("orient", !0) === a;
          }
        });
        l(s, "single");
      }
      function l(u, f) {
        var h = u[0];
        if (h) {
          var c = new sd();
          if (c.add(h.componentIndex), t.set(f, c), i = !1, f === "x" || f === "y") {
            var v = h.getReferringComponents("grid", Jt).models[0];
            v && M(u, function(d) {
              h.componentIndex !== d.componentIndex && v === d.getReferringComponents("grid", Jt).models[0] && c.add(d.componentIndex);
            });
          }
        }
      }
      i && M(hw, function(u) {
        if (i) {
          var f = n.findComponents({
            mainType: Za(u),
            filter: function(c) {
              return c.get("type", !0) === "category";
            }
          });
          if (f[0]) {
            var h = new sd();
            h.add(f[0].componentIndex), t.set(u, h), i = !1;
          }
        }
      }, this);
    }, e.prototype._makeAutoOrientByTargetAxis = function() {
      var t;
      return this.eachTargetAxis(function(a) {
        !t && (t = a);
      }, this), t === "y" ? "vertical" : "horizontal";
    }, e.prototype._setDefaultThrottle = function(t) {
      if (t.hasOwnProperty("throttle") && (this._autoThrottle = !1), this._autoThrottle) {
        var a = this.ecModel.option;
        this.option.throttle = a.animation && a.animationDurationUpdate > 0 ? 100 : 20;
      }
    }, e.prototype._updateRangeUse = function(t) {
      var a = this._rangePropMode, n = this.get("rangeMode");
      M([["start", "startValue"], ["end", "endValue"]], function(i, o) {
        var s = t[i[0]] != null, l = t[i[1]] != null;
        s && !l ? a[o] = "percent" : !s && l ? a[o] = "value" : n ? a[o] = n[o] : s && (a[o] = "percent");
      });
    }, e.prototype.noTarget = function() {
      return this._noTarget;
    }, e.prototype.getFirstTargetAxisModel = function() {
      var t;
      return this.eachTargetAxis(function(a, n) {
        t == null && (t = this.ecModel.getComponent(Za(a), n));
      }, this), t;
    }, e.prototype.eachTargetAxis = function(t, a) {
      this._targetAxisInfoMap.each(function(n, i) {
        M(n.indexList, function(o) {
          t.call(a, i, o);
        });
      });
    }, e.prototype.getAxisProxy = function(t, a) {
      var n = this.getAxisModel(t, a);
      if (n)
        return n.__dzAxisProxy;
    }, e.prototype.getAxisModel = function(t, a) {
      ({}).NODE_ENV !== "production" && J(t && a != null);
      var n = this._targetAxisInfoMap.get(t);
      if (n && n.indexMap[a])
        return this.ecModel.getComponent(Za(t), a);
    }, e.prototype.setRawRange = function(t) {
      var a = this.option, n = this.settledOption;
      M([["start", "startValue"], ["end", "endValue"]], function(i) {
        (t[i[0]] != null || t[i[1]] != null) && (a[i[0]] = n[i[0]] = t[i[0]], a[i[1]] = n[i[1]] = t[i[1]]);
      }, this), this._updateRangeUse(t);
    }, e.prototype.setCalculatedRange = function(t) {
      var a = this.option;
      M(["start", "startValue", "end", "endValue"], function(n) {
        a[n] = t[n];
      });
    }, e.prototype.getPercentRange = function() {
      var t = this.findRepresentativeAxisProxy();
      if (t)
        return t.getDataPercentWindow();
    }, e.prototype.getValueRange = function(t, a) {
      if (t == null && a == null) {
        var n = this.findRepresentativeAxisProxy();
        if (n)
          return n.getDataValueWindow();
      } else
        return this.getAxisProxy(t, a).getDataValueWindow();
    }, e.prototype.findRepresentativeAxisProxy = function(t) {
      if (t)
        return t.__dzAxisProxy;
      for (var a, n = this._targetAxisInfoMap.keys(), i = 0; i < n.length; i++)
        for (var o = n[i], s = this._targetAxisInfoMap.get(o), l = 0; l < s.indexList.length; l++) {
          var u = this.getAxisProxy(o, s.indexList[l]);
          if (u.hostedBy(this))
            return u;
          a || (a = u);
        }
      return a;
    }, e.prototype.getRangePropMode = function() {
      return this._rangePropMode.slice();
    }, e.prototype.getOrient = function() {
      return {}.NODE_ENV !== "production" && J(this._orient), this._orient;
    }, e.type = "dataZoom", e.dependencies = ["xAxis", "yAxis", "radiusAxis", "angleAxis", "singleAxis", "series", "toolbox"], e.defaultOption = {
      // zlevel: 0,
      z: 4,
      filterMode: "filter",
      start: 0,
      end: 100
    }, e;
  }(xt)
);
function cw(r) {
  var e = {};
  return M(["start", "end", "startValue", "endValue", "throttle"], function(t) {
    r.hasOwnProperty(t) && (e[t] = r[t]);
  }), e;
}
const cl = B8;
var z8 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.type = "dataZoom.select", e;
  }(cl)
);
const G8 = z8;
var F8 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, a, n, i) {
      this.dataZoomModel = t, this.ecModel = a, this.api = n;
    }, e.type = "dataZoom", e;
  }($t)
);
const om = F8;
var H8 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.type = "dataZoom.select", e;
  }(om)
);
const W8 = H8;
var Qi = M, vw = sr, $8 = (
  /** @class */
  function() {
    function r(e, t, a, n) {
      this._dimName = e, this._axisIndex = t, this.ecModel = n, this._dataZoomModel = a;
    }
    return r.prototype.hostedBy = function(e) {
      return this._dataZoomModel === e;
    }, r.prototype.getDataValueWindow = function() {
      return this._valueWindow.slice();
    }, r.prototype.getDataPercentWindow = function() {
      return this._percentWindow.slice();
    }, r.prototype.getTargetSeriesModels = function() {
      var e = [];
      return this.ecModel.eachSeries(function(t) {
        if (k8(t)) {
          var a = Za(this._dimName), n = t.getReferringComponents(a, Jt).models[0];
          n && this._axisIndex === n.componentIndex && e.push(t);
        }
      }, this), e;
    }, r.prototype.getAxisModel = function() {
      return this.ecModel.getComponent(this._dimName + "Axis", this._axisIndex);
    }, r.prototype.getMinMaxSpan = function() {
      return at(this._minMaxSpan);
    }, r.prototype.calculateDataWindow = function(e) {
      var t = this._dataExtent, a = this.getAxisModel(), n = a.axis.scale, i = this._dataZoomModel.getRangePropMode(), o = [0, 100], s = [], l = [], u;
      Qi(["start", "end"], function(c, v) {
        var d = e[c], p = e[c + "Value"];
        i[v] === "percent" ? (d == null && (d = o[v]), p = n.parse(Lt(d, o, t))) : (u = !0, p = p == null ? t[v] : n.parse(p), d = Lt(p, t, o)), l[v] = p == null || isNaN(p) ? t[v] : p, s[v] = d == null || isNaN(d) ? o[v] : d;
      }), vw(l), vw(s);
      var f = this._minMaxSpan;
      u ? h(l, s, t, o, !1) : h(s, l, o, t, !0);
      function h(c, v, d, p, g) {
        var y = g ? "Span" : "ValueSpan";
        Di(0, c, d, "all", f["min" + y], f["max" + y]);
        for (var m = 0; m < 2; m++)
          v[m] = Lt(c[m], d, p, !0), g && (v[m] = n.parse(v[m]));
      }
      return {
        valueWindow: l,
        percentWindow: s
      };
    }, r.prototype.reset = function(e) {
      if (e === this._dataZoomModel) {
        var t = this.getTargetSeriesModels();
        this._dataExtent = U8(this, this._dimName, t), this._updateMinMaxSpan();
        var a = this.calculateDataWindow(e.settledOption);
        this._valueWindow = a.valueWindow, this._percentWindow = a.percentWindow, this._setAxisModel();
      }
    }, r.prototype.filterData = function(e, t) {
      if (e !== this._dataZoomModel)
        return;
      var a = this._dimName, n = this.getTargetSeriesModels(), i = e.get("filterMode"), o = this._valueWindow;
      if (i === "none")
        return;
      Qi(n, function(l) {
        var u = l.getData(), f = u.mapDimensionsAll(a);
        if (f.length) {
          if (i === "weakFilter") {
            var h = u.getStore(), c = G(f, function(v) {
              return u.getDimensionIndex(v);
            }, u);
            u.filterSelf(function(v) {
              for (var d, p, g, y = 0; y < f.length; y++) {
                var m = h.get(c[y], v), _ = !isNaN(m), S = m < o[0], w = m > o[1];
                if (_ && !S && !w)
                  return !0;
                _ && (g = !0), S && (d = !0), w && (p = !0);
              }
              return g && d && p;
            });
          } else
            Qi(f, function(v) {
              if (i === "empty")
                l.setData(u = u.map(v, function(p) {
                  return s(p) ? p : NaN;
                }));
              else {
                var d = {};
                d[v] = o, u.selectRange(d);
              }
            });
          Qi(f, function(v) {
            u.setApproximateExtent(o, v);
          });
        }
      });
      function s(l) {
        return l >= o[0] && l <= o[1];
      }
    }, r.prototype._updateMinMaxSpan = function() {
      var e = this._minMaxSpan = {}, t = this._dataZoomModel, a = this._dataExtent;
      Qi(["min", "max"], function(n) {
        var i = t.get(n + "Span"), o = t.get(n + "ValueSpan");
        o != null && (o = this.getAxisModel().axis.scale.parse(o)), o != null ? i = Lt(a[0] + o, a, [0, 100], !0) : i != null && (o = Lt(i, [0, 100], a, !0) - a[0]), e[n + "Span"] = i, e[n + "ValueSpan"] = o;
      }, this);
    }, r.prototype._setAxisModel = function() {
      var e = this.getAxisModel(), t = this._percentWindow, a = this._valueWindow;
      if (t) {
        var n = vT(a, [0, 500]);
        n = Math.min(n, 20);
        var i = e.axis.scale.rawExtentInfo;
        t[0] !== 0 && i.setDeterminedMinMax("min", +a[0].toFixed(n)), t[1] !== 100 && i.setDeterminedMinMax("max", +a[1].toFixed(n)), i.freeze();
      }
    }, r;
  }()
);
function U8(r, e, t) {
  var a = [1 / 0, -1 / 0];
  Qi(t, function(o) {
    gB(a, o.getData(), e);
  });
  var n = r.getAxisModel(), i = yA(n.axis.scale, n, a).calculate();
  return [i.min, i.max];
}
const Y8 = $8;
var Z8 = {
  // `dataZoomProcessor` will only be performed in needed series. Consider if
  // there is a line series and a pie series, it is better not to update the
  // line series if only pie series is needed to be updated.
  getTargetSeries: function(r) {
    function e(n) {
      r.eachComponent("dataZoom", function(i) {
        i.eachTargetAxis(function(o, s) {
          var l = r.getComponent(Za(o), s);
          n(o, s, l, i);
        });
      });
    }
    e(function(n, i, o, s) {
      o.__dzAxisProxy = null;
    });
    var t = [];
    e(function(n, i, o, s) {
      o.__dzAxisProxy || (o.__dzAxisProxy = new Y8(n, i, s, r), t.push(o.__dzAxisProxy));
    });
    var a = X();
    return M(t, function(n) {
      M(n.getTargetSeriesModels(), function(i) {
        a.set(i.uid, i);
      });
    }), a;
  },
  // Consider appendData, where filter should be performed. Because data process is
  // in block mode currently, it is not need to worry about that the overallProgress
  // execute every frame.
  overallReset: function(r, e) {
    r.eachComponent("dataZoom", function(t) {
      t.eachTargetAxis(function(a, n) {
        t.getAxisProxy(a, n).reset(t);
      }), t.eachTargetAxis(function(a, n) {
        t.getAxisProxy(a, n).filterData(t, e);
      });
    }), r.eachComponent("dataZoom", function(t) {
      var a = t.findRepresentativeAxisProxy();
      if (a) {
        var n = a.getDataPercentWindow(), i = a.getDataValueWindow();
        t.setCalculatedRange({
          start: n[0],
          end: n[1],
          startValue: i[0],
          endValue: i[1]
        });
      }
    });
  }
};
const X8 = Z8;
function q8(r) {
  r.registerAction("dataZoom", function(e, t) {
    var a = V8(t, e);
    M(a, function(n) {
      n.setRawRange({
        start: e.start,
        end: e.end,
        startValue: e.startValue,
        endValue: e.endValue
      });
    });
  });
}
var dw = !1;
function sm(r) {
  dw || (dw = !0, r.registerProcessor(r.PRIORITY.PROCESSOR.FILTER, X8), q8(r), r.registerSubTypeDefaulter("dataZoom", function() {
    return "slider";
  }));
}
function K8(r) {
  r.registerComponentModel(G8), r.registerComponentView(W8), sm(r);
}
var nr = (
  /** @class */
  function() {
    function r() {
    }
    return r;
  }()
), rL = {};
function to(r, e) {
  rL[r] = e;
}
function aL(r) {
  return rL[r];
}
var j8 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.optionUpdated = function() {
      r.prototype.optionUpdated.apply(this, arguments);
      var t = this.ecModel;
      M(this.option.feature, function(a, n) {
        var i = aL(n);
        i && (i.getDefaultOption && (i.defaultOption = i.getDefaultOption(t)), ht(a, i.defaultOption));
      });
    }, e.type = "toolbox", e.layoutMode = {
      type: "box",
      ignoreSize: !0
    }, e.defaultOption = {
      show: !0,
      z: 6,
      // zlevel: 0,
      orient: "horizontal",
      left: "right",
      top: "top",
      // right
      // bottom
      backgroundColor: "transparent",
      borderColor: "#ccc",
      borderRadius: 0,
      borderWidth: 0,
      padding: 5,
      itemSize: 15,
      itemGap: 8,
      showTitle: !0,
      iconStyle: {
        borderColor: "#666",
        color: "none"
      },
      emphasis: {
        iconStyle: {
          borderColor: "#3E98C5"
        }
      },
      // textStyle: {},
      // feature
      tooltip: {
        show: !1,
        position: "bottom"
      }
    }, e;
  }(xt)
);
const J8 = j8;
function Q8(r, e, t) {
  var a = e.getBoxLayoutParams(), n = e.get("padding"), i = {
    width: t.getWidth(),
    height: t.getHeight()
  }, o = ae(a, i, n);
  oi(e.get("orient"), r, e.get("itemGap"), o.width, o.height), Lh(r, a, i, n);
}
function nL(r, e) {
  var t = Eo(e.get("padding")), a = e.getItemStyle(["color", "opacity"]);
  return a.fill = e.get("backgroundColor"), r = new Tt({
    shape: {
      x: r.x - t[3],
      y: r.y - t[0],
      width: r.width + t[1] + t[3],
      height: r.height + t[0] + t[2],
      r: e.get("borderRadius")
    },
    style: a,
    silent: !0,
    z2: -1
  }), r;
}
var tY = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return e.prototype.render = function(t, a, n, i) {
      var o = this.group;
      if (o.removeAll(), !t.get("show"))
        return;
      var s = +t.get("itemSize"), l = t.get("orient") === "vertical", u = t.get("feature") || {}, f = this._features || (this._features = {}), h = [];
      M(u, function(d, p) {
        h.push(p);
      }), new ma(this._featureNames || [], h).add(c).update(c).remove(ot(c, null)).execute(), this._featureNames = h;
      function c(d, p) {
        var g = h[d], y = h[p], m = u[g], _ = new kt(m, t, t.ecModel), S;
        if (i && i.newTitle != null && i.featureName === g && (m.title = i.newTitle), g && !y) {
          if (eY(g))
            S = {
              onclick: _.option.onclick,
              featureName: g
            };
          else {
            var w = aL(g);
            if (!w)
              return;
            S = new w();
          }
          f[g] = S;
        } else if (S = f[y], !S)
          return;
        S.uid = Lo("toolbox-feature"), S.model = _, S.ecModel = a, S.api = n;
        var x = S instanceof nr;
        if (!g && y) {
          x && S.dispose && S.dispose(a, n);
          return;
        }
        if (!_.get("show") || x && S.unusable) {
          x && S.remove && S.remove(a, n);
          return;
        }
        v(_, S, g), _.setIconStatus = function(b, T) {
          var C = this.option, D = this.iconPaths;
          C.iconStatus = C.iconStatus || {}, C.iconStatus[b] = T, D[b] && (T === "emphasis" ? ga : ya)(D[b]);
        }, S instanceof nr && S.render && S.render(_, a, n, i);
      }
      function v(d, p, g) {
        var y = d.getModel("iconStyle"), m = d.getModel(["emphasis", "iconStyle"]), _ = p instanceof nr && p.getIcons ? p.getIcons() : d.get("icon"), S = d.get("title") || {}, w, x;
        $(_) ? (w = {}, w[g] = _) : w = _, $(S) ? (x = {}, x[g] = S) : x = S;
        var b = d.iconPaths = {};
        M(w, function(T, C) {
          var D = xl(T, {}, {
            x: -s / 2,
            y: -s / 2,
            width: s,
            height: s
          });
          D.setStyle(y.getItemStyle());
          var A = D.ensureState("emphasis");
          A.style = m.getItemStyle();
          var I = new Ct({
            style: {
              text: x[C],
              align: m.get("textAlign"),
              borderRadius: m.get("textBorderRadius"),
              padding: m.get("textPadding"),
              fill: null
            },
            ignore: !0
          });
          D.setTextContent(I), Mo({
            el: D,
            componentModel: t,
            itemName: C,
            formatterParamsExtra: {
              title: x[C]
            }
          }), D.__title = x[C], D.on("mouseover", function() {
            var L = m.getItemStyle(), E = l ? t.get("right") == null && t.get("left") !== "right" ? "right" : "left" : t.get("bottom") == null && t.get("top") !== "bottom" ? "bottom" : "top";
            I.setStyle({
              fill: m.get("textFill") || L.fill || L.stroke || "#000",
              backgroundColor: m.get("textBackgroundColor")
            }), D.setTextConfig({
              position: m.get("textPosition") || E
            }), I.ignore = !t.get("showTitle"), n.enterEmphasis(this);
          }).on("mouseout", function() {
            d.get(["iconStatus", C]) !== "emphasis" && n.leaveEmphasis(this), I.hide();
          }), (d.get(["iconStatus", C]) === "emphasis" ? ga : ya)(D), o.add(D), D.on("click", Y(p.onclick, p, a, n, C)), b[C] = D;
        });
      }
      Q8(o, t, n), o.add(nL(o.getBoundingRect(), t)), l || o.eachChild(function(d) {
        var p = d.__title, g = d.ensureState("emphasis"), y = g.textConfig || (g.textConfig = {}), m = d.getTextContent(), _ = m && m.ensureState("emphasis");
        if (_ && !K(_) && p) {
          var S = _.style || (_.style = {}), w = gl(p, Ct.makeFont(S)), x = d.x + o.x, b = d.y + o.y + s, T = !1;
          b + w.height > n.getHeight() && (y.position = "top", T = !0);
          var C = T ? -5 - w.height : s + 10;
          x + w.width / 2 > n.getWidth() ? (y.position = ["100%", C], S.align = "right") : x - w.width / 2 < 0 && (y.position = [0, C], S.align = "left");
        }
      });
    }, e.prototype.updateView = function(t, a, n, i) {
      M(this._features, function(o) {
        o instanceof nr && o.updateView && o.updateView(o.model, a, n, i);
      });
    }, e.prototype.remove = function(t, a) {
      M(this._features, function(n) {
        n instanceof nr && n.remove && n.remove(t, a);
      }), this.group.removeAll();
    }, e.prototype.dispose = function(t, a) {
      M(this._features, function(n) {
        n instanceof nr && n.dispose && n.dispose(t, a);
      });
    }, e.type = "toolbox", e;
  }($t)
);
function eY(r) {
  return r.indexOf("my") === 0;
}
const rY = tY;
var aY = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return e.prototype.onclick = function(t, a) {
      var n = this.model, i = n.get("name") || t.get("title.0.text") || "echarts", o = a.getZr().painter.getType() === "svg", s = o ? "svg" : n.get("type", !0) || "png", l = a.getConnectedDataURL({
        type: s,
        backgroundColor: n.get("backgroundColor", !0) || t.get("backgroundColor") || "#fff",
        connectedBackgroundColor: n.get("connectedBackgroundColor"),
        excludeComponents: n.get("excludeComponents"),
        pixelRatio: n.get("pixelRatio")
      }), u = bt.browser;
      if (K(MouseEvent) && (u.newEdge || !u.ie && !u.edge)) {
        var f = document.createElement("a");
        f.download = i + "." + s, f.target = "_blank", f.href = l;
        var h = new MouseEvent("click", {
          // some micro front-end framework， window maybe is a Proxy
          view: document.defaultView,
          bubbles: !0,
          cancelable: !1
        });
        f.dispatchEvent(h);
      } else if (window.navigator.msSaveOrOpenBlob || o) {
        var c = l.split(","), v = c[0].indexOf("base64") > -1, d = o ? decodeURIComponent(c[1]) : c[1];
        v && (d = window.atob(d));
        var p = i + "." + s;
        if (window.navigator.msSaveOrOpenBlob) {
          for (var g = d.length, y = new Uint8Array(g); g--; )
            y[g] = d.charCodeAt(g);
          var m = new Blob([y]);
          window.navigator.msSaveOrOpenBlob(m, p);
        } else {
          var _ = document.createElement("iframe");
          document.body.appendChild(_);
          var S = _.contentWindow, w = S.document;
          w.open("image/svg+xml", "replace"), w.write(d), w.close(), S.focus(), w.execCommand("SaveAs", !0, p), document.body.removeChild(_);
        }
      } else {
        var x = n.get("lang"), b = '<body style="margin:0;"><img src="' + l + '" style="max-width:100%;" title="' + (x && x[0] || "") + '" /></body>', T = window.open();
        T.document.write(b), T.document.title = i;
      }
    }, e.getDefaultOption = function(t) {
      var a = {
        show: !0,
        icon: "M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0",
        title: t.getLocaleModel().get(["toolbox", "saveAsImage", "title"]),
        type: "png",
        // Default use option.backgroundColor
        // backgroundColor: '#fff',
        connectedBackgroundColor: "#fff",
        name: "",
        excludeComponents: ["toolbox"],
        // use current pixel ratio of device by default
        // pixelRatio: 1,
        lang: t.getLocaleModel().get(["toolbox", "saveAsImage", "lang"])
      };
      return a;
    }, e;
  }(nr)
);
const nY = aY;
var pw = "__ec_magicType_stack__", iY = [["line", "bar"], ["stack"]], oY = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return e.prototype.getIcons = function() {
      var t = this.model, a = t.get("icon"), n = {};
      return M(t.get("type"), function(i) {
        a[i] && (n[i] = a[i]);
      }), n;
    }, e.getDefaultOption = function(t) {
      var a = {
        show: !0,
        type: [],
        // Icon group
        icon: {
          line: "M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4",
          bar: "M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7",
          // eslint-disable-next-line
          stack: "M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z"
          // jshint ignore:line
        },
        // `line`, `bar`, `stack`, `tiled`
        title: t.getLocaleModel().get(["toolbox", "magicType", "title"]),
        option: {},
        seriesIndex: {}
      };
      return a;
    }, e.prototype.onclick = function(t, a, n) {
      var i = this.model, o = i.get(["seriesIndex", n]);
      if (gw[n]) {
        var s = {
          series: []
        }, l = function(h) {
          var c = h.subType, v = h.id, d = gw[n](c, v, h, i);
          d && (et(d, h.option), s.series.push(d));
          var p = h.coordinateSystem;
          if (p && p.type === "cartesian2d" && (n === "line" || n === "bar")) {
            var g = p.getAxesByScale("ordinal")[0];
            if (g) {
              var y = g.dim, m = y + "Axis", _ = h.getReferringComponents(m, Jt).models[0], S = _.componentIndex;
              s[m] = s[m] || [];
              for (var w = 0; w <= S; w++)
                s[m][S] = s[m][S] || {};
              s[m][S].boundaryGap = n === "bar";
            }
          }
        };
        M(iY, function(h) {
          vt(h, n) >= 0 && M(h, function(c) {
            i.setIconStatus(c, "normal");
          });
        }), i.setIconStatus(n, "emphasis"), t.eachComponent({
          mainType: "series",
          query: o == null ? null : {
            seriesIndex: o
          }
        }, l);
        var u, f = n;
        n === "stack" && (u = ht({
          stack: i.option.title.tiled,
          tiled: i.option.title.stack
        }, i.option.title), i.get(["iconStatus", n]) !== "emphasis" && (f = "tiled")), a.dispatchAction({
          type: "changeMagicType",
          currentType: f,
          newOption: s,
          newTitle: u,
          featureName: "magicType"
        });
      }
    }, e;
  }(nr)
), gw = {
  line: function(r, e, t, a) {
    if (r === "bar")
      return ht({
        id: e,
        type: "line",
        // Preserve data related option
        data: t.get("data"),
        stack: t.get("stack"),
        markPoint: t.get("markPoint"),
        markLine: t.get("markLine")
      }, a.get(["option", "line"]) || {}, !0);
  },
  bar: function(r, e, t, a) {
    if (r === "line")
      return ht({
        id: e,
        type: "bar",
        // Preserve data related option
        data: t.get("data"),
        stack: t.get("stack"),
        markPoint: t.get("markPoint"),
        markLine: t.get("markLine")
      }, a.get(["option", "bar"]) || {}, !0);
  },
  stack: function(r, e, t, a) {
    var n = t.get("stack") === pw;
    if (r === "line" || r === "bar")
      return a.setIconStatus("stack", n ? "normal" : "emphasis"), ht({
        id: e,
        stack: n ? "" : pw
      }, a.get(["option", "stack"]) || {}, !0);
  }
};
Qr({
  type: "changeMagicType",
  event: "magicTypeChanged",
  update: "prepareAndUpdate"
}, function(r, e) {
  e.mergeOption(r.newOption);
});
const sY = oY;
var Zh = new Array(60).join("-"), xo = "	";
function lY(r) {
  var e = {}, t = [], a = [];
  return r.eachRawSeries(function(n) {
    var i = n.coordinateSystem;
    if (i && (i.type === "cartesian2d" || i.type === "polar")) {
      var o = i.getBaseAxis();
      if (o.type === "category") {
        var s = o.dim + "_" + o.index;
        e[s] || (e[s] = {
          categoryAxis: o,
          valueAxis: i.getOtherAxis(o),
          series: []
        }, a.push({
          axisDim: o.dim,
          axisIndex: o.index
        })), e[s].series.push(n);
      } else
        t.push(n);
    } else
      t.push(n);
  }), {
    seriesGroupByCategoryAxis: e,
    other: t,
    meta: a
  };
}
function uY(r) {
  var e = [];
  return M(r, function(t, a) {
    var n = t.categoryAxis, i = t.valueAxis, o = i.dim, s = [" "].concat(G(t.series, function(v) {
      return v.name;
    })), l = [n.model.getCategories()];
    M(t.series, function(v) {
      var d = v.getRawData();
      l.push(v.getRawData().mapArray(d.mapDimension(o), function(p) {
        return p;
      }));
    });
    for (var u = [s.join(xo)], f = 0; f < l[0].length; f++) {
      for (var h = [], c = 0; c < l.length; c++)
        h.push(l[c][f]);
      u.push(h.join(xo));
    }
    e.push(u.join("\n"));
  }), e.join("\n\n" + Zh + "\n\n");
}
function fY(r) {
  return G(r, function(e) {
    var t = e.getRawData(), a = [e.name], n = [];
    return t.each(t.dimensions, function() {
      for (var i = arguments.length, o = arguments[i - 1], s = t.getName(o), l = 0; l < i - 1; l++)
        n[l] = arguments[l];
      a.push((s ? s + xo : "") + n.join(xo));
    }), a.join("\n");
  }).join("\n\n" + Zh + "\n\n");
}
function hY(r) {
  var e = lY(r);
  return {
    value: Et([uY(e.seriesGroupByCategoryAxis), fY(e.other)], function(t) {
      return !!t.replace(/[\n\t\s]/g, "");
    }).join("\n\n" + Zh + "\n\n"),
    meta: e.meta
  };
}
function Jf(r) {
  return r.replace(/^\s\s*/, "").replace(/\s\s*$/, "");
}
function cY(r) {
  var e = r.slice(0, r.indexOf("\n"));
  if (e.indexOf(xo) >= 0)
    return !0;
}
var Kp = new RegExp("[" + xo + "]+", "g");
function vY(r) {
  for (var e = r.split(/\n+/g), t = Jf(e.shift()).split(Kp), a = [], n = G(t, function(l) {
    return {
      name: l,
      data: []
    };
  }), i = 0; i < e.length; i++) {
    var o = Jf(e[i]).split(Kp);
    a.push(o.shift());
    for (var s = 0; s < o.length; s++)
      n[s] && (n[s].data[i] = o[s]);
  }
  return {
    series: n,
    categories: a
  };
}
function dY(r) {
  for (var e = r.split(/\n+/g), t = Jf(e.shift()), a = [], n = 0; n < e.length; n++) {
    var i = Jf(e[n]);
    if (i) {
      var o = i.split(Kp), s = "", l = void 0, u = !1;
      isNaN(o[0]) ? (u = !0, s = o[0], o = o.slice(1), a[n] = {
        name: s,
        value: []
      }, l = a[n].value) : l = a[n] = [];
      for (var f = 0; f < o.length; f++)
        l.push(+o[f]);
      l.length === 1 && (u ? a[n].value = l[0] : a[n] = l[0]);
    }
  }
  return {
    name: t,
    data: a
  };
}
function pY(r, e) {
  var t = r.split(new RegExp("\n*" + Zh + "\n*", "g")), a = {
    series: []
  };
  return M(t, function(n, i) {
    if (cY(n)) {
      var o = vY(n), s = e[i], l = s.axisDim + "Axis";
      s && (a[l] = a[l] || [], a[l][s.axisIndex] = {
        data: o.categories
      }, a.series = a.series.concat(o.series));
    } else {
      var o = dY(n);
      a.series.push(o);
    }
  }), a;
}
var gY = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return e.prototype.onclick = function(t, a) {
      setTimeout(function() {
        a.dispatchAction({
          type: "hideTip"
        });
      });
      var n = a.getDom(), i = this.model;
      this._dom && n.removeChild(this._dom);
      var o = document.createElement("div");
      o.style.cssText = "position:absolute;top:0;bottom:0;left:0;right:0;padding:5px", o.style.backgroundColor = i.get("backgroundColor") || "#fff";
      var s = document.createElement("h4"), l = i.get("lang") || [];
      s.innerHTML = l[0] || i.get("title"), s.style.cssText = "margin:10px 20px", s.style.color = i.get("textColor");
      var u = document.createElement("div"), f = document.createElement("textarea");
      u.style.cssText = "overflow:auto";
      var h = i.get("optionToContent"), c = i.get("contentToOption"), v = hY(t);
      if (K(h)) {
        var d = h(a.getOption());
        $(d) ? u.innerHTML = d : fo(d) && u.appendChild(d);
      } else {
        f.readOnly = i.get("readOnly");
        var p = f.style;
        p.cssText = "display:block;width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;resize:none;box-sizing:border-box;outline:none", p.color = i.get("textColor"), p.borderColor = i.get("textareaBorderColor"), p.backgroundColor = i.get("textareaColor"), f.value = v.value, u.appendChild(f);
      }
      var g = v.meta, y = document.createElement("div");
      y.style.cssText = "position:absolute;bottom:5px;left:0;right:0";
      var m = "float:right;margin-right:20px;border:none;cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px", _ = document.createElement("div"), S = document.createElement("div");
      m += ";background-color:" + i.get("buttonColor"), m += ";color:" + i.get("buttonTextColor");
      var w = this;
      function x() {
        n.removeChild(o), w._dom = null;
      }
      Ld(_, "click", x), Ld(S, "click", function() {
        if (c == null && h != null || c != null && h == null) {
          ({}).NODE_ENV !== "production" && Ft("It seems you have just provided one of `contentToOption` and `optionToContent` functions but missed the other one. Data change is ignored."), x();
          return;
        }
        var b;
        try {
          K(c) ? b = c(u, a.getOption()) : b = pY(f.value, g);
        } catch (T) {
          throw x(), new Error("Data view format error " + T);
        }
        b && a.dispatchAction({
          type: "changeDataView",
          newOption: b
        }), x();
      }), _.innerHTML = l[1], S.innerHTML = l[2], S.style.cssText = _.style.cssText = m, !i.get("readOnly") && y.appendChild(S), y.appendChild(_), o.appendChild(s), o.appendChild(u), o.appendChild(y), u.style.height = n.clientHeight - 80 + "px", n.appendChild(o), this._dom = o;
    }, e.prototype.remove = function(t, a) {
      this._dom && a.getDom().removeChild(this._dom);
    }, e.prototype.dispose = function(t, a) {
      this.remove(t, a);
    }, e.getDefaultOption = function(t) {
      var a = {
        show: !0,
        readOnly: !1,
        optionToContent: null,
        contentToOption: null,
        // eslint-disable-next-line
        icon: "M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28",
        title: t.getLocaleModel().get(["toolbox", "dataView", "title"]),
        lang: t.getLocaleModel().get(["toolbox", "dataView", "lang"]),
        backgroundColor: "#fff",
        textColor: "#000",
        textareaColor: "#fff",
        textareaBorderColor: "#333",
        buttonColor: "#c23531",
        buttonTextColor: "#fff"
      };
      return a;
    }, e;
  }(nr)
);
function yY(r, e) {
  return G(r, function(t, a) {
    var n = e && e[a];
    if (j(n) && !z(n)) {
      var i = j(t) && !z(t);
      i || (t = {
        value: t
      });
      var o = n.name != null && t.name == null;
      return t = et(t, n), o && delete t.name, t;
    } else
      return t;
  });
}
Qr({
  type: "changeDataView",
  event: "dataViewChanged",
  update: "prepareAndUpdate"
}, function(r, e) {
  var t = [];
  M(r.newOption.series, function(a) {
    var n = e.getSeriesByName(a.name)[0];
    if (!n)
      t.push(V({
        // Default is scatter
        type: "scatter"
      }, a));
    else {
      var i = n.get("data");
      t.push({
        name: a.name,
        data: yY(a.data, i)
      });
    }
  }), e.mergeOption(et({
    series: t
  }, r.newOption));
});
const mY = gY;
var iL = M, oL = Dt();
function _Y(r, e) {
  var t = lm(r);
  iL(e, function(a, n) {
    for (var i = t.length - 1; i >= 0; i--) {
      var o = t[i];
      if (o[n])
        break;
    }
    if (i < 0) {
      var s = r.queryComponents({
        mainType: "dataZoom",
        subType: "select",
        id: n
      })[0];
      if (s) {
        var l = s.getPercentRange();
        t[0][n] = {
          dataZoomId: n,
          start: l[0],
          end: l[1]
        };
      }
    }
  }), t.push(e);
}
function SY(r) {
  var e = lm(r), t = e[e.length - 1];
  e.length > 1 && e.pop();
  var a = {};
  return iL(t, function(n, i) {
    for (var o = e.length - 1; o >= 0; o--)
      if (n = e[o][i], n) {
        a[i] = n;
        break;
      }
  }), a;
}
function xY(r) {
  oL(r).snapshots = null;
}
function wY(r) {
  return lm(r).length;
}
function lm(r) {
  var e = oL(r);
  return e.snapshots || (e.snapshots = [{}]), e.snapshots;
}
var bY = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return e.prototype.onclick = function(t, a) {
      xY(t), a.dispatchAction({
        type: "restore",
        from: this.uid
      });
    }, e.getDefaultOption = function(t) {
      var a = {
        show: !0,
        // eslint-disable-next-line
        icon: "M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5",
        title: t.getLocaleModel().get(["toolbox", "restore", "title"])
      };
      return a;
    }, e;
  }(nr)
);
Qr({
  type: "restore",
  event: "restore",
  update: "prepareAndUpdate"
}, function(r, e) {
  e.resetOption("recreate");
});
const TY = bY;
var DY = ["grid", "xAxis", "yAxis", "geo", "graph", "polar", "radiusAxis", "angleAxis", "bmap"], CY = (
  /** @class */
  function() {
    function r(e, t, a) {
      var n = this;
      this._targetInfoList = [];
      var i = yw(t, e);
      M(AY, function(o, s) {
        (!a || !a.include || vt(a.include, s) >= 0) && o(i, n._targetInfoList);
      });
    }
    return r.prototype.setOutputRanges = function(e, t) {
      return this.matchOutputRanges(e, t, function(a, n, i) {
        if ((a.coordRanges || (a.coordRanges = [])).push(n), !a.coordRange) {
          a.coordRange = n;
          var o = ld[a.brushType](0, i, n);
          a.__rangeOffset = {
            offset: xw[a.brushType](o.values, a.range, [1, 1]),
            xyMinMax: o.xyMinMax
          };
        }
      }), e;
    }, r.prototype.matchOutputRanges = function(e, t, a) {
      M(e, function(n) {
        var i = this.findTargetInfo(n, t);
        i && i !== !0 && M(i.coordSyses, function(o) {
          var s = ld[n.brushType](1, o, n.range, !0);
          a(n, s.values, o, t);
        });
      }, this);
    }, r.prototype.setInputRanges = function(e, t) {
      M(e, function(a) {
        var n = this.findTargetInfo(a, t);
        if ({}.NODE_ENV !== "production" && (J(!n || n === !0 || a.coordRange, "coordRange must be specified when coord index specified."), J(!n || n !== !0 || a.range, "range must be specified in global brush.")), a.range = a.range || [], n && n !== !0) {
          a.panelId = n.panelId;
          var i = ld[a.brushType](0, n.coordSys, a.coordRange), o = a.__rangeOffset;
          a.range = o ? xw[a.brushType](i.values, o.offset, MY(i.xyMinMax, o.xyMinMax)) : i.values;
        }
      }, this);
    }, r.prototype.makePanelOpts = function(e, t) {
      return G(this._targetInfoList, function(a) {
        var n = a.getPanelRect();
        return {
          panelId: a.panelId,
          defaultBrushType: t ? t(a) : null,
          clipPath: cI(n),
          isTargetByCursor: dI(n, e, a.coordSysModel),
          getLinearBrushOtherExtent: vI(n)
        };
      });
    }, r.prototype.controlSeries = function(e, t, a) {
      var n = this.findTargetInfo(e, a);
      return n === !0 || n && vt(n.coordSyses, t.coordinateSystem) >= 0;
    }, r.prototype.findTargetInfo = function(e, t) {
      for (var a = this._targetInfoList, n = yw(t, e), i = 0; i < a.length; i++) {
        var o = a[i], s = e.panelId;
        if (s) {
          if (o.panelId === s)
            return o;
        } else
          for (var l = 0; l < mw.length; l++)
            if (mw[l](n, o))
              return o;
      }
      return !0;
    }, r;
  }()
);
function jp(r) {
  return r[0] > r[1] && r.reverse(), r;
}
function yw(r, e) {
  return Ps(r, e, {
    includeMainTypes: DY
  });
}
var AY = {
  grid: function(r, e) {
    var t = r.xAxisModels, a = r.yAxisModels, n = r.gridModels, i = X(), o = {}, s = {};
    !t && !a && !n || (M(t, function(l) {
      var u = l.axis.grid.model;
      i.set(u.id, u), o[u.id] = !0;
    }), M(a, function(l) {
      var u = l.axis.grid.model;
      i.set(u.id, u), s[u.id] = !0;
    }), M(n, function(l) {
      i.set(l.id, l), o[l.id] = !0, s[l.id] = !0;
    }), i.each(function(l) {
      var u = l.coordinateSystem, f = [];
      M(u.getCartesians(), function(h, c) {
        (vt(t, h.getAxis("x").model) >= 0 || vt(a, h.getAxis("y").model) >= 0) && f.push(h);
      }), e.push({
        panelId: "grid--" + l.id,
        gridModel: l,
        coordSysModel: l,
        // Use the first one as the representitive coordSys.
        coordSys: f[0],
        coordSyses: f,
        getPanelRect: _w.grid,
        xAxisDeclared: o[l.id],
        yAxisDeclared: s[l.id]
      });
    }));
  },
  geo: function(r, e) {
    M(r.geoModels, function(t) {
      var a = t.coordinateSystem;
      e.push({
        panelId: "geo--" + t.id,
        geoModel: t,
        coordSysModel: t,
        coordSys: a,
        coordSyses: [a],
        getPanelRect: _w.geo
      });
    });
  }
}, mw = [
  // grid
  function(r, e) {
    var t = r.xAxisModel, a = r.yAxisModel, n = r.gridModel;
    return !n && t && (n = t.axis.grid.model), !n && a && (n = a.axis.grid.model), n && n === e.gridModel;
  },
  // geo
  function(r, e) {
    var t = r.geoModel;
    return t && t === e.geoModel;
  }
], _w = {
  grid: function() {
    return this.coordSys.master.getRect().clone();
  },
  geo: function() {
    var r = this.coordSys, e = r.getBoundingRect().clone();
    return e.applyTransform(ii(r)), e;
  }
}, ld = {
  lineX: ot(Sw, 0),
  lineY: ot(Sw, 1),
  rect: function(r, e, t, a) {
    var n = r ? e.pointToData([t[0][0], t[1][0]], a) : e.dataToPoint([t[0][0], t[1][0]], a), i = r ? e.pointToData([t[0][1], t[1][1]], a) : e.dataToPoint([t[0][1], t[1][1]], a), o = [jp([n[0], i[0]]), jp([n[1], i[1]])];
    return {
      values: o,
      xyMinMax: o
    };
  },
  polygon: function(r, e, t, a) {
    var n = [[1 / 0, -1 / 0], [1 / 0, -1 / 0]], i = G(t, function(o) {
      var s = r ? e.pointToData(o, a) : e.dataToPoint(o, a);
      return n[0][0] = Math.min(n[0][0], s[0]), n[1][0] = Math.min(n[1][0], s[1]), n[0][1] = Math.max(n[0][1], s[0]), n[1][1] = Math.max(n[1][1], s[1]), s;
    });
    return {
      values: i,
      xyMinMax: n
    };
  }
};
function Sw(r, e, t, a) {
  ({}).NODE_ENV !== "production" && J(t.type === "cartesian2d", "lineX/lineY brush is available only in cartesian2d.");
  var n = t.getAxis(["x", "y"][r]), i = jp(G([0, 1], function(s) {
    return e ? n.coordToData(n.toLocalCoord(a[s]), !0) : n.toGlobalCoord(n.dataToCoord(a[s]));
  })), o = [];
  return o[r] = i, o[1 - r] = [NaN, NaN], {
    values: i,
    xyMinMax: o
  };
}
var xw = {
  lineX: ot(ww, 0),
  lineY: ot(ww, 1),
  rect: function(r, e, t) {
    return [[r[0][0] - t[0] * e[0][0], r[0][1] - t[0] * e[0][1]], [r[1][0] - t[1] * e[1][0], r[1][1] - t[1] * e[1][1]]];
  },
  polygon: function(r, e, t) {
    return G(r, function(a, n) {
      return [a[0] - t[0] * e[n][0], a[1] - t[1] * e[n][1]];
    });
  }
};
function ww(r, e, t, a) {
  return [e[0] - a[r] * t[0], e[1] - a[r] * t[1]];
}
function MY(r, e) {
  var t = bw(r), a = bw(e), n = [t[0] / a[0], t[1] / a[1]];
  return isNaN(n[0]) && (n[0] = 1), isNaN(n[1]) && (n[1] = 1), n;
}
function bw(r) {
  return r ? [r[0][1] - r[0][0], r[1][1] - r[1][0]] : [NaN, NaN];
}
const um = CY;
var Jp = M, IY = KE("toolbox-dataZoom_"), LY = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return e.prototype.render = function(t, a, n, i) {
      this._brushController || (this._brushController = new Wy(n.getZr()), this._brushController.on("brush", Y(this._onBrush, this)).mount()), RY(t, a, this, i, n), PY(t, a);
    }, e.prototype.onclick = function(t, a, n) {
      EY[n].call(this);
    }, e.prototype.remove = function(t, a) {
      this._brushController && this._brushController.unmount();
    }, e.prototype.dispose = function(t, a) {
      this._brushController && this._brushController.dispose();
    }, e.prototype._onBrush = function(t) {
      var a = t.areas;
      if (!t.isEnd || !a.length)
        return;
      var n = {}, i = this.ecModel;
      this._brushController.updateCovers([]);
      var o = new um(fm(this.model), i, {
        include: ["grid"]
      });
      o.matchOutputRanges(a, i, function(u, f, h) {
        if (h.type === "cartesian2d") {
          var c = u.brushType;
          c === "rect" ? (s("x", h, f[0]), s("y", h, f[1])) : s({
            lineX: "x",
            lineY: "y"
          }[c], h, f);
        }
      }), _Y(i, n), this._dispatchZoomAction(n);
      function s(u, f, h) {
        var c = f.getAxis(u), v = c.model, d = l(u, v, i), p = d.findRepresentativeAxisProxy(v).getMinMaxSpan();
        (p.minValueSpan != null || p.maxValueSpan != null) && (h = Di(0, h.slice(), c.scale.getExtent(), 0, p.minValueSpan, p.maxValueSpan)), d && (n[d.id] = {
          dataZoomId: d.id,
          startValue: h[0],
          endValue: h[1]
        });
      }
      function l(u, f, h) {
        var c;
        return h.eachComponent({
          mainType: "dataZoom",
          subType: "select"
        }, function(v) {
          var d = v.getAxisModel(u, f.componentIndex);
          d && (c = v);
        }), c;
      }
    }, e.prototype._dispatchZoomAction = function(t) {
      var a = [];
      Jp(t, function(n, i) {
        a.push(at(n));
      }), a.length && this.api.dispatchAction({
        type: "dataZoom",
        from: this.uid,
        batch: a
      });
    }, e.getDefaultOption = function(t) {
      var a = {
        show: !0,
        filterMode: "filter",
        // Icon group
        icon: {
          zoom: "M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1",
          back: "M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26"
        },
        // `zoom`, `back`
        title: t.getLocaleModel().get(["toolbox", "dataZoom", "title"]),
        brushStyle: {
          borderWidth: 0,
          color: "rgba(210,219,238,0.2)"
        }
      };
      return a;
    }, e;
  }(nr)
), EY = {
  zoom: function() {
    var r = !this._isZoomActive;
    this.api.dispatchAction({
      type: "takeGlobalCursor",
      key: "dataZoomSelect",
      dataZoomSelectActive: r
    });
  },
  back: function() {
    this._dispatchZoomAction(SY(this.ecModel));
  }
};
function fm(r) {
  var e = {
    xAxisIndex: r.get("xAxisIndex", !0),
    yAxisIndex: r.get("yAxisIndex", !0),
    xAxisId: r.get("xAxisId", !0),
    yAxisId: r.get("yAxisId", !0)
  };
  return e.xAxisIndex == null && e.xAxisId == null && (e.xAxisIndex = "all"), e.yAxisIndex == null && e.yAxisId == null && (e.yAxisIndex = "all"), e;
}
function PY(r, e) {
  r.setIconStatus("back", wY(e) > 1 ? "emphasis" : "normal");
}
function RY(r, e, t, a, n) {
  var i = t._isZoomActive;
  a && a.type === "takeGlobalCursor" && (i = a.key === "dataZoomSelect" ? a.dataZoomSelectActive : !1), t._isZoomActive = i, r.setIconStatus("zoom", i ? "emphasis" : "normal");
  var o = new um(fm(r), e, {
    include: ["grid"]
  }), s = o.makePanelOpts(n, function(l) {
    return l.xAxisDeclared && !l.yAxisDeclared ? "lineX" : !l.xAxisDeclared && l.yAxisDeclared ? "lineY" : "rect";
  });
  t._brushController.setPanels(s).enableBrush(i && s.length ? {
    brushType: "auto",
    brushStyle: r.getModel("brushStyle").getItemStyle()
  } : !1);
}
LN("dataZoom", function(r) {
  var e = r.getComponent("toolbox", 0), t = ["feature", "dataZoom"];
  if (!e || e.get(t) == null)
    return;
  var a = e.getModel(t), n = [], i = fm(a), o = Ps(r, i);
  Jp(o.xAxisModels, function(l) {
    return s(l, "xAxis", "xAxisIndex");
  }), Jp(o.yAxisModels, function(l) {
    return s(l, "yAxis", "yAxisIndex");
  });
  function s(l, u, f) {
    var h = l.componentIndex, c = {
      type: "select",
      $fromToolbox: !0,
      // Default to be filter
      filterMode: a.get("filterMode", !0) || "filter",
      // Id for merge mapping.
      id: IY + u + h
    };
    c[f] = h, n.push(c);
  }
  return n;
});
const NY = LY;
function OY(r) {
  r.registerComponentModel(J8), r.registerComponentView(rY), to("saveAsImage", nY), to("magicType", sY), to("dataView", mY), to("dataZoom", NY), to("restore", TY), yt(K8);
}
var kY = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.type = "tooltip", e.dependencies = ["axisPointer"], e.defaultOption = {
      // zlevel: 0,
      z: 60,
      show: !0,
      // tooltip main content
      showContent: !0,
      // 'trigger' only works on coordinate system.
      // 'item' | 'axis' | 'none'
      trigger: "item",
      // 'click' | 'mousemove' | 'none'
      triggerOn: "mousemove|click",
      alwaysShowContent: !1,
      displayMode: "single",
      renderMode: "auto",
      // whether restraint content inside viewRect.
      // If renderMode: 'richText', default true.
      // If renderMode: 'html', defaut false (for backward compat).
      confine: null,
      showDelay: 0,
      hideDelay: 100,
      // Animation transition time, unit is second
      transitionDuration: 0.4,
      enterable: !1,
      backgroundColor: "#fff",
      // box shadow
      shadowBlur: 10,
      shadowColor: "rgba(0, 0, 0, .2)",
      shadowOffsetX: 1,
      shadowOffsetY: 2,
      // tooltip border radius, unit is px, default is 4
      borderRadius: 4,
      // tooltip border width, unit is px, default is 0 (no border)
      borderWidth: 1,
      // Tooltip inside padding, default is 5 for all direction
      // Array is allowed to set up, right, bottom, left, same with css
      // The default value: See `tooltip/tooltipMarkup.ts#getPaddingFromTooltipModel`.
      padding: null,
      // Extra css text
      extraCssText: "",
      // axis indicator, trigger by axis
      axisPointer: {
        // default is line
        // legal values: 'line' | 'shadow' | 'cross'
        type: "line",
        // Valid when type is line, appoint tooltip line locate on which line. Optional
        // legal values: 'x' | 'y' | 'angle' | 'radius' | 'auto'
        // default is 'auto', chose the axis which type is category.
        // for multiply y axis, cartesian coord chose x axis, polar chose angle axis
        axis: "auto",
        animation: "auto",
        animationDurationUpdate: 200,
        animationEasingUpdate: "exponentialOut",
        crossStyle: {
          color: "#999",
          width: 1,
          type: "dashed",
          // TODO formatter
          textStyle: {}
        }
        // lineStyle and shadowStyle should not be specified here,
        // otherwise it will always override those styles on option.axisPointer.
      },
      textStyle: {
        color: "#666",
        fontSize: 14
      }
    }, e;
  }(xt)
);
const VY = kY;
function sL(r) {
  var e = r.get("confine");
  return e != null ? !!e : r.get("renderMode") === "richText";
}
function lL(r) {
  if (bt.domSupported) {
    for (var e = document.documentElement.style, t = 0, a = r.length; t < a; t++)
      if (r[t] in e)
        return r[t];
  }
}
var uL = lL(["transform", "webkitTransform", "OTransform", "MozTransform", "msTransform"]), BY = lL(["webkitTransition", "transition", "OTransition", "MozTransition", "msTransition"]);
function fL(r, e) {
  if (!r)
    return e;
  e = kD(e, !0);
  var t = r.indexOf(e);
  return r = t === -1 ? e : "-" + r.slice(0, t) + "-" + e, r.toLowerCase();
}
function zY(r, e) {
  var t = r.currentStyle || document.defaultView && document.defaultView.getComputedStyle(r);
  return t ? e ? t[e] : t : null;
}
var GY = fL(BY, "transition"), hm = fL(uL, "transform"), FY = "position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;" + (bt.transform3dSupported ? "will-change:transform;" : "");
function HY(r) {
  return r = r === "left" ? "right" : r === "right" ? "left" : r === "top" ? "bottom" : "top", r;
}
function WY(r, e, t) {
  if (!$(t) || t === "inside")
    return "";
  var a = r.get("backgroundColor"), n = r.get("borderWidth");
  e = pi(e);
  var i = HY(t), o = Math.max(Math.round(n) * 1.5, 6), s = "", l = hm + ":", u;
  vt(["left", "right"], i) > -1 ? (s += "top:50%", l += "translateY(-50%) rotate(" + (u = i === "left" ? -225 : -45) + "deg)") : (s += "left:50%", l += "translateX(-50%) rotate(" + (u = i === "top" ? 225 : 45) + "deg)");
  var f = u * Math.PI / 180, h = o + n, c = h * Math.abs(Math.cos(f)) + h * Math.abs(Math.sin(f)), v = Math.round(((c - Math.SQRT2 * n) / 2 + Math.SQRT2 * n - (c - h) / 2) * 100) / 100;
  s += ";" + i + ":-" + v + "px";
  var d = e + " solid " + n + "px;", p = ["position:absolute;width:" + o + "px;height:" + o + "px;z-index:-1;", s + ";" + l + ";", "border-bottom:" + d, "border-right:" + d, "background-color:" + a + ";"];
  return '<div style="' + p.join("") + '"></div>';
}
function $Y(r, e) {
  var t = "cubic-bezier(0.23,1,0.32,1)", a = " " + r / 2 + "s " + t, n = "opacity" + a + ",visibility" + a;
  return e || (a = " " + r + "s " + t, n += bt.transformSupported ? "," + hm + a : ",left" + a + ",top" + a), GY + ":" + n;
}
function Tw(r, e, t) {
  var a = r.toFixed(0) + "px", n = e.toFixed(0) + "px";
  if (!bt.transformSupported)
    return t ? "top:" + n + ";left:" + a + ";" : [["top", n], ["left", a]];
  var i = bt.transform3dSupported, o = "translate" + (i ? "3d" : "") + "(" + a + "," + n + (i ? ",0" : "") + ")";
  return t ? "top:0;left:0;" + hm + ":" + o + ";" : [["top", 0], ["left", 0], [uL, o]];
}
function UY(r) {
  var e = [], t = r.get("fontSize"), a = r.getTextColor();
  a && e.push("color:" + a), e.push("font:" + r.getFont()), t && e.push("line-height:" + Math.round(t * 3 / 2) + "px");
  var n = r.get("textShadowColor"), i = r.get("textShadowBlur") || 0, o = r.get("textShadowOffsetX") || 0, s = r.get("textShadowOffsetY") || 0;
  return n && i && e.push("text-shadow:" + o + "px " + s + "px " + i + "px " + n), M(["decoration", "align"], function(l) {
    var u = r.get(l);
    u && e.push("text-" + l + ":" + u);
  }), e.join(";");
}
function YY(r, e, t) {
  var a = [], n = r.get("transitionDuration"), i = r.get("backgroundColor"), o = r.get("shadowBlur"), s = r.get("shadowColor"), l = r.get("shadowOffsetX"), u = r.get("shadowOffsetY"), f = r.getModel("textStyle"), h = yC(r, "html"), c = l + "px " + u + "px " + o + "px " + s;
  return a.push("box-shadow:" + c), e && n && a.push($Y(n, t)), i && a.push("background-color:" + i), M(["width", "color", "radius"], function(v) {
    var d = "border-" + v, p = kD(d), g = r.get(p);
    g != null && a.push(d + ":" + g + (v === "color" ? "" : "px"));
  }), a.push(UY(f)), h != null && a.push("padding:" + Eo(h).join("px ") + "px"), a.join(";") + ";";
}
function Dw(r, e, t, a, n) {
  var i = e && e.painter;
  if (t) {
    var o = i && i.getViewportRoot();
    o && _2(r, o, document.body, a, n);
  } else {
    r[0] = a, r[1] = n;
    var s = i && i.getViewportRootOffset();
    s && (r[0] += s.offsetLeft, r[1] += s.offsetTop);
  }
  r[2] = r[0] / e.getWidth(), r[3] = r[1] / e.getHeight();
}
var ZY = (
  /** @class */
  function() {
    function r(e, t, a) {
      if (this._show = !1, this._styleCoord = [0, 0, 0, 0], this._enterable = !0, this._alwaysShowContent = !1, this._firstShow = !0, this._longHide = !0, bt.wxa)
        return null;
      var n = document.createElement("div");
      n.domBelongToZr = !0, this.el = n;
      var i = this._zr = t.getZr(), o = this._appendToBody = a && a.appendToBody;
      Dw(this._styleCoord, i, o, t.getWidth() / 2, t.getHeight() / 2), o ? document.body.appendChild(n) : e.appendChild(n), this._container = e;
      var s = this;
      n.onmouseenter = function() {
        s._enterable && (clearTimeout(s._hideTimeout), s._show = !0), s._inContent = !0;
      }, n.onmousemove = function(l) {
        if (l = l || window.event, !s._enterable) {
          var u = i.handler, f = i.painter.getViewportRoot();
          Qe(f, l, !0), u.dispatch("mousemove", l);
        }
      }, n.onmouseleave = function() {
        s._inContent = !1, s._enterable && s._show && s.hideLater(s._hideDelay);
      };
    }
    return r.prototype.update = function(e) {
      var t = this._container, a = zY(t, "position"), n = t.style;
      n.position !== "absolute" && a !== "absolute" && (n.position = "relative");
      var i = e.get("alwaysShowContent");
      i && this._moveIfResized(), this._alwaysShowContent = i, this.el.className = e.get("className") || "";
    }, r.prototype.show = function(e, t) {
      clearTimeout(this._hideTimeout), clearTimeout(this._longHideTimeout);
      var a = this.el, n = a.style, i = this._styleCoord;
      a.innerHTML ? n.cssText = FY + YY(e, !this._firstShow, this._longHide) + Tw(i[0], i[1], !0) + ("border-color:" + pi(t) + ";") + (e.get("extraCssText") || "") + (";pointer-events:" + (this._enterable ? "auto" : "none")) : n.display = "none", this._show = !0, this._firstShow = !1, this._longHide = !1;
    }, r.prototype.setContent = function(e, t, a, n, i) {
      var o = this.el;
      if (e == null) {
        o.innerHTML = "";
        return;
      }
      var s = "";
      if ($(i) && a.get("trigger") === "item" && !sL(a) && (s = WY(a, n, i)), $(e))
        o.innerHTML = e + s;
      else if (e) {
        o.innerHTML = "", z(e) || (e = [e]);
        for (var l = 0; l < e.length; l++)
          fo(e[l]) && e[l].parentNode !== o && o.appendChild(e[l]);
        if (s && o.childNodes.length) {
          var u = document.createElement("div");
          u.innerHTML = s, o.appendChild(u);
        }
      }
    }, r.prototype.setEnterable = function(e) {
      this._enterable = e;
    }, r.prototype.getSize = function() {
      var e = this.el;
      return [e.offsetWidth, e.offsetHeight];
    }, r.prototype.moveTo = function(e, t) {
      var a = this._styleCoord;
      if (Dw(a, this._zr, this._appendToBody, e, t), a[0] != null && a[1] != null) {
        var n = this.el.style, i = Tw(a[0], a[1]);
        M(i, function(o) {
          n[o[0]] = o[1];
        });
      }
    }, r.prototype._moveIfResized = function() {
      var e = this._styleCoord[2], t = this._styleCoord[3];
      this.moveTo(e * this._zr.getWidth(), t * this._zr.getHeight());
    }, r.prototype.hide = function() {
      var e = this, t = this.el.style;
      t.visibility = "hidden", t.opacity = "0", bt.transform3dSupported && (t.willChange = ""), this._show = !1, this._longHideTimeout = setTimeout(function() {
        return e._longHide = !0;
      }, 500);
    }, r.prototype.hideLater = function(e) {
      this._show && !(this._inContent && this._enterable) && !this._alwaysShowContent && (e ? (this._hideDelay = e, this._show = !1, this._hideTimeout = setTimeout(Y(this.hide, this), e)) : this.hide());
    }, r.prototype.isShow = function() {
      return this._show;
    }, r.prototype.dispose = function() {
      this.el.parentNode.removeChild(this.el);
    }, r;
  }()
);
const XY = ZY;
var qY = (
  /** @class */
  function() {
    function r(e) {
      this._show = !1, this._styleCoord = [0, 0, 0, 0], this._alwaysShowContent = !1, this._enterable = !0, this._zr = e.getZr(), Aw(this._styleCoord, this._zr, e.getWidth() / 2, e.getHeight() / 2);
    }
    return r.prototype.update = function(e) {
      var t = e.get("alwaysShowContent");
      t && this._moveIfResized(), this._alwaysShowContent = t;
    }, r.prototype.show = function() {
      this._hideTimeout && clearTimeout(this._hideTimeout), this.el.show(), this._show = !0;
    }, r.prototype.setContent = function(e, t, a, n, i) {
      var o = this;
      j(e) && It({}.NODE_ENV !== "production" ? "Passing DOM nodes as content is not supported in richText tooltip!" : ""), this.el && this._zr.remove(this.el);
      var s = a.getModel("textStyle");
      this.el = new Ct({
        style: {
          rich: t.richTextStyles,
          text: e,
          lineHeight: 22,
          borderWidth: 1,
          borderColor: n,
          textShadowColor: s.get("textShadowColor"),
          fill: a.get(["textStyle", "color"]),
          padding: yC(a, "richText"),
          verticalAlign: "top",
          align: "left"
        },
        z: a.get("z")
      }), M(["backgroundColor", "borderRadius", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY"], function(u) {
        o.el.style[u] = a.get(u);
      }), M(["textShadowBlur", "textShadowOffsetX", "textShadowOffsetY"], function(u) {
        o.el.style[u] = s.get(u) || 0;
      }), this._zr.add(this.el);
      var l = this;
      this.el.on("mouseover", function() {
        l._enterable && (clearTimeout(l._hideTimeout), l._show = !0), l._inContent = !0;
      }), this.el.on("mouseout", function() {
        l._enterable && l._show && l.hideLater(l._hideDelay), l._inContent = !1;
      });
    }, r.prototype.setEnterable = function(e) {
      this._enterable = e;
    }, r.prototype.getSize = function() {
      var e = this.el, t = this.el.getBoundingRect(), a = Cw(e.style);
      return [t.width + a.left + a.right, t.height + a.top + a.bottom];
    }, r.prototype.moveTo = function(e, t) {
      var a = this.el;
      if (a) {
        var n = this._styleCoord;
        Aw(n, this._zr, e, t), e = n[0], t = n[1];
        var i = a.style, o = ka(i.borderWidth || 0), s = Cw(i);
        a.x = e + o + s.left, a.y = t + o + s.top, a.markRedraw();
      }
    }, r.prototype._moveIfResized = function() {
      var e = this._styleCoord[2], t = this._styleCoord[3];
      this.moveTo(e * this._zr.getWidth(), t * this._zr.getHeight());
    }, r.prototype.hide = function() {
      this.el && this.el.hide(), this._show = !1;
    }, r.prototype.hideLater = function(e) {
      this._show && !(this._inContent && this._enterable) && !this._alwaysShowContent && (e ? (this._hideDelay = e, this._show = !1, this._hideTimeout = setTimeout(Y(this.hide, this), e)) : this.hide());
    }, r.prototype.isShow = function() {
      return this._show;
    }, r.prototype.dispose = function() {
      this._zr.remove(this.el);
    }, r;
  }()
);
function ka(r) {
  return Math.max(0, r);
}
function Cw(r) {
  var e = ka(r.shadowBlur || 0), t = ka(r.shadowOffsetX || 0), a = ka(r.shadowOffsetY || 0);
  return {
    left: ka(e - t),
    right: ka(e + t),
    top: ka(e - a),
    bottom: ka(e + a)
  };
}
function Aw(r, e, t, a) {
  r[0] = t, r[1] = a, r[2] = r[0] / e.getWidth(), r[3] = r[1] / e.getHeight();
}
const KY = qY;
var jY = new Tt({
  shape: {
    x: -1,
    y: -1,
    width: 2,
    height: 2
  }
}), JY = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.init = function(t, a) {
      if (!(bt.node || !a.getDom())) {
        var n = t.getComponent("tooltip"), i = this._renderMode = aP(n.get("renderMode"));
        this._tooltipContent = i === "richText" ? new KY(a) : new XY(a.getDom(), a, {
          appendToBody: n.get("appendToBody", !0)
        });
      }
    }, e.prototype.render = function(t, a, n) {
      if (!(bt.node || !n.getDom())) {
        this.group.removeAll(), this._tooltipModel = t, this._ecModel = a, this._api = n;
        var i = this._tooltipContent;
        i.update(t), i.setEnterable(t.get("enterable")), this._initGlobalListener(), this._keepShow(), this._renderMode !== "richText" && t.get("transitionDuration") ? Vo(this, "_updatePosition", 50, "fixRate") : tl(this, "_updatePosition");
      }
    }, e.prototype._initGlobalListener = function() {
      var t = this._tooltipModel, a = t.get("triggerOn");
      ZI("itemTooltip", this._api, Y(function(n, i, o) {
        a !== "none" && (a.indexOf(n) >= 0 ? this._tryShow(i, o) : n === "leave" && this._hide(o));
      }, this));
    }, e.prototype._keepShow = function() {
      var t = this._tooltipModel, a = this._ecModel, n = this._api, i = t.get("triggerOn");
      if (this._lastX != null && this._lastY != null && i !== "none" && i !== "click") {
        var o = this;
        clearTimeout(this._refreshUpdateTimeout), this._refreshUpdateTimeout = setTimeout(function() {
          !n.isDisposed() && o.manuallyShowTip(t, a, n, {
            x: o._lastX,
            y: o._lastY,
            dataByCoordSys: o._lastDataByCoordSys
          });
        });
      }
    }, e.prototype.manuallyShowTip = function(t, a, n, i) {
      if (!(i.from === this.uid || bt.node || !n.getDom())) {
        var o = Mw(i, n);
        this._ticket = "";
        var s = i.dataByCoordSys, l = r7(i, a, n);
        if (l) {
          var u = l.el.getBoundingRect().clone();
          u.applyTransform(l.el.transform), this._tryShow({
            offsetX: u.x + u.width / 2,
            offsetY: u.y + u.height / 2,
            target: l.el,
            position: i.position,
            // When manully trigger, the mouse is not on the el, so we'd better to
            // position tooltip on the bottom of the el and display arrow is possible.
            positionDefault: "bottom"
          }, o);
        } else if (i.tooltip && i.x != null && i.y != null) {
          var f = jY;
          f.x = i.x, f.y = i.y, f.update(), it(f).tooltipConfig = {
            name: null,
            option: i.tooltip
          }, this._tryShow({
            offsetX: i.x,
            offsetY: i.y,
            target: f
          }, o);
        } else if (s)
          this._tryShow({
            offsetX: i.x,
            offsetY: i.y,
            position: i.position,
            dataByCoordSys: s,
            tooltipOption: i.tooltipOption
          }, o);
        else if (i.seriesIndex != null) {
          if (this._manuallyAxisShowTip(t, a, n, i))
            return;
          var h = XI(i, a), c = h.point[0], v = h.point[1];
          c != null && v != null && this._tryShow({
            offsetX: c,
            offsetY: v,
            target: h.el,
            position: i.position,
            // When manully trigger, the mouse is not on the el, so we'd better to
            // position tooltip on the bottom of the el and display arrow is possible.
            positionDefault: "bottom"
          }, o);
        } else
          i.x != null && i.y != null && (n.dispatchAction({
            type: "updateAxisPointer",
            x: i.x,
            y: i.y
          }), this._tryShow({
            offsetX: i.x,
            offsetY: i.y,
            position: i.position,
            target: n.getZr().findHover(i.x, i.y).target
          }, o));
      }
    }, e.prototype.manuallyHideTip = function(t, a, n, i) {
      var o = this._tooltipContent;
      this._tooltipModel && o.hideLater(this._tooltipModel.get("hideDelay")), this._lastX = this._lastY = this._lastDataByCoordSys = null, i.from !== this.uid && this._hide(Mw(i, n));
    }, e.prototype._manuallyAxisShowTip = function(t, a, n, i) {
      var o = i.seriesIndex, s = i.dataIndex, l = a.getComponent("axisPointer").coordSysAxesInfo;
      if (!(o == null || s == null || l == null)) {
        var u = a.getSeriesByIndex(o);
        if (u) {
          var f = u.getData(), h = fs([f.getItemModel(s), u, (u.coordinateSystem || {}).model], this._tooltipModel);
          if (h.get("trigger") === "axis")
            return n.dispatchAction({
              type: "updateAxisPointer",
              seriesIndex: o,
              dataIndex: s,
              position: i.position
            }), !0;
        }
      }
    }, e.prototype._tryShow = function(t, a) {
      var n = t.target, i = this._tooltipModel;
      if (i) {
        this._lastX = t.offsetX, this._lastY = t.offsetY;
        var o = t.dataByCoordSys;
        if (o && o.length)
          this._showAxisTooltip(o, t);
        else if (n) {
          this._lastDataByCoordSys = null;
          var s, l;
          Kn(n, function(u) {
            if (it(u).dataIndex != null)
              return s = u, !0;
            if (it(u).tooltipConfig != null)
              return l = u, !0;
          }, !0), s ? this._showSeriesItemTooltip(t, s, a) : l ? this._showComponentItemTooltip(t, l, a) : this._hide(a);
        } else
          this._lastDataByCoordSys = null, this._hide(a);
      }
    }, e.prototype._showOrMove = function(t, a) {
      var n = t.get("showDelay");
      a = Y(a, this), clearTimeout(this._showTimout), n > 0 ? this._showTimout = setTimeout(a, n) : a();
    }, e.prototype._showAxisTooltip = function(t, a) {
      var n = this._ecModel, i = this._tooltipModel, o = [a.offsetX, a.offsetY], s = fs([a.tooltipOption], i), l = this._renderMode, u = [], f = se("section", {
        blocks: [],
        noHeader: !0
      }), h = [], c = new Yc();
      M(t, function(m) {
        M(m.dataByAxis, function(_) {
          var S = n.getComponent(_.axisDim + "Axis", _.axisIndex), w = _.value;
          if (!(!S || w == null)) {
            var x = $I(w, S.axis, n, _.seriesDataIndices, _.valueLabelOpt), b = se("section", {
              header: x,
              noHeader: !Sr(x),
              sortBlocks: !0,
              blocks: []
            });
            f.blocks.push(b), M(_.seriesDataIndices, function(T) {
              var C = n.getSeriesByIndex(T.seriesIndex), D = T.dataIndexInside, A = C.getDataParams(D);
              if (!(A.dataIndex < 0)) {
                A.axisDim = _.axisDim, A.axisIndex = _.axisIndex, A.axisType = _.axisType, A.axisId = _.axisId, A.axisValue = vy(S.axis, {
                  value: w
                }), A.axisValueLabel = x, A.marker = c.makeTooltipMarker("item", pi(A.color), l);
                var I = u_(C.formatTooltip(D, !0, null)), L = I.frag;
                if (L) {
                  var E = fs([C], i).get("valueFormatter");
                  b.blocks.push(E ? V({
                    valueFormatter: E
                  }, L) : L);
                }
                I.text && h.push(I.text), u.push(A);
              }
            });
          }
        });
      }), f.blocks.reverse(), h.reverse();
      var v = a.position, d = s.get("order"), p = p_(f, c, l, d, n.get("useUTC"), s.get("textStyle"));
      p && h.unshift(p);
      var g = l === "richText" ? "\n\n" : "<br/>", y = h.join(g);
      this._showOrMove(s, function() {
        this._updateContentNotChangedOnAxis(t, u) ? this._updatePosition(s, v, o[0], o[1], this._tooltipContent, u) : this._showTooltipContent(s, y, u, Math.random() + "", o[0], o[1], v, null, c);
      });
    }, e.prototype._showSeriesItemTooltip = function(t, a, n) {
      var i = this._ecModel, o = it(a), s = o.seriesIndex, l = i.getSeriesByIndex(s), u = o.dataModel || l, f = o.dataIndex, h = o.dataType, c = u.getData(h), v = this._renderMode, d = t.positionDefault, p = fs([c.getItemModel(f), u, l && (l.coordinateSystem || {}).model], this._tooltipModel, d ? {
        position: d
      } : null), g = p.get("trigger");
      if (!(g != null && g !== "item")) {
        var y = u.getDataParams(f, h), m = new Yc();
        y.marker = m.makeTooltipMarker("item", pi(y.color), v);
        var _ = u_(u.formatTooltip(f, !1, h)), S = p.get("order"), w = p.get("valueFormatter"), x = _.frag, b = x ? p_(w ? V({
          valueFormatter: w
        }, x) : x, m, v, S, i.get("useUTC"), p.get("textStyle")) : _.text, T = "item_" + u.name + "_" + f;
        this._showOrMove(p, function() {
          this._showTooltipContent(p, b, y, T, t.offsetX, t.offsetY, t.position, t.target, m);
        }), n({
          type: "showTip",
          dataIndexInside: f,
          dataIndex: c.getRawIndex(f),
          seriesIndex: s,
          from: this.uid
        });
      }
    }, e.prototype._showComponentItemTooltip = function(t, a, n) {
      var i = it(a), o = i.tooltipConfig, s = o.option || {};
      if ($(s)) {
        var l = s;
        s = {
          content: l,
          // Fixed formatter
          formatter: l
        };
      }
      var u = [s], f = this._ecModel.getComponent(i.componentMainType, i.componentIndex);
      f && u.push(f), u.push({
        formatter: s.content
      });
      var h = t.positionDefault, c = fs(u, this._tooltipModel, h ? {
        position: h
      } : null), v = c.get("content"), d = Math.random() + "", p = new Yc();
      this._showOrMove(c, function() {
        var g = at(c.get("formatterParams") || {});
        this._showTooltipContent(c, v, g, d, t.offsetX, t.offsetY, t.position, a, p);
      }), n({
        type: "showTip",
        from: this.uid
      });
    }, e.prototype._showTooltipContent = function(t, a, n, i, o, s, l, u, f) {
      if (this._ticket = "", !(!t.get("showContent") || !t.get("show"))) {
        var h = this._tooltipContent;
        h.setEnterable(t.get("enterable"));
        var c = t.get("formatter");
        l = l || t.get("position");
        var v = a, d = this._getNearestPoint([o, s], n, t.get("trigger"), t.get("borderColor")), p = d.color;
        if (c)
          if ($(c)) {
            var g = t.ecModel.get("useUTC"), y = z(n) ? n[0] : n, m = y && y.axisType && y.axisType.indexOf("time") >= 0;
            v = c, m && (v = Dh(y.axisValue, v, g)), v = VD(v, n, !0);
          } else if (K(c)) {
            var _ = Y(function(S, w) {
              S === this._ticket && (h.setContent(w, f, t, p, l), this._updatePosition(t, l, o, s, h, n, u));
            }, this);
            this._ticket = i, v = c(n, i, _);
          } else
            v = c;
        h.setContent(v, f, t, p, l), h.show(t, p), this._updatePosition(t, l, o, s, h, n, u);
      }
    }, e.prototype._getNearestPoint = function(t, a, n, i) {
      if (n === "axis" || z(a))
        return {
          color: i || (this._renderMode === "html" ? "#fff" : "none")
        };
      if (!z(a))
        return {
          color: i || a.color || a.borderColor
        };
    }, e.prototype._updatePosition = function(t, a, n, i, o, s, l) {
      var u = this._api.getWidth(), f = this._api.getHeight();
      a = a || t.get("position");
      var h = o.getSize(), c = t.get("align"), v = t.get("verticalAlign"), d = l && l.getBoundingRect().clone();
      if (l && d.applyTransform(l.transform), K(a) && (a = a([n, i], s, o.el, d, {
        viewSize: [u, f],
        contentSize: h.slice()
      })), z(a))
        n = H(a[0], u), i = H(a[1], f);
      else if (j(a)) {
        var p = a;
        p.width = h[0], p.height = h[1];
        var g = ae(p, {
          width: u,
          height: f
        });
        n = g.x, i = g.y, c = null, v = null;
      } else if ($(a) && l) {
        var y = e7(a, d, h, t.get("borderWidth"));
        n = y[0], i = y[1];
      } else {
        var y = QY(n, i, o, u, f, c ? null : 20, v ? null : 20);
        n = y[0], i = y[1];
      }
      if (c && (n -= Iw(c) ? h[0] / 2 : c === "right" ? h[0] : 0), v && (i -= Iw(v) ? h[1] / 2 : v === "bottom" ? h[1] : 0), sL(t)) {
        var y = t7(n, i, o, u, f);
        n = y[0], i = y[1];
      }
      o.moveTo(n, i);
    }, e.prototype._updateContentNotChangedOnAxis = function(t, a) {
      var n = this._lastDataByCoordSys, i = this._cbParamsList, o = !!n && n.length === t.length;
      return o && M(n, function(s, l) {
        var u = s.dataByAxis || [], f = t[l] || {}, h = f.dataByAxis || [];
        o = o && u.length === h.length, o && M(u, function(c, v) {
          var d = h[v] || {}, p = c.seriesDataIndices || [], g = d.seriesDataIndices || [];
          o = o && c.value === d.value && c.axisType === d.axisType && c.axisId === d.axisId && p.length === g.length, o && M(p, function(y, m) {
            var _ = g[m];
            o = o && y.seriesIndex === _.seriesIndex && y.dataIndex === _.dataIndex;
          }), i && M(c.seriesDataIndices, function(y) {
            var m = y.seriesIndex, _ = a[m], S = i[m];
            _ && S && S.data !== _.data && (o = !1);
          });
        });
      }), this._lastDataByCoordSys = t, this._cbParamsList = a, !!o;
    }, e.prototype._hide = function(t) {
      this._lastDataByCoordSys = null, t({
        type: "hideTip",
        from: this.uid
      });
    }, e.prototype.dispose = function(t, a) {
      bt.node || !a.getDom() || (tl(this, "_updatePosition"), this._tooltipContent.dispose(), Zp("itemTooltip", a));
    }, e.type = "tooltip", e;
  }($t)
);
function fs(r, e, t) {
  var a = e.ecModel, n;
  t ? (n = new kt(t, a, a), n = new kt(e.option, n, a)) : n = e;
  for (var i = r.length - 1; i >= 0; i--) {
    var o = r[i];
    o && (o instanceof kt && (o = o.get("tooltip", !0)), $(o) && (o = {
      formatter: o
    }), o && (n = new kt(o, n, a)));
  }
  return n;
}
function Mw(r, e) {
  return r.dispatchAction || Y(e.dispatchAction, e);
}
function QY(r, e, t, a, n, i, o) {
  var s = t.getSize(), l = s[0], u = s[1];
  return i != null && (r + l + i + 2 > a ? r -= l + i : r += i), o != null && (e + u + o > n ? e -= u + o : e += o), [r, e];
}
function t7(r, e, t, a, n) {
  var i = t.getSize(), o = i[0], s = i[1];
  return r = Math.min(r + o, a) - o, e = Math.min(e + s, n) - s, r = Math.max(r, 0), e = Math.max(e, 0), [r, e];
}
function e7(r, e, t, a) {
  var n = t[0], i = t[1], o = Math.ceil(Math.SQRT2 * a) + 8, s = 0, l = 0, u = e.width, f = e.height;
  switch (r) {
    case "inside":
      s = e.x + u / 2 - n / 2, l = e.y + f / 2 - i / 2;
      break;
    case "top":
      s = e.x + u / 2 - n / 2, l = e.y - i - o;
      break;
    case "bottom":
      s = e.x + u / 2 - n / 2, l = e.y + f + o;
      break;
    case "left":
      s = e.x - n - o, l = e.y + f / 2 - i / 2;
      break;
    case "right":
      s = e.x + u + o, l = e.y + f / 2 - i / 2;
  }
  return [s, l];
}
function Iw(r) {
  return r === "center" || r === "middle";
}
function r7(r, e, t) {
  var a = Dg(r).queryOptionMap, n = a.keys()[0];
  if (!(!n || n === "series")) {
    var i = yl(e, n, a.get(n), {
      useDefault: !1,
      enableAll: !1,
      enableNone: !1
    }), o = i.models[0];
    if (o) {
      var s = t.getViewOfComponentModel(o), l;
      if (s.group.traverse(function(u) {
        var f = it(u).tooltipConfig;
        if (f && f.name === r.name)
          return l = u, !0;
      }), l)
        return {
          componentMainType: n,
          componentIndex: o.componentIndex,
          el: l
        };
    }
  }
}
const a7 = JY;
function n7(r) {
  yt(Nl), r.registerComponentModel(VY), r.registerComponentView(a7), r.registerAction({
    type: "showTip",
    event: "showTip",
    update: "tooltip:manuallyShowTip"
  }, Xt), r.registerAction({
    type: "hideTip",
    event: "hideTip",
    update: "tooltip:manuallyHideTip"
  }, Xt);
}
var i7 = ["rect", "polygon", "keep", "clear"];
function o7(r, e) {
  var t = Pt(r ? r.brush : []);
  if (t.length) {
    var a = [];
    M(t, function(l) {
      var u = l.hasOwnProperty("toolbox") ? l.toolbox : [];
      u instanceof Array && (a = a.concat(u));
    });
    var n = r && r.toolbox;
    z(n) && (n = n[0]), n || (n = {
      feature: {}
    }, r.toolbox = [n]);
    var i = n.feature || (n.feature = {}), o = i.brush || (i.brush = {}), s = o.type || (o.type = []);
    s.push.apply(s, a), s7(s), e && !s.length && s.push.apply(s, i7);
  }
}
function s7(r) {
  var e = {};
  M(r, function(t) {
    e[t] = 1;
  }), r.length = 0, M(e, function(t, a) {
    r.push(a);
  });
}
var Lw = M;
function Ew(r) {
  if (r) {
    for (var e in r)
      if (r.hasOwnProperty(e))
        return !0;
  }
}
function Qp(r, e, t) {
  var a = {};
  return Lw(e, function(i) {
    var o = a[i] = n();
    Lw(r[i], function(s, l) {
      if (ce.isValidType(l)) {
        var u = {
          type: l,
          visual: s
        };
        t && t(u, i), o[l] = new ce(u), l === "opacity" && (u = at(u), u.type = "colorAlpha", o.__hidden.__alphaForOpacity = new ce(u));
      }
    });
  }), a;
  function n() {
    var i = function() {
    };
    i.prototype.__hidden = i.prototype;
    var o = new i();
    return o;
  }
}
function hL(r, e, t) {
  var a;
  M(t, function(n) {
    e.hasOwnProperty(n) && Ew(e[n]) && (a = !0);
  }), a && M(t, function(n) {
    e.hasOwnProperty(n) && Ew(e[n]) ? r[n] = at(e[n]) : delete r[n];
  });
}
function l7(r, e, t, a, n, i) {
  var o = {};
  M(r, function(h) {
    var c = ce.prepareVisualTypes(e[h]);
    o[h] = c;
  });
  var s;
  function l(h) {
    return ry(t, s, h);
  }
  function u(h, c) {
    AC(t, s, h, c);
  }
  i == null ? t.each(f) : t.each([i], f);
  function f(h, c) {
    s = i == null ? h : c;
    var v = t.getRawDataItem(s);
    if (!(v && v.visualMap === !1))
      for (var d = a.call(n, h), p = e[d], g = o[d], y = 0, m = g.length; y < m; y++) {
        var _ = g[y];
        p[_] && p[_].applyVisual(h, l, u);
      }
  }
}
function u7(r, e, t, a) {
  var n = {};
  return M(r, function(i) {
    var o = ce.prepareVisualTypes(e[i]);
    n[i] = o;
  }), {
    progress: function(o, s) {
      var l;
      a != null && (l = s.getDimensionIndex(a));
      function u(w) {
        return ry(s, h, w);
      }
      function f(w, x) {
        AC(s, h, w, x);
      }
      for (var h, c = s.getStore(); (h = o.next()) != null; ) {
        var v = s.getRawDataItem(h);
        if (!(v && v.visualMap === !1))
          for (var d = a != null ? c.get(l, h) : h, p = t(d), g = e[p], y = n[p], m = 0, _ = y.length; m < _; m++) {
            var S = y[m];
            g[S] && g[S].applyVisual(d, u, f);
          }
      }
    }
  };
}
function f7(r) {
  var e = r.brushType, t = {
    point: function(a) {
      return Pw[e].point(a, t, r);
    },
    rect: function(a) {
      return Pw[e].rect(a, t, r);
    }
  };
  return t;
}
var Pw = {
  lineX: Rw(0),
  lineY: Rw(1),
  rect: {
    point: function(r, e, t) {
      return r && t.boundingRect.contain(r[0], r[1]);
    },
    rect: function(r, e, t) {
      return r && t.boundingRect.intersect(r);
    }
  },
  polygon: {
    point: function(r, e, t) {
      return r && t.boundingRect.contain(r[0], r[1]) && Hn(t.range, r[0], r[1]);
    },
    rect: function(r, e, t) {
      var a = t.range;
      if (!r || a.length <= 1)
        return !1;
      var n = r.x, i = r.y, o = r.width, s = r.height, l = a[0];
      if (Hn(a, n, i) || Hn(a, n + o, i) || Hn(a, n, i + s) || Hn(a, n + o, i + s) || ct.create(r).contain(l[0], l[1]) || Ss(n, i, n + o, i, a) || Ss(n, i, n, i + s, a) || Ss(n + o, i, n + o, i + s, a) || Ss(n, i + s, n + o, i + s, a))
        return !0;
    }
  }
};
function Rw(r) {
  var e = ["x", "y"], t = ["width", "height"];
  return {
    point: function(a, n, i) {
      if (a) {
        var o = i.range, s = a[r];
        return hs(s, o);
      }
    },
    rect: function(a, n, i) {
      if (a) {
        var o = i.range, s = [a[e[r]], a[e[r]] + a[t[r]]];
        return s[1] < s[0] && s.reverse(), hs(s[0], o) || hs(s[1], o) || hs(o[0], s) || hs(o[1], s);
      }
    }
  };
}
function hs(r, e) {
  return e[0] <= r && r <= e[1];
}
var Nw = ["inBrush", "outOfBrush"], ud = "__ecBrushSelect", tg = "__ecInBrushSelectEvent";
function cL(r) {
  r.eachComponent({
    mainType: "brush"
  }, function(e) {
    var t = e.brushTargetManager = new um(e.option, r);
    t.setInputRanges(e.areas, r);
  });
}
function h7(r, e, t) {
  var a = [], n, i;
  r.eachComponent({
    mainType: "brush"
  }, function(o) {
    t && t.type === "takeGlobalCursor" && o.setBrushOption(t.key === "brush" ? t.brushOption : {
      brushType: !1
    });
  }), cL(r), r.eachComponent({
    mainType: "brush"
  }, function(o, s) {
    var l = {
      brushId: o.id,
      brushIndex: s,
      brushName: o.name,
      areas: at(o.areas),
      selected: []
    };
    a.push(l);
    var u = o.option, f = u.brushLink, h = [], c = [], v = [], d = !1;
    s || (n = u.throttleType, i = u.throttleDelay);
    var p = G(o.areas, function(w) {
      var x = p7[w.brushType], b = et({
        boundingRect: x ? x(w) : void 0
      }, w);
      return b.selectors = f7(b), b;
    }), g = Qp(o.option, Nw, function(w) {
      w.mappingMethod = "fixed";
    });
    z(f) && M(f, function(w) {
      h[w] = 1;
    });
    function y(w) {
      return f === "all" || !!h[w];
    }
    function m(w) {
      return !!w.length;
    }
    r.eachSeries(function(w, x) {
      var b = v[x] = [];
      w.subType === "parallel" ? _(w, x) : S(w, x, b);
    });
    function _(w, x) {
      var b = w.coordinateSystem;
      d = d || b.hasAxisBrushed(), y(x) && b.eachActiveState(w.getData(), function(T, C) {
        T === "active" && (c[C] = 1);
      });
    }
    function S(w, x, b) {
      if (!(!w.brushSelector || d7(o, x)) && (M(p, function(C) {
        o.brushTargetManager.controlSeries(C, w, r) && b.push(C), d = d || m(b);
      }), y(x) && m(b))) {
        var T = w.getData();
        T.each(function(C) {
          Ow(w, b, T, C) && (c[C] = 1);
        });
      }
    }
    r.eachSeries(function(w, x) {
      var b = {
        seriesId: w.id,
        seriesIndex: x,
        seriesName: w.name,
        dataIndex: []
      };
      l.selected.push(b);
      var T = v[x], C = w.getData(), D = y(x) ? function(A) {
        return c[A] ? (b.dataIndex.push(C.getRawIndex(A)), "inBrush") : "outOfBrush";
      } : function(A) {
        return Ow(w, T, C, A) ? (b.dataIndex.push(C.getRawIndex(A)), "inBrush") : "outOfBrush";
      };
      (y(x) ? d : m(T)) && l7(Nw, g, C, D);
    });
  }), c7(e, n, i, a, t);
}
function c7(r, e, t, a, n) {
  if (n) {
    var i = r.getZr();
    if (!i[tg]) {
      i[ud] || (i[ud] = v7);
      var o = Vo(i, ud, t, e);
      o(r, a);
    }
  }
}
function v7(r, e) {
  if (!r.isDisposed()) {
    var t = r.getZr();
    t[tg] = !0, r.dispatchAction({
      type: "brushSelect",
      batch: e
    }), t[tg] = !1;
  }
}
function Ow(r, e, t, a) {
  for (var n = 0, i = e.length; n < i; n++) {
    var o = e[n];
    if (r.brushSelector(a, t, o.selectors, o))
      return !0;
  }
}
function d7(r, e) {
  var t = r.option.seriesIndex;
  return t != null && t !== "all" && (z(t) ? vt(t, e) < 0 : e !== t);
}
var p7 = {
  rect: function(r) {
    return kw(r.range);
  },
  polygon: function(r) {
    for (var e, t = r.range, a = 0, n = t.length; a < n; a++) {
      e = e || [[1 / 0, -1 / 0], [1 / 0, -1 / 0]];
      var i = t[a];
      i[0] < e[0][0] && (e[0][0] = i[0]), i[0] > e[0][1] && (e[0][1] = i[0]), i[1] < e[1][0] && (e[1][0] = i[1]), i[1] > e[1][1] && (e[1][1] = i[1]);
    }
    return e && kw(e);
  }
};
function kw(r) {
  return new ct(r[0][0], r[1][0], r[0][1] - r[0][0], r[1][1] - r[1][0]);
}
var g7 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.init = function(t, a) {
      this.ecModel = t, this.api = a, this.model, (this._brushController = new Wy(a.getZr())).on("brush", Y(this._onBrush, this)).mount();
    }, e.prototype.render = function(t, a, n, i) {
      this.model = t, this._updateController(t, a, n, i);
    }, e.prototype.updateTransform = function(t, a, n, i) {
      cL(a), this._updateController(t, a, n, i);
    }, e.prototype.updateVisual = function(t, a, n, i) {
      this.updateTransform(t, a, n, i);
    }, e.prototype.updateView = function(t, a, n, i) {
      this._updateController(t, a, n, i);
    }, e.prototype._updateController = function(t, a, n, i) {
      (!i || i.$from !== t.id) && this._brushController.setPanels(t.brushTargetManager.makePanelOpts(n)).enableBrush(t.brushOption).updateCovers(t.areas.slice());
    }, e.prototype.dispose = function() {
      this._brushController.dispose();
    }, e.prototype._onBrush = function(t) {
      var a = this.model.id, n = this.model.brushTargetManager.setOutputRanges(t.areas, this.ecModel);
      (!t.isEnd || t.removeOnClick) && this.api.dispatchAction({
        type: "brush",
        brushId: a,
        areas: at(n),
        $from: a
      }), t.isEnd && this.api.dispatchAction({
        type: "brushEnd",
        brushId: a,
        areas: at(n),
        $from: a
      });
    }, e.type = "brush", e;
  }($t)
);
const y7 = g7;
var m7 = "#ddd", _7 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t.areas = [], t.brushOption = {}, t;
    }
    return e.prototype.optionUpdated = function(t, a) {
      var n = this.option;
      !a && hL(n, t, ["inBrush", "outOfBrush"]);
      var i = n.inBrush = n.inBrush || {};
      n.outOfBrush = n.outOfBrush || {
        color: m7
      }, i.hasOwnProperty("liftZ") || (i.liftZ = 5);
    }, e.prototype.setAreas = function(t) {
      ({}).NODE_ENV !== "production" && (J(z(t)), M(t, function(a) {
        J(a.brushType, "Illegal areas");
      })), t && (this.areas = G(t, function(a) {
        return Vw(this.option, a);
      }, this));
    }, e.prototype.setBrushOption = function(t) {
      this.brushOption = Vw(this.option, t), this.brushType = this.brushOption.brushType;
    }, e.type = "brush", e.dependencies = ["geo", "grid", "xAxis", "yAxis", "parallel", "series"], e.defaultOption = {
      seriesIndex: "all",
      brushType: "rect",
      brushMode: "single",
      transformable: !0,
      brushStyle: {
        borderWidth: 1,
        color: "rgba(210,219,238,0.3)",
        borderColor: "#D2DBEE"
      },
      throttleType: "fixRate",
      throttleDelay: 0,
      removeOnClick: !0,
      z: 1e4
    }, e;
  }(xt)
);
function Vw(r, e) {
  return ht({
    brushType: r.brushType,
    brushMode: r.brushMode,
    transformable: r.transformable,
    brushStyle: new kt(r.brushStyle).getItemStyle(),
    removeOnClick: r.removeOnClick,
    z: r.z
  }, e, !0);
}
const S7 = _7;
var x7 = ["rect", "polygon", "lineX", "lineY", "keep", "clear"], w7 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      return r !== null && r.apply(this, arguments) || this;
    }
    return e.prototype.render = function(t, a, n) {
      var i, o, s;
      a.eachComponent({
        mainType: "brush"
      }, function(l) {
        i = l.brushType, o = l.brushOption.brushMode || "single", s = s || !!l.areas.length;
      }), this._brushType = i, this._brushMode = o, M(t.get("type", !0), function(l) {
        t.setIconStatus(l, (l === "keep" ? o === "multiple" : l === "clear" ? s : l === i) ? "emphasis" : "normal");
      });
    }, e.prototype.updateView = function(t, a, n) {
      this.render(t, a, n);
    }, e.prototype.getIcons = function() {
      var t = this.model, a = t.get("icon", !0), n = {};
      return M(t.get("type", !0), function(i) {
        a[i] && (n[i] = a[i]);
      }), n;
    }, e.prototype.onclick = function(t, a, n) {
      var i = this._brushType, o = this._brushMode;
      n === "clear" ? (a.dispatchAction({
        type: "axisAreaSelect",
        intervals: []
      }), a.dispatchAction({
        type: "brush",
        command: "clear",
        // Clear all areas of all brush components.
        areas: []
      })) : a.dispatchAction({
        type: "takeGlobalCursor",
        key: "brush",
        brushOption: {
          brushType: n === "keep" ? i : i === n ? !1 : n,
          brushMode: n === "keep" ? o === "multiple" ? "single" : "multiple" : o
        }
      });
    }, e.getDefaultOption = function(t) {
      var a = {
        show: !0,
        type: x7.slice(),
        icon: {
          /* eslint-disable */
          rect: "M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13",
          polygon: "M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2",
          lineX: "M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4",
          lineY: "M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4",
          keep: "M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z",
          clear: "M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2"
          // jshint ignore:line
          /* eslint-enable */
        },
        // `rect`, `polygon`, `lineX`, `lineY`, `keep`, `clear`
        title: t.getLocaleModel().get(["toolbox", "brush", "title"])
      };
      return a;
    }, e;
  }(nr)
);
const b7 = w7;
function T7(r) {
  r.registerComponentView(y7), r.registerComponentModel(S7), r.registerPreprocessor(o7), r.registerVisual(r.PRIORITY.VISUAL.BRUSH, h7), r.registerAction({
    type: "brush",
    event: "brush",
    update: "updateVisual"
  }, function(e, t) {
    t.eachComponent({
      mainType: "brush",
      query: e
    }, function(a) {
      a.setAreas(e.areas);
    });
  }), r.registerAction({
    type: "brushSelect",
    event: "brushSelected",
    update: "none"
  }, Xt), r.registerAction({
    type: "brushEnd",
    event: "brushEnd",
    update: "none"
  }, Xt), to("brush", b7);
}
var D7 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t.layoutMode = {
        type: "box",
        ignoreSize: !0
      }, t;
    }
    return e.type = "title", e.defaultOption = {
      // zlevel: 0,
      z: 6,
      show: !0,
      text: "",
      target: "blank",
      subtext: "",
      subtarget: "blank",
      left: 0,
      top: 0,
      backgroundColor: "rgba(0,0,0,0)",
      borderColor: "#ccc",
      borderWidth: 0,
      padding: 5,
      itemGap: 10,
      textStyle: {
        fontSize: 18,
        fontWeight: "bold",
        color: "#464646"
      },
      subtextStyle: {
        fontSize: 12,
        color: "#6E7079"
      }
    }, e;
  }(xt)
), C7 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.render = function(t, a, n) {
      if (this.group.removeAll(), !!t.get("show")) {
        var i = this.group, o = t.getModel("textStyle"), s = t.getModel("subtextStyle"), l = t.get("textAlign"), u = ft(t.get("textBaseline"), t.get("textVerticalAlign")), f = new Ct({
          style: Ot(o, {
            text: t.get("text"),
            fill: o.getTextColor()
          }, {
            disableBox: !0
          }),
          z2: 10
        }), h = f.getBoundingRect(), c = t.get("subtext"), v = new Ct({
          style: Ot(s, {
            text: c,
            fill: s.getTextColor(),
            y: h.height + t.get("itemGap"),
            verticalAlign: "top"
          }, {
            disableBox: !0
          }),
          z2: 10
        }), d = t.get("link"), p = t.get("sublink"), g = t.get("triggerEvent", !0);
        f.silent = !d && !g, v.silent = !p && !g, d && f.on("click", function() {
          bf(d, "_" + t.get("target"));
        }), p && v.on("click", function() {
          bf(p, "_" + t.get("subtarget"));
        }), it(f).eventData = it(v).eventData = g ? {
          componentType: "title",
          componentIndex: t.componentIndex
        } : null, i.add(f), c && i.add(v);
        var y = i.getBoundingRect(), m = t.getBoxLayoutParams();
        m.width = y.width, m.height = y.height;
        var _ = ae(m, {
          width: n.getWidth(),
          height: n.getHeight()
        }, t.get("padding"));
        l || (l = t.get("left") || t.get("right"), l === "middle" && (l = "center"), l === "right" ? _.x += _.width : l === "center" && (_.x += _.width / 2)), u || (u = t.get("top") || t.get("bottom"), u === "center" && (u = "middle"), u === "bottom" ? _.y += _.height : u === "middle" && (_.y += _.height / 2), u = u || "top"), i.x = _.x, i.y = _.y, i.markRedraw();
        var S = {
          align: l,
          verticalAlign: u
        };
        f.setStyle(S), v.setStyle(S), y = i.getBoundingRect();
        var w = _.margin, x = t.getItemStyle(["color", "opacity"]);
        x.fill = t.get("backgroundColor");
        var b = new Tt({
          shape: {
            x: y.x - w[3],
            y: y.y - w[0],
            width: y.width + w[1] + w[3],
            height: y.height + w[0] + w[2],
            r: t.get("borderRadius")
          },
          style: x,
          subPixelOptimize: !0,
          silent: !0
        });
        i.add(b);
      }
    }, e.type = "title", e;
  }($t)
);
function A7(r) {
  r.registerComponentModel(D7), r.registerComponentView(C7);
}
var M7 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t.layoutMode = "box", t;
    }
    return e.prototype.init = function(t, a, n) {
      this.mergeDefaultAndTheme(t, n), this._initData();
    }, e.prototype.mergeOption = function(t) {
      r.prototype.mergeOption.apply(this, arguments), this._initData();
    }, e.prototype.setCurrentIndex = function(t) {
      t == null && (t = this.option.currentIndex);
      var a = this._data.count();
      this.option.loop ? t = (t % a + a) % a : (t >= a && (t = a - 1), t < 0 && (t = 0)), this.option.currentIndex = t;
    }, e.prototype.getCurrentIndex = function() {
      return this.option.currentIndex;
    }, e.prototype.isIndexMax = function() {
      return this.getCurrentIndex() >= this._data.count() - 1;
    }, e.prototype.setPlayState = function(t) {
      this.option.autoPlay = !!t;
    }, e.prototype.getPlayState = function() {
      return !!this.option.autoPlay;
    }, e.prototype._initData = function() {
      var t = this.option, a = t.data || [], n = t.axisType, i = this._names = [], o;
      n === "category" ? (o = [], M(a, function(u, f) {
        var h = re(Do(u), ""), c;
        j(u) ? (c = at(u), c.value = f) : c = f, o.push(c), i.push(h);
      })) : o = a;
      var s = {
        category: "ordinal",
        time: "time",
        value: "number"
      }[n] || "number", l = this._data = new Me([{
        name: "value",
        type: s
      }], this);
      l.initData(o, i);
    }, e.prototype.getData = function() {
      return this._data;
    }, e.prototype.getCategories = function() {
      if (this.get("axisType") === "category")
        return this._names.slice();
    }, e.type = "timeline", e.defaultOption = {
      // zlevel: 0,                  // 一级层叠
      z: 4,
      show: !0,
      axisType: "time",
      realtime: !0,
      left: "20%",
      top: null,
      right: "20%",
      bottom: 0,
      width: null,
      height: 40,
      padding: 5,
      controlPosition: "left",
      autoPlay: !1,
      rewind: !1,
      loop: !0,
      playInterval: 2e3,
      currentIndex: 0,
      itemStyle: {},
      label: {
        color: "#000"
      },
      data: []
    }, e;
  }(xt)
);
const Bw = M7;
var vL = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.type = "timeline.slider", e.defaultOption = fn(Bw.defaultOption, {
      backgroundColor: "rgba(0,0,0,0)",
      borderColor: "#ccc",
      borderWidth: 0,
      orient: "horizontal",
      inverse: !1,
      tooltip: {
        trigger: "item"
        // data item may also have tootip attr.
      },
      symbol: "circle",
      symbolSize: 12,
      lineStyle: {
        show: !0,
        width: 2,
        color: "#DAE1F5"
      },
      label: {
        position: "auto",
        // When using number, label position is not
        // restricted by viewRect.
        // positive: right/bottom, negative: left/top
        show: !0,
        interval: "auto",
        rotate: 0,
        // formatter: null,
        // 其余属性默认使用全局文本样式，详见TEXTSTYLE
        color: "#A4B1D7"
      },
      itemStyle: {
        color: "#A4B1D7",
        borderWidth: 1
      },
      checkpointStyle: {
        symbol: "circle",
        symbolSize: 15,
        color: "#316bf3",
        borderColor: "#fff",
        borderWidth: 2,
        shadowBlur: 2,
        shadowOffsetX: 1,
        shadowOffsetY: 1,
        shadowColor: "rgba(0, 0, 0, 0.3)",
        // borderColor: 'rgba(194,53,49, 0.5)',
        animation: !0,
        animationDuration: 300,
        animationEasing: "quinticInOut"
      },
      controlStyle: {
        show: !0,
        showPlayBtn: !0,
        showPrevBtn: !0,
        showNextBtn: !0,
        itemSize: 24,
        itemGap: 12,
        position: "left",
        playIcon: "path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z",
        stopIcon: "path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z",
        // eslint-disable-next-line max-len
        nextIcon: "M2,18.5A1.52,1.52,0,0,1,.92,18a1.49,1.49,0,0,1,0-2.12L7.81,9.36,1,3.11A1.5,1.5,0,1,1,3,.89l8,7.34a1.48,1.48,0,0,1,.49,1.09,1.51,1.51,0,0,1-.46,1.1L3,18.08A1.5,1.5,0,0,1,2,18.5Z",
        // eslint-disable-next-line max-len
        prevIcon: "M10,.5A1.52,1.52,0,0,1,11.08,1a1.49,1.49,0,0,1,0,2.12L4.19,9.64,11,15.89a1.5,1.5,0,1,1-2,2.22L1,10.77A1.48,1.48,0,0,1,.5,9.68,1.51,1.51,0,0,1,1,8.58L9,.92A1.5,1.5,0,0,1,10,.5Z",
        prevBtnSize: 18,
        nextBtnSize: 18,
        color: "#A4B1D7",
        borderColor: "#A4B1D7",
        borderWidth: 1
      },
      emphasis: {
        label: {
          show: !0,
          // 其余属性默认使用全局文本样式，详见TEXTSTYLE
          color: "#6f778d"
        },
        itemStyle: {
          color: "#316BF3"
        },
        controlStyle: {
          color: "#316BF3",
          borderColor: "#316BF3",
          borderWidth: 2
        }
      },
      progress: {
        lineStyle: {
          color: "#316BF3"
        },
        itemStyle: {
          color: "#316BF3"
        },
        label: {
          color: "#6f778d"
        }
      },
      data: []
    }), e;
  }(Bw)
);
te(vL, jg.prototype);
const I7 = vL;
var L7 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.type = "timeline", e;
  }($t)
);
const E7 = L7;
var P7 = (
  /** @class */
  function(r) {
    N(e, r);
    function e(t, a, n, i) {
      var o = r.call(this, t, a, n) || this;
      return o.type = i || "value", o;
    }
    return e.prototype.getLabelModel = function() {
      return this.model.getModel("label");
    }, e.prototype.isHorizontal = function() {
      return this.model.get("orient") === "horizontal";
    }, e;
  }(Lr)
);
const R7 = P7;
var fd = Math.PI, zw = Dt(), N7 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.init = function(t, a) {
      this.api = a;
    }, e.prototype.render = function(t, a, n) {
      if (this.model = t, this.api = n, this.ecModel = a, this.group.removeAll(), t.get("show", !0)) {
        var i = this._layout(t, n), o = this._createGroup("_mainGroup"), s = this._createGroup("_labelGroup"), l = this._axis = this._createAxis(i, t);
        t.formatTooltip = function(u) {
          var f = l.scale.getLabel({
            value: u
          });
          return se("nameValue", {
            noName: !0,
            value: f
          });
        }, M(["AxisLine", "AxisTick", "Control", "CurrentPointer"], function(u) {
          this["_render" + u](i, o, l, t);
        }, this), this._renderAxisLabel(i, s, l, t), this._position(i, t);
      }
      this._doPlayStop(), this._updateTicksStatus();
    }, e.prototype.remove = function() {
      this._clearTimer(), this.group.removeAll();
    }, e.prototype.dispose = function() {
      this._clearTimer();
    }, e.prototype._layout = function(t, a) {
      var n = t.get(["label", "position"]), i = t.get("orient"), o = k7(t, a), s;
      n == null || n === "auto" ? s = i === "horizontal" ? o.y + o.height / 2 < a.getHeight() / 2 ? "-" : "+" : o.x + o.width / 2 < a.getWidth() / 2 ? "+" : "-" : $(n) ? s = {
        horizontal: {
          top: "-",
          bottom: "+"
        },
        vertical: {
          left: "-",
          right: "+"
        }
      }[i][n] : s = n;
      var l = {
        horizontal: "center",
        vertical: s >= 0 || s === "+" ? "left" : "right"
      }, u = {
        horizontal: s >= 0 || s === "+" ? "top" : "bottom",
        vertical: "middle"
      }, f = {
        horizontal: 0,
        vertical: fd / 2
      }, h = i === "vertical" ? o.height : o.width, c = t.getModel("controlStyle"), v = c.get("show", !0), d = v ? c.get("itemSize") : 0, p = v ? c.get("itemGap") : 0, g = d + p, y = t.get(["label", "rotate"]) || 0;
      y = y * fd / 180;
      var m, _, S, w = c.get("position", !0), x = v && c.get("showPlayBtn", !0), b = v && c.get("showPrevBtn", !0), T = v && c.get("showNextBtn", !0), C = 0, D = h;
      w === "left" || w === "bottom" ? (x && (m = [0, 0], C += g), b && (_ = [C, 0], C += g), T && (S = [D - d, 0], D -= g)) : (x && (m = [D - d, 0], D -= g), b && (_ = [0, 0], C += g), T && (S = [D - d, 0], D -= g));
      var A = [C, D];
      return t.get("inverse") && A.reverse(), {
        viewRect: o,
        mainLength: h,
        orient: i,
        rotation: f[i],
        labelRotation: y,
        labelPosOpt: s,
        labelAlign: t.get(["label", "align"]) || l[i],
        labelBaseline: t.get(["label", "verticalAlign"]) || t.get(["label", "baseline"]) || u[i],
        // Based on mainGroup.
        playPosition: m,
        prevBtnPosition: _,
        nextBtnPosition: S,
        axisExtent: A,
        controlSize: d,
        controlGap: p
      };
    }, e.prototype._position = function(t, a) {
      var n = this._mainGroup, i = this._labelGroup, o = t.viewRect;
      if (t.orient === "vertical") {
        var s = fr(), l = o.x, u = o.y + o.height;
        Zr(s, s, [-l, -u]), _i(s, s, -fd / 2), Zr(s, s, [l, u]), o = o.clone(), o.applyTransform(s);
      }
      var f = m(o), h = m(n.getBoundingRect()), c = m(i.getBoundingRect()), v = [n.x, n.y], d = [i.x, i.y];
      d[0] = v[0] = f[0][0];
      var p = t.labelPosOpt;
      if (p == null || $(p)) {
        var g = p === "+" ? 0 : 1;
        _(v, h, f, 1, g), _(d, c, f, 1, 1 - g);
      } else {
        var g = p >= 0 ? 0 : 1;
        _(v, h, f, 1, g), d[1] = v[1] + p;
      }
      n.setPosition(v), i.setPosition(d), n.rotation = i.rotation = t.rotation, y(n), y(i);
      function y(S) {
        S.originX = f[0][0] - S.x, S.originY = f[1][0] - S.y;
      }
      function m(S) {
        return [[S.x, S.x + S.width], [S.y, S.y + S.height]];
      }
      function _(S, w, x, b, T) {
        S[b] += x[b][T] - w[b][T];
      }
    }, e.prototype._createAxis = function(t, a) {
      var n = a.getData(), i = a.get("axisType"), o = O7(a, i);
      o.getTicks = function() {
        return n.mapArray(["value"], function(u) {
          return {
            value: u
          };
        });
      };
      var s = n.getDataExtent("value");
      o.setExtent(s[0], s[1]), o.calcNiceTicks();
      var l = new R7("value", o, t.axisExtent, i);
      return l.model = a, l;
    }, e.prototype._createGroup = function(t) {
      var a = this[t] = new nt();
      return this.group.add(a), a;
    }, e.prototype._renderAxisLine = function(t, a, n, i) {
      var o = n.getExtent();
      if (i.get(["lineStyle", "show"])) {
        var s = new ue({
          shape: {
            x1: o[0],
            y1: 0,
            x2: o[1],
            y2: 0
          },
          style: V({
            lineCap: "round"
          }, i.getModel("lineStyle").getLineStyle()),
          silent: !0,
          z2: 1
        });
        a.add(s);
        var l = this._progressLine = new ue({
          shape: {
            x1: o[0],
            x2: this._currentPointer ? this._currentPointer.x : o[0],
            y1: 0,
            y2: 0
          },
          style: et({
            lineCap: "round",
            lineWidth: s.style.lineWidth
          }, i.getModel(["progress", "lineStyle"]).getLineStyle()),
          silent: !0,
          z2: 1
        });
        a.add(l);
      }
    }, e.prototype._renderAxisTick = function(t, a, n, i) {
      var o = this, s = i.getData(), l = n.scale.getTicks();
      this._tickSymbols = [], M(l, function(u) {
        var f = n.dataToCoord(u.value), h = s.getItemModel(u.value), c = h.getModel("itemStyle"), v = h.getModel(["emphasis", "itemStyle"]), d = h.getModel(["progress", "itemStyle"]), p = {
          x: f,
          y: 0,
          onclick: Y(o._changeTimeline, o, u.value)
        }, g = Gw(h, c, a, p);
        g.ensureState("emphasis").style = v.getItemStyle(), g.ensureState("progress").style = d.getItemStyle(), ni(g);
        var y = it(g);
        h.get("tooltip") ? (y.dataIndex = u.value, y.dataModel = i) : y.dataIndex = y.dataModel = null, o._tickSymbols.push(g);
      });
    }, e.prototype._renderAxisLabel = function(t, a, n, i) {
      var o = this, s = n.getLabelModel();
      if (s.get("show")) {
        var l = i.getData(), u = n.getViewLabels();
        this._tickLabels = [], M(u, function(f) {
          var h = f.tickValue, c = l.getItemModel(h), v = c.getModel("label"), d = c.getModel(["emphasis", "label"]), p = c.getModel(["progress", "label"]), g = n.dataToCoord(f.tickValue), y = new Ct({
            x: g,
            y: 0,
            rotation: t.labelRotation - t.rotation,
            onclick: Y(o._changeTimeline, o, h),
            silent: !1,
            style: Ot(v, {
              text: f.formattedLabel,
              align: t.labelAlign,
              verticalAlign: t.labelBaseline
            })
          });
          y.ensureState("emphasis").style = Ot(d), y.ensureState("progress").style = Ot(p), a.add(y), ni(y), zw(y).dataIndex = h, o._tickLabels.push(y);
        });
      }
    }, e.prototype._renderControl = function(t, a, n, i) {
      var o = t.controlSize, s = t.rotation, l = i.getModel("controlStyle").getItemStyle(), u = i.getModel(["emphasis", "controlStyle"]).getItemStyle(), f = i.getPlayState(), h = i.get("inverse", !0);
      c(t.nextBtnPosition, "next", Y(this._changeTimeline, this, h ? "-" : "+")), c(t.prevBtnPosition, "prev", Y(this._changeTimeline, this, h ? "+" : "-")), c(t.playPosition, f ? "stop" : "play", Y(this._handlePlayClick, this, !f), !0);
      function c(v, d, p, g) {
        if (v) {
          var y = Cr(ft(i.get(["controlStyle", d + "BtnSize"]), o), o), m = [0, -y / 2, y, y], _ = V7(i, d + "Icon", m, {
            x: v[0],
            y: v[1],
            originX: o / 2,
            originY: 0,
            rotation: g ? -s : 0,
            rectHover: !0,
            style: l,
            onclick: p
          });
          _.ensureState("emphasis").style = u, a.add(_), ni(_);
        }
      }
    }, e.prototype._renderCurrentPointer = function(t, a, n, i) {
      var o = i.getData(), s = i.getCurrentIndex(), l = o.getItemModel(s).getModel("checkpointStyle"), u = this, f = {
        onCreate: function(h) {
          h.draggable = !0, h.drift = Y(u._handlePointerDrag, u), h.ondragend = Y(u._handlePointerDragend, u), Fw(h, u._progressLine, s, n, i, !0);
        },
        onUpdate: function(h) {
          Fw(h, u._progressLine, s, n, i);
        }
      };
      this._currentPointer = Gw(l, l, this._mainGroup, {}, this._currentPointer, f);
    }, e.prototype._handlePlayClick = function(t) {
      this._clearTimer(), this.api.dispatchAction({
        type: "timelinePlayChange",
        playState: t,
        from: this.uid
      });
    }, e.prototype._handlePointerDrag = function(t, a, n) {
      this._clearTimer(), this._pointerChangeTimeline([n.offsetX, n.offsetY]);
    }, e.prototype._handlePointerDragend = function(t) {
      this._pointerChangeTimeline([t.offsetX, t.offsetY], !0);
    }, e.prototype._pointerChangeTimeline = function(t, a) {
      var n = this._toAxisCoord(t)[0], i = this._axis, o = sr(i.getExtent().slice());
      n > o[1] && (n = o[1]), n < o[0] && (n = o[0]), this._currentPointer.x = n, this._currentPointer.markRedraw();
      var s = this._progressLine;
      s && (s.shape.x2 = n, s.dirty());
      var l = this._findNearestTick(n), u = this.model;
      (a || l !== u.getCurrentIndex() && u.get("realtime")) && this._changeTimeline(l);
    }, e.prototype._doPlayStop = function() {
      var t = this;
      this._clearTimer(), this.model.getPlayState() && (this._timer = setTimeout(function() {
        var a = t.model;
        t._changeTimeline(a.getCurrentIndex() + (a.get("rewind", !0) ? -1 : 1));
      }, this.model.get("playInterval")));
    }, e.prototype._toAxisCoord = function(t) {
      var a = this._mainGroup.getLocalTransform();
      return Dr(t, a, !0);
    }, e.prototype._findNearestTick = function(t) {
      var a = this.model.getData(), n = 1 / 0, i, o = this._axis;
      return a.each(["value"], function(s, l) {
        var u = o.dataToCoord(s), f = Math.abs(u - t);
        f < n && (n = f, i = l);
      }), i;
    }, e.prototype._clearTimer = function() {
      this._timer && (clearTimeout(this._timer), this._timer = null);
    }, e.prototype._changeTimeline = function(t) {
      var a = this.model.getCurrentIndex();
      t === "+" ? t = a + 1 : t === "-" && (t = a - 1), this.api.dispatchAction({
        type: "timelineChange",
        currentIndex: t,
        from: this.uid
      });
    }, e.prototype._updateTicksStatus = function() {
      var t = this.model.getCurrentIndex(), a = this._tickSymbols, n = this._tickLabels;
      if (a)
        for (var i = 0; i < a.length; i++)
          a && a[i] && a[i].toggleState("progress", i < t);
      if (n)
        for (var i = 0; i < n.length; i++)
          n && n[i] && n[i].toggleState("progress", zw(n[i]).dataIndex <= t);
    }, e.type = "timeline.slider", e;
  }(E7)
);
function O7(r, e) {
  if (e = e || r.get("type"), e)
    switch (e) {
      case "category":
        return new uy({
          ordinalMeta: r.getCategories(),
          extent: [1 / 0, -1 / 0]
        });
      case "time":
        return new pA({
          locale: r.ecModel.getLocaleModel(),
          useUTC: r.ecModel.get("useUTC")
        });
      default:
        return new nn();
    }
}
function k7(r, e) {
  return ae(r.getBoxLayoutParams(), {
    width: e.getWidth(),
    height: e.getHeight()
  }, r.get("padding"));
}
function V7(r, e, t, a) {
  var n = a.style, i = xl(r.get(["controlStyle", e]), a || {}, new ct(t[0], t[1], t[2], t[3]));
  return n && i.setStyle(n), i;
}
function Gw(r, e, t, a, n, i) {
  var o = e.get("color");
  if (n)
    n.setColor(o), t.add(n), i && i.onUpdate(n);
  else {
    var s = r.get("symbol");
    n = Qt(s, -1, -1, 2, 2, o), n.setStyle("strokeNoScale", !0), t.add(n), i && i.onCreate(n);
  }
  var l = e.getItemStyle(["color"]);
  n.setStyle(l), a = ht({
    rectHover: !0,
    z2: 100
  }, a, !0);
  var u = Bo(r.get("symbolSize"));
  a.scaleX = u[0] / 2, a.scaleY = u[1] / 2;
  var f = xi(r.get("symbolOffset"), u);
  f && (a.x = (a.x || 0) + f[0], a.y = (a.y || 0) + f[1]);
  var h = r.get("symbolRotate");
  return a.rotation = (h || 0) * Math.PI / 180 || 0, n.attr(a), n.updateTransform(), n;
}
function Fw(r, e, t, a, n, i) {
  if (!r.dragging) {
    var o = n.getModel("checkpointStyle"), s = a.dataToCoord(n.getData().get("value", t));
    if (i || !o.get("animation", !0))
      r.attr({
        x: s,
        y: 0
      }), e && e.attr({
        shape: {
          x2: s
        }
      });
    else {
      var l = {
        duration: o.get("animationDuration", !0),
        easing: o.get("animationEasing", !0)
      };
      r.stopAnimation(null, !0), r.animateTo({
        x: s,
        y: 0
      }, l), e && e.animateTo({
        shape: {
          x2: s
        }
      }, l);
    }
  }
}
const B7 = N7;
function z7(r) {
  r.registerAction({
    type: "timelineChange",
    event: "timelineChanged",
    update: "prepareAndUpdate"
  }, function(e, t, a) {
    var n = t.getComponent("timeline");
    return n && e.currentIndex != null && (n.setCurrentIndex(e.currentIndex), !n.get("loop", !0) && n.isIndexMax() && n.getPlayState() && (n.setPlayState(!1), a.dispatchAction({
      type: "timelinePlayChange",
      playState: !1,
      from: e.from
    }))), t.resetOption("timeline", {
      replaceMerge: n.get("replaceMerge", !0)
    }), et({
      currentIndex: n.option.currentIndex
    }, e);
  }), r.registerAction({
    type: "timelinePlayChange",
    event: "timelinePlayChanged",
    update: "update"
  }, function(e, t) {
    var a = t.getComponent("timeline");
    a && e.playState != null && a.setPlayState(e.playState);
  });
}
function G7(r) {
  var e = r && r.timeline;
  z(e) || (e = e ? [e] : []), M(e, function(t) {
    t && F7(t);
  });
}
function F7(r) {
  var e = r.type, t = {
    number: "value",
    time: "time"
  };
  if (t[e] && (r.axisType = t[e], delete r.type), Hw(r), Un(r, "controlPosition")) {
    var a = r.controlStyle || (r.controlStyle = {});
    Un(a, "position") || (a.position = r.controlPosition), a.position === "none" && !Un(a, "show") && (a.show = !1, delete a.position), delete r.controlPosition;
  }
  M(r.data || [], function(n) {
    j(n) && !z(n) && (!Un(n, "value") && Un(n, "name") && (n.value = n.name), Hw(n));
  });
}
function Hw(r) {
  var e = r.itemStyle || (r.itemStyle = {}), t = e.emphasis || (e.emphasis = {}), a = r.label || r.label || {}, n = a.normal || (a.normal = {}), i = {
    normal: 1,
    emphasis: 1
  };
  M(a, function(o, s) {
    !i[s] && !Un(n, s) && (n[s] = o);
  }), t.label && !Un(a, "emphasis") && (a.emphasis = t.label, delete t.label);
}
function Un(r, e) {
  return r.hasOwnProperty(e);
}
function H7(r) {
  r.registerComponentModel(I7), r.registerComponentView(B7), r.registerSubTypeDefaulter("timeline", function() {
    return "slider";
  }), z7(r), r.registerPreprocessor(G7);
}
function cm(r, e) {
  if (!r)
    return !1;
  for (var t = z(r) ? r : [r], a = 0; a < t.length; a++)
    if (t[a] && t[a][e])
      return !0;
  return !1;
}
function Pu(r) {
  hi(r, "label", ["show"]);
}
var Ru = Dt(), dL = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t.createdBySelf = !1, t;
    }
    return e.prototype.init = function(t, a, n) {
      if ({}.NODE_ENV !== "production" && this.type === "marker")
        throw new Error("Marker component is abstract component. Use markLine, markPoint, markArea instead.");
      this.mergeDefaultAndTheme(t, n), this._mergeOption(t, n, !1, !0);
    }, e.prototype.isAnimationEnabled = function() {
      if (bt.node)
        return !1;
      var t = this.__hostSeries;
      return this.getShallow("animation") && t && t.isAnimationEnabled();
    }, e.prototype.mergeOption = function(t, a) {
      this._mergeOption(t, a, !1, !1);
    }, e.prototype._mergeOption = function(t, a, n, i) {
      var o = this.mainType;
      n || a.eachSeries(function(s) {
        var l = s.get(this.mainType, !0), u = Ru(s)[o];
        if (!l || !l.data) {
          Ru(s)[o] = null;
          return;
        }
        u ? u._mergeOption(l, a, !0) : (i && Pu(l), M(l.data, function(f) {
          f instanceof Array ? (Pu(f[0]), Pu(f[1])) : Pu(f);
        }), u = this.createMarkerModelFromSeries(l, this, a), V(u, {
          mainType: this.mainType,
          // Use the same series index and name
          seriesIndex: s.seriesIndex,
          name: s.name,
          createdBySelf: !0
        }), u.__hostSeries = s), Ru(s)[o] = u;
      }, this);
    }, e.prototype.formatTooltip = function(t, a, n) {
      var i = this.getData(), o = this.getRawValue(t), s = i.getName(t);
      return se("section", {
        header: this.name,
        blocks: [se("nameValue", {
          name: s,
          value: o,
          noName: !s,
          noValue: o == null
        })]
      });
    }, e.prototype.getData = function() {
      return this._data;
    }, e.prototype.setData = function(t) {
      this._data = t;
    }, e.getMarkerModelFromSeries = function(t, a) {
      return Ru(t)[a];
    }, e.type = "marker", e.dependencies = ["series", "grid", "polar", "geo"], e;
  }(xt)
);
te(dL, jg.prototype);
const ln = dL;
var W7 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.createMarkerModelFromSeries = function(t, a, n) {
      return new e(t, a, n);
    }, e.type = "markPoint", e.defaultOption = {
      // zlevel: 0,
      z: 5,
      symbol: "pin",
      symbolSize: 50,
      // symbolRotate: 0,
      // symbolOffset: [0, 0]
      tooltip: {
        trigger: "item"
      },
      label: {
        show: !0,
        position: "inside"
      },
      itemStyle: {
        borderWidth: 2
      },
      emphasis: {
        label: {
          show: !0
        }
      }
    }, e;
  }(ln)
);
const $7 = W7;
function eg(r) {
  return !(isNaN(parseFloat(r.x)) && isNaN(parseFloat(r.y)));
}
function U7(r) {
  return !isNaN(parseFloat(r.x)) && !isNaN(parseFloat(r.y));
}
function Nu(r, e, t, a, n, i) {
  var o = [], s = an(
    e,
    a
    /* , otherDataDim */
  ), l = s ? e.getCalculationInfo("stackResultDimension") : a, u = vm(e, l, r), f = e.indicesOfNearest(l, u)[0];
  o[n] = e.get(t, f), o[i] = e.get(l, f);
  var h = e.get(a, f), c = Fr(e.get(a, f));
  return c = Math.min(c, 20), c >= 0 && (o[i] = +o[i].toFixed(c)), [o, h];
}
var hd = {
  min: ot(Nu, "min"),
  max: ot(Nu, "max"),
  average: ot(Nu, "average"),
  median: ot(Nu, "median")
};
function vl(r, e) {
  if (e) {
    var t = r.getData(), a = r.coordinateSystem, n = a && a.dimensions;
    if (!U7(e) && !z(e.coord) && z(n)) {
      var i = pL(e, t, a, r);
      if (e = at(e), e.type && hd[e.type] && i.baseAxis && i.valueAxis) {
        var o = vt(n, i.baseAxis.dim), s = vt(n, i.valueAxis.dim), l = hd[e.type](t, i.baseDataDim, i.valueDataDim, o, s);
        e.coord = l[0], e.value = l[1];
      } else
        e.coord = [e.xAxis != null ? e.xAxis : e.radiusAxis, e.yAxis != null ? e.yAxis : e.angleAxis];
    }
    if (e.coord == null || !z(n))
      e.coord = [];
    else
      for (var u = e.coord, f = 0; f < 2; f++)
        hd[u[f]] && (u[f] = vm(t, t.mapDimension(n[f]), u[f]));
    return e;
  }
}
function pL(r, e, t, a) {
  var n = {};
  return r.valueIndex != null || r.valueDim != null ? (n.valueDataDim = r.valueIndex != null ? e.getDimension(r.valueIndex) : r.valueDim, n.valueAxis = t.getAxis(Y7(a, n.valueDataDim)), n.baseAxis = t.getOtherAxis(n.valueAxis), n.baseDataDim = e.mapDimension(n.baseAxis.dim)) : (n.baseAxis = a.getBaseAxis(), n.valueAxis = t.getOtherAxis(n.baseAxis), n.baseDataDim = e.mapDimension(n.baseAxis.dim), n.valueDataDim = e.mapDimension(n.valueAxis.dim)), n;
}
function Y7(r, e) {
  var t = r.getData().getDimensionInfo(e);
  return t && t.coordDim;
}
function dl(r, e) {
  return r && r.containData && e.coord && !eg(e) ? r.containData(e.coord) : !0;
}
function Z7(r, e, t) {
  return r && r.containZone && e.coord && t.coord && !eg(e) && !eg(t) ? r.containZone(e.coord, t.coord) : !0;
}
function gL(r, e) {
  return r ? function(t, a, n, i) {
    var o = i < 2 ? t.coord && t.coord[i] : t.value;
    return qa(o, e[i]);
  } : function(t, a, n, i) {
    return qa(t.value, e[i]);
  };
}
function vm(r, e, t) {
  if (t === "average") {
    var a = 0, n = 0;
    return r.each(e, function(i, o) {
      isNaN(i) || (a += i, n++);
    }), a / n;
  } else
    return t === "median" ? r.getMedian(e) : r.getDataExtent(e)[t === "max" ? 1 : 0];
}
var cd = Dt(), X7 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.init = function() {
      this.markerGroupMap = X();
    }, e.prototype.render = function(t, a, n) {
      var i = this, o = this.markerGroupMap;
      o.each(function(s) {
        cd(s).keep = !1;
      }), a.eachSeries(function(s) {
        var l = ln.getMarkerModelFromSeries(s, i.type);
        l && i.renderSeries(s, l, a, n);
      }), o.each(function(s) {
        !cd(s).keep && i.group.remove(s.group);
      });
    }, e.prototype.markKeep = function(t) {
      cd(t).keep = !0;
    }, e.prototype.toggleBlurSeries = function(t, a) {
      var n = this;
      M(t, function(i) {
        var o = ln.getMarkerModelFromSeries(i, n.type);
        if (o) {
          var s = o.getData();
          s.eachItemGraphicEl(function(l) {
            l && (a ? $T(l) : Eg(l));
          });
        }
      });
    }, e.type = "marker", e;
  }($t)
);
const dm = X7;
function Ww(r, e, t) {
  var a = e.coordinateSystem;
  r.each(function(n) {
    var i = r.getItemModel(n), o, s = H(i.get("x"), t.getWidth()), l = H(i.get("y"), t.getHeight());
    if (!isNaN(s) && !isNaN(l))
      o = [s, l];
    else if (e.getMarkerPosition)
      o = e.getMarkerPosition(r.getValues(r.dimensions, n));
    else if (a) {
      var u = r.get(a.dimensions[0], n), f = r.get(a.dimensions[1], n);
      o = a.dataToPoint([u, f]);
    }
    isNaN(s) || (o[0] = s), isNaN(l) || (o[1] = l), r.setItemLayout(n, o);
  });
}
var q7 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.updateTransform = function(t, a, n) {
      a.eachSeries(function(i) {
        var o = ln.getMarkerModelFromSeries(i, "markPoint");
        o && (Ww(o.getData(), i, n), this.markerGroupMap.get(i.id).updateLayout());
      }, this);
    }, e.prototype.renderSeries = function(t, a, n, i) {
      var o = t.coordinateSystem, s = t.id, l = t.getData(), u = this.markerGroupMap, f = u.get(s) || u.set(s, new Ml()), h = K7(o, t, a);
      a.setData(h), Ww(a.getData(), t, i), h.each(function(c) {
        var v = h.getItemModel(c), d = v.getShallow("symbol"), p = v.getShallow("symbolSize"), g = v.getShallow("symbolRotate"), y = v.getShallow("symbolOffset"), m = v.getShallow("symbolKeepAspect");
        if (K(d) || K(p) || K(g) || K(y)) {
          var _ = a.getRawValue(c), S = a.getDataParams(c);
          K(d) && (d = d(_, S)), K(p) && (p = p(_, S)), K(g) && (g = g(_, S)), K(y) && (y = y(_, S));
        }
        var w = v.getModel("itemStyle").getItemStyle(), x = bl(l, "color");
        w.fill || (w.fill = x), h.setItemVisual(c, {
          symbol: d,
          symbolSize: p,
          symbolRotate: g,
          symbolOffset: y,
          symbolKeepAspect: m,
          style: w
        });
      }), f.updateData(h), this.group.add(f.group), h.eachItemGraphicEl(function(c) {
        c.traverse(function(v) {
          it(v).dataModel = a;
        });
      }), this.markKeep(f), f.group.silent = a.get("silent") || t.get("silent");
    }, e.type = "markPoint", e;
  }(dm)
);
function K7(r, e, t) {
  var a;
  r ? a = G(r && r.dimensions, function(s) {
    var l = e.getData().getDimensionInfo(e.getData().mapDimension(s)) || {};
    return V(V({}, l), {
      name: s,
      // DON'T use ordinalMeta to parse and collect ordinal.
      ordinalMeta: null
    });
  }) : a = [{
    name: "value",
    type: "float"
  }];
  var n = new Me(a, t), i = G(t.get("data"), ot(vl, e));
  r && (i = Et(i, ot(dl, r)));
  var o = gL(!!r, a);
  return n.initData(i, null, o), n;
}
const j7 = q7;
function J7(r) {
  r.registerComponentModel($7), r.registerComponentView(j7), r.registerPreprocessor(function(e) {
    cm(e.series, "markPoint") && (e.markPoint = e.markPoint || {});
  });
}
var Q7 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.createMarkerModelFromSeries = function(t, a, n) {
      return new e(t, a, n);
    }, e.type = "markLine", e.defaultOption = {
      // zlevel: 0,
      z: 5,
      symbol: ["circle", "arrow"],
      symbolSize: [8, 16],
      // symbolRotate: 0,
      symbolOffset: 0,
      precision: 2,
      tooltip: {
        trigger: "item"
      },
      label: {
        show: !0,
        position: "end",
        distance: 5
      },
      lineStyle: {
        type: "dashed"
      },
      emphasis: {
        label: {
          show: !0
        },
        lineStyle: {
          width: 3
        }
      },
      animationEasing: "linear"
    }, e;
  }(ln)
);
const t9 = Q7;
var Ou = Dt(), e9 = function(r, e, t, a) {
  var n = r.getData(), i;
  if (z(a))
    i = a;
  else {
    var o = a.type;
    if (o === "min" || o === "max" || o === "average" || o === "median" || a.xAxis != null || a.yAxis != null) {
      var s = void 0, l = void 0;
      if (a.yAxis != null || a.xAxis != null)
        s = e.getAxis(a.yAxis != null ? "y" : "x"), l = jt(a.yAxis, a.xAxis);
      else {
        var u = pL(a, n, e, r);
        s = u.valueAxis;
        var f = eA(n, u.valueDataDim);
        l = vm(n, f, o);
      }
      var h = s.dim === "x" ? 0 : 1, c = 1 - h, v = at(a), d = {
        coord: []
      };
      v.type = null, v.coord = [], v.coord[c] = -1 / 0, d.coord[c] = 1 / 0;
      var p = t.get("precision");
      p >= 0 && At(l) && (l = +l.toFixed(Math.min(p, 20))), v.coord[h] = d.coord[h] = l, i = [v, d, {
        type: o,
        valueIndex: a.valueIndex,
        // Force to use the value of calculated value.
        value: l
      }];
    } else
      ({}).NODE_ENV !== "production" && br("Invalid markLine data."), i = [];
  }
  var g = [vl(r, i[0]), vl(r, i[1]), V({}, i[2])];
  return g[2].type = g[2].type || null, ht(g[2], g[0]), ht(g[2], g[1]), g;
};
function Qf(r) {
  return !isNaN(r) && !isFinite(r);
}
function $w(r, e, t, a) {
  var n = 1 - r, i = a.dimensions[r];
  return Qf(e[n]) && Qf(t[n]) && e[r] === t[r] && a.getAxis(i).containData(e[r]);
}
function r9(r, e) {
  if (r.type === "cartesian2d") {
    var t = e[0].coord, a = e[1].coord;
    if (t && a && ($w(1, t, a, r) || $w(0, t, a, r)))
      return !0;
  }
  return dl(r, e[0]) && dl(r, e[1]);
}
function vd(r, e, t, a, n) {
  var i = a.coordinateSystem, o = r.getItemModel(e), s, l = H(o.get("x"), n.getWidth()), u = H(o.get("y"), n.getHeight());
  if (!isNaN(l) && !isNaN(u))
    s = [l, u];
  else {
    if (a.getMarkerPosition)
      s = a.getMarkerPosition(r.getValues(r.dimensions, e));
    else {
      var f = i.dimensions, h = r.get(f[0], e), c = r.get(f[1], e);
      s = i.dataToPoint([h, c]);
    }
    if (bi(i, "cartesian2d")) {
      var v = i.getAxis("x"), d = i.getAxis("y"), f = i.dimensions;
      Qf(r.get(f[0], e)) ? s[0] = v.toGlobalCoord(v.getExtent()[t ? 0 : 1]) : Qf(r.get(f[1], e)) && (s[1] = d.toGlobalCoord(d.getExtent()[t ? 0 : 1]));
    }
    isNaN(l) || (s[0] = l), isNaN(u) || (s[1] = u);
  }
  r.setItemLayout(e, s);
}
var a9 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.updateTransform = function(t, a, n) {
      a.eachSeries(function(i) {
        var o = ln.getMarkerModelFromSeries(i, "markLine");
        if (o) {
          var s = o.getData(), l = Ou(o).from, u = Ou(o).to;
          l.each(function(f) {
            vd(l, f, !0, i, n), vd(u, f, !1, i, n);
          }), s.each(function(f) {
            s.setItemLayout(f, [l.getItemLayout(f), u.getItemLayout(f)]);
          }), this.markerGroupMap.get(i.id).updateLayout();
        }
      }, this);
    }, e.prototype.renderSeries = function(t, a, n, i) {
      var o = t.coordinateSystem, s = t.id, l = t.getData(), u = this.markerGroupMap, f = u.get(s) || u.set(s, new Vy());
      this.group.add(f.group);
      var h = n9(o, t, a), c = h.from, v = h.to, d = h.line;
      Ou(a).from = c, Ou(a).to = v, a.setData(d);
      var p = a.get("symbol"), g = a.get("symbolSize"), y = a.get("symbolRotate"), m = a.get("symbolOffset");
      z(p) || (p = [p, p]), z(g) || (g = [g, g]), z(y) || (y = [y, y]), z(m) || (m = [m, m]), h.from.each(function(S) {
        _(c, S, !0), _(v, S, !1);
      }), d.each(function(S) {
        var w = d.getItemModel(S).getModel("lineStyle").getLineStyle();
        d.setItemLayout(S, [c.getItemLayout(S), v.getItemLayout(S)]), w.stroke == null && (w.stroke = c.getItemVisual(S, "style").fill), d.setItemVisual(S, {
          fromSymbolKeepAspect: c.getItemVisual(S, "symbolKeepAspect"),
          fromSymbolOffset: c.getItemVisual(S, "symbolOffset"),
          fromSymbolRotate: c.getItemVisual(S, "symbolRotate"),
          fromSymbolSize: c.getItemVisual(S, "symbolSize"),
          fromSymbol: c.getItemVisual(S, "symbol"),
          toSymbolKeepAspect: v.getItemVisual(S, "symbolKeepAspect"),
          toSymbolOffset: v.getItemVisual(S, "symbolOffset"),
          toSymbolRotate: v.getItemVisual(S, "symbolRotate"),
          toSymbolSize: v.getItemVisual(S, "symbolSize"),
          toSymbol: v.getItemVisual(S, "symbol"),
          style: w
        });
      }), f.updateData(d), h.line.eachItemGraphicEl(function(S) {
        it(S).dataModel = a, S.traverse(function(w) {
          it(w).dataModel = a;
        });
      });
      function _(S, w, x) {
        var b = S.getItemModel(w);
        vd(S, w, x, t, i);
        var T = b.getModel("itemStyle").getItemStyle();
        T.fill == null && (T.fill = bl(l, "color")), S.setItemVisual(w, {
          symbolKeepAspect: b.get("symbolKeepAspect"),
          // `0` should be considered as a valid value, so use `retrieve2` instead of `||`
          symbolOffset: ft(b.get("symbolOffset", !0), m[x ? 0 : 1]),
          symbolRotate: ft(b.get("symbolRotate", !0), y[x ? 0 : 1]),
          // TODO: when 2d array is supported, it should ignore parent
          symbolSize: ft(b.get("symbolSize"), g[x ? 0 : 1]),
          symbol: ft(b.get("symbol", !0), p[x ? 0 : 1]),
          style: T
        });
      }
      this.markKeep(f), f.group.silent = a.get("silent") || t.get("silent");
    }, e.type = "markLine", e;
  }(dm)
);
function n9(r, e, t) {
  var a;
  r ? a = G(r && r.dimensions, function(u) {
    var f = e.getData().getDimensionInfo(e.getData().mapDimension(u)) || {};
    return V(V({}, f), {
      name: u,
      // DON'T use ordinalMeta to parse and collect ordinal.
      ordinalMeta: null
    });
  }) : a = [{
    name: "value",
    type: "float"
  }];
  var n = new Me(a, t), i = new Me(a, t), o = new Me([], t), s = G(t.get("data"), ot(e9, e, r, t));
  r && (s = Et(s, ot(r9, r)));
  var l = gL(!!r, a);
  return n.initData(G(s, function(u) {
    return u[0];
  }), null, l), i.initData(G(s, function(u) {
    return u[1];
  }), null, l), o.initData(G(s, function(u) {
    return u[2];
  })), o.hasItemOption = !0, {
    from: n,
    to: i,
    line: o
  };
}
const i9 = a9;
function o9(r) {
  r.registerComponentModel(t9), r.registerComponentView(i9), r.registerPreprocessor(function(e) {
    cm(e.series, "markLine") && (e.markLine = e.markLine || {});
  });
}
var s9 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.createMarkerModelFromSeries = function(t, a, n) {
      return new e(t, a, n);
    }, e.type = "markArea", e.defaultOption = {
      // zlevel: 0,
      // PENDING
      z: 1,
      tooltip: {
        trigger: "item"
      },
      // markArea should fixed on the coordinate system
      animation: !1,
      label: {
        show: !0,
        position: "top"
      },
      itemStyle: {
        // color and borderColor default to use color from series
        // color: 'auto'
        // borderColor: 'auto'
        borderWidth: 0
      },
      emphasis: {
        label: {
          show: !0,
          position: "top"
        }
      }
    }, e;
  }(ln)
);
const l9 = s9;
var ku = Dt(), u9 = function(r, e, t, a) {
  var n = a[0], i = a[1];
  if (!(!n || !i)) {
    var o = vl(r, n), s = vl(r, i), l = o.coord, u = s.coord;
    l[0] = jt(l[0], -1 / 0), l[1] = jt(l[1], -1 / 0), u[0] = jt(u[0], 1 / 0), u[1] = jt(u[1], 1 / 0);
    var f = vg([{}, o, s]);
    return f.coord = [o.coord, s.coord], f.x0 = o.x, f.y0 = o.y, f.x1 = s.x, f.y1 = s.y, f;
  }
};
function th(r) {
  return !isNaN(r) && !isFinite(r);
}
function Uw(r, e, t, a) {
  var n = 1 - r;
  return th(e[n]) && th(t[n]);
}
function f9(r, e) {
  var t = e.coord[0], a = e.coord[1], n = {
    coord: t,
    x: e.x0,
    y: e.y0
  }, i = {
    coord: a,
    x: e.x1,
    y: e.y1
  };
  return bi(r, "cartesian2d") ? t && a && (Uw(1, t, a) || Uw(0, t, a)) ? !0 : Z7(r, n, i) : dl(r, n) || dl(r, i);
}
function Yw(r, e, t, a, n) {
  var i = a.coordinateSystem, o = r.getItemModel(e), s, l = H(o.get(t[0]), n.getWidth()), u = H(o.get(t[1]), n.getHeight());
  if (!isNaN(l) && !isNaN(u))
    s = [l, u];
  else {
    if (a.getMarkerPosition) {
      var f = r.getValues(["x0", "y0"], e), h = r.getValues(["x1", "y1"], e), c = i.clampData(f), v = i.clampData(h), d = [];
      t[0] === "x0" ? d[0] = c[0] > v[0] ? h[0] : f[0] : d[0] = c[0] > v[0] ? f[0] : h[0], t[1] === "y0" ? d[1] = c[1] > v[1] ? h[1] : f[1] : d[1] = c[1] > v[1] ? f[1] : h[1], s = a.getMarkerPosition(d, t, !0);
    } else {
      var p = r.get(t[0], e), g = r.get(t[1], e), y = [p, g];
      i.clampData && i.clampData(y, y), s = i.dataToPoint(y, !0);
    }
    if (bi(i, "cartesian2d")) {
      var m = i.getAxis("x"), _ = i.getAxis("y"), p = r.get(t[0], e), g = r.get(t[1], e);
      th(p) ? s[0] = m.toGlobalCoord(m.getExtent()[t[0] === "x0" ? 0 : 1]) : th(g) && (s[1] = _.toGlobalCoord(_.getExtent()[t[1] === "y0" ? 0 : 1]));
    }
    isNaN(l) || (s[0] = l), isNaN(u) || (s[1] = u);
  }
  return s;
}
var Zw = [["x0", "y0"], ["x1", "y0"], ["x1", "y1"], ["x0", "y1"]], h9 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.updateTransform = function(t, a, n) {
      a.eachSeries(function(i) {
        var o = ln.getMarkerModelFromSeries(i, "markArea");
        if (o) {
          var s = o.getData();
          s.each(function(l) {
            var u = G(Zw, function(h) {
              return Yw(s, l, h, i, n);
            });
            s.setItemLayout(l, u);
            var f = s.getItemGraphicEl(l);
            f.setShape("points", u);
          });
        }
      }, this);
    }, e.prototype.renderSeries = function(t, a, n, i) {
      var o = t.coordinateSystem, s = t.id, l = t.getData(), u = this.markerGroupMap, f = u.get(s) || u.set(s, {
        group: new nt()
      });
      this.group.add(f.group), this.markKeep(f);
      var h = c9(o, t, a);
      a.setData(h), h.each(function(c) {
        var v = G(Zw, function(T) {
          return Yw(h, c, T, t, i);
        }), d = o.getAxis("x").scale, p = o.getAxis("y").scale, g = d.getExtent(), y = p.getExtent(), m = [d.parse(h.get("x0", c)), d.parse(h.get("x1", c))], _ = [p.parse(h.get("y0", c)), p.parse(h.get("y1", c))];
        sr(m), sr(_);
        var S = !(g[0] > m[1] || g[1] < m[0] || y[0] > _[1] || y[1] < _[0]), w = !S;
        h.setItemLayout(c, {
          points: v,
          allClipped: w
        });
        var x = h.getItemModel(c).getModel("itemStyle").getItemStyle(), b = bl(l, "color");
        x.fill || (x.fill = b, $(x.fill) && (x.fill = ff(x.fill, 0.4))), x.stroke || (x.stroke = b), h.setItemVisual(c, "style", x);
      }), h.diff(ku(f).data).add(function(c) {
        var v = h.getItemLayout(c);
        if (!v.allClipped) {
          var d = new Ge({
            shape: {
              points: v.points
            }
          });
          h.setItemGraphicEl(c, d), f.group.add(d);
        }
      }).update(function(c, v) {
        var d = ku(f).data.getItemGraphicEl(v), p = h.getItemLayout(c);
        p.allClipped ? d && f.group.remove(d) : (d ? Mt(d, {
          shape: {
            points: p.points
          }
        }, a, c) : d = new Ge({
          shape: {
            points: p.points
          }
        }), h.setItemGraphicEl(c, d), f.group.add(d));
      }).remove(function(c) {
        var v = ku(f).data.getItemGraphicEl(c);
        f.group.remove(v);
      }).execute(), h.eachItemGraphicEl(function(c, v) {
        var d = h.getItemModel(v), p = h.getItemVisual(v, "style");
        c.useStyle(h.getItemVisual(v, "style")), pe(c, oe(d), {
          labelFetcher: a,
          labelDataIndex: v,
          defaultText: h.getName(v) || "",
          inheritColor: $(p.fill) ? ff(p.fill, 1) : "#000"
        }), de(c, d), Wt(c, null, null, d.get(["emphasis", "disabled"])), it(c).dataModel = a;
      }), ku(f).data = h, f.group.silent = a.get("silent") || t.get("silent");
    }, e.type = "markArea", e;
  }(dm)
);
function c9(r, e, t) {
  var a, n, i = ["x0", "y0", "x1", "y1"];
  if (r) {
    var o = G(r && r.dimensions, function(u) {
      var f = e.getData(), h = f.getDimensionInfo(f.mapDimension(u)) || {};
      return V(V({}, h), {
        name: u,
        // DON'T use ordinalMeta to parse and collect ordinal.
        ordinalMeta: null
      });
    });
    n = G(i, function(u, f) {
      return {
        name: u,
        type: o[f % 2].type
      };
    }), a = new Me(n, t);
  } else
    n = [{
      name: "value",
      type: "float"
    }], a = new Me(n, t);
  var s = G(t.get("data"), ot(u9, e, r, t));
  r && (s = Et(s, ot(f9, r)));
  var l = r ? function(u, f, h, c) {
    var v = u.coord[Math.floor(c / 2)][c % 2];
    return qa(v, n[c]);
  } : function(u, f, h, c) {
    return qa(u.value, n[c]);
  };
  return a.initData(s, null, l), a.hasItemOption = !0, a;
}
const v9 = h9;
function d9(r) {
  r.registerComponentModel(l9), r.registerComponentView(v9), r.registerPreprocessor(function(e) {
    cm(e.series, "markArea") && (e.markArea = e.markArea || {});
  });
}
var p9 = function(r, e) {
  if (e === "all")
    return {
      type: "all",
      title: r.getLocaleModel().get(["legend", "selector", "all"])
    };
  if (e === "inverse")
    return {
      type: "inverse",
      title: r.getLocaleModel().get(["legend", "selector", "inverse"])
    };
}, g9 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t.layoutMode = {
        type: "box",
        // legend.width/height are maxWidth/maxHeight actually,
        // whereas real width/height is calculated by its content.
        // (Setting {left: 10, right: 10} does not make sense).
        // So consider the case:
        // `setOption({legend: {left: 10});`
        // then `setOption({legend: {right: 10});`
        // The previous `left` should be cleared by setting `ignoreSize`.
        ignoreSize: !0
      }, t;
    }
    return e.prototype.init = function(t, a, n) {
      this.mergeDefaultAndTheme(t, n), t.selected = t.selected || {}, this._updateSelector(t);
    }, e.prototype.mergeOption = function(t, a) {
      r.prototype.mergeOption.call(this, t, a), this._updateSelector(t);
    }, e.prototype._updateSelector = function(t) {
      var a = t.selector, n = this.ecModel;
      a === !0 && (a = t.selector = ["all", "inverse"]), z(a) && M(a, function(i, o) {
        $(i) && (i = {
          type: i
        }), a[o] = ht(i, p9(n, i.type));
      });
    }, e.prototype.optionUpdated = function() {
      this._updateData(this.ecModel);
      var t = this._data;
      if (t[0] && this.get("selectedMode") === "single") {
        for (var a = !1, n = 0; n < t.length; n++) {
          var i = t[n].get("name");
          if (this.isSelected(i)) {
            this.select(i), a = !0;
            break;
          }
        }
        !a && this.select(t[0].get("name"));
      }
    }, e.prototype._updateData = function(t) {
      var a = [], n = [];
      t.eachRawSeries(function(l) {
        var u = l.name;
        n.push(u);
        var f;
        if (l.legendVisualProvider) {
          var h = l.legendVisualProvider, c = h.getAllNames();
          t.isSeriesFiltered(l) || (n = n.concat(c)), c.length ? a = a.concat(c) : f = !0;
        } else
          f = !0;
        f && Tg(l) && a.push(l.name);
      }), this._availableNames = n;
      var i = this.get("data") || a, o = X(), s = G(i, function(l) {
        return ($(l) || At(l)) && (l = {
          name: l
        }), o.get(l.name) ? null : (o.set(l.name, !0), new kt(l, this, this.ecModel));
      }, this);
      this._data = Et(s, function(l) {
        return !!l;
      });
    }, e.prototype.getData = function() {
      return this._data;
    }, e.prototype.select = function(t) {
      var a = this.option.selected, n = this.get("selectedMode");
      if (n === "single") {
        var i = this._data;
        M(i, function(o) {
          a[o.get("name")] = !1;
        });
      }
      a[t] = !0;
    }, e.prototype.unSelect = function(t) {
      this.get("selectedMode") !== "single" && (this.option.selected[t] = !1);
    }, e.prototype.toggleSelected = function(t) {
      var a = this.option.selected;
      a.hasOwnProperty(t) || (a[t] = !0), this[a[t] ? "unSelect" : "select"](t);
    }, e.prototype.allSelect = function() {
      var t = this._data, a = this.option.selected;
      M(t, function(n) {
        a[n.get("name", !0)] = !0;
      });
    }, e.prototype.inverseSelect = function() {
      var t = this._data, a = this.option.selected;
      M(t, function(n) {
        var i = n.get("name", !0);
        a.hasOwnProperty(i) || (a[i] = !0), a[i] = !a[i];
      });
    }, e.prototype.isSelected = function(t) {
      var a = this.option.selected;
      return !(a.hasOwnProperty(t) && !a[t]) && vt(this._availableNames, t) >= 0;
    }, e.prototype.getOrient = function() {
      return this.get("orient") === "vertical" ? {
        index: 1,
        name: "vertical"
      } : {
        index: 0,
        name: "horizontal"
      };
    }, e.type = "legend.plain", e.dependencies = ["series"], e.defaultOption = {
      // zlevel: 0,
      z: 4,
      show: !0,
      orient: "horizontal",
      left: "center",
      // right: 'center',
      top: 0,
      // bottom: null,
      align: "auto",
      backgroundColor: "rgba(0,0,0,0)",
      borderColor: "#ccc",
      borderRadius: 0,
      borderWidth: 0,
      padding: 5,
      itemGap: 10,
      itemWidth: 25,
      itemHeight: 14,
      symbolRotate: "inherit",
      symbolKeepAspect: !0,
      inactiveColor: "#ccc",
      inactiveBorderColor: "#ccc",
      inactiveBorderWidth: "auto",
      itemStyle: {
        color: "inherit",
        opacity: "inherit",
        borderColor: "inherit",
        borderWidth: "auto",
        borderCap: "inherit",
        borderJoin: "inherit",
        borderDashOffset: "inherit",
        borderMiterLimit: "inherit"
      },
      lineStyle: {
        width: "auto",
        color: "inherit",
        inactiveColor: "#ccc",
        inactiveWidth: 2,
        opacity: "inherit",
        type: "inherit",
        cap: "inherit",
        join: "inherit",
        dashOffset: "inherit",
        miterLimit: "inherit"
      },
      textStyle: {
        color: "#333"
      },
      selectedMode: !0,
      selector: !1,
      selectorLabel: {
        show: !0,
        borderRadius: 10,
        padding: [3, 5, 3, 5],
        fontSize: 12,
        fontFamily: "sans-serif",
        color: "#666",
        borderWidth: 1,
        borderColor: "#666"
      },
      emphasis: {
        selectorLabel: {
          show: !0,
          color: "#eee",
          backgroundColor: "#666"
        }
      },
      selectorPosition: "auto",
      selectorItemGap: 7,
      selectorButtonGap: 10,
      tooltip: {
        show: !1
      }
    }, e;
  }(xt)
);
const rg = g9;
var Yi = ot, ag = M, Vu = nt, y9 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t.newlineDisabled = !1, t;
    }
    return e.prototype.init = function() {
      this.group.add(this._contentGroup = new Vu()), this.group.add(this._selectorGroup = new Vu()), this._isFirstRender = !0;
    }, e.prototype.getContentGroup = function() {
      return this._contentGroup;
    }, e.prototype.getSelectorGroup = function() {
      return this._selectorGroup;
    }, e.prototype.render = function(t, a, n) {
      var i = this._isFirstRender;
      if (this._isFirstRender = !1, this.resetInner(), !!t.get("show", !0)) {
        var o = t.get("align"), s = t.get("orient");
        (!o || o === "auto") && (o = t.get("left") === "right" && s === "vertical" ? "right" : "left");
        var l = t.get("selector", !0), u = t.get("selectorPosition", !0);
        l && (!u || u === "auto") && (u = s === "horizontal" ? "end" : "start"), this.renderInner(o, t, a, n, l, s, u);
        var f = t.getBoxLayoutParams(), h = {
          width: n.getWidth(),
          height: n.getHeight()
        }, c = t.get("padding"), v = ae(f, h, c), d = this.layoutInner(t, o, v, i, l, u), p = ae(et({
          width: d.width,
          height: d.height
        }, f), h, c);
        this.group.x = p.x - d.x, this.group.y = p.y - d.y, this.group.markRedraw(), this.group.add(this._backgroundEl = nL(d, t));
      }
    }, e.prototype.resetInner = function() {
      this.getContentGroup().removeAll(), this._backgroundEl && this.group.remove(this._backgroundEl), this.getSelectorGroup().removeAll();
    }, e.prototype.renderInner = function(t, a, n, i, o, s, l) {
      var u = this.getContentGroup(), f = X(), h = a.get("selectedMode"), c = [];
      n.eachRawSeries(function(v) {
        !v.get("legendHoverLink") && c.push(v.id);
      }), ag(a.getData(), function(v, d) {
        var p = v.get("name");
        if (!this.newlineDisabled && (p === "" || p === "\n")) {
          var g = new Vu();
          g.newline = !0, u.add(g);
          return;
        }
        var y = n.getSeriesByName(p)[0];
        if (!f.get(p)) {
          if (y) {
            var m = y.getData(), _ = m.getVisual("legendLineStyle") || {}, S = m.getVisual("legendIcon"), w = m.getVisual("style"), x = this._createItem(y, p, d, v, a, t, _, w, S, h, i);
            x.on("click", Yi(Xw, p, null, i, c)).on("mouseover", Yi(ng, y.name, null, i, c)).on("mouseout", Yi(ig, y.name, null, i, c)), f.set(p, !0);
          } else
            n.eachRawSeries(function(b) {
              if (!f.get(p) && b.legendVisualProvider) {
                var T = b.legendVisualProvider;
                if (!T.containName(p))
                  return;
                var C = T.indexOfName(p), D = T.getItemVisual(C, "style"), A = T.getItemVisual(C, "legendIcon"), I = Ue(D.fill);
                I && I[3] === 0 && (I[3] = 0.2, D = V(V({}, D), {
                  fill: fa(I, "rgba")
                }));
                var L = this._createItem(b, p, d, v, a, t, {}, D, A, h, i);
                L.on("click", Yi(Xw, null, p, i, c)).on("mouseover", Yi(ng, null, p, i, c)).on("mouseout", Yi(ig, null, p, i, c)), f.set(p, !0);
              }
            }, this);
          ({}).NODE_ENV !== "production" && (f.get(p) || console.warn(p + " series not exists. Legend data should be same with series name or data name."));
        }
      }, this), o && this._createSelector(o, a, i, s, l);
    }, e.prototype._createSelector = function(t, a, n, i, o) {
      var s = this.getSelectorGroup();
      ag(t, function(u) {
        var f = u.type, h = new Ct({
          style: {
            x: 0,
            y: 0,
            align: "center",
            verticalAlign: "middle"
          },
          onclick: function() {
            n.dispatchAction({
              type: f === "all" ? "legendAllSelect" : "legendInverseSelect"
            });
          }
        });
        s.add(h);
        var c = a.getModel("selectorLabel"), v = a.getModel(["emphasis", "selectorLabel"]);
        pe(h, {
          normal: c,
          emphasis: v
        }, {
          defaultText: u.title
        }), ni(h);
      });
    }, e.prototype._createItem = function(t, a, n, i, o, s, l, u, f, h, c) {
      var v = t.visualDrawType, d = o.get("itemWidth"), p = o.get("itemHeight"), g = o.isSelected(a), y = i.get("symbolRotate"), m = i.get("symbolKeepAspect"), _ = i.get("icon");
      f = _ || f || "roundRect";
      var S = m9(f, i, l, u, v, g, c), w = new Vu(), x = i.getModel("textStyle");
      if (K(t.getLegendIcon) && (!_ || _ === "inherit"))
        w.add(t.getLegendIcon({
          itemWidth: d,
          itemHeight: p,
          icon: f,
          iconRotate: y,
          itemStyle: S.itemStyle,
          lineStyle: S.lineStyle,
          symbolKeepAspect: m
        }));
      else {
        var b = _ === "inherit" && t.getData().getVisual("symbol") ? y === "inherit" ? t.getData().getVisual("symbolRotate") : y : 0;
        w.add(_9({
          itemWidth: d,
          itemHeight: p,
          icon: f,
          iconRotate: b,
          itemStyle: S.itemStyle,
          lineStyle: S.lineStyle,
          symbolKeepAspect: m
        }));
      }
      var T = s === "left" ? d + 5 : -5, C = s, D = o.get("formatter"), A = a;
      $(D) && D ? A = D.replace("{name}", a != null ? a : "") : K(D) && (A = D(a));
      var I = g ? x.getTextColor() : i.get("inactiveColor");
      w.add(new Ct({
        style: Ot(x, {
          text: A,
          x: T,
          y: p / 2,
          fill: I,
          align: C,
          verticalAlign: "middle"
        }, {
          inheritColor: I
        })
      }));
      var L = new Tt({
        shape: w.getBoundingRect(),
        invisible: !0
      }), E = i.getModel("tooltip");
      return E.get("show") && Mo({
        el: L,
        componentModel: o,
        itemName: a,
        itemTooltipOption: E.option
      }), w.add(L), w.eachChild(function(P) {
        P.silent = !0;
      }), L.silent = !h, this.getContentGroup().add(w), ni(w), w.__legendDataIndex = n, w;
    }, e.prototype.layoutInner = function(t, a, n, i, o, s) {
      var l = this.getContentGroup(), u = this.getSelectorGroup();
      oi(t.get("orient"), l, t.get("itemGap"), n.width, n.height);
      var f = l.getBoundingRect(), h = [-f.x, -f.y];
      if (u.markRedraw(), l.markRedraw(), o) {
        oi(
          // Buttons in selectorGroup always layout horizontally
          "horizontal",
          u,
          t.get("selectorItemGap", !0)
        );
        var c = u.getBoundingRect(), v = [-c.x, -c.y], d = t.get("selectorButtonGap", !0), p = t.getOrient().index, g = p === 0 ? "width" : "height", y = p === 0 ? "height" : "width", m = p === 0 ? "y" : "x";
        s === "end" ? v[p] += f[g] + d : h[p] += c[g] + d, v[1 - p] += f[y] / 2 - c[y] / 2, u.x = v[0], u.y = v[1], l.x = h[0], l.y = h[1];
        var _ = {
          x: 0,
          y: 0
        };
        return _[g] = f[g] + d + c[g], _[y] = Math.max(f[y], c[y]), _[m] = Math.min(0, c[m] + v[1 - p]), _;
      } else
        return l.x = h[0], l.y = h[1], this.group.getBoundingRect();
    }, e.prototype.remove = function() {
      this.getContentGroup().removeAll(), this._isFirstRender = !0;
    }, e.type = "legend.plain", e;
  }($t)
);
function m9(r, e, t, a, n, i, o) {
  function s(g, y) {
    g.lineWidth === "auto" && (g.lineWidth = y.lineWidth > 0 ? 2 : 0), ag(g, function(m, _) {
      g[_] === "inherit" && (g[_] = y[_]);
    });
  }
  var l = e.getModel("itemStyle"), u = l.getItemStyle(), f = r.lastIndexOf("empty", 0) === 0 ? "fill" : "stroke", h = l.getShallow("decal");
  u.decal = !h || h === "inherit" ? a.decal : po(h, o), u.fill === "inherit" && (u.fill = a[n]), u.stroke === "inherit" && (u.stroke = a[f]), u.opacity === "inherit" && (u.opacity = (n === "fill" ? a : t).opacity), s(u, a);
  var c = e.getModel("lineStyle"), v = c.getLineStyle();
  if (s(v, t), u.fill === "auto" && (u.fill = a.fill), u.stroke === "auto" && (u.stroke = a.fill), v.stroke === "auto" && (v.stroke = a.fill), !i) {
    var d = e.get("inactiveBorderWidth"), p = u[f];
    u.lineWidth = d === "auto" ? a.lineWidth > 0 && p ? 2 : 0 : u.lineWidth, u.fill = e.get("inactiveColor"), u.stroke = e.get("inactiveBorderColor"), v.stroke = c.get("inactiveColor"), v.lineWidth = c.get("inactiveWidth");
  }
  return {
    itemStyle: u,
    lineStyle: v
  };
}
function _9(r) {
  var e = r.icon || "roundRect", t = Qt(e, 0, 0, r.itemWidth, r.itemHeight, r.itemStyle.fill, r.symbolKeepAspect);
  return t.setStyle(r.itemStyle), t.rotation = (r.iconRotate || 0) * Math.PI / 180, t.setOrigin([r.itemWidth / 2, r.itemHeight / 2]), e.indexOf("empty") > -1 && (t.style.stroke = t.style.fill, t.style.fill = "#fff", t.style.lineWidth = 2), t;
}
function Xw(r, e, t, a) {
  ig(r, e, t, a), t.dispatchAction({
    type: "legendToggleSelect",
    name: r != null ? r : e
  }), ng(r, e, t, a);
}
function yL(r) {
  for (var e = r.getZr().storage.getDisplayList(), t, a = 0, n = e.length; a < n && !(t = e[a].states.emphasis); )
    a++;
  return t && t.hoverLayer;
}
function ng(r, e, t, a) {
  yL(t) || t.dispatchAction({
    type: "highlight",
    seriesName: r,
    name: e,
    excludeSeriesId: a
  });
}
function ig(r, e, t, a) {
  yL(t) || t.dispatchAction({
    type: "downplay",
    seriesName: r,
    name: e,
    excludeSeriesId: a
  });
}
const mL = y9;
function S9(r) {
  var e = r.findComponents({
    mainType: "legend"
  });
  e && e.length && r.filterSeries(function(t) {
    for (var a = 0; a < e.length; a++)
      if (!e[a].isSelected(t.name))
        return !1;
    return !0;
  });
}
function cs(r, e, t) {
  var a = {}, n = r === "toggleSelected", i;
  return t.eachComponent("legend", function(o) {
    n && i != null ? o[i ? "select" : "unSelect"](e.name) : r === "allSelect" || r === "inverseSelect" ? o[r]() : (o[r](e.name), i = o.isSelected(e.name));
    var s = o.getData();
    M(s, function(l) {
      var u = l.get("name");
      if (!(u === "\n" || u === "")) {
        var f = o.isSelected(u);
        a.hasOwnProperty(u) ? a[u] = a[u] && f : a[u] = f;
      }
    });
  }), r === "allSelect" || r === "inverseSelect" ? {
    selected: a
  } : {
    name: e.name,
    selected: a
  };
}
function x9(r) {
  r.registerAction("legendToggleSelect", "legendselectchanged", ot(cs, "toggleSelected")), r.registerAction("legendAllSelect", "legendselectall", ot(cs, "allSelect")), r.registerAction("legendInverseSelect", "legendinverseselect", ot(cs, "inverseSelect")), r.registerAction("legendSelect", "legendselected", ot(cs, "select")), r.registerAction("legendUnSelect", "legendunselected", ot(cs, "unSelect"));
}
function _L(r) {
  r.registerComponentModel(rg), r.registerComponentView(mL), r.registerProcessor(r.PRIORITY.PROCESSOR.SERIES_FILTER, S9), r.registerSubTypeDefaulter("legend", function() {
    return "plain";
  }), x9(r);
}
var w9 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.setScrollDataIndex = function(t) {
      this.option.scrollDataIndex = t;
    }, e.prototype.init = function(t, a, n) {
      var i = Po(t);
      r.prototype.init.call(this, t, a, n), qw(this, t, i);
    }, e.prototype.mergeOption = function(t, a) {
      r.prototype.mergeOption.call(this, t, a), qw(this, this.option, t);
    }, e.type = "legend.scroll", e.defaultOption = fn(rg.defaultOption, {
      scrollDataIndex: 0,
      pageButtonItemGap: 5,
      pageButtonGap: null,
      pageButtonPosition: "end",
      pageFormatter: "{current}/{total}",
      pageIcons: {
        horizontal: ["M0,0L12,-10L12,10z", "M0,0L-12,-10L-12,10z"],
        vertical: ["M0,0L20,0L10,-20z", "M0,0L20,0L10,20z"]
      },
      pageIconColor: "#2f4554",
      pageIconInactiveColor: "#aaa",
      pageIconSize: 15,
      pageTextStyle: {
        color: "#333"
      },
      animationDurationUpdate: 800
    }), e;
  }(rg)
);
function qw(r, e, t) {
  var a = r.getOrient(), n = [1, 1];
  n[a.index] = 0, rn(e, t, {
    type: "box",
    ignoreSize: !!n
  });
}
const b9 = w9;
var Kw = nt, dd = ["width", "height"], pd = ["x", "y"], T9 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t.newlineDisabled = !0, t._currentIndex = 0, t;
    }
    return e.prototype.init = function() {
      r.prototype.init.call(this), this.group.add(this._containerGroup = new Kw()), this._containerGroup.add(this.getContentGroup()), this.group.add(this._controllerGroup = new Kw());
    }, e.prototype.resetInner = function() {
      r.prototype.resetInner.call(this), this._controllerGroup.removeAll(), this._containerGroup.removeClipPath(), this._containerGroup.__rectSize = null;
    }, e.prototype.renderInner = function(t, a, n, i, o, s, l) {
      var u = this;
      r.prototype.renderInner.call(this, t, a, n, i, o, s, l);
      var f = this._controllerGroup, h = a.get("pageIconSize", !0), c = z(h) ? h : [h, h];
      d("pagePrev", 0);
      var v = a.getModel("pageTextStyle");
      f.add(new Ct({
        name: "pageText",
        style: {
          // Placeholder to calculate a proper layout.
          text: "xx/xx",
          fill: v.getTextColor(),
          font: v.getFont(),
          verticalAlign: "middle",
          align: "center"
        },
        silent: !0
      })), d("pageNext", 1);
      function d(p, g) {
        var y = p + "DataIndex", m = xl(a.get("pageIcons", !0)[a.getOrient().name][g], {
          // Buttons will be created in each render, so we do not need
          // to worry about avoiding using legendModel kept in scope.
          onclick: Y(u._pageGo, u, y, a, i)
        }, {
          x: -c[0] / 2,
          y: -c[1] / 2,
          width: c[0],
          height: c[1]
        });
        m.name = p, f.add(m);
      }
    }, e.prototype.layoutInner = function(t, a, n, i, o, s) {
      var l = this.getSelectorGroup(), u = t.getOrient().index, f = dd[u], h = pd[u], c = dd[1 - u], v = pd[1 - u];
      o && oi(
        // Buttons in selectorGroup always layout horizontally
        "horizontal",
        l,
        t.get("selectorItemGap", !0)
      );
      var d = t.get("selectorButtonGap", !0), p = l.getBoundingRect(), g = [-p.x, -p.y], y = at(n);
      o && (y[f] = n[f] - p[f] - d);
      var m = this._layoutContentAndController(t, i, y, u, f, c, v, h);
      if (o) {
        if (s === "end")
          g[u] += m[f] + d;
        else {
          var _ = p[f] + d;
          g[u] -= _, m[h] -= _;
        }
        m[f] += p[f] + d, g[1 - u] += m[v] + m[c] / 2 - p[c] / 2, m[c] = Math.max(m[c], p[c]), m[v] = Math.min(m[v], p[v] + g[1 - u]), l.x = g[0], l.y = g[1], l.markRedraw();
      }
      return m;
    }, e.prototype._layoutContentAndController = function(t, a, n, i, o, s, l, u) {
      var f = this.getContentGroup(), h = this._containerGroup, c = this._controllerGroup;
      oi(t.get("orient"), f, t.get("itemGap"), i ? n.width : null, i ? null : n.height), oi(
        // Buttons in controller are layout always horizontally.
        "horizontal",
        c,
        t.get("pageButtonItemGap", !0)
      );
      var v = f.getBoundingRect(), d = c.getBoundingRect(), p = this._showController = v[o] > n[o], g = [-v.x, -v.y];
      a || (g[i] = f[u]);
      var y = [0, 0], m = [-d.x, -d.y], _ = ft(t.get("pageButtonGap", !0), t.get("itemGap", !0));
      if (p) {
        var S = t.get("pageButtonPosition", !0);
        S === "end" ? m[i] += n[o] - d[o] : y[i] += d[o] + _;
      }
      m[1 - i] += v[s] / 2 - d[s] / 2, f.setPosition(g), h.setPosition(y), c.setPosition(m);
      var w = {
        x: 0,
        y: 0
      };
      if (w[o] = p ? n[o] : v[o], w[s] = Math.max(v[s], d[s]), w[l] = Math.min(0, d[l] + m[1 - i]), h.__rectSize = n[o], p) {
        var x = {
          x: 0,
          y: 0
        };
        x[o] = Math.max(n[o] - d[o] - _, 0), x[s] = w[s], h.setClipPath(new Tt({
          shape: x
        })), h.__rectSize = x[o];
      } else
        c.eachChild(function(T) {
          T.attr({
            invisible: !0,
            silent: !0
          });
        });
      var b = this._getPageInfo(t);
      return b.pageIndex != null && Mt(
        f,
        {
          x: b.contentPosition[0],
          y: b.contentPosition[1]
        },
        // When switch from "show controller" to "not show controller", view should be
        // updated immediately without animation, otherwise causes weird effect.
        p ? t : null
      ), this._updatePageInfoView(t, b), w;
    }, e.prototype._pageGo = function(t, a, n) {
      var i = this._getPageInfo(a)[t];
      i != null && n.dispatchAction({
        type: "legendScroll",
        scrollDataIndex: i,
        legendId: a.id
      });
    }, e.prototype._updatePageInfoView = function(t, a) {
      var n = this._controllerGroup;
      M(["pagePrev", "pageNext"], function(f) {
        var h = f + "DataIndex", c = a[h] != null, v = n.childOfName(f);
        v && (v.setStyle("fill", c ? t.get("pageIconColor", !0) : t.get("pageIconInactiveColor", !0)), v.cursor = c ? "pointer" : "default");
      });
      var i = n.childOfName("pageText"), o = t.get("pageFormatter"), s = a.pageIndex, l = s != null ? s + 1 : 0, u = a.pageCount;
      i && o && i.setStyle("text", $(o) ? o.replace("{current}", l == null ? "" : l + "").replace("{total}", u == null ? "" : u + "") : o({
        current: l,
        total: u
      }));
    }, e.prototype._getPageInfo = function(t) {
      var a = t.get("scrollDataIndex", !0), n = this.getContentGroup(), i = this._containerGroup.__rectSize, o = t.getOrient().index, s = dd[o], l = pd[o], u = this._findTargetItemIndex(a), f = n.children(), h = f[u], c = f.length, v = c ? 1 : 0, d = {
        contentPosition: [n.x, n.y],
        pageCount: v,
        pageIndex: v - 1,
        pagePrevDataIndex: null,
        pageNextDataIndex: null
      };
      if (!h)
        return d;
      var p = S(h);
      d.contentPosition[o] = -p.s;
      for (var g = u + 1, y = p, m = p, _ = null; g <= c; ++g)
        _ = S(f[g]), // Half of the last item is out of the window.
        (!_ && m.e > y.s + i || // If the current item does not intersect with the window, the new page
        // can be started at the current item or the last item.
        _ && !w(_, y.s)) && (m.i > y.i ? y = m : y = _, y && (d.pageNextDataIndex == null && (d.pageNextDataIndex = y.i), ++d.pageCount)), m = _;
      for (var g = u - 1, y = p, m = p, _ = null; g >= -1; --g)
        _ = S(f[g]), // If the the end item does not intersect with the window started
        // from the current item, a page can be settled.
        (!_ || !w(m, _.s)) && // e.g., when page size is smaller than item size.
        y.i < m.i && (m = y, d.pagePrevDataIndex == null && (d.pagePrevDataIndex = y.i), ++d.pageCount, ++d.pageIndex), y = _;
      return d;
      function S(x) {
        if (x) {
          var b = x.getBoundingRect(), T = b[l] + x[l];
          return {
            s: T,
            e: T + b[s],
            i: x.__legendDataIndex
          };
        }
      }
      function w(x, b) {
        return x.e >= b && x.s <= b + i;
      }
    }, e.prototype._findTargetItemIndex = function(t) {
      if (!this._showController)
        return 0;
      var a, n = this.getContentGroup(), i;
      return n.eachChild(function(o, s) {
        var l = o.__legendDataIndex;
        i == null && l != null && (i = s), l === t && (a = s);
      }), a != null ? a : i;
    }, e.type = "legend.scroll", e;
  }(mL)
);
const D9 = T9;
function C9(r) {
  r.registerAction("legendScroll", "legendscroll", function(e, t) {
    var a = e.scrollDataIndex;
    a != null && t.eachComponent({
      mainType: "legend",
      subType: "scroll",
      query: e
    }, function(n) {
      n.setScrollDataIndex(a);
    });
  });
}
function A9(r) {
  yt(_L), r.registerComponentModel(b9), r.registerComponentView(D9), C9(r);
}
function M9(r) {
  yt(_L), yt(A9);
}
var I9 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.type = "dataZoom.inside", e.defaultOption = fn(cl.defaultOption, {
      disabled: !1,
      zoomLock: !1,
      zoomOnMouseWheel: !0,
      moveOnMouseMove: !0,
      moveOnMouseWheel: !1,
      preventDefaultMouseMove: !0
    }), e;
  }(cl)
);
const L9 = I9;
var pm = Dt();
function E9(r, e, t) {
  pm(r).coordSysRecordMap.each(function(a) {
    var n = a.dataZoomInfoMap.get(e.uid);
    n && (n.getRange = t);
  });
}
function P9(r, e) {
  for (var t = pm(r).coordSysRecordMap, a = t.keys(), n = 0; n < a.length; n++) {
    var i = a[n], o = t.get(i), s = o.dataZoomInfoMap;
    if (s) {
      var l = e.uid, u = s.get(l);
      u && (s.removeKey(l), s.keys().length || SL(t, o));
    }
  }
}
function SL(r, e) {
  if (e) {
    r.removeKey(e.model.uid);
    var t = e.controller;
    t && t.dispose();
  }
}
function R9(r, e) {
  var t = {
    model: e,
    containsPoint: ot(O9, e),
    dispatchAction: ot(N9, r),
    dataZoomInfoMap: null,
    controller: null
  }, a = t.controller = new Pl(r.getZr());
  return M(["pan", "zoom", "scrollMove"], function(n) {
    a.on(n, function(i) {
      var o = [];
      t.dataZoomInfoMap.each(function(s) {
        if (i.isAvailableBehavior(s.model.option)) {
          var l = (s.getRange || {})[n], u = l && l(s.dzReferCoordSysInfo, t.model.mainType, t.controller, i);
          !s.model.get("disabled", !0) && u && o.push({
            dataZoomId: s.model.id,
            start: u[0],
            end: u[1]
          });
        }
      }), o.length && t.dispatchAction(o);
    });
  }), t;
}
function N9(r, e) {
  r.isDisposed() || r.dispatchAction({
    type: "dataZoom",
    animation: {
      easing: "cubicOut",
      duration: 100
    },
    batch: e
  });
}
function O9(r, e, t, a) {
  return r.coordinateSystem.containPoint([t, a]);
}
function k9(r) {
  var e, t = "type_", a = {
    type_true: 2,
    type_move: 1,
    type_false: 0,
    type_undefined: -1
  }, n = !0;
  return r.each(function(i) {
    var o = i.model, s = o.get("disabled", !0) ? !1 : o.get("zoomLock", !0) ? "move" : !0;
    a[t + s] > a[t + e] && (e = s), n = n && o.get("preventDefaultMouseMove", !0);
  }), {
    controlType: e,
    opt: {
      // RoamController will enable all of these functionalities,
      // and the final behavior is determined by its event listener
      // provided by each inside zoom.
      zoomOnMouseWheel: !0,
      moveOnMouseMove: !0,
      moveOnMouseWheel: !0,
      preventDefaultMouseMove: !!n
    }
  };
}
function V9(r) {
  r.registerProcessor(r.PRIORITY.PROCESSOR.FILTER, function(e, t) {
    var a = pm(t), n = a.coordSysRecordMap || (a.coordSysRecordMap = X());
    n.each(function(i) {
      i.dataZoomInfoMap = null;
    }), e.eachComponent({
      mainType: "dataZoom",
      subType: "inside"
    }, function(i) {
      var o = eL(i);
      M(o.infoList, function(s) {
        var l = s.model.uid, u = n.get(l) || n.set(l, R9(t, s.model)), f = u.dataZoomInfoMap || (u.dataZoomInfoMap = X());
        f.set(i.uid, {
          dzReferCoordSysInfo: s,
          model: i,
          getRange: null
        });
      });
    }), n.each(function(i) {
      var o = i.controller, s, l = i.dataZoomInfoMap;
      if (l) {
        var u = l.keys()[0];
        u != null && (s = l.get(u));
      }
      if (!s) {
        SL(n, i);
        return;
      }
      var f = k9(l);
      o.enable(f.controlType, f.opt), o.setPointerChecker(i.containsPoint), Vo(i, "dispatchAction", s.model.get("throttle", !0), "fixRate");
    });
  });
}
var B9 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = "dataZoom.inside", t;
    }
    return e.prototype.render = function(t, a, n) {
      if (r.prototype.render.apply(this, arguments), t.noTarget()) {
        this._clear();
        return;
      }
      this.range = t.getPercentRange(), E9(n, t, {
        pan: Y(gd.pan, this),
        zoom: Y(gd.zoom, this),
        scrollMove: Y(gd.scrollMove, this)
      });
    }, e.prototype.dispose = function() {
      this._clear(), r.prototype.dispose.apply(this, arguments);
    }, e.prototype._clear = function() {
      P9(this.api, this.dataZoomModel), this.range = null;
    }, e.type = "dataZoom.inside", e;
  }(om)
), gd = {
  zoom: function(r, e, t, a) {
    var n = this.range, i = n.slice(), o = r.axisModels[0];
    if (o) {
      var s = yd[e](null, [a.originX, a.originY], o, t, r), l = (s.signal > 0 ? s.pixelStart + s.pixelLength - s.pixel : s.pixel - s.pixelStart) / s.pixelLength * (i[1] - i[0]) + i[0], u = Math.max(1 / a.scale, 0);
      i[0] = (i[0] - l) * u + l, i[1] = (i[1] - l) * u + l;
      var f = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();
      if (Di(0, i, [0, 100], 0, f.minSpan, f.maxSpan), this.range = i, n[0] !== i[0] || n[1] !== i[1])
        return i;
    }
  },
  pan: jw(function(r, e, t, a, n, i) {
    var o = yd[a]([i.oldX, i.oldY], [i.newX, i.newY], e, n, t);
    return o.signal * (r[1] - r[0]) * o.pixel / o.pixelLength;
  }),
  scrollMove: jw(function(r, e, t, a, n, i) {
    var o = yd[a]([0, 0], [i.scrollDelta, i.scrollDelta], e, n, t);
    return o.signal * (r[1] - r[0]) * i.scrollDelta;
  })
};
function jw(r) {
  return function(e, t, a, n) {
    var i = this.range, o = i.slice(), s = e.axisModels[0];
    if (s) {
      var l = r(o, s, e, t, a, n);
      if (Di(l, o, [0, 100], "all"), this.range = o, i[0] !== o[0] || i[1] !== o[1])
        return o;
    }
  };
}
var yd = {
  grid: function(r, e, t, a, n) {
    var i = t.axis, o = {}, s = n.model.coordinateSystem.getRect();
    return r = r || [0, 0], i.dim === "x" ? (o.pixel = e[0] - r[0], o.pixelLength = s.width, o.pixelStart = s.x, o.signal = i.inverse ? 1 : -1) : (o.pixel = e[1] - r[1], o.pixelLength = s.height, o.pixelStart = s.y, o.signal = i.inverse ? -1 : 1), o;
  },
  polar: function(r, e, t, a, n) {
    var i = t.axis, o = {}, s = n.model.coordinateSystem, l = s.getRadiusAxis().getExtent(), u = s.getAngleAxis().getExtent();
    return r = r ? s.pointToCoord(r) : [0, 0], e = s.pointToCoord(e), t.mainType === "radiusAxis" ? (o.pixel = e[0] - r[0], o.pixelLength = l[1] - l[0], o.pixelStart = l[0], o.signal = i.inverse ? 1 : -1) : (o.pixel = e[1] - r[1], o.pixelLength = u[1] - u[0], o.pixelStart = u[0], o.signal = i.inverse ? -1 : 1), o;
  },
  singleAxis: function(r, e, t, a, n) {
    var i = t.axis, o = n.model.coordinateSystem.getRect(), s = {};
    return r = r || [0, 0], i.orient === "horizontal" ? (s.pixel = e[0] - r[0], s.pixelLength = o.width, s.pixelStart = o.x, s.signal = i.inverse ? 1 : -1) : (s.pixel = e[1] - r[1], s.pixelLength = o.height, s.pixelStart = o.y, s.signal = i.inverse ? -1 : 1), s;
  }
};
const z9 = B9;
function xL(r) {
  sm(r), r.registerComponentModel(L9), r.registerComponentView(z9), V9(r);
}
var G9 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.type = "dataZoom.slider", e.layoutMode = "box", e.defaultOption = fn(cl.defaultOption, {
      show: !0,
      // deault value can only be drived in view stage.
      right: "ph",
      top: "ph",
      width: "ph",
      height: "ph",
      left: null,
      bottom: null,
      borderColor: "#d2dbee",
      borderRadius: 3,
      backgroundColor: "rgba(47,69,84,0)",
      // dataBackgroundColor: '#ddd',
      dataBackground: {
        lineStyle: {
          color: "#d2dbee",
          width: 0.5
        },
        areaStyle: {
          color: "#d2dbee",
          opacity: 0.2
        }
      },
      selectedDataBackground: {
        lineStyle: {
          color: "#8fb0f7",
          width: 0.5
        },
        areaStyle: {
          color: "#8fb0f7",
          opacity: 0.2
        }
      },
      // Color of selected window.
      fillerColor: "rgba(135,175,274,0.2)",
      handleIcon: "path://M-9.35,34.56V42m0-40V9.5m-2,0h4a2,2,0,0,1,2,2v21a2,2,0,0,1-2,2h-4a2,2,0,0,1-2-2v-21A2,2,0,0,1-11.35,9.5Z",
      // Percent of the slider height
      handleSize: "100%",
      handleStyle: {
        color: "#fff",
        borderColor: "#ACB8D1"
      },
      moveHandleSize: 7,
      moveHandleIcon: "path://M-320.9-50L-320.9-50c18.1,0,27.1,9,27.1,27.1V85.7c0,18.1-9,27.1-27.1,27.1l0,0c-18.1,0-27.1-9-27.1-27.1V-22.9C-348-41-339-50-320.9-50z M-212.3-50L-212.3-50c18.1,0,27.1,9,27.1,27.1V85.7c0,18.1-9,27.1-27.1,27.1l0,0c-18.1,0-27.1-9-27.1-27.1V-22.9C-239.4-41-230.4-50-212.3-50z M-103.7-50L-103.7-50c18.1,0,27.1,9,27.1,27.1V85.7c0,18.1-9,27.1-27.1,27.1l0,0c-18.1,0-27.1-9-27.1-27.1V-22.9C-130.9-41-121.8-50-103.7-50z",
      moveHandleStyle: {
        color: "#D2DBEE",
        opacity: 0.7
      },
      showDetail: !0,
      showDataShadow: "auto",
      realtime: !0,
      zoomLock: !1,
      textStyle: {
        color: "#6E7079"
      },
      brushSelect: !0,
      brushStyle: {
        color: "rgba(135,175,274,0.15)"
      },
      emphasis: {
        handleStyle: {
          borderColor: "#8FB0F7"
        },
        moveHandleStyle: {
          color: "#8FB0F7"
        }
      }
    }), e;
  }(cl)
);
const F9 = G9;
var vs = Tt, Jw = 7, H9 = 1, md = 30, W9 = 7, ds = "horizontal", Qw = "vertical", $9 = 5, U9 = ["line", "bar", "candlestick", "scatter"], Y9 = {
  easing: "cubicOut",
  duration: 100,
  delay: 0
}, Z9 = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t._displayables = {}, t;
    }
    return e.prototype.init = function(t, a) {
      this.api = a, this._onBrush = Y(this._onBrush, this), this._onBrushEnd = Y(this._onBrushEnd, this);
    }, e.prototype.render = function(t, a, n, i) {
      if (r.prototype.render.apply(this, arguments), Vo(this, "_dispatchZoomAction", t.get("throttle"), "fixRate"), this._orient = t.getOrient(), t.get("show") === !1) {
        this.group.removeAll();
        return;
      }
      if (t.noTarget()) {
        this._clear(), this.group.removeAll();
        return;
      }
      (!i || i.type !== "dataZoom" || i.from !== this.uid) && this._buildView(), this._updateView();
    }, e.prototype.dispose = function() {
      this._clear(), r.prototype.dispose.apply(this, arguments);
    }, e.prototype._clear = function() {
      tl(this, "_dispatchZoomAction");
      var t = this.api.getZr();
      t.off("mousemove", this._onBrush), t.off("mouseup", this._onBrushEnd);
    }, e.prototype._buildView = function() {
      var t = this.group;
      t.removeAll(), this._brushing = !1, this._displayables.brushRect = null, this._resetLocation(), this._resetInterval();
      var a = this._displayables.sliderGroup = new nt();
      this._renderBackground(), this._renderHandle(), this._renderDataShadow(), t.add(a), this._positionGroup();
    }, e.prototype._resetLocation = function() {
      var t = this.dataZoomModel, a = this.api, n = t.get("brushSelect"), i = n ? W9 : 0, o = this._findCoordRect(), s = {
        width: a.getWidth(),
        height: a.getHeight()
      }, l = this._orient === ds ? {
        // Why using 'right', because right should be used in vertical,
        // and it is better to be consistent for dealing with position param merge.
        right: s.width - o.x - o.width,
        top: s.height - md - Jw - i,
        width: o.width,
        height: md
      } : {
        right: Jw,
        top: o.y,
        width: md,
        height: o.height
      }, u = Po(t.option);
      M(["right", "top", "width", "height"], function(h) {
        u[h] === "ph" && (u[h] = l[h]);
      });
      var f = ae(u, s);
      this._location = {
        x: f.x,
        y: f.y
      }, this._size = [f.width, f.height], this._orient === Qw && this._size.reverse();
    }, e.prototype._positionGroup = function() {
      var t = this.group, a = this._location, n = this._orient, i = this.dataZoomModel.getFirstTargetAxisModel(), o = i && i.get("inverse"), s = this._displayables.sliderGroup, l = (this._dataShadowInfo || {}).otherAxisInverse;
      s.attr(n === ds && !o ? {
        scaleY: l ? 1 : -1,
        scaleX: 1
      } : n === ds && o ? {
        scaleY: l ? 1 : -1,
        scaleX: -1
      } : n === Qw && !o ? {
        scaleY: l ? -1 : 1,
        scaleX: 1,
        rotation: Math.PI / 2
      } : {
        scaleY: l ? -1 : 1,
        scaleX: -1,
        rotation: Math.PI / 2
      });
      var u = t.getBoundingRect([s]);
      t.x = a.x - u.x, t.y = a.y - u.y, t.markRedraw();
    }, e.prototype._getViewExtent = function() {
      return [0, this._size[0]];
    }, e.prototype._renderBackground = function() {
      var t = this.dataZoomModel, a = this._size, n = this._displayables.sliderGroup, i = t.get("brushSelect");
      n.add(new vs({
        silent: !0,
        shape: {
          x: 0,
          y: 0,
          width: a[0],
          height: a[1]
        },
        style: {
          fill: t.get("backgroundColor")
        },
        z2: -40
      }));
      var o = new vs({
        shape: {
          x: 0,
          y: 0,
          width: a[0],
          height: a[1]
        },
        style: {
          fill: "transparent"
        },
        z2: 0,
        onclick: Y(this._onClickPanel, this)
      }), s = this.api.getZr();
      i ? (o.on("mousedown", this._onBrushStart, this), o.cursor = "crosshair", s.on("mousemove", this._onBrush), s.on("mouseup", this._onBrushEnd)) : (s.off("mousemove", this._onBrush), s.off("mouseup", this._onBrushEnd)), n.add(o);
    }, e.prototype._renderDataShadow = function() {
      var t = this._dataShadowInfo = this._prepareDataShadowInfo();
      if (this._displayables.dataShadowSegs = [], !t)
        return;
      var a = this._size, n = this._shadowSize || [], i = t.series, o = i.getRawData(), s = i.getShadowDim && i.getShadowDim(), l = s && o.getDimensionInfo(s) ? i.getShadowDim() : t.otherDim;
      if (l == null)
        return;
      var u = this._shadowPolygonPts, f = this._shadowPolylinePts;
      if (o !== this._shadowData || l !== this._shadowDim || a[0] !== n[0] || a[1] !== n[1]) {
        var h = o.getDataExtent(l), c = (h[1] - h[0]) * 0.3;
        h = [h[0] - c, h[1] + c];
        var v = [0, a[1]], d = [0, a[0]], p = [[a[0], 0], [0, 0]], g = [], y = d[1] / (o.count() - 1), m = 0, _ = Math.round(o.count() / a[0]), S;
        o.each([l], function(C, D) {
          if (_ > 0 && D % _) {
            m += y;
            return;
          }
          var A = C == null || isNaN(C) || C === "", I = A ? 0 : Lt(C, h, v, !0);
          A && !S && D ? (p.push([p[p.length - 1][0], 0]), g.push([g[g.length - 1][0], 0])) : !A && S && (p.push([m, 0]), g.push([m, 0])), p.push([m, I]), g.push([m, I]), m += y, S = A;
        }), u = this._shadowPolygonPts = p, f = this._shadowPolylinePts = g;
      }
      this._shadowData = o, this._shadowDim = l, this._shadowSize = [a[0], a[1]];
      var w = this.dataZoomModel;
      function x(C) {
        var D = w.getModel(C ? "selectedDataBackground" : "dataBackground"), A = new nt(), I = new Ge({
          shape: {
            points: u
          },
          segmentIgnoreThreshold: 1,
          style: D.getModel("areaStyle").getAreaStyle(),
          silent: !0,
          z2: -20
        }), L = new Fe({
          shape: {
            points: f
          },
          segmentIgnoreThreshold: 1,
          style: D.getModel("lineStyle").getLineStyle(),
          silent: !0,
          z2: -19
        });
        return A.add(I), A.add(L), A;
      }
      for (var b = 0; b < 3; b++) {
        var T = x(b === 1);
        this._displayables.sliderGroup.add(T), this._displayables.dataShadowSegs.push(T);
      }
    }, e.prototype._prepareDataShadowInfo = function() {
      var t = this.dataZoomModel, a = t.get("showDataShadow");
      if (a !== !1) {
        var n, i = this.ecModel;
        return t.eachTargetAxis(function(o, s) {
          var l = t.getAxisProxy(o, s).getTargetSeriesModels();
          M(l, function(u) {
            if (!n && !(a !== !0 && vt(U9, u.get("type")) < 0)) {
              var f = i.getComponent(Za(o), s).axis, h = X9(o), c, v = u.coordinateSystem;
              h != null && v.getOtherAxis && (c = v.getOtherAxis(f).inverse), h = u.getData().mapDimension(h), n = {
                thisAxis: f,
                series: u,
                thisDim: o,
                otherDim: h,
                otherAxisInverse: c
              };
            }
          }, this);
        }, this), n;
      }
    }, e.prototype._renderHandle = function() {
      var t = this.group, a = this._displayables, n = a.handles = [null, null], i = a.handleLabels = [null, null], o = this._displayables.sliderGroup, s = this._size, l = this.dataZoomModel, u = this.api, f = l.get("borderRadius") || 0, h = l.get("brushSelect"), c = a.filler = new vs({
        silent: h,
        style: {
          fill: l.get("fillerColor")
        },
        textConfig: {
          position: "inside"
        }
      });
      o.add(c), o.add(new vs({
        silent: !0,
        subPixelOptimize: !0,
        shape: {
          x: 0,
          y: 0,
          width: s[0],
          height: s[1],
          r: f
        },
        style: {
          // deprecated option
          stroke: l.get("dataBackgroundColor") || l.get("borderColor"),
          lineWidth: H9,
          fill: "rgba(0,0,0,0)"
        }
      })), M([0, 1], function(_) {
        var S = l.get("handleIcon");
        !Af[S] && S.indexOf("path://") < 0 && S.indexOf("image://") < 0 && (S = "path://" + S, {}.NODE_ENV !== "production" && Ar("handleIcon now needs 'path://' prefix when using a path string"));
        var w = Qt(S, -1, 0, 2, 2, null, !0);
        w.attr({
          cursor: tb(this._orient),
          draggable: !0,
          drift: Y(this._onDragMove, this, _),
          ondragend: Y(this._onDragEnd, this),
          onmouseover: Y(this._showDataInfo, this, !0),
          onmouseout: Y(this._showDataInfo, this, !1),
          z2: 5
        });
        var x = w.getBoundingRect(), b = l.get("handleSize");
        this._handleHeight = H(b, this._size[1]), this._handleWidth = x.width / x.height * this._handleHeight, w.setStyle(l.getModel("handleStyle").getItemStyle()), w.style.strokeNoScale = !0, w.rectHover = !0, w.ensureState("emphasis").style = l.getModel(["emphasis", "handleStyle"]).getItemStyle(), ni(w);
        var T = l.get("handleColor");
        T != null && (w.style.fill = T), o.add(n[_] = w);
        var C = l.getModel("textStyle");
        t.add(i[_] = new Ct({
          silent: !0,
          invisible: !0,
          style: Ot(C, {
            x: 0,
            y: 0,
            text: "",
            verticalAlign: "middle",
            align: "center",
            fill: C.getTextColor(),
            font: C.getFont()
          }),
          z2: 10
        }));
      }, this);
      var v = c;
      if (h) {
        var d = H(l.get("moveHandleSize"), s[1]), p = a.moveHandle = new Tt({
          style: l.getModel("moveHandleStyle").getItemStyle(),
          silent: !0,
          shape: {
            r: [0, 0, 2, 2],
            y: s[1] - 0.5,
            height: d
          }
        }), g = d * 0.8, y = a.moveHandleIcon = Qt(l.get("moveHandleIcon"), -g / 2, -g / 2, g, g, "#fff", !0);
        y.silent = !0, y.y = s[1] + d / 2 - 0.5, p.ensureState("emphasis").style = l.getModel(["emphasis", "moveHandleStyle"]).getItemStyle();
        var m = Math.min(s[1] / 2, Math.max(d, 10));
        v = a.moveZone = new Tt({
          invisible: !0,
          shape: {
            y: s[1] - m,
            height: d + m
          }
        }), v.on("mouseover", function() {
          u.enterEmphasis(p);
        }).on("mouseout", function() {
          u.leaveEmphasis(p);
        }), o.add(p), o.add(y), o.add(v);
      }
      v.attr({
        draggable: !0,
        cursor: tb(this._orient),
        drift: Y(this._onDragMove, this, "all"),
        ondragstart: Y(this._showDataInfo, this, !0),
        ondragend: Y(this._onDragEnd, this),
        onmouseover: Y(this._showDataInfo, this, !0),
        onmouseout: Y(this._showDataInfo, this, !1)
      });
    }, e.prototype._resetInterval = function() {
      var t = this._range = this.dataZoomModel.getPercentRange(), a = this._getViewExtent();
      this._handleEnds = [Lt(t[0], [0, 100], a, !0), Lt(t[1], [0, 100], a, !0)];
    }, e.prototype._updateInterval = function(t, a) {
      var n = this.dataZoomModel, i = this._handleEnds, o = this._getViewExtent(), s = n.findRepresentativeAxisProxy().getMinMaxSpan(), l = [0, 100];
      Di(a, i, o, n.get("zoomLock") ? "all" : t, s.minSpan != null ? Lt(s.minSpan, l, o, !0) : null, s.maxSpan != null ? Lt(s.maxSpan, l, o, !0) : null);
      var u = this._range, f = this._range = sr([Lt(i[0], o, l, !0), Lt(i[1], o, l, !0)]);
      return !u || u[0] !== f[0] || u[1] !== f[1];
    }, e.prototype._updateView = function(t) {
      var a = this._displayables, n = this._handleEnds, i = sr(n.slice()), o = this._size;
      M([0, 1], function(v) {
        var d = a.handles[v], p = this._handleHeight;
        d.attr({
          scaleX: p / 2,
          scaleY: p / 2,
          // This is a trick, by adding an extra tiny offset to let the default handle's end point align to the drag window.
          // NOTE: It may affect some custom shapes a bit. But we prefer to have better result by default.
          x: n[v] + (v ? -1 : 1),
          y: o[1] / 2 - p / 2
        });
      }, this), a.filler.setShape({
        x: i[0],
        y: 0,
        width: i[1] - i[0],
        height: o[1]
      });
      var s = {
        x: i[0],
        width: i[1] - i[0]
      };
      a.moveHandle && (a.moveHandle.setShape(s), a.moveZone.setShape(s), a.moveZone.getBoundingRect(), a.moveHandleIcon && a.moveHandleIcon.attr("x", s.x + s.width / 2));
      for (var l = a.dataShadowSegs, u = [0, i[0], i[1], o[0]], f = 0; f < l.length; f++) {
        var h = l[f], c = h.getClipPath();
        c || (c = new Tt(), h.setClipPath(c)), c.setShape({
          x: u[f],
          y: 0,
          width: u[f + 1] - u[f],
          height: o[1]
        });
      }
      this._updateDataInfo(t);
    }, e.prototype._updateDataInfo = function(t) {
      var a = this.dataZoomModel, n = this._displayables, i = n.handleLabels, o = this._orient, s = ["", ""];
      if (a.get("showDetail")) {
        var l = a.findRepresentativeAxisProxy();
        if (l) {
          var u = l.getAxisModel().axis, f = this._range, h = t ? l.calculateDataWindow({
            start: f[0],
            end: f[1]
          }).valueWindow : l.getDataValueWindow();
          s = [this._formatLabel(h[0], u), this._formatLabel(h[1], u)];
        }
      }
      var c = sr(this._handleEnds.slice());
      v.call(this, 0), v.call(this, 1);
      function v(d) {
        var p = ii(n.handles[d].parent, this.group), g = bh(d === 0 ? "right" : "left", p), y = this._handleWidth / 2 + $9, m = Dr([c[d] + (d === 0 ? -y : y), this._size[1] / 2], p);
        i[d].setStyle({
          x: m[0],
          y: m[1],
          verticalAlign: o === ds ? "middle" : g,
          align: o === ds ? g : "center",
          text: s[d]
        });
      }
    }, e.prototype._formatLabel = function(t, a) {
      var n = this.dataZoomModel, i = n.get("labelFormatter"), o = n.get("labelPrecision");
      (o == null || o === "auto") && (o = a.getPixelPrecision());
      var s = t == null || isNaN(t) ? "" : a.type === "category" || a.type === "time" ? a.scale.getLabel({
        value: Math.round(t)
      }) : t.toFixed(Math.min(o, 20));
      return K(i) ? i(t, s) : $(i) ? i.replace("{value}", s) : s;
    }, e.prototype._showDataInfo = function(t) {
      t = this._dragging || t;
      var a = this._displayables, n = a.handleLabels;
      n[0].attr("invisible", !t), n[1].attr("invisible", !t), a.moveHandle && this.api[t ? "enterEmphasis" : "leaveEmphasis"](a.moveHandle, 1);
    }, e.prototype._onDragMove = function(t, a, n, i) {
      this._dragging = !0, da(i.event);
      var o = this._displayables.sliderGroup.getLocalTransform(), s = Dr([a, n], o, !0), l = this._updateInterval(t, s[0]), u = this.dataZoomModel.get("realtime");
      this._updateView(!u), l && u && this._dispatchZoomAction(!0);
    }, e.prototype._onDragEnd = function() {
      this._dragging = !1, this._showDataInfo(!1);
      var t = this.dataZoomModel.get("realtime");
      !t && this._dispatchZoomAction(!1);
    }, e.prototype._onClickPanel = function(t) {
      var a = this._size, n = this._displayables.sliderGroup.transformCoordToLocal(t.offsetX, t.offsetY);
      if (!(n[0] < 0 || n[0] > a[0] || n[1] < 0 || n[1] > a[1])) {
        var i = this._handleEnds, o = (i[0] + i[1]) / 2, s = this._updateInterval("all", n[0] - o);
        this._updateView(), s && this._dispatchZoomAction(!1);
      }
    }, e.prototype._onBrushStart = function(t) {
      var a = t.offsetX, n = t.offsetY;
      this._brushStart = new ut(a, n), this._brushing = !0, this._brushStartTime = +/* @__PURE__ */ new Date();
    }, e.prototype._onBrushEnd = function(t) {
      if (this._brushing) {
        var a = this._displayables.brushRect;
        if (this._brushing = !1, !!a) {
          a.attr("ignore", !0);
          var n = a.shape, i = +/* @__PURE__ */ new Date();
          if (!(i - this._brushStartTime < 200 && Math.abs(n.width) < 5)) {
            var o = this._getViewExtent(), s = [0, 100];
            this._range = sr([Lt(n.x, o, s, !0), Lt(n.x + n.width, o, s, !0)]), this._handleEnds = [n.x, n.x + n.width], this._updateView(), this._dispatchZoomAction(!1);
          }
        }
      }
    }, e.prototype._onBrush = function(t) {
      this._brushing && (da(t.event), this._updateBrushRect(t.offsetX, t.offsetY));
    }, e.prototype._updateBrushRect = function(t, a) {
      var n = this._displayables, i = this.dataZoomModel, o = n.brushRect;
      o || (o = n.brushRect = new vs({
        silent: !0,
        style: i.getModel("brushStyle").getItemStyle()
      }), n.sliderGroup.add(o)), o.attr("ignore", !1);
      var s = this._brushStart, l = this._displayables.sliderGroup, u = l.transformCoordToLocal(t, a), f = l.transformCoordToLocal(s.x, s.y), h = this._size;
      u[0] = Math.max(Math.min(h[0], u[0]), 0), o.setShape({
        x: f[0],
        y: 0,
        width: u[0] - f[0],
        height: h[1]
      });
    }, e.prototype._dispatchZoomAction = function(t) {
      var a = this._range;
      this.api.dispatchAction({
        type: "dataZoom",
        from: this.uid,
        dataZoomId: this.dataZoomModel.id,
        animation: t ? Y9 : null,
        start: a[0],
        end: a[1]
      });
    }, e.prototype._findCoordRect = function() {
      var t, a = eL(this.dataZoomModel).infoList;
      if (!t && a.length) {
        var n = a[0].model.coordinateSystem;
        t = n.getRect && n.getRect();
      }
      if (!t) {
        var i = this.api.getWidth(), o = this.api.getHeight();
        t = {
          x: i * 0.2,
          y: o * 0.2,
          width: i * 0.6,
          height: o * 0.6
        };
      }
      return t;
    }, e.type = "dataZoom.slider", e;
  }(om)
);
function X9(r) {
  var e = {
    x: "y",
    y: "x",
    radius: "angle",
    angle: "radius"
  };
  return e[r];
}
function tb(r) {
  return r === "vertical" ? "ns-resize" : "ew-resize";
}
const q9 = Z9;
function wL(r) {
  r.registerComponentModel(F9), r.registerComponentView(q9), sm(r);
}
function K9(r) {
  yt(xL), yt(wL);
}
var j9 = {
  /**
   * @public
   */
  get: function(r, e, t) {
    var a = at((J9[r] || {})[e]);
    return t && z(a) ? a[a.length - 1] : a;
  }
}, J9 = {
  color: {
    active: ["#006edd", "#e0ffff"],
    inactive: ["rgba(0,0,0,0)"]
  },
  colorHue: {
    active: [0, 360],
    inactive: [0, 0]
  },
  colorSaturation: {
    active: [0.3, 1],
    inactive: [0, 0]
  },
  colorLightness: {
    active: [0.9, 0.5],
    inactive: [0, 0]
  },
  colorAlpha: {
    active: [0.3, 1],
    inactive: [0, 0]
  },
  opacity: {
    active: [0.3, 1],
    inactive: [0, 0]
  },
  symbol: {
    active: ["circle", "roundRect", "diamond"],
    inactive: ["none"]
  },
  symbolSize: {
    active: [10, 50],
    inactive: [0, 0]
  }
};
const bL = j9;
var eb = ce.mapVisual, Q9 = ce.eachVisual, tZ = z, rb = M, eZ = sr, rZ = Lt, aZ = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t.stateList = ["inRange", "outOfRange"], t.replacableOptionKeys = ["inRange", "outOfRange", "target", "controller", "color"], t.layoutMode = {
        type: "box",
        ignoreSize: !0
      }, t.dataBound = [-1 / 0, 1 / 0], t.targetVisuals = {}, t.controllerVisuals = {}, t;
    }
    return e.prototype.init = function(t, a, n) {
      this.mergeDefaultAndTheme(t, n);
    }, e.prototype.optionUpdated = function(t, a) {
      var n = this.option;
      !a && hL(n, t, this.replacableOptionKeys), this.textStyleModel = this.getModel("textStyle"), this.resetItemSize(), this.completeVisualOption();
    }, e.prototype.resetVisual = function(t) {
      var a = this.stateList;
      t = Y(t, this), this.controllerVisuals = Qp(this.option.controller, a, t), this.targetVisuals = Qp(this.option.target, a, t);
    }, e.prototype.getItemSymbol = function() {
      return null;
    }, e.prototype.getTargetSeriesIndices = function() {
      var t = this.option.seriesIndex, a = [];
      return t == null || t === "all" ? this.ecModel.eachSeries(function(n, i) {
        a.push(i);
      }) : a = Pt(t), a;
    }, e.prototype.eachTargetSeries = function(t, a) {
      M(this.getTargetSeriesIndices(), function(n) {
        var i = this.ecModel.getSeriesByIndex(n);
        i && t.call(a, i);
      }, this);
    }, e.prototype.isTargetSeries = function(t) {
      var a = !1;
      return this.eachTargetSeries(function(n) {
        n === t && (a = !0);
      }), a;
    }, e.prototype.formatValueText = function(t, a, n) {
      var i = this.option, o = i.precision, s = this.dataBound, l = i.formatter, u;
      n = n || ["<", ">"], z(t) && (t = t.slice(), u = !0);
      var f = a ? t : u ? [h(t[0]), h(t[1])] : h(t);
      if ($(l))
        return l.replace("{value}", u ? f[0] : f).replace("{value2}", u ? f[1] : f);
      if (K(l))
        return u ? l(t[0], t[1]) : l(t);
      if (u)
        return t[0] === s[0] ? n[0] + " " + f[1] : t[1] === s[1] ? n[1] + " " + f[0] : f[0] + " - " + f[1];
      return f;
      function h(c) {
        return c === s[0] ? "min" : c === s[1] ? "max" : (+c).toFixed(Math.min(o, 20));
      }
    }, e.prototype.resetExtent = function() {
      var t = this.option, a = eZ([t.min, t.max]);
      this._dataExtent = a;
    }, e.prototype.getDataDimensionIndex = function(t) {
      var a = this.option.dimension;
      if (a != null)
        return t.getDimensionIndex(a);
      for (var n = t.dimensions, i = n.length - 1; i >= 0; i--) {
        var o = n[i], s = t.getDimensionInfo(o);
        if (!s.isCalculationCoord)
          return s.storeDimIndex;
      }
    }, e.prototype.getExtent = function() {
      return this._dataExtent.slice();
    }, e.prototype.completeVisualOption = function() {
      var t = this.ecModel, a = this.option, n = {
        inRange: a.inRange,
        outOfRange: a.outOfRange
      }, i = a.target || (a.target = {}), o = a.controller || (a.controller = {});
      ht(i, n), ht(o, n);
      var s = this.isCategory();
      l.call(this, i), l.call(this, o), u.call(this, i, "inRange", "outOfRange"), f.call(this, o);
      function l(h) {
        tZ(a.color) && !h.inRange && (h.inRange = {
          color: a.color.slice().reverse()
        }), h.inRange = h.inRange || {
          color: t.get("gradientColor")
        };
      }
      function u(h, c, v) {
        var d = h[c], p = h[v];
        d && !p && (p = h[v] = {}, rb(d, function(g, y) {
          if (ce.isValidType(y)) {
            var m = bL.get(y, "inactive", s);
            m != null && (p[y] = m, y === "color" && !p.hasOwnProperty("opacity") && !p.hasOwnProperty("colorAlpha") && (p.opacity = [0, 0]));
          }
        }));
      }
      function f(h) {
        var c = (h.inRange || {}).symbol || (h.outOfRange || {}).symbol, v = (h.inRange || {}).symbolSize || (h.outOfRange || {}).symbolSize, d = this.get("inactiveColor"), p = this.getItemSymbol(), g = p || "roundRect";
        rb(this.stateList, function(y) {
          var m = this.itemSize, _ = h[y];
          _ || (_ = h[y] = {
            color: s ? d : [d]
          }), _.symbol == null && (_.symbol = c && at(c) || (s ? g : [g])), _.symbolSize == null && (_.symbolSize = v && at(v) || (s ? m[0] : [m[0], m[0]])), _.symbol = eb(_.symbol, function(x) {
            return x === "none" ? g : x;
          });
          var S = _.symbolSize;
          if (S != null) {
            var w = -1 / 0;
            Q9(S, function(x) {
              x > w && (w = x);
            }), _.symbolSize = eb(S, function(x) {
              return rZ(x, [0, w], [0, m[0]], !0);
            });
          }
        }, this);
      }
    }, e.prototype.resetItemSize = function() {
      this.itemSize = [parseFloat(this.get("itemWidth")), parseFloat(this.get("itemHeight"))];
    }, e.prototype.isCategory = function() {
      return !!this.option.categories;
    }, e.prototype.setSelected = function(t) {
    }, e.prototype.getSelected = function() {
      return null;
    }, e.prototype.getValueState = function(t) {
      return null;
    }, e.prototype.getVisualMeta = function(t) {
      return null;
    }, e.type = "visualMap", e.dependencies = ["series"], e.defaultOption = {
      show: !0,
      // zlevel: 0,
      z: 4,
      seriesIndex: "all",
      min: 0,
      max: 200,
      left: 0,
      right: null,
      top: null,
      bottom: 0,
      itemWidth: null,
      itemHeight: null,
      inverse: !1,
      orient: "vertical",
      backgroundColor: "rgba(0,0,0,0)",
      borderColor: "#ccc",
      contentColor: "#5793f3",
      inactiveColor: "#aaa",
      borderWidth: 0,
      padding: 5,
      // 接受数组分别设定上右下左边距，同css
      textGap: 10,
      precision: 0,
      textStyle: {
        color: "#333"
        // 值域文字颜色
      }
    }, e;
  }(xt)
);
const eh = aZ;
var ab = [20, 140], nZ = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.optionUpdated = function(t, a) {
      r.prototype.optionUpdated.apply(this, arguments), this.resetExtent(), this.resetVisual(function(n) {
        n.mappingMethod = "linear", n.dataExtent = this.getExtent();
      }), this._resetRange();
    }, e.prototype.resetItemSize = function() {
      r.prototype.resetItemSize.apply(this, arguments);
      var t = this.itemSize;
      (t[0] == null || isNaN(t[0])) && (t[0] = ab[0]), (t[1] == null || isNaN(t[1])) && (t[1] = ab[1]);
    }, e.prototype._resetRange = function() {
      var t = this.getExtent(), a = this.option.range;
      !a || a.auto ? (t.auto = 1, this.option.range = t) : z(a) && (a[0] > a[1] && a.reverse(), a[0] = Math.max(a[0], t[0]), a[1] = Math.min(a[1], t[1]));
    }, e.prototype.completeVisualOption = function() {
      r.prototype.completeVisualOption.apply(this, arguments), M(this.stateList, function(t) {
        var a = this.option.controller[t].symbolSize;
        a && a[0] !== a[1] && (a[0] = a[1] / 3);
      }, this);
    }, e.prototype.setSelected = function(t) {
      this.option.range = t.slice(), this._resetRange();
    }, e.prototype.getSelected = function() {
      var t = this.getExtent(), a = sr((this.get("range") || []).slice());
      return a[0] > t[1] && (a[0] = t[1]), a[1] > t[1] && (a[1] = t[1]), a[0] < t[0] && (a[0] = t[0]), a[1] < t[0] && (a[1] = t[0]), a;
    }, e.prototype.getValueState = function(t) {
      var a = this.option.range, n = this.getExtent();
      return (a[0] <= n[0] || a[0] <= t) && (a[1] >= n[1] || t <= a[1]) ? "inRange" : "outOfRange";
    }, e.prototype.findTargetDataIndices = function(t) {
      var a = [];
      return this.eachTargetSeries(function(n) {
        var i = [], o = n.getData();
        o.each(this.getDataDimensionIndex(o), function(s, l) {
          t[0] <= s && s <= t[1] && i.push(l);
        }, this), a.push({
          seriesId: n.id,
          dataIndex: i
        });
      }, this), a;
    }, e.prototype.getVisualMeta = function(t) {
      var a = nb(this, "outOfRange", this.getExtent()), n = nb(this, "inRange", this.option.range.slice()), i = [];
      function o(v, d) {
        i.push({
          value: v,
          color: t(v, d)
        });
      }
      for (var s = 0, l = 0, u = n.length, f = a.length; l < f && (!n.length || a[l] <= n[0]); l++)
        a[l] < n[s] && o(a[l], "outOfRange");
      for (var h = 1; s < u; s++, h = 0)
        h && i.length && o(n[s], "outOfRange"), o(n[s], "inRange");
      for (var h = 1; l < f; l++)
        (!n.length || n[n.length - 1] < a[l]) && (h && (i.length && o(i[i.length - 1].value, "outOfRange"), h = 0), o(a[l], "outOfRange"));
      var c = i.length;
      return {
        stops: i,
        outerColors: [c ? i[0].color : "transparent", c ? i[c - 1].color : "transparent"]
      };
    }, e.type = "visualMap.continuous", e.defaultOption = fn(eh.defaultOption, {
      align: "auto",
      calculable: !1,
      hoverLink: !0,
      realtime: !0,
      handleIcon: "path://M-11.39,9.77h0a3.5,3.5,0,0,1-3.5,3.5h-22a3.5,3.5,0,0,1-3.5-3.5h0a3.5,3.5,0,0,1,3.5-3.5h22A3.5,3.5,0,0,1-11.39,9.77Z",
      handleSize: "120%",
      handleStyle: {
        borderColor: "#fff",
        borderWidth: 1
      },
      indicatorIcon: "circle",
      indicatorSize: "50%",
      indicatorStyle: {
        borderColor: "#fff",
        borderWidth: 2,
        shadowBlur: 2,
        shadowOffsetX: 1,
        shadowOffsetY: 1,
        shadowColor: "rgba(0,0,0,0.2)"
      }
      // emphasis: {
      //     handleStyle: {
      //         shadowBlur: 3,
      //         shadowOffsetX: 1,
      //         shadowOffsetY: 1,
      //         shadowColor: 'rgba(0,0,0,0.2)'
      //     }
      // }
    }), e;
  }(eh)
);
function nb(r, e, t) {
  if (t[0] === t[1])
    return t.slice();
  for (var a = 200, n = (t[1] - t[0]) / a, i = t[0], o = [], s = 0; s <= a && i < t[1]; s++)
    o.push(i), i += n;
  return o.push(t[1]), o;
}
const iZ = nZ;
var oZ = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t.autoPositionValues = {
        left: 1,
        right: 1,
        top: 1,
        bottom: 1
      }, t;
    }
    return e.prototype.init = function(t, a) {
      this.ecModel = t, this.api = a;
    }, e.prototype.render = function(t, a, n, i) {
      if (this.visualMapModel = t, t.get("show") === !1) {
        this.group.removeAll();
        return;
      }
      this.doRender(t, a, n, i);
    }, e.prototype.renderBackground = function(t) {
      var a = this.visualMapModel, n = Eo(a.get("padding") || 0), i = t.getBoundingRect();
      t.add(new Tt({
        z2: -1,
        silent: !0,
        shape: {
          x: i.x - n[3],
          y: i.y - n[0],
          width: i.width + n[3] + n[1],
          height: i.height + n[0] + n[2]
        },
        style: {
          fill: a.get("backgroundColor"),
          stroke: a.get("borderColor"),
          lineWidth: a.get("borderWidth")
        }
      }));
    }, e.prototype.getControllerVisual = function(t, a, n) {
      n = n || {};
      var i = n.forceState, o = this.visualMapModel, s = {};
      if (a === "color") {
        var l = o.get("contentColor");
        s.color = l;
      }
      function u(v) {
        return s[v];
      }
      function f(v, d) {
        s[v] = d;
      }
      var h = o.controllerVisuals[i || o.getValueState(t)], c = ce.prepareVisualTypes(h);
      return M(c, function(v) {
        var d = h[v];
        n.convertOpacityToAlpha && v === "opacity" && (v = "colorAlpha", d = h.__alphaForOpacity), ce.dependsOn(v, a) && d && d.applyVisual(t, u, f);
      }), s[a];
    }, e.prototype.positionGroup = function(t) {
      var a = this.visualMapModel, n = this.api;
      Lh(t, a.getBoxLayoutParams(), {
        width: n.getWidth(),
        height: n.getHeight()
      });
    }, e.prototype.doRender = function(t, a, n, i) {
    }, e.type = "visualMap", e;
  }($t)
);
const TL = oZ;
var ib = [["left", "right", "width"], ["top", "bottom", "height"]];
function DL(r, e, t) {
  var a = r.option, n = a.align;
  if (n != null && n !== "auto")
    return n;
  for (var i = {
    width: e.getWidth(),
    height: e.getHeight()
  }, o = a.orient === "horizontal" ? 1 : 0, s = ib[o], l = [0, null, 10], u = {}, f = 0; f < 3; f++)
    u[ib[1 - o][f]] = l[f], u[s[f]] = f === 2 ? t[0] : a[s[f]];
  var h = [["x", "width", 3], ["y", "height", 0]][o], c = ae(u, i, a.padding);
  return s[(c.margin[h[2]] || 0) + c[h[0]] + c[h[1]] * 0.5 < i[h[1]] * 0.5 ? 0 : 1];
}
function af(r, e) {
  return M(r || [], function(t) {
    t.dataIndex != null && (t.dataIndexInside = t.dataIndex, t.dataIndex = null), t.highlightKey = "visualMap" + (e ? e.componentIndex : "");
  }), r;
}
var Vr = Lt, sZ = M, ob = Math.min, _d = Math.max, lZ = 12, uZ = 6, fZ = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t._shapes = {}, t._dataInterval = [], t._handleEnds = [], t._hoverLinkDataIndices = [], t;
    }
    return e.prototype.doRender = function(t, a, n, i) {
      this._api = n, (!i || i.type !== "selectDataRange" || i.from !== this.uid) && this._buildView();
    }, e.prototype._buildView = function() {
      this.group.removeAll();
      var t = this.visualMapModel, a = this.group;
      this._orient = t.get("orient"), this._useHandle = t.get("calculable"), this._resetInterval(), this._renderBar(a);
      var n = t.get("text");
      this._renderEndsText(a, n, 0), this._renderEndsText(a, n, 1), this._updateView(!0), this.renderBackground(a), this._updateView(), this._enableHoverLinkToSeries(), this._enableHoverLinkFromSeries(), this.positionGroup(a);
    }, e.prototype._renderEndsText = function(t, a, n) {
      if (a) {
        var i = a[1 - n];
        i = i != null ? i + "" : "";
        var o = this.visualMapModel, s = o.get("textGap"), l = o.itemSize, u = this._shapes.mainGroup, f = this._applyTransform([l[0] / 2, n === 0 ? -s : l[1] + s], u), h = this._applyTransform(n === 0 ? "bottom" : "top", u), c = this._orient, v = this.visualMapModel.textStyleModel;
        this.group.add(new Ct({
          style: Ot(v, {
            x: f[0],
            y: f[1],
            verticalAlign: c === "horizontal" ? "middle" : h,
            align: c === "horizontal" ? h : "center",
            text: i
          })
        }));
      }
    }, e.prototype._renderBar = function(t) {
      var a = this.visualMapModel, n = this._shapes, i = a.itemSize, o = this._orient, s = this._useHandle, l = DL(a, this.api, i), u = n.mainGroup = this._createBarGroup(l), f = new nt();
      u.add(f), f.add(n.outOfRange = sb()), f.add(n.inRange = sb(null, s ? ub(this._orient) : null, Y(this._dragHandle, this, "all", !1), Y(this._dragHandle, this, "all", !0))), f.setClipPath(new Tt({
        shape: {
          x: 0,
          y: 0,
          width: i[0],
          height: i[1],
          r: 3
        }
      }));
      var h = a.textStyleModel.getTextRect("国"), c = _d(h.width, h.height);
      s && (n.handleThumbs = [], n.handleLabels = [], n.handleLabelPoints = [], this._createHandle(a, u, 0, i, c, o), this._createHandle(a, u, 1, i, c, o)), this._createIndicator(a, u, i, c, o), t.add(u);
    }, e.prototype._createHandle = function(t, a, n, i, o, s) {
      var l = Y(this._dragHandle, this, n, !1), u = Y(this._dragHandle, this, n, !0), f = Cr(t.get("handleSize"), i[0]), h = Qt(t.get("handleIcon"), -f / 2, -f / 2, f, f, null, !0), c = ub(this._orient);
      h.attr({
        cursor: c,
        draggable: !0,
        drift: l,
        ondragend: u,
        onmousemove: function(y) {
          da(y.event);
        }
      }), h.x = i[0] / 2, h.useStyle(t.getModel("handleStyle").getItemStyle()), h.setStyle({
        strokeNoScale: !0,
        strokeFirst: !0
      }), h.style.lineWidth *= 2, h.ensureState("emphasis").style = t.getModel(["emphasis", "handleStyle"]).getItemStyle(), Xn(h, !0), a.add(h);
      var v = this.visualMapModel.textStyleModel, d = new Ct({
        cursor: c,
        draggable: !0,
        drift: l,
        onmousemove: function(y) {
          da(y.event);
        },
        ondragend: u,
        style: Ot(v, {
          x: 0,
          y: 0,
          text: ""
        })
      });
      d.ensureState("blur").style = {
        opacity: 0.1
      }, d.stateTransition = {
        duration: 200
      }, this.group.add(d);
      var p = [f, 0], g = this._shapes;
      g.handleThumbs[n] = h, g.handleLabelPoints[n] = p, g.handleLabels[n] = d;
    }, e.prototype._createIndicator = function(t, a, n, i, o) {
      var s = Cr(t.get("indicatorSize"), n[0]), l = Qt(t.get("indicatorIcon"), -s / 2, -s / 2, s, s, null, !0);
      l.attr({
        cursor: "move",
        invisible: !0,
        silent: !0,
        x: n[0] / 2
      });
      var u = t.getModel("indicatorStyle").getItemStyle();
      if (l instanceof ge) {
        var f = l.style;
        l.useStyle(V({
          // TODO other properties like x, y ?
          image: f.image,
          x: f.x,
          y: f.y,
          width: f.width,
          height: f.height
        }, u));
      } else
        l.useStyle(u);
      a.add(l);
      var h = this.visualMapModel.textStyleModel, c = new Ct({
        silent: !0,
        invisible: !0,
        style: Ot(h, {
          x: 0,
          y: 0,
          text: ""
        })
      });
      this.group.add(c);
      var v = [(o === "horizontal" ? i / 2 : uZ) + n[0] / 2, 0], d = this._shapes;
      d.indicator = l, d.indicatorLabel = c, d.indicatorLabelPoint = v, this._firstShowIndicator = !0;
    }, e.prototype._dragHandle = function(t, a, n, i) {
      if (this._useHandle) {
        if (this._dragging = !a, !a) {
          var o = this._applyTransform([n, i], this._shapes.mainGroup, !0);
          this._updateInterval(t, o[1]), this._hideIndicator(), this._updateView();
        }
        a === !this.visualMapModel.get("realtime") && this.api.dispatchAction({
          type: "selectDataRange",
          from: this.uid,
          visualMapId: this.visualMapModel.id,
          selected: this._dataInterval.slice()
        }), a ? !this._hovering && this._clearHoverLinkToSeries() : lb(this.visualMapModel) && this._doHoverLinkToSeries(this._handleEnds[t], !1);
      }
    }, e.prototype._resetInterval = function() {
      var t = this.visualMapModel, a = this._dataInterval = t.getSelected(), n = t.getExtent(), i = [0, t.itemSize[1]];
      this._handleEnds = [Vr(a[0], n, i, !0), Vr(a[1], n, i, !0)];
    }, e.prototype._updateInterval = function(t, a) {
      a = a || 0;
      var n = this.visualMapModel, i = this._handleEnds, o = [0, n.itemSize[1]];
      Di(
        a,
        i,
        o,
        t,
        // cross is forbidden
        0
      );
      var s = n.getExtent();
      this._dataInterval = [Vr(i[0], o, s, !0), Vr(i[1], o, s, !0)];
    }, e.prototype._updateView = function(t) {
      var a = this.visualMapModel, n = a.getExtent(), i = this._shapes, o = [0, a.itemSize[1]], s = t ? o : this._handleEnds, l = this._createBarVisual(this._dataInterval, n, s, "inRange"), u = this._createBarVisual(n, n, o, "outOfRange");
      i.inRange.setStyle({
        fill: l.barColor
        // opacity: visualInRange.opacity
      }).setShape("points", l.barPoints), i.outOfRange.setStyle({
        fill: u.barColor
        // opacity: visualOutOfRange.opacity
      }).setShape("points", u.barPoints), this._updateHandle(s, l);
    }, e.prototype._createBarVisual = function(t, a, n, i) {
      var o = {
        forceState: i,
        convertOpacityToAlpha: !0
      }, s = this._makeColorGradient(t, o), l = [this.getControllerVisual(t[0], "symbolSize", o), this.getControllerVisual(t[1], "symbolSize", o)], u = this._createBarPoints(n, l);
      return {
        barColor: new _l(0, 0, 0, 1, s),
        barPoints: u,
        handlesColor: [s[0].color, s[s.length - 1].color]
      };
    }, e.prototype._makeColorGradient = function(t, a) {
      var n = 100, i = [], o = (t[1] - t[0]) / n;
      i.push({
        color: this.getControllerVisual(t[0], "color", a),
        offset: 0
      });
      for (var s = 1; s < n; s++) {
        var l = t[0] + o * s;
        if (l > t[1])
          break;
        i.push({
          color: this.getControllerVisual(l, "color", a),
          offset: s / n
        });
      }
      return i.push({
        color: this.getControllerVisual(t[1], "color", a),
        offset: 1
      }), i;
    }, e.prototype._createBarPoints = function(t, a) {
      var n = this.visualMapModel.itemSize;
      return [[n[0] - a[0], t[0]], [n[0], t[0]], [n[0], t[1]], [n[0] - a[1], t[1]]];
    }, e.prototype._createBarGroup = function(t) {
      var a = this._orient, n = this.visualMapModel.get("inverse");
      return new nt(a === "horizontal" && !n ? {
        scaleX: t === "bottom" ? 1 : -1,
        rotation: Math.PI / 2
      } : a === "horizontal" && n ? {
        scaleX: t === "bottom" ? -1 : 1,
        rotation: -Math.PI / 2
      } : a === "vertical" && !n ? {
        scaleX: t === "left" ? 1 : -1,
        scaleY: -1
      } : {
        scaleX: t === "left" ? 1 : -1
      });
    }, e.prototype._updateHandle = function(t, a) {
      if (this._useHandle) {
        var n = this._shapes, i = this.visualMapModel, o = n.handleThumbs, s = n.handleLabels, l = i.itemSize, u = i.getExtent();
        sZ([0, 1], function(f) {
          var h = o[f];
          h.setStyle("fill", a.handlesColor[f]), h.y = t[f];
          var c = Vr(t[f], [0, l[1]], u, !0), v = this.getControllerVisual(c, "symbolSize");
          h.scaleX = h.scaleY = v / l[0], h.x = l[0] - v / 2;
          var d = Dr(n.handleLabelPoints[f], ii(h, this.group));
          s[f].setStyle({
            x: d[0],
            y: d[1],
            text: i.formatValueText(this._dataInterval[f]),
            verticalAlign: "middle",
            align: this._orient === "vertical" ? this._applyTransform("left", n.mainGroup) : "center"
          });
        }, this);
      }
    }, e.prototype._showIndicator = function(t, a, n, i) {
      var o = this.visualMapModel, s = o.getExtent(), l = o.itemSize, u = [0, l[1]], f = this._shapes, h = f.indicator;
      if (h) {
        h.attr("invisible", !1);
        var c = {
          convertOpacityToAlpha: !0
        }, v = this.getControllerVisual(t, "color", c), d = this.getControllerVisual(t, "symbolSize"), p = Vr(t, s, u, !0), g = l[0] - d / 2, y = {
          x: h.x,
          y: h.y
        };
        h.y = p, h.x = g;
        var m = Dr(f.indicatorLabelPoint, ii(h, this.group)), _ = f.indicatorLabel;
        _.attr("invisible", !1);
        var S = this._applyTransform("left", f.mainGroup), w = this._orient, x = w === "horizontal";
        _.setStyle({
          text: (n || "") + o.formatValueText(a),
          verticalAlign: x ? S : "middle",
          align: x ? "center" : S
        });
        var b = {
          x: g,
          y: p,
          style: {
            fill: v
          }
        }, T = {
          style: {
            x: m[0],
            y: m[1]
          }
        };
        if (o.ecModel.isAnimationEnabled() && !this._firstShowIndicator) {
          var C = {
            duration: 100,
            easing: "cubicInOut",
            additive: !0
          };
          h.x = y.x, h.y = y.y, h.animateTo(b, C), _.animateTo(T, C);
        } else
          h.attr(b), _.attr(T);
        this._firstShowIndicator = !1;
        var D = this._shapes.handleLabels;
        if (D)
          for (var A = 0; A < D.length; A++)
            this._api.enterBlur(D[A]);
      }
    }, e.prototype._enableHoverLinkToSeries = function() {
      var t = this;
      this._shapes.mainGroup.on("mousemove", function(a) {
        if (t._hovering = !0, !t._dragging) {
          var n = t.visualMapModel.itemSize, i = t._applyTransform([a.offsetX, a.offsetY], t._shapes.mainGroup, !0, !0);
          i[1] = ob(_d(0, i[1]), n[1]), t._doHoverLinkToSeries(i[1], 0 <= i[0] && i[0] <= n[0]);
        }
      }).on("mouseout", function() {
        t._hovering = !1, !t._dragging && t._clearHoverLinkToSeries();
      });
    }, e.prototype._enableHoverLinkFromSeries = function() {
      var t = this.api.getZr();
      this.visualMapModel.option.hoverLink ? (t.on("mouseover", this._hoverLinkFromSeriesMouseOver, this), t.on("mouseout", this._hideIndicator, this)) : this._clearHoverLinkFromSeries();
    }, e.prototype._doHoverLinkToSeries = function(t, a) {
      var n = this.visualMapModel, i = n.itemSize;
      if (n.option.hoverLink) {
        var o = [0, i[1]], s = n.getExtent();
        t = ob(_d(o[0], t), o[1]);
        var l = hZ(n, s, o), u = [t - l, t + l], f = Vr(t, o, s, !0), h = [Vr(u[0], o, s, !0), Vr(u[1], o, s, !0)];
        u[0] < o[0] && (h[0] = -1 / 0), u[1] > o[1] && (h[1] = 1 / 0), a && (h[0] === -1 / 0 ? this._showIndicator(f, h[1], "< ", l) : h[1] === 1 / 0 ? this._showIndicator(f, h[0], "> ", l) : this._showIndicator(f, f, "≈ ", l));
        var c = this._hoverLinkDataIndices, v = [];
        (a || lb(n)) && (v = this._hoverLinkDataIndices = n.findTargetDataIndices(h));
        var d = QE(c, v);
        this._dispatchHighDown("downplay", af(d[0], n)), this._dispatchHighDown("highlight", af(d[1], n));
      }
    }, e.prototype._hoverLinkFromSeriesMouseOver = function(t) {
      var a;
      if (Kn(t.target, function(l) {
        var u = it(l);
        if (u.dataIndex != null)
          return a = u, !0;
      }, !0), !!a) {
        var n = this.ecModel.getSeriesByIndex(a.seriesIndex), i = this.visualMapModel;
        if (i.isTargetSeries(n)) {
          var o = n.getData(a.dataType), s = o.getStore().get(i.getDataDimensionIndex(o), a.dataIndex);
          isNaN(s) || this._showIndicator(s, s);
        }
      }
    }, e.prototype._hideIndicator = function() {
      var t = this._shapes;
      t.indicator && t.indicator.attr("invisible", !0), t.indicatorLabel && t.indicatorLabel.attr("invisible", !0);
      var a = this._shapes.handleLabels;
      if (a)
        for (var n = 0; n < a.length; n++)
          this._api.leaveBlur(a[n]);
    }, e.prototype._clearHoverLinkToSeries = function() {
      this._hideIndicator();
      var t = this._hoverLinkDataIndices;
      this._dispatchHighDown("downplay", af(t, this.visualMapModel)), t.length = 0;
    }, e.prototype._clearHoverLinkFromSeries = function() {
      this._hideIndicator();
      var t = this.api.getZr();
      t.off("mouseover", this._hoverLinkFromSeriesMouseOver), t.off("mouseout", this._hideIndicator);
    }, e.prototype._applyTransform = function(t, a, n, i) {
      var o = ii(a, i ? null : this.group);
      return z(t) ? Dr(t, o, n) : bh(t, o, n);
    }, e.prototype._dispatchHighDown = function(t, a) {
      a && a.length && this.api.dispatchAction({
        type: t,
        batch: a
      });
    }, e.prototype.dispose = function() {
      this._clearHoverLinkFromSeries(), this._clearHoverLinkToSeries();
    }, e.prototype.remove = function() {
      this._clearHoverLinkFromSeries(), this._clearHoverLinkToSeries();
    }, e.type = "visualMap.continuous", e;
  }(TL)
);
function sb(r, e, t, a) {
  return new Ge({
    shape: {
      points: r
    },
    draggable: !!t,
    cursor: e,
    drift: t,
    onmousemove: function(n) {
      da(n.event);
    },
    ondragend: a
  });
}
function hZ(r, e, t) {
  var a = lZ / 2, n = r.get("hoverLinkDataSize");
  return n && (a = Vr(n, e, t, !0) / 2), a;
}
function lb(r) {
  var e = r.get("hoverLinkOnHandle");
  return !!(e == null ? r.get("realtime") : e);
}
function ub(r) {
  return r === "vertical" ? "ns-resize" : "ew-resize";
}
const cZ = fZ;
var vZ = {
  type: "selectDataRange",
  event: "dataRangeSelected",
  // FIXME use updateView appears wrong
  update: "update"
}, dZ = function(r, e) {
  e.eachComponent({
    mainType: "visualMap",
    query: r
  }, function(t) {
    t.setSelected(r.selected);
  });
}, pZ = [
  {
    createOnAllSeries: !0,
    reset: function(r, e) {
      var t = [];
      return e.eachComponent("visualMap", function(a) {
        var n = r.pipelineContext;
        !a.isTargetSeries(r) || n && n.large || t.push(u7(a.stateList, a.targetVisuals, Y(a.getValueState, a), a.getDataDimensionIndex(r.getData())));
      }), t;
    }
  },
  // Only support color.
  {
    createOnAllSeries: !0,
    reset: function(r, e) {
      var t = r.getData(), a = [];
      e.eachComponent("visualMap", function(n) {
        if (n.isTargetSeries(r)) {
          var i = n.getVisualMeta(Y(gZ, null, r, n)) || {
            stops: [],
            outerColors: []
          }, o = n.getDataDimensionIndex(t);
          o >= 0 && (i.dimension = o, a.push(i));
        }
      }), r.getData().setVisual("visualMeta", a);
    }
  }
];
function gZ(r, e, t, a) {
  for (var n = e.targetVisuals[a], i = ce.prepareVisualTypes(n), o = {
    color: bl(r.getData(), "color")
    // default color.
  }, s = 0, l = i.length; s < l; s++) {
    var u = i[s], f = n[u === "opacity" ? "__alphaForOpacity" : u];
    f && f.applyVisual(t, h, c);
  }
  return o.color;
  function h(v) {
    return o[v];
  }
  function c(v, d) {
    o[v] = d;
  }
}
var fb = M;
function yZ(r) {
  var e = r && r.visualMap;
  z(e) || (e = e ? [e] : []), fb(e, function(t) {
    if (t) {
      Zi(t, "splitList") && !Zi(t, "pieces") && (t.pieces = t.splitList, delete t.splitList);
      var a = t.pieces;
      a && z(a) && fb(a, function(n) {
        j(n) && (Zi(n, "start") && !Zi(n, "min") && (n.min = n.start), Zi(n, "end") && !Zi(n, "max") && (n.max = n.end));
      });
    }
  });
}
function Zi(r, e) {
  return r && r.hasOwnProperty && r.hasOwnProperty(e);
}
var hb = !1;
function CL(r) {
  hb || (hb = !0, r.registerSubTypeDefaulter("visualMap", function(e) {
    return !e.categories && (!(e.pieces ? e.pieces.length > 0 : e.splitNumber > 0) || e.calculable) ? "continuous" : "piecewise";
  }), r.registerAction(vZ, dZ), M(pZ, function(e) {
    r.registerVisual(r.PRIORITY.VISUAL.COMPONENT, e);
  }), r.registerPreprocessor(yZ));
}
function AL(r) {
  r.registerComponentModel(iZ), r.registerComponentView(cZ), CL(r);
}
var mZ = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t._pieceList = [], t;
    }
    return e.prototype.optionUpdated = function(t, a) {
      r.prototype.optionUpdated.apply(this, arguments), this.resetExtent();
      var n = this._mode = this._determineMode();
      this._pieceList = [], _Z[this._mode].call(this, this._pieceList), this._resetSelected(t, a);
      var i = this.option.categories;
      this.resetVisual(function(o, s) {
        n === "categories" ? (o.mappingMethod = "category", o.categories = at(i)) : (o.dataExtent = this.getExtent(), o.mappingMethod = "piecewise", o.pieceList = G(this._pieceList, function(l) {
          return l = at(l), s !== "inRange" && (l.visual = null), l;
        }));
      });
    }, e.prototype.completeVisualOption = function() {
      var t = this.option, a = {}, n = ce.listVisualTypes(), i = this.isCategory();
      M(t.pieces, function(s) {
        M(n, function(l) {
          s.hasOwnProperty(l) && (a[l] = 1);
        });
      }), M(a, function(s, l) {
        var u = !1;
        M(this.stateList, function(f) {
          u = u || o(t, f, l) || o(t.target, f, l);
        }, this), !u && M(this.stateList, function(f) {
          (t[f] || (t[f] = {}))[l] = bL.get(l, f === "inRange" ? "active" : "inactive", i);
        });
      }, this);
      function o(s, l, u) {
        return s && s[l] && s[l].hasOwnProperty(u);
      }
      r.prototype.completeVisualOption.apply(this, arguments);
    }, e.prototype._resetSelected = function(t, a) {
      var n = this.option, i = this._pieceList, o = (a ? n : t).selected || {};
      if (n.selected = o, M(i, function(l, u) {
        var f = this.getSelectedMapKey(l);
        o.hasOwnProperty(f) || (o[f] = !0);
      }, this), n.selectedMode === "single") {
        var s = !1;
        M(i, function(l, u) {
          var f = this.getSelectedMapKey(l);
          o[f] && (s ? o[f] = !1 : s = !0);
        }, this);
      }
    }, e.prototype.getItemSymbol = function() {
      return this.get("itemSymbol");
    }, e.prototype.getSelectedMapKey = function(t) {
      return this._mode === "categories" ? t.value + "" : t.index + "";
    }, e.prototype.getPieceList = function() {
      return this._pieceList;
    }, e.prototype._determineMode = function() {
      var t = this.option;
      return t.pieces && t.pieces.length > 0 ? "pieces" : this.option.categories ? "categories" : "splitNumber";
    }, e.prototype.setSelected = function(t) {
      this.option.selected = at(t);
    }, e.prototype.getValueState = function(t) {
      var a = ce.findPieceIndex(t, this._pieceList);
      return a != null && this.option.selected[this.getSelectedMapKey(this._pieceList[a])] ? "inRange" : "outOfRange";
    }, e.prototype.findTargetDataIndices = function(t) {
      var a = [], n = this._pieceList;
      return this.eachTargetSeries(function(i) {
        var o = [], s = i.getData();
        s.each(this.getDataDimensionIndex(s), function(l, u) {
          var f = ce.findPieceIndex(l, n);
          f === t && o.push(u);
        }, this), a.push({
          seriesId: i.id,
          dataIndex: o
        });
      }, this), a;
    }, e.prototype.getRepresentValue = function(t) {
      var a;
      if (this.isCategory())
        a = t.value;
      else if (t.value != null)
        a = t.value;
      else {
        var n = t.interval || [];
        a = n[0] === -1 / 0 && n[1] === 1 / 0 ? 0 : (n[0] + n[1]) / 2;
      }
      return a;
    }, e.prototype.getVisualMeta = function(t) {
      if (this.isCategory())
        return;
      var a = [], n = ["", ""], i = this;
      function o(f, h) {
        var c = i.getRepresentValue({
          interval: f
        });
        h || (h = i.getValueState(c));
        var v = t(c, h);
        f[0] === -1 / 0 ? n[0] = v : f[1] === 1 / 0 ? n[1] = v : a.push({
          value: f[0],
          color: v
        }, {
          value: f[1],
          color: v
        });
      }
      var s = this._pieceList.slice();
      if (!s.length)
        s.push({
          interval: [-1 / 0, 1 / 0]
        });
      else {
        var l = s[0].interval[0];
        l !== -1 / 0 && s.unshift({
          interval: [-1 / 0, l]
        }), l = s[s.length - 1].interval[1], l !== 1 / 0 && s.push({
          interval: [l, 1 / 0]
        });
      }
      var u = -1 / 0;
      return M(s, function(f) {
        var h = f.interval;
        h && (h[0] > u && o([u, h[0]], "outOfRange"), o(h.slice()), u = h[1]);
      }, this), {
        stops: a,
        outerColors: n
      };
    }, e.type = "visualMap.piecewise", e.defaultOption = fn(eh.defaultOption, {
      selected: null,
      minOpen: !1,
      maxOpen: !1,
      align: "auto",
      itemWidth: 20,
      itemHeight: 14,
      itemSymbol: "roundRect",
      pieces: null,
      categories: null,
      splitNumber: 5,
      selectedMode: "multiple",
      itemGap: 10,
      hoverLink: !0
      // Enable hover highlight.
    }), e;
  }(eh)
), _Z = {
  splitNumber: function(r) {
    var e = this.option, t = Math.min(e.precision, 20), a = this.getExtent(), n = e.splitNumber;
    n = Math.max(parseInt(n, 10), 1), e.splitNumber = n;
    for (var i = (a[1] - a[0]) / n; +i.toFixed(t) !== i && t < 5; )
      t++;
    e.precision = t, i = +i.toFixed(t), e.minOpen && r.push({
      interval: [-1 / 0, a[0]],
      close: [0, 0]
    });
    for (var o = 0, s = a[0]; o < n; s += i, o++) {
      var l = o === n - 1 ? a[1] : s + i;
      r.push({
        interval: [s, l],
        close: [1, 1]
      });
    }
    e.maxOpen && r.push({
      interval: [a[1], 1 / 0],
      close: [0, 0]
    }), Km(r), M(r, function(u, f) {
      u.index = f, u.text = this.formatValueText(u.interval);
    }, this);
  },
  categories: function(r) {
    var e = this.option;
    M(e.categories, function(t) {
      r.push({
        text: this.formatValueText(t, !0),
        value: t
      });
    }, this), cb(e, r);
  },
  pieces: function(r) {
    var e = this.option;
    M(e.pieces, function(t, a) {
      j(t) || (t = {
        value: t
      });
      var n = {
        text: "",
        index: a
      };
      if (t.label != null && (n.text = t.label), t.hasOwnProperty("value")) {
        var i = n.value = t.value;
        n.interval = [i, i], n.close = [1, 1];
      } else {
        for (var o = n.interval = [], s = n.close = [0, 0], l = [1, 0, 1], u = [-1 / 0, 1 / 0], f = [], h = 0; h < 2; h++) {
          for (var c = [["gte", "gt", "min"], ["lte", "lt", "max"]][h], v = 0; v < 3 && o[h] == null; v++)
            o[h] = t[c[v]], s[h] = l[v], f[h] = v === 2;
          o[h] == null && (o[h] = u[h]);
        }
        f[0] && o[1] === 1 / 0 && (s[0] = 0), f[1] && o[0] === -1 / 0 && (s[1] = 0), {}.NODE_ENV !== "production" && o[0] > o[1] && console.warn("Piece " + a + "is illegal: " + o + " lower bound should not greater then uppper bound."), o[0] === o[1] && s[0] && s[1] && (n.value = o[0]);
      }
      n.visual = ce.retrieveVisuals(t), r.push(n);
    }, this), cb(e, r), Km(r), M(r, function(t) {
      var a = t.close, n = [["<", "≤"][a[1]], [">", "≥"][a[0]]];
      t.text = t.text || this.formatValueText(t.value != null ? t.value : t.interval, !1, n);
    }, this);
  }
};
function cb(r, e) {
  var t = r.inverse;
  (r.orient === "vertical" ? !t : t) && e.reverse();
}
const SZ = mZ;
var xZ = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = e.type, t;
    }
    return e.prototype.doRender = function() {
      var t = this.group;
      t.removeAll();
      var a = this.visualMapModel, n = a.get("textGap"), i = a.textStyleModel, o = i.getFont(), s = i.getTextColor(), l = this._getItemAlign(), u = a.itemSize, f = this._getViewData(), h = f.endsText, c = jt(a.get("showLabel", !0), !h);
      h && this._renderEndsText(t, h[0], u, c, l), M(f.viewPieceList, function(v) {
        var d = v.piece, p = new nt();
        p.onclick = Y(this._onItemClick, this, d), this._enableHoverLink(p, v.indexInModelPieceList);
        var g = a.getRepresentValue(d);
        if (this._createItemSymbol(p, g, [0, 0, u[0], u[1]]), c) {
          var y = this.visualMapModel.getValueState(g);
          p.add(new Ct({
            style: {
              x: l === "right" ? -n : u[0] + n,
              y: u[1] / 2,
              text: d.text,
              verticalAlign: "middle",
              align: l,
              font: o,
              fill: s,
              opacity: y === "outOfRange" ? 0.5 : 1
            }
          }));
        }
        t.add(p);
      }, this), h && this._renderEndsText(t, h[1], u, c, l), oi(a.get("orient"), t, a.get("itemGap")), this.renderBackground(t), this.positionGroup(t);
    }, e.prototype._enableHoverLink = function(t, a) {
      var n = this;
      t.on("mouseover", function() {
        return i("highlight");
      }).on("mouseout", function() {
        return i("downplay");
      });
      var i = function(o) {
        var s = n.visualMapModel;
        s.option.hoverLink && n.api.dispatchAction({
          type: o,
          batch: af(s.findTargetDataIndices(a), s)
        });
      };
    }, e.prototype._getItemAlign = function() {
      var t = this.visualMapModel, a = t.option;
      if (a.orient === "vertical")
        return DL(t, this.api, t.itemSize);
      var n = a.align;
      return (!n || n === "auto") && (n = "left"), n;
    }, e.prototype._renderEndsText = function(t, a, n, i, o) {
      if (a) {
        var s = new nt(), l = this.visualMapModel.textStyleModel;
        s.add(new Ct({
          style: Ot(l, {
            x: i ? o === "right" ? n[0] : 0 : n[0] / 2,
            y: n[1] / 2,
            verticalAlign: "middle",
            align: i ? o : "center",
            text: a
          })
        })), t.add(s);
      }
    }, e.prototype._getViewData = function() {
      var t = this.visualMapModel, a = G(t.getPieceList(), function(s, l) {
        return {
          piece: s,
          indexInModelPieceList: l
        };
      }), n = t.get("text"), i = t.get("orient"), o = t.get("inverse");
      return (i === "horizontal" ? o : !o) ? a.reverse() : n && (n = n.slice().reverse()), {
        viewPieceList: a,
        endsText: n
      };
    }, e.prototype._createItemSymbol = function(t, a, n) {
      t.add(Qt(
        // symbol will be string
        this.getControllerVisual(a, "symbol"),
        n[0],
        n[1],
        n[2],
        n[3],
        // color will be string
        this.getControllerVisual(a, "color")
      ));
    }, e.prototype._onItemClick = function(t) {
      var a = this.visualMapModel, n = a.option, i = n.selectedMode;
      if (i) {
        var o = at(n.selected), s = a.getSelectedMapKey(t);
        i === "single" || i === !0 ? (o[s] = !0, M(o, function(l, u) {
          o[u] = u === s;
        })) : o[s] = !o[s], this.api.dispatchAction({
          type: "selectDataRange",
          from: this.uid,
          visualMapId: this.visualMapModel.id,
          selected: o
        });
      }
    }, e.type = "visualMap.piecewise", e;
  }(TL)
);
const wZ = xZ;
function ML(r) {
  r.registerComponentModel(SZ), r.registerComponentView(wZ), CL(r);
}
function bZ(r) {
  yt(AL), yt(ML);
}
var TZ = {
  label: {
    enabled: !0
  },
  decal: {
    show: !1
  }
}, vb = Dt(), DZ = {};
function CZ(r, e) {
  var t = r.getModel("aria");
  if (!t.get("enabled"))
    return;
  var a = at(TZ);
  ht(a.label, r.getLocaleModel().get("aria"), !1), ht(t.option, a, !1), n(), i();
  function n() {
    var u = t.getModel("decal"), f = u.get("show");
    if (f) {
      var h = X();
      r.eachSeries(function(c) {
        if (!c.isColorBySeries()) {
          var v = h.get(c.type);
          v || (v = {}, h.set(c.type, v)), vb(c).scope = v;
        }
      }), r.eachRawSeries(function(c) {
        if (r.isSeriesFiltered(c))
          return;
        if (K(c.enableAriaDecal)) {
          c.enableAriaDecal();
          return;
        }
        var v = c.getData();
        if (c.isColorBySeries()) {
          var m = lp(c.ecModel, c.name, DZ, r.getSeriesCount()), _ = v.getVisual("decal");
          v.setVisual("decal", S(_, m));
        } else {
          var d = c.getRawData(), p = {}, g = vb(c).scope;
          v.each(function(w) {
            var x = v.getRawIndex(w);
            p[x] = w;
          });
          var y = d.count();
          d.each(function(w) {
            var x = p[w], b = d.getName(w) || w + "", T = lp(c.ecModel, b, g, y), C = v.getItemVisual(x, "decal");
            v.setItemVisual(x, "decal", S(C, T));
          });
        }
        function S(w, x) {
          var b = w ? V(V({}, x), w) : x;
          return b.dirty = !0, b;
        }
      });
    }
  }
  function i() {
    var u = r.getLocaleModel().get("aria"), f = t.getModel("label");
    if (f.option = et(f.option, u), !!f.get("enabled")) {
      var h = e.getZr().dom;
      if (f.get("description")) {
        h.setAttribute("aria-label", f.get("description"));
        return;
      }
      var c = r.getSeriesCount(), v = f.get(["data", "maxCount"]) || 10, d = f.get(["series", "maxCount"]) || 10, p = Math.min(c, d), g;
      if (!(c < 1)) {
        var y = s();
        if (y) {
          var m = f.get(["general", "withTitle"]);
          g = o(m, {
            title: y
          });
        } else
          g = f.get(["general", "withoutTitle"]);
        var _ = [], S = c > 1 ? f.get(["series", "multiple", "prefix"]) : f.get(["series", "single", "prefix"]);
        g += o(S, {
          seriesCount: c
        }), r.eachSeries(function(T, C) {
          if (C < p) {
            var D = void 0, A = T.get("name"), I = A ? "withName" : "withoutName";
            D = c > 1 ? f.get(["series", "multiple", I]) : f.get(["series", "single", I]), D = o(D, {
              seriesId: T.seriesIndex,
              seriesName: T.get("name"),
              seriesType: l(T.subType)
            });
            var L = T.getData();
            if (L.count() > v) {
              var E = f.get(["data", "partialData"]);
              D += o(E, {
                displayCnt: v
              });
            } else
              D += f.get(["data", "allData"]);
            for (var P = f.get(["data", "separator", "middle"]), R = f.get(["data", "separator", "end"]), k = [], O = 0; O < L.count(); O++)
              if (O < v) {
                var B = L.getName(O), F = L.getValues(O), W = f.get(["data", B ? "withName" : "withoutName"]);
                k.push(o(W, {
                  name: B,
                  value: F.join(P)
                }));
              }
            D += k.join(P) + R, _.push(D);
          }
        });
        var w = f.getModel(["series", "multiple", "separator"]), x = w.get("middle"), b = w.get("end");
        g += _.join(x) + b, h.setAttribute("aria-label", g);
      }
    }
  }
  function o(u, f) {
    if (!$(u))
      return u;
    var h = u;
    return M(f, function(c, v) {
      h = h.replace(new RegExp("\\{\\s*" + v + "\\s*\\}", "g"), c);
    }), h;
  }
  function s() {
    var u = r.get("title");
    return u && u.length && (u = u[0]), u && u.text;
  }
  function l(u) {
    return r.getLocaleModel().get(["series", "typeNames"])[u] || "自定义图";
  }
}
function AZ(r) {
  if (!(!r || !r.aria)) {
    var e = r.aria;
    e.show != null && (e.enabled = e.show), e.label = e.label || {}, M(["description", "general", "series", "data"], function(t) {
      e[t] != null && (e.label[t] = e[t]);
    });
  }
}
function MZ(r) {
  r.registerPreprocessor(AZ), r.registerVisual(r.PRIORITY.VISUAL.ARIA, CZ);
}
var db = {
  value: "eq",
  // PENDING: not good for literal semantic?
  "<": "lt",
  "<=": "lte",
  ">": "gt",
  ">=": "gte",
  "=": "eq",
  "!=": "ne",
  "<>": "ne"
  // Might be misleading for sake of the difference between '==' and '===',
  // so don't support them.
  // '==': 'eq',
  // '===': 'seq',
  // '!==': 'sne'
  // PENDING: Whether support some common alias "ge", "le", "neq"?
  // ge: 'gte',
  // le: 'lte',
  // neq: 'ne',
}, IZ = (
  /** @class */
  function() {
    function r(e) {
      var t = this._condVal = $(e) ? new RegExp(e) : Rb(e) ? e : null;
      if (t == null) {
        var a = "";
        ({}).NODE_ENV !== "production" && (a = Ie("Illegal regexp", e, "in")), It(a);
      }
    }
    return r.prototype.evaluate = function(e) {
      var t = typeof e;
      return $(t) ? this._condVal.test(e) : At(t) ? this._condVal.test(e + "") : !1;
    }, r;
  }()
), LZ = (
  /** @class */
  function() {
    function r() {
    }
    return r.prototype.evaluate = function() {
      return this.value;
    }, r;
  }()
), EZ = (
  /** @class */
  function() {
    function r() {
    }
    return r.prototype.evaluate = function() {
      for (var e = this.children, t = 0; t < e.length; t++)
        if (!e[t].evaluate())
          return !1;
      return !0;
    }, r;
  }()
), PZ = (
  /** @class */
  function() {
    function r() {
    }
    return r.prototype.evaluate = function() {
      for (var e = this.children, t = 0; t < e.length; t++)
        if (e[t].evaluate())
          return !0;
      return !1;
    }, r;
  }()
), RZ = (
  /** @class */
  function() {
    function r() {
    }
    return r.prototype.evaluate = function() {
      return !this.child.evaluate();
    }, r;
  }()
), NZ = (
  /** @class */
  function() {
    function r() {
    }
    return r.prototype.evaluate = function() {
      for (var e = !!this.valueParser, t = this.getValue, a = t(this.valueGetterParam), n = e ? this.valueParser(a) : null, i = 0; i < this.subCondList.length; i++)
        if (!this.subCondList[i].evaluate(e ? n : a))
          return !1;
      return !0;
    }, r;
  }()
);
function gm(r, e) {
  if (r === !0 || r === !1) {
    var t = new LZ();
    return t.value = r, t;
  }
  var a = "";
  return IL(r) || ({}.NODE_ENV !== "production" && (a = Ie("Illegal config. Expect a plain object but actually", r)), It(a)), r.and ? pb("and", r, e) : r.or ? pb("or", r, e) : r.not ? OZ(r, e) : kZ(r, e);
}
function pb(r, e, t) {
  var a = e[r], n = "";
  ({}).NODE_ENV !== "production" && (n = Ie('"and"/"or" condition should only be `' + r + ": [...]` and must not be empty array.", "Illegal condition:", e)), z(a) || It(n), a.length || It(n);
  var i = r === "and" ? new EZ() : new PZ();
  return i.children = G(a, function(o) {
    return gm(o, t);
  }), i.children.length || It(n), i;
}
function OZ(r, e) {
  var t = r.not, a = "";
  ({}).NODE_ENV !== "production" && (a = Ie('"not" condition should only be `not: {}`.', "Illegal condition:", r)), IL(t) || It(a);
  var n = new RZ();
  return n.child = gm(t, e), n.child || It(a), n;
}
function kZ(r, e) {
  for (var t = "", a = e.prepareGetValue(r), n = [], i = _t(r), o = r.parser, s = o ? nC(o) : null, l = 0; l < i.length; l++) {
    var u = i[l];
    if (!(u === "parser" || e.valueGetterAttrMap.get(u))) {
      var f = U(db, u) ? db[u] : u, h = r[u], c = s ? s(h) : h, v = gO(f, c) || f === "reg" && new IZ(c);
      v || ({}.NODE_ENV !== "production" && (t = Ie('Illegal relational operation: "' + u + '" in condition:', r)), It(t)), n.push(v);
    }
  }
  n.length || ({}.NODE_ENV !== "production" && (t = Ie("Relational condition must have at least one operator.", "Illegal condition:", r)), It(t));
  var d = new NZ();
  return d.valueGetterParam = a, d.valueParser = s, d.getValue = e.getValue, d.subCondList = n, d;
}
function IL(r) {
  return j(r) && !xe(r);
}
var VZ = (
  /** @class */
  function() {
    function r(e, t) {
      this._cond = gm(e, t);
    }
    return r.prototype.evaluate = function() {
      return this._cond.evaluate();
    }, r;
  }()
);
function BZ(r, e) {
  return new VZ(r, e);
}
var zZ = {
  type: "echarts:filter",
  // PENDING: enhance to filter by index rather than create new data
  transform: function(r) {
    for (var e = r.upstream, t, a = BZ(r.config, {
      valueGetterAttrMap: X({
        dimension: !0
      }),
      prepareGetValue: function(s) {
        var l = "", u = s.dimension;
        U(s, "dimension") || ({}.NODE_ENV !== "production" && (l = Ie('Relation condition must has prop "dimension" specified.', "Illegal condition:", s)), It(l));
        var f = e.getDimensionInfo(u);
        return f || ({}.NODE_ENV !== "production" && (l = Ie("Can not find dimension info via: " + u + ".\n", "Existing dimensions: ", e.cloneAllDimensionInfo(), ".\n", "Illegal condition:", s, ".\n")), It(l)), {
          dimIdx: f.index
        };
      },
      getValue: function(s) {
        return e.retrieveValueFromItem(t, s.dimIdx);
      }
    }), n = [], i = 0, o = e.count(); i < o; i++)
      t = e.getRawDataItem(i), a.evaluate() && n.push(t);
    return {
      data: n
    };
  }
}, og = "";
({}).NODE_ENV !== "production" && (og = ["Valid config is like:", '{ dimension: "age", order: "asc" }', 'or [{ dimension: "age", order: "asc"], { dimension: "date", order: "desc" }]'].join(" "));
var GZ = {
  type: "echarts:sort",
  transform: function(r) {
    var e = r.upstream, t = r.config, a = "", n = Pt(t);
    n.length || ({}.NODE_ENV !== "production" && (a = "Empty `config` in sort transform."), It(a));
    var i = [];
    M(n, function(f) {
      var h = f.dimension, c = f.order, v = f.parser, d = f.incomparable;
      if (h == null && ({}.NODE_ENV !== "production" && (a = 'Sort transform config must has "dimension" specified.' + og), It(a)), c !== "asc" && c !== "desc" && ({}.NODE_ENV !== "production" && (a = 'Sort transform config must has "order" specified.' + og), It(a)), d && d !== "min" && d !== "max") {
        var p = "";
        ({}).NODE_ENV !== "production" && (p = 'incomparable must be "min" or "max" rather than "' + d + '".'), It(p);
      }
      if (c !== "asc" && c !== "desc") {
        var g = "";
        ({}).NODE_ENV !== "production" && (g = 'order must be "asc" or "desc" rather than "' + c + '".'), It(g);
      }
      var y = e.getDimensionInfo(h);
      y || ({}.NODE_ENV !== "production" && (a = Ie("Can not find dimension info via: " + h + ".\n", "Existing dimensions: ", e.cloneAllDimensionInfo(), ".\n", "Illegal config:", f, ".\n")), It(a));
      var m = v ? nC(v) : null;
      v && !m && ({}.NODE_ENV !== "production" && (a = Ie("Invalid parser name " + v + ".\n", "Illegal config:", f, ".\n")), It(a)), i.push({
        dimIdx: y.index,
        parser: m,
        comparator: new oC(c, d)
      });
    });
    var o = e.sourceFormat;
    o !== we && o !== dr && ({}.NODE_ENV !== "production" && (a = 'sourceFormat "' + o + '" is not supported yet'), It(a));
    for (var s = [], l = 0, u = e.count(); l < u; l++)
      s.push(e.getRawDataItem(l));
    return s.sort(function(f, h) {
      for (var c = 0; c < i.length; c++) {
        var v = i[c], d = e.retrieveValueFromItem(f, v.dimIdx), p = e.retrieveValueFromItem(h, v.dimIdx);
        v.parser && (d = v.parser(d), p = v.parser(p));
        var g = v.comparator.evaluate(d, p);
        if (g !== 0)
          return g;
      }
      return 0;
    }), {
      data: s
    };
  }
};
function FZ(r) {
  r.registerTransform(zZ), r.registerTransform(GZ);
}
var HZ = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = "dataset", t;
    }
    return e.prototype.init = function(t, a, n) {
      r.prototype.init.call(this, t, a, n), this._sourceManager = new fC(this), v_(this);
    }, e.prototype.mergeOption = function(t, a) {
      r.prototype.mergeOption.call(this, t, a), v_(this);
    }, e.prototype.optionUpdated = function() {
      this._sourceManager.dirty();
    }, e.prototype.getSourceManager = function() {
      return this._sourceManager;
    }, e.type = "dataset", e.defaultOption = {
      seriesLayoutBy: Ur
    }, e;
  }(xt)
), WZ = (
  /** @class */
  function(r) {
    N(e, r);
    function e() {
      var t = r !== null && r.apply(this, arguments) || this;
      return t.type = "dataset", t;
    }
    return e.type = "dataset", e;
  }($t)
);
function $Z(r) {
  r.registerComponentModel(HZ), r.registerComponentView(WZ);
}
var Or = Kr.CMD;
function no(r, e) {
  return Math.abs(r - e) < 1e-5;
}
function sg(r) {
  var e = r.data, t = r.len(), a = [], n, i = 0, o = 0, s = 0, l = 0;
  function u(L, E) {
    n && n.length > 2 && a.push(n), n = [L, E];
  }
  function f(L, E, P, R) {
    no(L, P) && no(E, R) || n.push(L, E, P, R, P, R);
  }
  function h(L, E, P, R, k, O) {
    var B = Math.abs(E - L), F = Math.tan(B / 4) * 4 / 3, W = E < L ? -1 : 1, Z = Math.cos(L), Q = Math.sin(L), tt = Math.cos(E), dt = Math.sin(E), St = Z * k + P, pt = Q * O + R, rt = tt * k + P, gt = dt * O + R, st = k * F * W, q = O * F * W;
    n.push(St - st * Q, pt + q * Z, rt + st * dt, gt - q * tt, rt, gt);
  }
  for (var c, v, d, p, g = 0; g < t; ) {
    var y = e[g++], m = g === 1;
    switch (m && (i = e[g], o = e[g + 1], s = i, l = o, (y === Or.L || y === Or.C || y === Or.Q) && (n = [s, l])), y) {
      case Or.M:
        i = s = e[g++], o = l = e[g++], u(s, l);
        break;
      case Or.L:
        c = e[g++], v = e[g++], f(i, o, c, v), i = c, o = v;
        break;
      case Or.C:
        n.push(e[g++], e[g++], e[g++], e[g++], i = e[g++], o = e[g++]);
        break;
      case Or.Q:
        c = e[g++], v = e[g++], d = e[g++], p = e[g++], n.push(i + 2 / 3 * (c - i), o + 2 / 3 * (v - o), d + 2 / 3 * (c - d), p + 2 / 3 * (v - p), d, p), i = d, o = p;
        break;
      case Or.A:
        var _ = e[g++], S = e[g++], w = e[g++], x = e[g++], b = e[g++], T = e[g++] + b;
        g += 1;
        var C = !e[g++];
        c = Math.cos(b) * w + _, v = Math.sin(b) * x + S, m ? (s = c, l = v, u(s, l)) : f(i, o, c, v), i = Math.cos(T) * w + _, o = Math.sin(T) * x + S;
        for (var D = (C ? -1 : 1) * Math.PI / 2, A = b; C ? A > T : A < T; A += D) {
          var I = C ? Math.max(A + D, T) : Math.min(A + D, T);
          h(A, I, _, S, w, x);
        }
        break;
      case Or.R:
        s = i = e[g++], l = o = e[g++], c = s + e[g++], v = l + e[g++], u(c, l), f(c, l, c, v), f(c, v, s, v), f(s, v, s, l), f(s, l, c, l);
        break;
      case Or.Z:
        n && f(i, o, s, l), i = s, o = l;
        break;
    }
  }
  return n && n.length > 2 && a.push(n), a;
}
function lg(r, e, t, a, n, i, o, s, l, u) {
  if (no(r, t) && no(e, a) && no(n, o) && no(i, s)) {
    l.push(o, s);
    return;
  }
  var f = 2 / u, h = f * f, c = o - r, v = s - e, d = Math.sqrt(c * c + v * v);
  c /= d, v /= d;
  var p = t - r, g = a - e, y = n - o, m = i - s, _ = p * p + g * g, S = y * y + m * m;
  if (_ < h && S < h) {
    l.push(o, s);
    return;
  }
  var w = c * p + v * g, x = -c * y - v * m, b = _ - w * w, T = S - x * x;
  if (b < h && w >= 0 && T < h && x >= 0) {
    l.push(o, s);
    return;
  }
  var C = [], D = [];
  Qa(r, t, n, o, 0.5, C), Qa(e, a, i, s, 0.5, D), lg(C[0], D[0], C[1], D[1], C[2], D[2], C[3], D[3], l, u), lg(C[4], D[4], C[5], D[5], C[6], D[6], C[7], D[7], l, u);
}
function UZ(r, e) {
  var t = sg(r), a = [];
  e = e || 1;
  for (var n = 0; n < t.length; n++) {
    var i = t[n], o = [], s = i[0], l = i[1];
    o.push(s, l);
    for (var u = 2; u < i.length; ) {
      var f = i[u++], h = i[u++], c = i[u++], v = i[u++], d = i[u++], p = i[u++];
      lg(s, l, f, h, c, v, d, p, o, e), s = d, l = p;
    }
    a.push(o);
  }
  return a;
}
function LL(r, e, t) {
  var a = r[e], n = r[1 - e], i = Math.abs(a / n), o = Math.ceil(Math.sqrt(i * t)), s = Math.floor(t / o);
  s === 0 && (s = 1, o = t);
  for (var l = [], u = 0; u < o; u++)
    l.push(s);
  var f = o * s, h = t - f;
  if (h > 0)
    for (var u = 0; u < h; u++)
      l[u % o] += 1;
  return l;
}
function gb(r, e, t) {
  for (var a = r.r0, n = r.r, i = r.startAngle, o = r.endAngle, s = Math.abs(o - i), l = s * n, u = n - a, f = l > Math.abs(u), h = LL([l, u], f ? 0 : 1, e), c = (f ? s : u) / h.length, v = 0; v < h.length; v++)
    for (var d = (f ? u : s) / h[v], p = 0; p < h[v]; p++) {
      var g = {};
      f ? (g.startAngle = i + c * v, g.endAngle = i + c * (v + 1), g.r0 = a + d * p, g.r = a + d * (p + 1)) : (g.startAngle = i + d * p, g.endAngle = i + d * (p + 1), g.r0 = a + c * v, g.r = a + c * (v + 1)), g.clockwise = r.clockwise, g.cx = r.cx, g.cy = r.cy, t.push(g);
    }
}
function YZ(r, e, t) {
  for (var a = r.width, n = r.height, i = a > n, o = LL([a, n], i ? 0 : 1, e), s = i ? "width" : "height", l = i ? "height" : "width", u = i ? "x" : "y", f = i ? "y" : "x", h = r[s] / o.length, c = 0; c < o.length; c++)
    for (var v = r[l] / o[c], d = 0; d < o[c]; d++) {
      var p = {};
      p[u] = c * h, p[f] = d * v, p[s] = h, p[l] = v, p.x += r.x, p.y += r.y, t.push(p);
    }
}
function yb(r, e, t, a) {
  return r * a - t * e;
}
function ZZ(r, e, t, a, n, i, o, s) {
  var l = t - r, u = a - e, f = o - n, h = s - i, c = yb(f, h, l, u);
  if (Math.abs(c) < 1e-6)
    return null;
  var v = r - n, d = e - i, p = yb(v, d, f, h) / c;
  return p < 0 || p > 1 ? null : new ut(p * l + r, p * u + e);
}
function XZ(r, e, t) {
  var a = new ut();
  ut.sub(a, t, e), a.normalize();
  var n = new ut();
  ut.sub(n, r, e);
  var i = n.dot(a);
  return i;
}
function Xi(r, e) {
  var t = r[r.length - 1];
  t && t[0] === e[0] && t[1] === e[1] || r.push(e);
}
function qZ(r, e, t) {
  for (var a = r.length, n = [], i = 0; i < a; i++) {
    var o = r[i], s = r[(i + 1) % a], l = ZZ(o[0], o[1], s[0], s[1], e.x, e.y, t.x, t.y);
    l && n.push({
      projPt: XZ(l, e, t),
      pt: l,
      idx: i
    });
  }
  if (n.length < 2)
    return [{ points: r }, { points: r }];
  n.sort(function(g, y) {
    return g.projPt - y.projPt;
  });
  var u = n[0], f = n[n.length - 1];
  if (f.idx < u.idx) {
    var h = u;
    u = f, f = h;
  }
  for (var c = [u.pt.x, u.pt.y], v = [f.pt.x, f.pt.y], d = [c], p = [v], i = u.idx + 1; i <= f.idx; i++)
    Xi(d, r[i].slice());
  Xi(d, v), Xi(d, c);
  for (var i = f.idx + 1; i <= u.idx + a; i++)
    Xi(p, r[i % a].slice());
  return Xi(p, c), Xi(p, v), [{
    points: d
  }, {
    points: p
  }];
}
function mb(r) {
  var e = r.points, t = [], a = [];
  yh(e, t, a);
  var n = new ct(t[0], t[1], a[0] - t[0], a[1] - t[1]), i = n.width, o = n.height, s = n.x, l = n.y, u = new ut(), f = new ut();
  return i > o ? (u.x = f.x = s + i / 2, u.y = l, f.y = l + o) : (u.y = f.y = l + o / 2, u.x = s, f.x = s + i), qZ(e, u, f);
}
function rh(r, e, t, a) {
  if (t === 1)
    a.push(e);
  else {
    var n = Math.floor(t / 2), i = r(e);
    rh(r, i[0], n, a), rh(r, i[1], t - n, a);
  }
  return a;
}
function KZ(r, e) {
  for (var t = [], a = 0; a < e; a++)
    t.push(Rg(r));
  return t;
}
function jZ(r, e) {
  e.setStyle(r.style), e.z = r.z, e.z2 = r.z2, e.zlevel = r.zlevel;
}
function JZ(r) {
  for (var e = [], t = 0; t < r.length; )
    e.push([r[t++], r[t++]]);
  return e;
}
function QZ(r, e) {
  var t = [], a = r.shape, n;
  switch (r.type) {
    case "rect":
      YZ(a, e, t), n = Tt;
      break;
    case "sector":
      gb(a, e, t), n = ze;
      break;
    case "circle":
      gb({
        r0: 0,
        r: a.r,
        startAngle: 0,
        endAngle: Math.PI * 2,
        cx: a.cx,
        cy: a.cy
      }, e, t), n = ze;
      break;
    default:
      var i = r.getComputedTransform(), o = i ? Math.sqrt(Math.max(i[0] * i[0] + i[1] * i[1], i[2] * i[2] + i[3] * i[3])) : 1, s = G(UZ(r.getUpdatedPathProxy(), o), function(y) {
        return JZ(y);
      }), l = s.length;
      if (l === 0)
        rh(mb, {
          points: s[0]
        }, e, t);
      else if (l === e)
        for (var u = 0; u < l; u++)
          t.push({
            points: s[u]
          });
      else {
        var f = 0, h = G(s, function(y) {
          var m = [], _ = [];
          yh(y, m, _);
          var S = (_[1] - m[1]) * (_[0] - m[0]);
          return f += S, { poly: y, area: S };
        });
        h.sort(function(y, m) {
          return m.area - y.area;
        });
        for (var c = e, u = 0; u < l; u++) {
          var v = h[u];
          if (c <= 0)
            break;
          var d = u === l - 1 ? c : Math.ceil(v.area / f * e);
          d < 0 || (rh(mb, {
            points: v.poly
          }, d, t), c -= d);
        }
      }
      n = Ge;
      break;
  }
  if (!n)
    return KZ(r, e);
  for (var p = [], u = 0; u < t.length; u++) {
    var g = new n();
    g.setShape(t[u]), jZ(r, g), p.push(g);
  }
  return p;
}
function tX(r, e) {
  var t = r.length, a = e.length;
  if (t === a)
    return [r, e];
  for (var n = [], i = [], o = t < a ? r : e, s = Math.min(t, a), l = Math.abs(a - t) / 6, u = (s - 2) / 6, f = Math.ceil(l / u) + 1, h = [o[0], o[1]], c = l, v = 2; v < s; ) {
    var d = o[v - 2], p = o[v - 1], g = o[v++], y = o[v++], m = o[v++], _ = o[v++], S = o[v++], w = o[v++];
    if (c <= 0) {
      h.push(g, y, m, _, S, w);
      continue;
    }
    for (var x = Math.min(c, f - 1) + 1, b = 1; b <= x; b++) {
      var T = b / x;
      Qa(d, g, m, S, T, n), Qa(p, y, _, w, T, i), d = n[3], p = i[3], h.push(n[1], i[1], n[2], i[2], d, p), g = n[5], y = i[5], m = n[6], _ = i[6];
    }
    c -= x - 1;
  }
  return o === r ? [h, e] : [r, h];
}
function _b(r, e) {
  for (var t = r.length, a = r[t - 2], n = r[t - 1], i = [], o = 0; o < e.length; )
    i[o++] = a, i[o++] = n;
  return i;
}
function eX(r, e) {
  for (var t, a, n, i = [], o = [], s = 0; s < Math.max(r.length, e.length); s++) {
    var l = r[s], u = e[s], f = void 0, h = void 0;
    l ? u ? (t = tX(l, u), f = t[0], h = t[1], a = f, n = h) : (h = _b(n || l, l), f = l) : (f = _b(a || u, u), h = u), i.push(f), o.push(h);
  }
  return [i, o];
}
function Sb(r) {
  for (var e = 0, t = 0, a = 0, n = r.length, i = 0, o = n - 2; i < n; o = i, i += 2) {
    var s = r[o], l = r[o + 1], u = r[i], f = r[i + 1], h = s * f - u * l;
    e += h, t += (s + u) * h, a += (l + f) * h;
  }
  return e === 0 ? [r[0] || 0, r[1] || 0] : [t / e / 3, a / e / 3, e];
}
function rX(r, e, t, a) {
  for (var n = (r.length - 2) / 6, i = 1 / 0, o = 0, s = r.length, l = s - 2, u = 0; u < n; u++) {
    for (var f = u * 6, h = 0, c = 0; c < s; c += 2) {
      var v = c === 0 ? f : (f + c - 2) % l + 2, d = r[v] - t[0], p = r[v + 1] - t[1], g = e[c] - a[0], y = e[c + 1] - a[1], m = g - d, _ = y - p;
      h += m * m + _ * _;
    }
    h < i && (i = h, o = u);
  }
  return o;
}
function aX(r) {
  for (var e = [], t = r.length, a = 0; a < t; a += 2)
    e[a] = r[t - a - 2], e[a + 1] = r[t - a - 1];
  return e;
}
function nX(r, e, t, a) {
  for (var n = [], i, o = 0; o < r.length; o++) {
    var s = r[o], l = e[o], u = Sb(s), f = Sb(l);
    i == null && (i = u[2] < 0 != f[2] < 0);
    var h = [], c = [], v = 0, d = 1 / 0, p = [], g = s.length;
    i && (s = aX(s));
    for (var y = rX(s, l, u, f) * 6, m = g - 2, _ = 0; _ < m; _ += 2) {
      var S = (y + _) % m + 2;
      h[_ + 2] = s[S] - u[0], h[_ + 3] = s[S + 1] - u[1];
    }
    if (h[0] = s[y] - u[0], h[1] = s[y + 1] - u[1], t > 0)
      for (var w = a / t, x = -a / 2; x <= a / 2; x += w) {
        for (var b = Math.sin(x), T = Math.cos(x), C = 0, _ = 0; _ < s.length; _ += 2) {
          var D = h[_], A = h[_ + 1], I = l[_] - f[0], L = l[_ + 1] - f[1], E = I * T - L * b, P = I * b + L * T;
          p[_] = E, p[_ + 1] = P;
          var R = E - D, k = P - A;
          C += R * R + k * k;
        }
        if (C < d) {
          d = C, v = x;
          for (var O = 0; O < p.length; O++)
            c[O] = p[O];
        }
      }
    else
      for (var B = 0; B < g; B += 2)
        c[B] = l[B] - f[0], c[B + 1] = l[B + 1] - f[1];
    n.push({
      from: h,
      to: c,
      fromCp: u,
      toCp: f,
      rotation: -v
    });
  }
  return n;
}
function ah(r) {
  return r.__isCombineMorphing;
}
var EL = "__mOriginal_";
function nh(r, e, t) {
  var a = EL + e, n = r[a] || r[e];
  r[a] || (r[a] = r[e]);
  var i = t.replace, o = t.after, s = t.before;
  r[e] = function() {
    var l = arguments, u;
    return s && s.apply(this, l), i ? u = i.apply(this, l) : u = n.apply(this, l), o && o.apply(this, l), u;
  };
}
function Ws(r, e) {
  var t = EL + e;
  r[t] && (r[e] = r[t], r[t] = null);
}
function xb(r, e) {
  for (var t = 0; t < r.length; t++)
    for (var a = r[t], n = 0; n < a.length; ) {
      var i = a[n], o = a[n + 1];
      a[n++] = e[0] * i + e[2] * o + e[4], a[n++] = e[1] * i + e[3] * o + e[5];
    }
}
function PL(r, e) {
  var t = r.getUpdatedPathProxy(), a = e.getUpdatedPathProxy(), n = eX(sg(t), sg(a)), i = n[0], o = n[1], s = r.getComputedTransform(), l = e.getComputedTransform();
  function u() {
    this.transform = null;
  }
  s && xb(i, s), l && xb(o, l), nh(e, "updateTransform", { replace: u }), e.transform = null;
  var f = nX(i, o, 10, Math.PI), h = [];
  nh(e, "buildPath", { replace: function(c) {
    for (var v = e.__morphT, d = 1 - v, p = [], g = 0; g < f.length; g++) {
      var y = f[g], m = y.from, _ = y.to, S = y.rotation * v, w = y.fromCp, x = y.toCp, b = Math.sin(S), T = Math.cos(S);
      Gu(p, w, x, v);
      for (var C = 0; C < m.length; C += 2) {
        var D = m[C], A = m[C + 1], I = _[C], L = _[C + 1], E = D * d + I * v, P = A * d + L * v;
        h[C] = E * T - P * b + p[0], h[C + 1] = E * b + P * T + p[1];
      }
      var R = h[0], k = h[1];
      c.moveTo(R, k);
      for (var C = 2; C < m.length; ) {
        var I = h[C++], L = h[C++], O = h[C++], B = h[C++], F = h[C++], W = h[C++];
        R === I && k === L && O === F && B === W ? c.lineTo(F, W) : c.bezierCurveTo(I, L, O, B, F, W), R = F, k = W;
      }
    }
  } });
}
function ym(r, e, t) {
  if (!r || !e)
    return e;
  var a = t.done, n = t.during;
  PL(r, e), e.__morphT = 0;
  function i() {
    Ws(e, "buildPath"), Ws(e, "updateTransform"), e.__morphT = -1, e.createPathProxy(), e.dirtyShape();
  }
  return e.animateTo({
    __morphT: 1
  }, et({
    during: function(o) {
      e.dirtyShape(), n && n(o);
    },
    done: function() {
      i(), a && a();
    }
  }, t)), e;
}
function iX(r, e, t, a, n, i) {
  var o = 16;
  r = n === t ? 0 : Math.round(32767 * (r - t) / (n - t)), e = i === a ? 0 : Math.round(32767 * (e - a) / (i - a));
  for (var s = 0, l, u = (1 << o) / 2; u > 0; u /= 2) {
    var f = 0, h = 0;
    (r & u) > 0 && (f = 1), (e & u) > 0 && (h = 1), s += u * u * (3 * f ^ h), h === 0 && (f === 1 && (r = u - 1 - r, e = u - 1 - e), l = r, r = e, e = l);
  }
  return s;
}
function ih(r) {
  var e = 1 / 0, t = 1 / 0, a = -1 / 0, n = -1 / 0, i = G(r, function(s) {
    var l = s.getBoundingRect(), u = s.getComputedTransform(), f = l.x + l.width / 2 + (u ? u[4] : 0), h = l.y + l.height / 2 + (u ? u[5] : 0);
    return e = Math.min(f, e), t = Math.min(h, t), a = Math.max(f, a), n = Math.max(h, n), [f, h];
  }), o = G(i, function(s, l) {
    return {
      cp: s,
      z: iX(s[0], s[1], e, t, a, n),
      path: r[l]
    };
  });
  return o.sort(function(s, l) {
    return s.z - l.z;
  }).map(function(s) {
    return s.path;
  });
}
function RL(r) {
  return QZ(r.path, r.count);
}
function ug() {
  return {
    fromIndividuals: [],
    toIndividuals: [],
    count: 0
  };
}
function oX(r, e, t) {
  var a = [];
  function n(w) {
    for (var x = 0; x < w.length; x++) {
      var b = w[x];
      ah(b) ? n(b.childrenRef()) : b instanceof mt && a.push(b);
    }
  }
  n(r);
  var i = a.length;
  if (!i)
    return ug();
  var o = t.dividePath || RL, s = o({
    path: e,
    count: i
  });
  if (s.length !== i)
    return console.error("Invalid morphing: unmatched splitted path"), ug();
  a = ih(a), s = ih(s);
  for (var l = t.done, u = t.during, f = t.individualDelay, h = new oa(), c = 0; c < i; c++) {
    var v = a[c], d = s[c];
    d.parent = e, d.copyTransform(h), f || PL(v, d);
  }
  e.__isCombineMorphing = !0, e.childrenRef = function() {
    return s;
  };
  function p(w) {
    for (var x = 0; x < s.length; x++)
      s[x].addSelfToZr(w);
  }
  nh(e, "addSelfToZr", {
    after: function(w) {
      p(w);
    }
  }), nh(e, "removeSelfFromZr", {
    after: function(w) {
      for (var x = 0; x < s.length; x++)
        s[x].removeSelfFromZr(w);
    }
  });
  function g() {
    e.__isCombineMorphing = !1, e.__morphT = -1, e.childrenRef = null, Ws(e, "addSelfToZr"), Ws(e, "removeSelfFromZr");
  }
  var y = s.length;
  if (f)
    for (var m = y, _ = function() {
      m--, m === 0 && (g(), l && l());
    }, c = 0; c < y; c++) {
      var S = f ? et({
        delay: (t.delay || 0) + f(c, y, a[c], s[c]),
        done: _
      }, t) : t;
      ym(a[c], s[c], S);
    }
  else
    e.__morphT = 0, e.animateTo({
      __morphT: 1
    }, et({
      during: function(w) {
        for (var x = 0; x < y; x++) {
          var b = s[x];
          b.__morphT = e.__morphT, b.dirtyShape();
        }
        u && u(w);
      },
      done: function() {
        g();
        for (var w = 0; w < r.length; w++)
          Ws(r[w], "updateTransform");
        l && l();
      }
    }, t));
  return e.__zr && p(e.__zr), {
    fromIndividuals: a,
    toIndividuals: s,
    count: y
  };
}
function sX(r, e, t) {
  var a = e.length, n = [], i = t.dividePath || RL;
  function o(v) {
    for (var d = 0; d < v.length; d++) {
      var p = v[d];
      ah(p) ? o(p.childrenRef()) : p instanceof mt && n.push(p);
    }
  }
  if (ah(r)) {
    o(r.childrenRef());
    var s = n.length;
    if (s < a)
      for (var l = 0, u = s; u < a; u++)
        n.push(Rg(n[l++ % s]));
    n.length = a;
  } else {
    n = i({ path: r, count: a });
    for (var f = r.getComputedTransform(), u = 0; u < n.length; u++)
      n[u].setLocalTransform(f);
    if (n.length !== a)
      return console.error("Invalid morphing: unmatched splitted path"), ug();
  }
  n = ih(n), e = ih(e);
  for (var h = t.individualDelay, u = 0; u < a; u++) {
    var c = h ? et({
      delay: (t.delay || 0) + h(u, a, n[u], e[u])
    }, t) : t;
    ym(n[u], e[u], c);
  }
  return {
    fromIndividuals: n,
    toIndividuals: e,
    count: e.length
  };
}
function wb(r) {
  return z(r[0]);
}
function bb(r, e) {
  for (var t = [], a = r.length, n = 0; n < a; n++)
    t.push({
      one: r[n],
      many: []
    });
  for (var n = 0; n < e.length; n++) {
    var i = e[n].length, o = void 0;
    for (o = 0; o < i; o++)
      t[o % a].many.push(e[n][o]);
  }
  for (var s = 0, n = a - 1; n >= 0; n--)
    if (!t[n].many.length) {
      var l = t[s].many;
      if (l.length <= 1)
        if (s)
          s = 0;
        else
          return t;
      var i = l.length, u = Math.ceil(i / 2);
      t[n].many = l.slice(u, i), t[s].many = l.slice(0, u), s++;
    }
  return t;
}
var lX = {
  clone: function(r) {
    for (var e = [], t = 1 - Math.pow(1 - r.path.style.opacity, 1 / r.count), a = 0; a < r.count; a++) {
      var n = Rg(r.path);
      n.setStyle("opacity", t), e.push(n);
    }
    return e;
  },
  // Use the default divider
  split: null
};
function Sd(r, e, t, a, n, i) {
  if (!r.length || !e.length)
    return;
  var o = Ao("update", a, n);
  if (!(o && o.duration > 0))
    return;
  var s = a.getModel("universalTransition").get("delay"), l = Object.assign({
    // Need to setToFinal so the further calculation based on the style can be correct.
    // Like emphasis color.
    setToFinal: !0
  }, o), u, f;
  wb(r) && (u = r, f = e), wb(e) && (u = e, f = r);
  function h(y, m, _, S, w) {
    var x = y.many, b = y.one;
    if (x.length === 1 && !w) {
      var T = m ? x[0] : b, C = m ? b : x[0];
      if (ah(T))
        h({
          many: [T],
          one: C
        }, !0, _, S, !0);
      else {
        var D = s ? et({
          delay: s(_, S)
        }, l) : l;
        ym(T, C, D), i(T, C, T, C, D);
      }
    } else
      for (var A = et({
        dividePath: lX[t],
        individualDelay: s && function(k, O, B, F) {
          return s(k + _, S);
        }
      }, l), I = m ? oX(x, b, A) : sX(b, x, A), L = I.fromIndividuals, E = I.toIndividuals, P = L.length, R = 0; R < P; R++) {
        var D = s ? et({
          delay: s(R, P)
        }, l) : l;
        i(L[R], E[R], m ? x[R] : y.one, m ? y.one : x[R], D);
      }
  }
  for (var c = u ? u === r : r.length > e.length, v = u ? bb(f, u) : bb(c ? e : r, [c ? r : e]), d = 0, p = 0; p < v.length; p++)
    d += v[p].many.length;
  for (var g = 0, p = 0; p < v.length; p++)
    h(v[p], c, g, d), g += v[p].many.length;
}
function Fn(r) {
  if (!r)
    return [];
  if (z(r)) {
    for (var e = [], t = 0; t < r.length; t++)
      e.push(Fn(r[t]));
    return e;
  }
  var a = [];
  return r.traverse(function(n) {
    n instanceof mt && !n.disableMorphing && !n.invisible && !n.ignore && a.push(n);
  }), a;
}
var NL = 1e4, uX = Dt();
function fX(r) {
  for (var e = r.dimensions, t = 0; t < e.length; t++) {
    var a = r.getDimensionInfo(e[t]);
    if (a && a.otherDims.itemGroupId === 0)
      return e[t];
  }
}
function Tb(r) {
  var e = [];
  return M(r, function(t) {
    var a = t.data;
    if (a.count() > NL) {
      ({}).NODE_ENV !== "production" && Ft("Universal transition is disabled on large data > 10k.");
      return;
    }
    for (var n = a.getIndices(), i = fX(a), o = 0; o < n.length; o++)
      e.push({
        dataGroupId: t.dataGroupId,
        data: a,
        dim: t.dim || i,
        divide: t.divide,
        dataIndex: o
      });
  }), e;
}
function xd(r, e, t) {
  r.traverse(function(a) {
    a instanceof mt && Bt(a, {
      style: {
        opacity: 0
      }
    }, e, {
      dataIndex: t,
      isFrom: !0
    });
  });
}
function wd(r) {
  if (r.parent) {
    var e = r.getComputedTransform();
    r.setLocalTransform(e), r.parent.remove(r);
  }
}
function qi(r) {
  r.stopAnimation(), r.isGroup && r.traverse(function(e) {
    e.stopAnimation();
  });
}
function hX(r, e, t) {
  var a = Ao("update", t, e);
  a && r.traverse(function(n) {
    if (n instanceof hr) {
      var i = ZR(n);
      i && n.animateFrom({
        style: i
      }, a);
    }
  });
}
function cX(r, e) {
  var t = r.length;
  if (t !== e.length)
    return !1;
  for (var a = 0; a < t; a++) {
    var n = r[a], i = e[a];
    if (n.data.getId(n.dataIndex) !== i.data.getId(i.dataIndex))
      return !1;
  }
  return !0;
}
function OL(r, e, t) {
  var a = Tb(r), n = Tb(e);
  function i(y, m, _, S, w) {
    (_ || y) && m.animateFrom({
      style: _ && _ !== y ? (
        // dividingMethod like clone may override the style(opacity)
        // So extend it to raw style.
        V(V({}, _.style), y.style)
      ) : y.style
    }, w);
  }
  function o(y) {
    for (var m = 0; m < y.length; m++)
      if (y[m].dim)
        return y[m].dim;
  }
  var s = o(a), l = o(n), u = !1;
  function f(y, m) {
    return function(_) {
      var S = _.data, w = _.dataIndex;
      if (m)
        return S.getId(w);
      var x = _.dataGroupId, b = y ? s || l : l || s, T = b && S.getDimensionInfo(b), C = T && T.ordinalMeta;
      if (T) {
        var D = S.get(T.name, w);
        return C && C.categories[D] || D + "";
      }
      var A = S.getRawDataItem(w);
      return A && A.groupId ? A.groupId + "" : x || S.getId(w);
    };
  }
  var h = cX(a, n), c = {};
  if (!h)
    for (var v = 0; v < n.length; v++) {
      var d = n[v], p = d.data.getItemGraphicEl(d.dataIndex);
      p && (c[p.id] = !0);
    }
  function g(y, m) {
    var _ = a[m], S = n[y], w = S.data.hostModel, x = _.data.getItemGraphicEl(_.dataIndex), b = S.data.getItemGraphicEl(S.dataIndex);
    if (x === b) {
      b && hX(b, S.dataIndex, w);
      return;
    }
    // We can't use the elements that already being morphed
    x && c[x.id] || b && (qi(b), x ? (qi(x), wd(x), u = !0, Sd(Fn(x), Fn(b), S.divide, w, y, i)) : xd(b, w, y));
  }
  new ma(a, n, f(!0, h), f(!1, h), null, "multiple").update(g).updateManyToOne(function(y, m) {
    var _ = n[y], S = _.data, w = S.hostModel, x = S.getItemGraphicEl(_.dataIndex), b = Et(G(m, function(T) {
      return a[T].data.getItemGraphicEl(a[T].dataIndex);
    }), function(T) {
      return T && T !== x && !c[T.id];
    });
    x && (qi(x), b.length ? (M(b, function(T) {
      qi(T), wd(T);
    }), u = !0, Sd(Fn(b), Fn(x), _.divide, w, y, i)) : xd(x, w, _.dataIndex));
  }).updateOneToMany(function(y, m) {
    var _ = a[m], S = _.data.getItemGraphicEl(_.dataIndex);
    if (!(S && c[S.id])) {
      var w = Et(G(y, function(b) {
        return n[b].data.getItemGraphicEl(n[b].dataIndex);
      }), function(b) {
        return b && b !== S;
      }), x = n[y[0]].data.hostModel;
      w.length && (M(w, function(b) {
        return qi(b);
      }), S ? (qi(S), wd(S), u = !0, Sd(
        Fn(S),
        Fn(w),
        _.divide,
        // Use divide on old.
        x,
        y[0],
        i
      )) : M(w, function(b) {
        return xd(b, x, y[0]);
      }));
    }
  }).updateManyToMany(function(y, m) {
    new ma(m, y, function(_) {
      return a[_].data.getId(a[_].dataIndex);
    }, function(_) {
      return n[_].data.getId(n[_].dataIndex);
    }).update(function(_, S) {
      g(y[_], m[S]);
    }).execute();
  }).execute(), u && M(e, function(y) {
    var m = y.data, _ = m.hostModel, S = _ && t.getViewOfSeriesModel(_), w = Ao("update", _, 0);
    S && _.isAnimationEnabled() && w && w.duration > 0 && S.group.traverse(function(x) {
      x instanceof mt && !x.animators.length && x.animateFrom({
        style: {
          opacity: 0
        }
      }, w);
    });
  });
}
function Db(r) {
  var e = r.getModel("universalTransition").get("seriesKey");
  return e || r.id;
}
function Cb(r) {
  return z(r) ? r.sort().join(",") : r;
}
function Ba(r) {
  if (r.hostModel)
    return r.hostModel.getModel("universalTransition").get("divideShape");
}
function vX(r, e) {
  var t = X(), a = X(), n = X();
  M(r.oldSeries, function(o, s) {
    var l = r.oldDataGroupIds[s], u = r.oldData[s], f = Db(o), h = Cb(f);
    a.set(h, {
      dataGroupId: l,
      data: u
    }), z(f) && M(f, function(c) {
      n.set(c, {
        key: h,
        dataGroupId: l,
        data: u
      });
    });
  });
  function i(o) {
    t.get(o) && Ft("Duplicated seriesKey in universalTransition " + o);
  }
  return M(e.updatedSeries, function(o) {
    if (o.isUniversalTransitionEnabled() && o.isAnimationEnabled()) {
      var s = o.get("dataGroupId"), l = o.getData(), u = Db(o), f = Cb(u), h = a.get(f);
      if (h)
        ({}).NODE_ENV !== "production" && i(f), t.set(f, {
          oldSeries: [{
            dataGroupId: h.dataGroupId,
            divide: Ba(h.data),
            data: h.data
          }],
          newSeries: [{
            dataGroupId: s,
            divide: Ba(l),
            data: l
          }]
        });
      else if (z(u)) {
        ({}).NODE_ENV !== "production" && i(f);
        var c = [];
        M(u, function(p) {
          var g = a.get(p);
          g.data && c.push({
            dataGroupId: g.dataGroupId,
            divide: Ba(g.data),
            data: g.data
          });
        }), c.length && t.set(f, {
          oldSeries: c,
          newSeries: [{
            dataGroupId: s,
            data: l,
            divide: Ba(l)
          }]
        });
      } else {
        var v = n.get(u);
        if (v) {
          var d = t.get(v.key);
          d || (d = {
            oldSeries: [{
              dataGroupId: v.dataGroupId,
              data: v.data,
              divide: Ba(v.data)
            }],
            newSeries: []
          }, t.set(v.key, d)), d.newSeries.push({
            dataGroupId: s,
            data: l,
            divide: Ba(l)
          });
        }
      }
    }
  }), t;
}
function Ab(r, e) {
  for (var t = 0; t < r.length; t++) {
    var a = e.seriesIndex != null && e.seriesIndex === r[t].seriesIndex || e.seriesId != null && e.seriesId === r[t].id;
    if (a)
      return t;
  }
}
function dX(r, e, t, a) {
  var n = [], i = [];
  M(Pt(r.from), function(o) {
    var s = Ab(e.oldSeries, o);
    s >= 0 && n.push({
      dataGroupId: e.oldDataGroupIds[s],
      data: e.oldData[s],
      // TODO can specify divideShape in transition.
      divide: Ba(e.oldData[s]),
      dim: o.dimension
    });
  }), M(Pt(r.to), function(o) {
    var s = Ab(t.updatedSeries, o);
    if (s >= 0) {
      var l = t.updatedSeries[s].getData();
      i.push({
        dataGroupId: e.oldDataGroupIds[s],
        data: l,
        divide: Ba(l),
        dim: o.dimension
      });
    }
  }), n.length > 0 && i.length > 0 && OL(n, i, a);
}
function pX(r) {
  r.registerUpdateLifecycle("series:beforeupdate", function(e, t, a) {
    M(Pt(a.seriesTransition), function(n) {
      M(Pt(n.to), function(i) {
        for (var o = a.updatedSeries, s = 0; s < o.length; s++)
          (i.seriesIndex != null && i.seriesIndex === o[s].seriesIndex || i.seriesId != null && i.seriesId === o[s].id) && (o[s][ju] = !0);
      });
    });
  }), r.registerUpdateLifecycle("series:transition", function(e, t, a) {
    var n = uX(t);
    if (n.oldSeries && a.updatedSeries && a.optionChanged) {
      var i = a.seriesTransition;
      if (i)
        M(Pt(i), function(v) {
          dX(v, n, a, t);
        });
      else {
        var o = vX(n, a);
        M(o.keys(), function(v) {
          var d = o.get(v);
          OL(d.oldSeries, d.newSeries, t);
        });
      }
      M(a.updatedSeries, function(v) {
        v[ju] && (v[ju] = !1);
      });
    }
    for (var s = e.getSeries(), l = n.oldSeries = [], u = n.oldDataGroupIds = [], f = n.oldData = [], h = 0; h < s.length; h++) {
      var c = s[h].getData();
      c.count() < NL && (l.push(s[h]), u.push(s[h].get("dataGroupId")), f.push(c));
    }
  });
}
yt([Rz]);
yt([Cz]);
yt([a5, x5, N5, xG, BG, PF, u3, q3, bH, PH, WH, Z4, SW, RW, QW, o$, T$, N$, Z$, eU, dU, JU]);
yt(x6);
yt(e8);
yt(IM);
yt(m8);
yt(pI);
yt(D8);
yt(N8);
yt(OY);
yt(n7);
yt(Nl);
yt(T7);
yt(A7);
yt(H7);
yt(J7);
yt(o9);
yt(d9);
yt(M9);
yt(K9);
yt(xL);
yt(wL);
yt(bZ);
yt(AL);
yt(ML);
yt(MZ);
yt(FZ);
yt($Z);
yt(pX);
yt(YB);
class gX extends BL {
  constructor() {
    super(...arguments);
    qh(this, "cloneOrginSeries", null);
  }
  /**
   * 初始化图表
   *
   * @author tony001
   * @date 2024-07-24 16:07:08
   * @param {any} chart
   */
  initChart(t) {
    this.chart = t;
  }
  /**
   * 根据数据计算最终的options
   * 并刷新echarts
   * @author lxm
   * @date 2023-06-07 09:58:00
   * @param {IData[]} [data=this.state.items]
   */
  async calcOptions(t = this.state.items) {
    var f, h, c, v, d;
    let a = [], n = !1, i = !1, o = !1, s = !1;
    const l = jh(t);
    if (this.generator.chartUserParam && (this.generator.chartUserParam.showGridCaption && (n = !!this.generator.chartUserParam.showGridCaption), this.generator.chartUserParam.groupSerieMode && (i = !!this.generator.chartUserParam.groupSerieMode)), this.generator.seriesGenerators.filter(
      (p) => {
        var g;
        return (g = p.seriesUserParam) == null ? void 0 : g.isDynamicChart;
      }
    ).length === 0) {
      this.options = await this.generator.calcOptionsByData(
        t,
        this.context,
        this.params
      );
      const p = ((f = this.generator.chartUserParam) == null ? void 0 : f.gridHeaders) || [];
      if (p.length === 0)
        throw ibiz.message.error("未配置表格");
      if (p.length === 1 && p[0].id === "srfgroup") {
        if (a.push({
          id: "filter_type",
          name: p[0].name
        }), this.generator.seriesGenerators.forEach((g) => {
          a.push({
            id: g.valueField,
            name: g.seriesName
          });
        }), this.generator.seriesGenerators && this.generator.seriesGenerators.length > 0) {
          const g = this.generator.seriesGenerators[0];
          if (g.groupData && g.groupData.$default_group) {
            l.length = 0;
            for (const [y] of g.groupData.$default_group) {
              const m = this.options.series || [], _ = {};
              m.forEach((S) => {
                if (S.data) {
                  const w = S.data.find((b) => b[0] === y), x = a.find((b) => b.name === S.name);
                  w && x && Object.assign(_, { [x.id]: w[1] });
                }
              }), l.push(
                this.createWhiteData(
                  { filter_type: y, ..._ },
                  a
                )
              );
            }
          }
        }
        l.sort((g, y) => new Date(g.filter_type).getTime() - new Date(y.filter_type).getTime()), this.options.xAxis && Array.isArray(this.options.xAxis) && this.options.xAxis[0].axisLabel && (l.length > 10 ? Object.assign(this.options.xAxis[0].axisLabel, { rotate: 45 }) : Object.assign(this.options.xAxis[0].axisLabel, { rotate: 0 }));
      } else if (a = p, !i)
        this.generator.seriesGenerators.forEach((g) => {
          const y = g.model.catalogCodeListId, m = g.chartGenerator.codeListMap.get(y), { catalogField: _ } = g;
          m && l.length < m.length && m.forEach((S) => {
            l.findIndex((x) => x[_] === S.value || x[_] === S.text) < 0 && l.push(
              this.createWhiteData(
                { [_]: S.text },
                a
              )
            );
          }), l.forEach((S) => {
            if (m) {
              const w = m.find((x) => x.value === S[_]);
              w && (S[_] = w.text);
            }
          });
        });
      else {
        o = !0, s = !0;
        const g = a.find((_) => _.id === "count");
        g && (g.allowPercent = !0);
        const y = ((h = this.generator.chartUserParam) == null ? void 0 : h.codeListTag) || "";
        let m = [];
        if (y && (m = await (await ibiz.hub.getApp(this.context.srfappid)).codeList.get(
          y,
          this.context,
          this.params
        )), this.generator.seriesGenerators && this.generator.seriesGenerators.length > 0 || this.cloneOrginSeries) {
          this.cloneOrginSeries || (this.cloneOrginSeries = jh(this.generator.seriesGenerators[0]));
          const { catalogField: _, valueField: S, idField: w, catalogCodeListId: x } = this.cloneOrginSeries.model, b = this.state.items.map((D) => D[w]), T = Array.from(new Set(b)).map(
            (D) => {
              if (y && m.length > 0) {
                const A = m.find((I) => I.value === D);
                if (A)
                  return A.text;
              }
              return D;
            }
          );
          if (y && m.length > 0 && l.forEach((D) => {
            const A = m.find((I) => I.value === D[w]);
            A && (D[w] = A.text, D["".concat(w, "_code")] = A.value);
          }), x) {
            const D = this.cloneOrginSeries.chartGenerator.codeListMap.get(
              x
            );
            l && D && l.forEach((A) => {
              const I = D.find((L) => L.value === A[_]);
              I && (A[_] = I.text);
            });
          }
          const C = [];
          this.state.items.forEach((D) => {
            if (y && m.length > 0) {
              const A = m.find((I) => I.value === D[w]);
              A && (D[w] = A.text);
            }
            T.forEach((A) => {
              D[w] === A ? D["".concat(S, "_").concat(A)] = D[S] : D["".concat(S, "_").concat(A)] = 0;
            });
          }), T.forEach((D, A) => {
            const I = jh(this.cloneOrginSeries);
            I.valueField = "".concat(S, "_").concat(D), I.seriesName = D, I.staticOptions.name = D, I.model.valueField = "".concat(S, "_").concat(D), I.model.id = "".concat(S, "_").concat(D), I.model.chartDataSetId = "".concat(A), I.model.chartSeriesEncode.y = [
              "".concat(S, "_").concat(D)
            ], C.push(I);
          }), this.generator.seriesGenerators = C, this.options = await this.generator.calcOptionsByData(
            t,
            this.context,
            this.params
          ), this.options && this.options.series.forEach((D) => {
            D.tooltip || (D.tooltip = { show: !0 }), Object.assign(D.tooltip, {
              formatter: (A) => {
                const { name: I, value: L, marker: E, seriesName: P } = A;
                return "<div> ".concat(I, "<br/> ").concat(E).concat(P, "：  ").concat(L[1], " </div>");
              }
            });
          });
        }
        l.sort((_, S) => {
          let w = 0, x = 0;
          return Number.isNaN(Number(_[a[0].id])) ? Number.isNaN(Number(_["".concat(a[0].id, "_code")])) ? w = 1e4 : w = Number(_["".concat(a[0].id, "_code")]) : w = Number(_[a[0].id]), Number.isNaN(Number(S[a[0].id])) ? Number.isNaN(Number(S["".concat(a[0].id, "_code")])) ? x = 1e4 : x = Number(S["".concat(a[0].id, "_code")]) : x = Number(S[a[0].id]), w - x;
        });
      }
    } else {
      const p = {}, g = [];
      Object.assign(
        p,
        this.generator.staticOptions,
        this.generator.chartUserParam
      );
      const y = (v = (c = this.state.searchParams) == null ? void 0 : c.groupcond) == null ? void 0 : v.toLowerCase(), m = this.generator.seriesGenerators.filter(
        (S) => {
          var w, x;
          return ((w = S.model.id) == null ? void 0 : w.toLowerCase()) === y || !((x = S.seriesUserParam) != null && x.isDynamicChart);
        }
      ), _ = m.find((S) => S.seriesUserParam && S.seriesUserParam.gridHeaders && S.seriesUserParam.isDynamicChart);
      if (_)
        a = _.seriesUserParam.gridHeaders;
      else {
        const S = ((d = this.generator.chartUserParam) == null ? void 0 : d.gridHeaders) || [];
        if (S.length === 0)
          throw ibiz.message.error("未配置表格");
        a = S;
      }
      m && m.length > 0 && m.forEach((S) => {
        const w = {}, x = [];
        Object.assign(w, S.staticOptions);
        const b = S.model.catalogCodeListId, T = S.chartGenerator.codeListMap.get(b), { valueField: C, catalogField: D } = S;
        T && l.length < T.length && T.forEach((A) => {
          l.findIndex((L) => L[D] === A.value || L[D] === A.text) < 0 && l.push(
            this.createWhiteData(
              { [D]: A.text },
              a
            )
          );
        }), l.forEach((A) => {
          if (T) {
            const I = T.find((L) => L.value === A[D] || A[D] === L.text);
            I && (A[D] = I.text);
          }
          A[C] && (m.length > 1 ? x.push([A[D], A[C], A]) : x.push({
            name: A[D],
            value: [A[C]]
          }));
        }), Object.assign(w, { data: x }), g.push(w);
      }), Object.assign(p, { series: g }), this.options = p;
    }
    this.parseItemsPercent(l), Object.assign(this.state, {
      cloneItems: l,
      showGridCaption: n,
      showGridPrcent: s,
      showGridTotal: o,
      gridHeaders: a
    }), this.updateChart();
  }
  /**
   * 生成一条空白数据
   *
   * @param {IData} defaultObj
   * @param {Array<any>} gridModel
   * @return {*}
   * @memberof ChartGridController
   */
  createWhiteData(t, a) {
    const n = {};
    return a.forEach((i) => {
      Object.assign(n, { [i.id]: 0 });
    }), Object.assign(n, t, { srfpercent: "0%" }), n;
  }
  /**
   * @description 内置处理百分比，仅使用count字段计算百分比
   * @author 姜林君
   * @date 2024/03/18 16:03:55
   * @param {IData[]} items
   * @returns {*}
   * @memberof ExtendGridController
   */
  parseItemsPercent(t) {
    let a = 0;
    t.forEach((n) => {
      a += Number(n.count);
    }), t.forEach((n) => {
      let i = "0";
      a > 0 && (i = (n.count / a * 100).toFixed(2)), Object.assign(n, {
        srfpercent: "".concat(i, "%")
      });
    });
  }
}
const Mb = /* @__PURE__ */ GL({
  name: "ChartGrid",
  props: {
    modelData: {
      type: Object,
      required: !0
    },
    context: {
      type: Object,
      required: !0
    },
    params: {
      type: Object,
      default: () => ({})
    },
    provider: {
      type: Object
    },
    mdctrlActiveMode: {
      type: Number,
      default: void 0
    },
    loadDefault: {
      type: Boolean,
      default: !0
    }
  },
  setup() {
    var m;
    const r = WL((..._) => new gX(..._)), e = $L("chart-grid"), t = Da(), a = Da(), n = Da(!1), i = Da(320), o = UL(), s = Da(!1), l = Da(!1), u = Da([]), f = Da("bottom");
    (m = r.model.dechartDataGrid) != null && m.dataGridPos && (f.value = r.model.dechartDataGrid.dataGridPos.toLocaleLowerCase());
    const h = async () => {
      await _m();
      const _ = document.getElementById(o);
      if (_) {
        const S = _.offsetHeight;
        i.value = S;
      }
    };
    FL(() => {
      const _ = sV(t.value);
      r.initChart(_), window.addEventListener("resize", h), h();
    }), HL(() => {
      window.removeEventListener("resize", h);
    });
    const c = () => {
      const _ = {};
      return Object.assign(_, {
        height: "50px",
        color: "#333",
        fontWeight: 400,
        backgroundColor: "#F5F5F5"
      }), _;
    }, v = async () => {
      n.value = !n.value, await _m(), r.resizeChart();
    }, d = () => {
      const _ = r.state.gridHeaders;
      if (!_.length)
        return null;
      let S = 0;
      const w = {
        srfpercent: "100%"
      };
      r.state.cloneItems.forEach((b) => {
        S += Number(b.count);
      });
      const x = _[0].id;
      return Object.assign(w, {
        [x]: "合计",
        count: S
      }), w;
    };
    return {
      c: r,
      ns: e,
      uuid: o,
      headerStyle: c,
      isCollapse: n,
      collapse: v,
      chartRef: t,
      showTotal: s,
      showPercent: l,
      tableRef: a,
      maxHeight: i,
      totalRow: u,
      gridpos: f,
      handleTotal: d,
      computeHeight: () => ["top", "bottom"].includes(f.value) ? i.value / 2 - 16 : i.value - 16,
      renderCollapseIcon: () => n.value ? ["left", "right"].includes(f.value) ? ee("i", {
        class: "fa fa-angle-right",
        "aria-hidden": "true"
      }, null) : ee("i", {
        class: "fa fa-angle-up",
        "aria-hidden": "true"
      }, null) : ee("i", {
        class: "fa fa-angle-down",
        "aria-hidden": "true"
      }, null),
      handleGridData: () => {
        const _ = r.state.cloneItems;
        return s.value ? [d(), ..._] : _;
      }
    };
  },
  render() {
    return ee(Ci("iBizControlBase"), {
      controller: this.c
    }, {
      default: () => [ee("div", {
        class: [this.ns.b(), this.ns.b(this.gridpos)],
        id: this.uuid
      }, [ee(Ci("el-empty"), {
        class: [this.ns.e("empty"), this.ns.is("no-data", this.c.state.items.length === 0)],
        description: "暂无数据"
      }, null), ee("div", {
        ref: "chartRef",
        class: [this.ns.e("chart"), this.ns.be(this.gridpos, "chart"), this.ns.is("no-data", this.c.state.items.length === 0)]
      }, [ibiz.i18n.t("control.chart.chartPlaceholder")]), ee("div", {
        class: [this.ns.e("grid"), this.ns.be(this.gridpos, "grid"), {
          [this.ns.e("is-colllapse")]: this.isCollapse
        }]
      }, [this.c.state.showGridCaption ? ee("div", {
        class: [this.ns.e("caption")]
      }, [ee("div", {
        class: this.ns.em("caption", "title")
      }, [Kh("表格")]), ee("div", {
        class: this.ns.em("caption", "collapse-end")
      }, [ee("div", {
        class: this.ns.em("caption", "collapse-form")
      }, [this.c.state.showGridTotal ? ee(Ci("el-checkbox"), {
        modelValue: this.showTotal,
        "onUpdate:modelValue": (r) => this.showTotal = r,
        label: "显示合计",
        size: "large"
      }, null) : null, this.c.state.showGridPrcent ? ee(Ci("el-checkbox"), {
        modelValue: this.showPercent,
        "onUpdate:modelValue": (r) => this.showPercent = r,
        label: "显示百分比",
        size: "large"
      }, null) : null]), ee("span", {
        class: this.ns.em("caption", "collapse-icon"),
        onClick: this.collapse
      }, [this.renderCollapseIcon()])])]) : null, this.isCollapse ? null : ee("div", {
        class: [this.ns.e("table"), this.ns.be(this.gridpos, "table"), this.ns.is("show-grid-caption", this.c.state.showGridCaption)]
      }, [ee(Ci("el-table"), {
        ref: "tableRef",
        data: this.handleGridData(),
        border: !0,
        "max-height": this.computeHeight() - (this.c.state.showGridCaption ? 72 : 0),
        style: {
          width: "100%"
        },
        "header-row-class-name": this.ns.e("grid-header"),
        "header-row-style": this.headerStyle
      }, {
        default: () => [this.c.state.gridHeaders && this.c.state.gridHeaders.map((r, e) => ee(Ci("el-table-column"), {
          prop: r.id,
          align: e === 0 ? "left" : "center",
          "header-align": "center",
          label: r.name
        }, {
          default: (t) => {
            const {
              row: a,
              column: n
            } = t;
            return ee("div", {
              title: a[n.property]
            }, [a[n.property], r.allowPercent && this.showPercent ? ee("span", {
              class: "percent"
            }, [Kh("("), a.srfpercent, Kh(")")]) : null]);
          }
        }))]
      })])])])]
    });
  }
}), bX = {
  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/explicit-function-return-type, @typescript-eslint/no-unused-vars
  install(r) {
    r.component(Mb.name, Mb), zL(
      "CHART_RENDER_CHART_GRID",
      () => new YL()
    );
  }
};
export {
  bX as default
};
