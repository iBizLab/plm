/* stylelint-disable no-descending-specificity */
/* stylelint-disable selector-class-pattern */
// 按钮样式
@mixin button-style {
  .el-button.is-text:not(.is-disabled):hover,
  .el-button {
    min-height: getCssVar('height-control', 'small');
    max-height: getCssVar('height-control', 'small');
    padding: getCssVar('spacing', 'extra-tight') getCssVar('spacing', 'tight');
    margin: 0;
    font-size: getCssVar('font-size', 'header-6');
    background-color: transparent;

    svg {
      color: getCssVar(color, text-3);
      fill: getCssVar(color, text-3);
    }

    &:hover {
      .#{bem(icon)} {
        color: getCssVar(color, primary);
      }

      svg {
        color: getCssVar(color, primary);
        fill: getCssVar(color, primary);
      }
    }

    .#{bem(icon)} {
      color: getCssVar(color, text-3);
    }

  }
}

@include b(resource-gantt-column-head) {
  pointer-events: visiblepainted;
}

@include b(resource-gantt-column-head-box) {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  height: 100%;
  cursor: pointer;

  @include e(left) {
    display: flex;
    align-items: center;

    @include button-style;

    .el-button {
      margin-right: getCssVar('spacing', 'extra-tight');
      margin-left: rem(-8px);

      &:hover {
        font-weight: bold;
      }
    }
  }

  @include e(right) {
    display: flex;
    margin-right: getCssVar(control-resource-gantt, negative-margin);

    @include button-style;

    .el-button.is-text:not(.is-disabled):hover,
    .el-button {
      .ibiz-context-menu__action-content-icon {
        width: 16px;
        margin: 0;
      }

      &:hover {
        background: getCssVar(color, primary, light, default);
      }
    }
  }

  .#{bem(context-menu)} {
    .ibiz-icon {
      display: flex;
      align-items: center;
    }
  }
}

@include b(resource-gantt-column-head-search) {
  &.el-input {
    .el-input__wrapper {
      padding: 0;
      box-shadow: 0 0 0 1px transparent inset;

      .el-input__inner {
        color: getCssVar(color, text-3);

        &::placeholder {
          color: getCssVar(color, text-3);
        }
      }
    }

    .el-input__prefix-inner {
      svg {
        color: getCssVar(color, text-3);
        cursor: pointer;
        fill: getCssVar(color, text-3);
      }

      &:hover {
        svg {
          fill: getCssVar(color, primary);
        }
      }
    }
  }


  @include button-style;

  .el-button {
    &:hover {
      background: getCssVar(color, primary, light, default);
    }
  }


  @include e(suffix) {
    min-height: getCssVar('height-control', 'small');
    max-height: getCssVar('height-control', 'small');
    padding: getCssVar('spacing', 'extra-tight') getCssVar('spacing', 'tight');

    svg {
      color: getCssVar(color, text-3);
      fill: getCssVar(color, text-3);
    }

    &.el-button {
      &:hover {
        background: transparent;

        svg {
          font-weight: bold;
        }
      }
    }
  }
}
