$html-insert-select: (
  width: 92px,
);

@include b('html-insert-select') {
  @include set-component-css-var('html-insert-select', $html-insert-select);

  min-width: getCssVar(html-insert-select, width);
  height: auto;
  padding-bottom: getCssVar('spacing', 'tight');
  box-shadow: 0 0 getCssVar('spacing', 'base') getCssVar(color, shadow);

  .#{bem(insert-item-list)} {
    max-height: 20vh;
    overflow-y: auto;
  }
}

@include b('html-insert-select-search') {
  display: block;
  width: 100%;
  max-width: 100%;

  @include e('container') {
    position: relative;
    box-sizing: border-box;
    display: flex;
    justify-content: center;
    width: 100%;
    padding: getCssVar('spacing', 'base') getCssVar('spacing', 'base') getCssVar('spacing', 'tight') getCssVar('spacing', 'base');

    @include m('input') {
      box-sizing: border-box;
      width: 100%;
      height: getCssVar('height-control', 'default');
      padding: 0 getCssVar('spacing', 'tight');
      padding-right: calc(var(--ibiz-spacing-tight) * 2 + var(--ibiz-font-size-regular));
      border: none;
      border-radius: getCssVar('border-radius', 'small');
      box-shadow: 0 0 0 1px getCssVar('color', 'border') inset;

      &:focus {
        outline: none;
        box-shadow: 0 0 0 1px getCssVar('color', 'primary') inset;
      }
    }

    @include m('search') {
      position: absolute;
      top: calc(50% + var(--ibiz-spacing-tight) / 2);
      right: getCssVar('spacing', 'base-loose');
      padding: 0 getCssVar('spacing', 'tight');
      cursor: pointer;
      transform: translate(0, -50%);

      &::after {
        position: absolute;
        top: 50%;
        right: calc(var(--ibiz-spacing-tight) * 2 + var(--ibiz-font-size-regular));
        display: block;
        width: 1px;
        height: getCssVar('font-size', 'regular');
        content: '';
        border-left: 1px solid getCssVar('color', 'border');
        transform: translate(0, -50%);
      }

      svg {
        fill: getCssVar('color', 'text', 3);
      }
    }

    &:hover {
      input {
        box-shadow: 0 0 0 1px getCssVar('color', 'primary') inset;
      }
    }
  }
}
